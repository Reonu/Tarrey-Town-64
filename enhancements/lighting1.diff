diff --git a/Makefile.orig b/Makefile.orig
new file mode 100644
index 0000000..7395e5c
--- /dev/null
+++ b/Makefile.orig
@@ -0,0 +1,759 @@
+# Makefile to rebuild SM64 split image
+
+include util.mk
+
+# Default target
+default: all
+
+# Preprocessor definitions
+DEFINES :=
+
+SRC_DIRS :=
+
+#==============================================================================#
+# Build Options                                                                #
+#==============================================================================#
+
+# These options can either be set by building with 'make SETTING=value'.
+# 'make clean' may be required first.
+
+# Build for the N64 (turn this off for ports)
+TARGET_N64 ?= 1
+
+# CONSOLE - selects the console to target
+#   bb - Targets the iQue Player (codenamed BB)
+#   n64 - Targets the N64
+CONSOLE ?= n64
+$(eval $(call validate-option,CONSOLE,n64 bb))
+
+ifeq      ($(CONSOLE),n64)
+  INCLUDE_DIRS   += include/n64
+  LIBS_DIR       := lib/n64
+else ifeq ($(CONSOLE),bb)
+  INCLUDE_DIRS   += include/ique
+  LIBS_DIR       := lib/ique
+  DEFINES        += BBPLAYER=1
+endif
+
+# COMPILER - selects the C compiler to use
+#   gcc - uses the GNU C Compiler
+COMPILER ?= gcc
+$(eval $(call validate-option,COMPILER,gcc))
+
+
+# SAVETYPE - selects the save type
+#   eep4k - uses EEPROM 4kbit
+#   eep16k - uses EEPROM 16kbit (There aren't any differences in syntax, but this is provided just in case)
+#   sram - uses SRAM 256Kbit
+SAVETYPE ?= eep4k
+$(eval $(call validate-option,SAVETYPE,eep4k eep16k sram))
+ifeq ($(SAVETYPE),eep4k)
+  DEFINES += EEP=1 EEP4K=1
+else ifeq ($(SAVETYPE),eep16k)
+  DEFINES += EEP=1 EEP16K=1
+else ifeq ($(SAVETYPE),sram)
+  DEFINES += SRAM=1
+endif
+
+DEFINES += NO_ERRNO_H=1 NO_GZIP=1
+
+COMPRESS ?= yay0
+$(eval $(call validate-option,COMPRESS,mio0 yay0 gzip rnc1 rnc2))
+ifeq ($(COMPRESS),gzip)
+  DEFINES += GZIP=1
+else ifeq ($(COMPRESS),rnc1)
+  DEFINES += RNC1=1
+else ifeq ($(COMPRESS),rnc2)
+  DEFINES += RNC2=1
+else ifeq ($(COMPRESS),yay0)
+  DEFINES += YAY0=1
+else ifeq ($(COMPRESS),mio0)
+  DEFINES += MIO0=1
+endif
+
+GZIPVER ?= std
+$(eval $(call validate-option,GZIPVER,std libdef))
+
+# VERSION - selects the version of the game to build
+#   jp - builds the 1996 Japanese version
+#   us - builds the 1996 North American version
+#   eu - builds the 1997 PAL version
+#   sh - builds the 1997 Japanese Shindou version, with rumble pak support
+VERSION ?= us
+$(eval $(call validate-option,VERSION,jp us eu sh))
+
+ifeq      ($(VERSION),jp)
+  DEFINES   += VERSION_JP=1
+  OPT_FLAGS := -g
+  GRUCODE   ?= f3dzex
+else ifeq ($(VERSION),us)
+  DEFINES   += VERSION_US=1
+  OPT_FLAGS := -g
+  GRUCODE   ?= f3dzex
+else ifeq ($(VERSION),eu)
+  DEFINES   += VERSION_EU=1
+  OPT_FLAGS := -O2
+  GRUCODE   ?= f3dzex
+else ifeq ($(VERSION),sh)
+  DEFINES   += VERSION_SH=1
+  OPT_FLAGS := -O2
+  GRUCODE   ?= f3dzex
+endif
+
+TARGET := sm64.$(VERSION)
+
+
+# GRUCODE - selects which RSP microcode to use.
+#   f3d_old - default for JP and US versions
+#   f3d_new - default for EU and Shindou versions
+#   f3dex   -
+#   f3dex2  -
+#   f3dzex  - newer, experimental microcode used in Animal Crossing
+#   super3d - extremely experimental version of Fast3D lacking many features for speed
+$(eval $(call validate-option,GRUCODE,f3d_old f3dex f3dex2 f3d_new f3dzex super3d))
+
+ifeq      ($(GRUCODE),f3d_old)
+  DEFINES += F3D_OLD=1
+else ifeq ($(GRUCODE),f3d_new) # Fast3D 2.0H
+  DEFINES += F3D_NEW=1
+else ifeq ($(GRUCODE),f3dex) # Fast3DEX
+  DEFINES += F3DEX_GBI=1 F3DEX_GBI_SHARED=1
+else ifeq ($(GRUCODE),f3dex2) # Fast3DEX2
+  DEFINES += F3DEX_GBI_2=1 F3DEX_GBI_SHARED=1
+else ifeq ($(GRUCODE),f3dzex) # Fast3DZEX (2.08J / Animal Forest - Dōbutsu no Mori)
+  DEFINES += F3DZEX_GBI_2=1 F3DEX_GBI_2=1 F3DEX_GBI_SHARED=1
+else ifeq ($(GRUCODE),super3d) # Super3D
+  $(warning Super3D is experimental. Try at your own risk.)
+  DEFINES += SUPER3D_GBI=1 F3D_NEW=1
+endif
+
+ifeq ($(COMPILER),gcc)
+  NON_MATCHING := 1
+  MIPSISET     := -mips3
+  OPT_FLAGS    := -O2
+endif
+
+
+# NON_MATCHING - whether to build a matching, identical copy of the ROM
+#   1 - enable some alternate, more portable code that does not produce a matching ROM
+#   0 - build a matching ROM
+NON_MATCHING ?= 1
+$(eval $(call validate-option,NON_MATCHING,0 1))
+
+ifeq ($(TARGET_N64),0)
+  NON_MATCHING := 1
+endif
+
+ifeq ($(NON_MATCHING),1)
+  DEFINES += NON_MATCHING=1 AVOID_UB=1
+  COMPARE := 0
+endif
+
+
+# COMPARE - whether to verify the SHA-1 hash of the ROM after building
+#   1 - verifies the SHA-1 hash of the selected version of the game
+#   0 - does not verify the hash
+COMPARE ?= 0
+$(eval $(call validate-option,COMPARE,0 1))
+
+TARGET_STRING := sm64.$(VERSION).$(CONSOLE).$(GRUCODE)
+# If non-default settings were chosen, disable COMPARE
+ifeq ($(filter $(TARGET_STRING), sm64.jp.f3d_old sm64.us.f3d_old sm64.eu.f3d_new sm64.sh.f3d_new),)
+  COMPARE := 0
+endif
+
+# UNF - whether to use UNFLoader flashcart library
+#   1 - includes code in ROM
+#   0 - does not 
+UNF ?= 0
+$(eval $(call validate-option,UNF,0 1))
+ifeq ($(UNF),1)
+  DEFINES += UNF=1
+  SRC_DIRS += src/usb
+  ULTRALIB := ultra_d
+else
+  ULTRALIB := ultra_rom
+endif
+
+
+# ISVPRINT - whether to fake IS-Viewer presence,
+# allowing for usage of CEN64 (and possibly Project64) to print messages to terminal.
+#   1 - includes code in ROM
+#   0 - does not 
+ISVPRINT ?= 0
+$(eval $(call validate-option,ISVPRINT,0 1))
+ifeq ($(ISVPRINT),1)
+  DEFINES += ISVPRINT=1
+  ULTRALIB := ultra_d
+else
+  ULTRALIB := ultra_rom
+endif
+
+# HVQM - whether to use HVQM fmv library
+#   1 - includes code in ROM
+#   0 - does not 
+HVQM ?= 0
+$(eval $(call validate-option,HVQM,0 1))
+ifeq ($(HVQM),1)
+  DEFINES += HVQM=1
+  SRC_DIRS += src/hvqm
+endif
+
+# GODDARD - whether to use libgoddard (Mario Head)
+#   1 - includes code in ROM
+#   0 - does not 
+GODDARD ?= 0
+$(eval $(call validate-option,GODDARD,0 1))
+ifeq ($(GODDARD),1)
+  DEFINES += GODDARD=1
+endif
+
+# Whether to hide commands or not
+VERBOSE ?= 0
+ifeq ($(VERBOSE),0)
+  V := @
+endif
+
+# Whether to colorize build messages
+COLOR ?= 1
+
+# display selected options unless 'make clean' or 'make distclean' is run
+ifeq ($(filter clean distclean,$(MAKECMDGOALS)),)
+  $(info ==== Build Options ====)
+  $(info Version:        $(VERSION))
+  $(info Microcode:      $(GRUCODE))
+  $(info Console:        $(CONSOLE))
+  $(info Target:         $(TARGET))
+  ifeq ($(COMPARE),1)
+    $(info Compare ROM:    yes)
+  else
+    $(info Compare ROM:    no)
+  endif
+  ifeq ($(NON_MATCHING),1)
+    $(info Build Matching: no)
+  else
+    $(info Build Matching: yes)
+  endif
+  $(info =======================)
+endif
+
+
+#==============================================================================#
+# Universal Dependencies                                                       #
+#==============================================================================#
+
+TOOLS_DIR := tools
+
+
+# (This is a bit hacky, but a lot of rules implicitly depend
+# on tools and assets, and we use directory globs further down
+# in the makefile that we want should cover assets.)
+
+PYTHON := python3
+
+ifeq ($(filter clean distclean print-%,$(MAKECMDGOALS)),)
+
+  # Make sure assets exist
+  NOEXTRACT ?= 0
+  ifeq ($(NOEXTRACT),0)
+    DUMMY != $(PYTHON) extract_assets.py $(VERSION) >&2 || echo FAIL
+    ifeq ($(DUMMY),FAIL)
+      $(error Failed to extract assets)
+    endif
+  endif
+
+  # Make tools if out of date
+  $(info Building tools...)
+  DUMMY != $(MAKE) -s -C $(TOOLS_DIR) >&2 || echo FAIL
+    ifeq ($(DUMMY),FAIL)
+      $(error Failed to build tools)
+    endif
+  $(info Building ROM...)
+
+endif
+
+
+#==============================================================================#
+# Target Executable and Sources                                                #
+#==============================================================================#
+
+BUILD_DIR_BASE := build
+# BUILD_DIR is the location where all build artifacts are placed
+BUILD_DIR      := $(BUILD_DIR_BASE)/$(VERSION)
+ROM            := $(BUILD_DIR)/$(TARGET_STRING).z64
+ELF            := $(BUILD_DIR)/$(TARGET_STRING).elf
+LIBZ           := $(BUILD_DIR)/libz.a
+LD_SCRIPT      := sm64.ld
+YAY0_DIR       := $(BUILD_DIR)/bin
+SOUND_BIN_DIR  := $(BUILD_DIR)/sound
+TEXTURE_DIR    := textures
+ACTOR_DIR      := actors
+LEVEL_DIRS     := $(patsubst levels/%,%,$(dir $(wildcard levels/*/header.h)))
+
+# Directories containing source files
+SRC_DIRS += src src/game src/engine src/audio src/menu src/buffers actors levels bin data assets asm lib sound
+LIBZ_SRC_DIRS := src/libz
+GODDARD_SRC_DIRS := src/goddard src/goddard/dynlists
+BIN_DIRS := bin bin/$(VERSION)
+
+# File dependencies and variables for specific files
+include Makefile.split
+
+# Source code files
+LEVEL_C_FILES     := $(wildcard levels/*/leveldata.c) $(wildcard levels/*/script.c) $(wildcard levels/*/geo.c)
+C_FILES           := $(foreach dir,$(SRC_DIRS),$(wildcard $(dir)/*.c)) $(LEVEL_C_FILES)
+LIBZ_C_FILES     := $(foreach dir,$(LIBZ_SRC_DIRS),$(wildcard $(dir)/*.c))
+GODDARD_C_FILES   := $(foreach dir,$(GODDARD_SRC_DIRS),$(wildcard $(dir)/*.c))
+S_FILES           := $(foreach dir,$(SRC_DIRS),$(wildcard $(dir)/*.s))
+GENERATED_C_FILES := $(BUILD_DIR)/assets/mario_anim_data.c $(BUILD_DIR)/assets/demo_data.c
+
+# Sound files
+SOUND_BANK_FILES    := $(wildcard sound/sound_banks/*.json)
+SOUND_SAMPLE_DIRS   := $(wildcard sound/samples/*)
+SOUND_SAMPLE_AIFFS  := $(foreach dir,$(SOUND_SAMPLE_DIRS),$(wildcard $(dir)/*.aiff))
+SOUND_SAMPLE_TABLES := $(foreach file,$(SOUND_SAMPLE_AIFFS),$(BUILD_DIR)/$(file:.aiff=.table))
+SOUND_SAMPLE_AIFCS  := $(foreach file,$(SOUND_SAMPLE_AIFFS),$(BUILD_DIR)/$(file:.aiff=.aifc))
+SOUND_SEQUENCE_DIRS := sound/sequences sound/sequences/$(VERSION)
+# all .m64 files in SOUND_SEQUENCE_DIRS, plus all .m64 files that are generated from .s files in SOUND_SEQUENCE_DIRS
+SOUND_SEQUENCE_FILES := \
+  $(foreach dir,$(SOUND_SEQUENCE_DIRS),\
+    $(wildcard $(dir)/*.m64) \
+    $(foreach file,$(wildcard $(dir)/*.s),$(BUILD_DIR)/$(file:.s=.m64)) \
+  )
+
+# Object files
+O_FILES := $(foreach file,$(C_FILES),$(BUILD_DIR)/$(file:.c=.o)) \
+           $(foreach file,$(S_FILES),$(BUILD_DIR)/$(file:.s=.o)) \
+           $(foreach file,$(GENERATED_C_FILES),$(file:.c=.o)) \
+           lib/PR/hvqm/hvqm2sp1.o lib/PR/hvqm/hvqm2sp2.o
+
+LIBZ_O_FILES := $(foreach file,$(LIBZ_C_FILES),$(BUILD_DIR)/$(file:.c=.o))
+GODDARD_O_FILES := $(foreach file,$(GODDARD_C_FILES),$(BUILD_DIR)/$(file:.c=.o))
+
+# Automatic dependency files
+DEP_FILES := $(O_FILES:.o=.d) $(LIBZ_O_FILES:.o=.d) $(GODDARD_O_FILES:.o=.d) $(BUILD_DIR)/$(LD_SCRIPT).d
+
+#==============================================================================#
+# Compiler Options                                                             #
+#==============================================================================#
+
+# detect prefix for MIPS toolchain
+ifneq ($(call find-command,mips64-elf-ld),)
+  CROSS := mips64-elf-
+else ifneq ($(call find-command,mips-n64-ld),)
+  CROSS := mips-n64-
+else ifneq ($(call find-command,mips64-ld),)
+  CROSS := mips64-
+else ifneq ($(call find-command,mips-linux-gnu-ld),)
+  CROSS := mips-linux-gnu-
+else ifneq ($(call find-command,mips64-linux-gnu-ld),)
+  CROSS := mips64-linux-gnu-
+else ifneq ($(call find-command,mips-ld),)
+  CROSS := mips-
+else
+  $(error Unable to detect a suitable MIPS toolchain installed)
+endif
+
+export LD_LIBRARY_PATH=./tools
+
+AS        := $(CROSS)as
+ifeq ($(COMPILER),gcc)
+  CC      := $(CROSS)gcc
+endif
+# Prefer gcc's cpp if installed on the system
+ifneq (,$(call find-command,cpp-10))
+  CPP     := cpp-10
+else
+  CPP     := cpp
+endif
+ifneq ($(call find-command,mips-n64-ld),)
+LD        := mips-n64-ld
+else
+LD        := tools/mips64-elf-ld
+endif
+AR        := $(CROSS)ar
+OBJDUMP   := $(CROSS)objdump
+OBJCOPY   := $(CROSS)objcopy
+
+ifeq ($(TARGET_N64),1)
+  TARGET_CFLAGS := -nostdinc -DTARGET_N64 -D_LANGUAGE_C
+  CC_CFLAGS := -fno-builtin
+endif
+
+INCLUDE_DIRS += include $(BUILD_DIR) $(BUILD_DIR)/include src . include/hvqm
+ifeq ($(TARGET_N64),1)
+  INCLUDE_DIRS += include/libc
+endif
+
+C_DEFINES := $(foreach d,$(DEFINES),-D$(d))
+DEF_INC_CFLAGS := $(foreach i,$(INCLUDE_DIRS),-I$(i)) $(C_DEFINES)
+
+# C compiler options
+CFLAGS = -G 0 $(OPT_FLAGS) $(TARGET_CFLAGS) $(MIPSISET) $(DEF_INC_CFLAGS)
+ifeq ($(COMPILER),gcc)
+  CFLAGS += -mno-shared -march=vr4300 -mfix4300 -mabi=32 -mhard-float -mdivide-breaks -fno-stack-protector -fno-common -fno-zero-initialized-in-bss -fno-PIC -mno-abicalls -fno-strict-aliasing -fno-inline-functions -ffreestanding -fwrapv -Wall -Wextra
+else
+  CFLAGS += -non_shared -Wab,-r4300_mul -Xcpluscomm -Xfullwarn -signed -32
+endif
+
+ASFLAGS     := -march=vr4300 -mabi=32 $(foreach i,$(INCLUDE_DIRS),-I$(i)) $(foreach d,$(DEFINES),--defsym $(d))
+RSPASMFLAGS := $(foreach d,$(DEFINES),-definelabel $(subst =, ,$(d)))
+
+# C preprocessor flags
+CPPFLAGS := -P -Wno-trigraphs $(DEF_INC_CFLAGS)
+
+#==============================================================================#
+# Miscellaneous Tools                                                          #
+#==============================================================================#
+
+# N64 tools
+YAY0TOOL              := $(TOOLS_DIR)/slienc
+MIO0TOOL              := $(TOOLS_DIR)/mio0
+RNCPACK               := $(TOOLS_DIR)/rncpack
+ROMALIGN              := $(TOOLS_DIR)/romalign
+FILESIZER             := $(TOOLS_DIR)/filesizer
+N64CKSUM              := $(TOOLS_DIR)/n64cksum
+N64GRAPHICS           := $(TOOLS_DIR)/n64graphics
+N64GRAPHICS_CI        := $(TOOLS_DIR)/n64graphics_ci
+TEXTCONV              := $(TOOLS_DIR)/textconv
+AIFF_EXTRACT_CODEBOOK := $(TOOLS_DIR)/aiff_extract_codebook
+VADPCM_ENC            := $(TOOLS_DIR)/vadpcm_enc
+EXTRACT_DATA_FOR_MIO  := $(TOOLS_DIR)/extract_data_for_mio
+SKYCONV               := $(TOOLS_DIR)/skyconv
+ifeq ($(GZIPVER),std)
+GZIP                  := gzip
+else
+GZIP                  := libdeflate-gzip
+endif
+# Use the system installed armips if available. Otherwise use the one provided with this repository.
+ifneq (,$(call find-command,armips))
+  RSPASM              := armips
+else
+  RSPASM              := $(TOOLS_DIR)/armips
+endif
+ENDIAN_BITWIDTH       := $(BUILD_DIR)/endian-and-bitwidth
+EMULATOR = mupen64plus
+EMU_FLAGS = --noosd
+LOADER = loader64
+LOADER_FLAGS = -vwf
+SHA1SUM = sha1sum
+PRINT = printf
+
+ifeq ($(COLOR),1)
+NO_COL  := \033[0m
+RED     := \033[0;31m
+GREEN   := \033[0;32m
+BLUE    := \033[0;34m
+YELLOW  := \033[0;33m
+BLINK   := \033[33;5m
+endif
+
+# Use Objcopy instead of extract_data_for_mio
+ifeq ($(COMPILER),gcc)
+  EXTRACT_DATA_FOR_MIO := $(OBJCOPY) -O binary --only-section=.data
+endif
+
+# Common build print status function
+define print
+  @$(PRINT) "$(GREEN)$(1) $(YELLOW)$(2)$(GREEN) -> $(BLUE)$(3)$(NO_COL)\n"
+endef
+
+#==============================================================================#
+# Main Targets                                                                 #
+#==============================================================================#
+
+all: $(ROM)
+ifeq ($(COMPARE),1)
+	@$(PRINT) "$(GREEN)Checking if ROM matches.. $(NO_COL)\n"
+	@$(SHA1SUM) --quiet -c $(TARGET).sha1 && $(PRINT) "$(TARGET): $(GREEN)OK$(NO_COL)\n" || ($(PRINT) "$(YELLOW)Building the ROM file has succeeded, but does not match the original ROM.\nThis is expected, and not an error, if you are making modifications.\nTo silence this message, use 'make COMPARE=0.' $(NO_COL)\n" && false)
+endif
+
+clean:
+	$(RM) -r $(BUILD_DIR_BASE)
+
+distclean: clean
+	$(PYTHON) extract_assets.py --clean
+	$(MAKE) -C $(TOOLS_DIR) clean
+
+test: $(ROM)
+	$(EMULATOR) $(EMU_FLAGS) $<
+
+load: $(ROM)
+	$(LOADER) $(LOADER_FLAGS) $<
+
+libultra: $(BUILD_DIR)/libultra.a
+
+# Extra object file dependencies
+$(BUILD_DIR)/asm/boot.o:              $(IPL3_RAW_FILES)
+$(BUILD_DIR)/src/game/crash_screen.o: $(CRASH_TEXTURE_C_FILES)
+$(BUILD_DIR)/src/game/version.o:      $(BUILD_DIR)/src/game/version_data.h
+$(BUILD_DIR)/lib/rsp.o:               $(BUILD_DIR)/rsp/rspboot.bin $(BUILD_DIR)/rsp/fast3d.bin $(BUILD_DIR)/rsp/audio.bin
+$(SOUND_BIN_DIR)/sound_data.o:        $(SOUND_BIN_DIR)/sound_data.ctl.inc.c $(SOUND_BIN_DIR)/sound_data.tbl.inc.c $(SOUND_BIN_DIR)/sequences.bin.inc.c $(SOUND_BIN_DIR)/bank_sets.inc.c
+$(BUILD_DIR)/levels/scripts.o:        $(BUILD_DIR)/include/level_headers.h
+
+ifeq ($(VERSION),sh)
+  $(BUILD_DIR)/src/audio/load.o: $(SOUND_BIN_DIR)/bank_sets.inc.c $(SOUND_BIN_DIR)/sequences_header.inc.c $(SOUND_BIN_DIR)/ctl_header.inc.c $(SOUND_BIN_DIR)/tbl_header.inc.c
+endif
+
+$(CRASH_TEXTURE_C_FILES): TEXTURE_ENCODING := u32
+
+ifeq ($(COMPILER),gcc)
+$(BUILD_DIR)/src/libz/%.o: OPT_FLAGS := -Os
+endif
+
+ifeq ($(VERSION),eu)
+  TEXT_DIRS := text/de text/us text/fr
+
+  # EU encoded text inserted into individual segment 0x19 files,
+  # and course data also duplicated in leveldata.c
+  $(BUILD_DIR)/bin/eu/translation_en.o: $(BUILD_DIR)/text/us/define_text.inc.c
+  $(BUILD_DIR)/bin/eu/translation_de.o: $(BUILD_DIR)/text/de/define_text.inc.c
+  $(BUILD_DIR)/bin/eu/translation_fr.o: $(BUILD_DIR)/text/fr/define_text.inc.c
+  $(BUILD_DIR)/levels/menu/leveldata.o: $(BUILD_DIR)/include/text_strings.h
+  $(BUILD_DIR)/levels/menu/leveldata.o: $(BUILD_DIR)/text/us/define_courses.inc.c
+  $(BUILD_DIR)/levels/menu/leveldata.o: $(BUILD_DIR)/text/de/define_courses.inc.c
+  $(BUILD_DIR)/levels/menu/leveldata.o: $(BUILD_DIR)/text/fr/define_courses.inc.c
+else
+  ifeq ($(VERSION),sh)
+    TEXT_DIRS := text/jp
+    $(BUILD_DIR)/bin/segment2.o: $(BUILD_DIR)/text/jp/define_text.inc.c
+  else
+    TEXT_DIRS := text/$(VERSION)
+    # non-EU encoded text inserted into segment 0x02
+    $(BUILD_DIR)/bin/segment2.o: $(BUILD_DIR)/text/$(VERSION)/define_text.inc.c
+  endif
+endif
+
+$(BUILD_DIR)/src/usb/usb.o: OPT_FLAGS := -O0
+$(BUILD_DIR)/src/usb/usb.o: CFLAGS += -Wno-unused-variable -Wno-sign-compare -Wno-unused-function
+$(BUILD_DIR)/src/usb/debug.o: OPT_FLAGS := -O0
+$(BUILD_DIR)/src/usb/debug.o: CFLAGS += -Wno-unused-parameter -Wno-maybe-uninitialized
+
+ALL_DIRS := $(BUILD_DIR) $(addprefix $(BUILD_DIR)/,$(SRC_DIRS) $(GODDARD_SRC_DIRS) $(LIBZ_SRC_DIRS) $(ULTRA_BIN_DIRS) $(BIN_DIRS) $(TEXTURE_DIRS) $(TEXT_DIRS) $(SOUND_SAMPLE_DIRS) $(addprefix levels/,$(LEVEL_DIRS)) rsp include) $(YAY0_DIR) $(addprefix $(YAY0_DIR)/,$(VERSION)) $(SOUND_BIN_DIR) $(SOUND_BIN_DIR)/sequences/$(VERSION)
+
+# Make sure build directory exists before compiling anything
+DUMMY != mkdir -p $(ALL_DIRS)
+
+$(BUILD_DIR)/include/text_strings.h: $(BUILD_DIR)/include/text_menu_strings.h
+$(BUILD_DIR)/src/menu/file_select.o: $(BUILD_DIR)/include/text_strings.h
+$(BUILD_DIR)/src/menu/star_select.o: $(BUILD_DIR)/include/text_strings.h
+$(BUILD_DIR)/src/game/ingame_menu.o: $(BUILD_DIR)/include/text_strings.h
+
+
+#==============================================================================#
+# Texture Generation                                                           #
+#==============================================================================#
+TEXTURE_ENCODING := u8
+
+# Convert PNGs to RGBA32, RGBA16, IA16, IA8, IA4, IA1, I8, I4 binary files
+$(BUILD_DIR)/%: %.png
+	$(call print,Converting:,$<,$@)
+	$(V)$(N64GRAPHICS) -s raw -i $@ -g $< -f $(lastword $(subst ., ,$@))
+
+$(BUILD_DIR)/%.inc.c: %.png
+	$(call print,Converting:,$<,$@)
+	$(V)$(N64GRAPHICS) -s $(TEXTURE_ENCODING) -i $@ -g $< -f $(lastword ,$(subst ., ,$(basename $<)))
+
+# Color Index CI8
+$(BUILD_DIR)/%.ci8: %.ci8.png
+	$(call print,Converting:,$<,$@)
+	$(V)$(N64GRAPHICS_CI) -i $@ -g $< -f ci8
+
+# Color Index CI4
+$(BUILD_DIR)/%.ci4: %.ci4.png
+	$(call print,Converting:,$<,$@)
+	$(V)$(N64GRAPHICS_CI) -i $@ -g $< -f ci4
+
+
+#==============================================================================#
+# Compressed Segment Generation                                                #
+#==============================================================================#
+
+# Link segment file to resolve external labels
+# TODO: ideally this would be `-Trodata-segment=0x07000000` but that doesn't set the address
+$(BUILD_DIR)/%.elf: $(BUILD_DIR)/%.o
+	$(call print,Linking ELF file:,$<,$@)
+	$(V)$(LD) -e 0 -Ttext=$(SEGMENT_ADDRESS) -Map $@.map -o $@ $<
+# Override for leveldata.elf, which otherwise matches the above pattern
+.SECONDEXPANSION:
+$(BUILD_DIR)/levels/%/leveldata.elf: $(BUILD_DIR)/levels/%/leveldata.o $(BUILD_DIR)/bin/$$(TEXTURE_BIN).elf
+	$(call print,Linking ELF file:,$<,$@)
+	$(V)$(LD) -e 0 -Ttext=$(SEGMENT_ADDRESS) -Map $@.map --just-symbols=$(BUILD_DIR)/bin/$(TEXTURE_BIN).elf -o $@ $<
+
+$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf
+	$(call print,Extracting compressible data from:,$<,$@)
+	$(V)$(EXTRACT_DATA_FOR_MIO) $< $@
+
+$(BUILD_DIR)/levels/%/leveldata.bin: $(BUILD_DIR)/levels/%/leveldata.elf
+	$(call print,Extracting compressible data from:,$<,$@)
+	$(V)$(EXTRACT_DATA_FOR_MIO) $< $@
+
+ifeq ($(COMPRESS),gzip)
+include gziprules.mk
+else ifeq ($(COMPRESS),rnc1)
+include rnc1rules.mk
+else ifeq ($(COMPRESS),rnc2)
+include rnc2rules.mk
+else ifeq ($(COMPRESS),yay0)
+include yay0rules.mk
+else ifeq ($(COMPRESS),mio0)
+include mio0rules.mk
+endif
+
+#==============================================================================#
+# Sound File Generation                                                        #
+#==============================================================================#
+
+$(BUILD_DIR)/%.table: %.aiff
+	$(call print,Extracting codebook:,$<,$@)
+	$(V)$(AIFF_EXTRACT_CODEBOOK) $< >$@
+
+$(BUILD_DIR)/%.aifc: $(BUILD_DIR)/%.table %.aiff
+	$(call print,Encoding VADPCM:,$<,$@)
+	$(V)$(VADPCM_ENC) -c $^ $@
+
+$(ENDIAN_BITWIDTH): $(TOOLS_DIR)/determine-endian-bitwidth.c
+	@$(PRINT) "$(GREEN)Generating endian-bitwidth $(NO_COL)\n"
+	$(V)$(CC) -c $(CFLAGS) -o $@.dummy2 $< 2>$@.dummy1; true
+	$(V)grep -o 'msgbegin --endian .* --bitwidth .* msgend' $@.dummy1 > $@.dummy2
+	$(V)head -n1 <$@.dummy2 | cut -d' ' -f2-5 > $@
+	@$(RM) $@.dummy1
+	@$(RM) $@.dummy2
+
+$(SOUND_BIN_DIR)/sound_data.ctl: sound/sound_banks/ $(SOUND_BANK_FILES) $(SOUND_SAMPLE_AIFCS) $(ENDIAN_BITWIDTH)
+	@$(PRINT) "$(GREEN)Generating:  $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(PYTHON) $(TOOLS_DIR)/assemble_sound.py $(BUILD_DIR)/sound/samples/ sound/sound_banks/ $(SOUND_BIN_DIR)/sound_data.ctl $(SOUND_BIN_DIR)/ctl_header $(SOUND_BIN_DIR)/sound_data.tbl $(SOUND_BIN_DIR)/tbl_header $(C_DEFINES) $$(cat $(ENDIAN_BITWIDTH))
+
+$(SOUND_BIN_DIR)/sound_data.tbl: $(SOUND_BIN_DIR)/sound_data.ctl
+	@true
+
+$(SOUND_BIN_DIR)/ctl_header: $(SOUND_BIN_DIR)/sound_data.ctl
+	@true
+
+$(SOUND_BIN_DIR)/tbl_header: $(SOUND_BIN_DIR)/sound_data.ctl
+	@true
+
+$(SOUND_BIN_DIR)/sequences.bin: $(SOUND_BANK_FILES) sound/sequences.json $(SOUND_SEQUENCE_DIRS) $(SOUND_SEQUENCE_FILES) $(ENDIAN_BITWIDTH)
+	@$(PRINT) "$(GREEN)Generating:  $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(PYTHON) $(TOOLS_DIR)/assemble_sound.py --sequences $@ $(SOUND_BIN_DIR)/sequences_header $(SOUND_BIN_DIR)/bank_sets sound/sound_banks/ sound/sequences.json $(SOUND_SEQUENCE_FILES) $(C_DEFINES) $$(cat $(ENDIAN_BITWIDTH))
+
+$(SOUND_BIN_DIR)/bank_sets: $(SOUND_BIN_DIR)/sequences.bin
+	@true
+
+$(SOUND_BIN_DIR)/sequences_header: $(SOUND_BIN_DIR)/sequences.bin
+	@true
+
+$(SOUND_BIN_DIR)/%.m64: $(SOUND_BIN_DIR)/%.o
+	$(call print,Converting to M64:,$<,$@)
+	$(V)$(OBJCOPY) -j .rodata $< -O binary $@
+
+
+#==============================================================================#
+# Generated Source Code Files                                                  #
+#==============================================================================#
+
+# Convert binary file to a comma-separated list of byte values for inclusion in C code
+$(BUILD_DIR)/%.inc.c: $(BUILD_DIR)/%
+	$(call print,Piping:,$<,$@)
+	$(V)hexdump -v -e '1/1 "0x%X,"' $< > $@
+	$(V)echo >> $@
+
+# Generate animation data
+$(BUILD_DIR)/assets/mario_anim_data.c: $(wildcard assets/anims/*.inc.c)
+	@$(PRINT) "$(GREEN)Generating animation data $(NO_COL)\n"
+	$(V)$(PYTHON) $(TOOLS_DIR)/mario_anims_converter.py > $@
+
+# Generate demo input data
+$(BUILD_DIR)/assets/demo_data.c: assets/demo_data.json $(wildcard assets/demos/*.bin)
+	@$(PRINT) "$(GREEN)Generating demo data $(NO_COL)\n"
+	$(V)$(PYTHON) $(TOOLS_DIR)/demo_data_converter.py assets/demo_data.json $(DEF_INC_CFLAGS) > $@
+
+# Encode in-game text strings
+$(BUILD_DIR)/include/text_strings.h: include/text_strings.h.in
+	$(call print,Encoding:,$<,$@)
+	$(V)$(TEXTCONV) charmap.txt $< $@
+$(BUILD_DIR)/include/text_menu_strings.h: include/text_menu_strings.h.in
+	$(call print,Encoding:,$<,$@)
+	$(V)$(TEXTCONV) charmap_menu.txt $< $@
+$(BUILD_DIR)/text/%/define_courses.inc.c: text/define_courses.inc.c text/%/courses.h
+	@$(PRINT) "$(GREEN)Preprocessing: $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(CPP) $(CPPFLAGS) $< -o - -I text/$*/ | $(TEXTCONV) charmap.txt - $@
+$(BUILD_DIR)/text/%/define_text.inc.c: text/define_text.inc.c text/%/courses.h text/%/dialogs.h
+	@$(PRINT) "$(GREEN)Preprocessing: $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(CPP) $(CPPFLAGS) $< -o - -I text/$*/ | $(TEXTCONV) charmap.txt - $@
+
+# Level headers
+$(BUILD_DIR)/include/level_headers.h: levels/level_headers.h.in
+	$(call print,Preprocessing level headers:,$<,$@)
+	$(V)$(CPP) $(CPPFLAGS) -I . levels/level_headers.h.in | $(PYTHON) $(TOOLS_DIR)/output_level_headers.py > $(BUILD_DIR)/include/level_headers.h
+
+# Generate version_data.h
+$(BUILD_DIR)/src/game/version_data.h: tools/make_version.sh
+	@$(PRINT) "$(GREEN)Generating:  $(BLUE)$@ $(NO_COL)\n"
+	$(V)tools/make_version.sh $(CROSS) > $@
+
+#==============================================================================#
+# Compilation Recipes                                                          #
+#==============================================================================#
+
+# Compile C code
+$(BUILD_DIR)/%.o: %.c
+	$(call print,Compiling:,$<,$@)
+	$(V)$(CC) -c $(CFLAGS) -MMD -MF $(BUILD_DIR)/$*.d  -o $@ $<
+$(BUILD_DIR)/%.o: $(BUILD_DIR)/%.c
+	$(call print,Compiling:,$<,$@)
+	$(V)$(CC) -c $(CFLAGS) -MMD -MF $(BUILD_DIR)/$*.d  -o $@ $<
+
+# Assemble assembly code
+$(BUILD_DIR)/%.o: %.s
+	$(call print,Assembling:,$<,$@)
+	$(V)$(CC) -c $(CFLAGS) $(foreach i,$(INCLUDE_DIRS),-Wa,-I$(i)) -x assembler-with-cpp -MMD -MF $(BUILD_DIR)/$*.d  -o $@ $<
+
+$(BUILD_DIR)/sound/sequences/00_sound_player.o: sound/sequences/00_sound_player.s
+	$(call print,Assembling:,$<,$@)
+	$(V)$(AS) $(ASFLAGS) -MD $(BUILD_DIR)/sound/sequences/00_sound_player.d -o $@ $<
+
+# Assemble RSP assembly code
+$(BUILD_DIR)/rsp/%.bin $(BUILD_DIR)/rsp/%_data.bin: rsp/%.s
+	$(call print,Assembling:,$<,$@)
+	$(V)$(RSPASM) -sym $@.sym $(RSPASMFLAGS) -strequ CODE_FILE $(BUILD_DIR)/rsp/$*.bin -strequ DATA_FILE $(BUILD_DIR)/rsp/$*_data.bin $<
+
+# Run linker script through the C preprocessor
+$(BUILD_DIR)/$(LD_SCRIPT): $(LD_SCRIPT)
+	$(call print,Preprocessing linker script:,$<,$@)
+	$(V)$(CPP) $(CPPFLAGS) -DBUILD_DIR=$(BUILD_DIR) -MMD -MP -MT $@ -MF $@.d -o $@ $<
+
+# Link libgoddard
+$(BUILD_DIR)/libgoddard.a: $(GODDARD_O_FILES)
+	@$(PRINT) "$(GREEN)Linking libgoddard:  $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(AR) rcs -o $@ $(GODDARD_O_FILES)
+
+# Link libz
+$(BUILD_DIR)/libz.a: $(LIBZ_O_FILES)
+	@$(PRINT) "$(GREEN)Linking libz:  $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(AR) rcs -o $@ $(LIBZ_O_FILES)
+
+# Link SM64 ELF file
+$(ELF): $(O_FILES) $(YAY0_OBJ_FILES) $(SEG_FILES) $(BUILD_DIR)/$(LD_SCRIPT) undefined_syms.txt $(BUILD_DIR)/libz.a $(BUILD_DIR)/libgoddard.a
+	@$(PRINT) "$(GREEN)Linking ELF file:  $(BLUE)$@ $(NO_COL)\n"
+	$(V)$(LD) --gc-sections -L $(BUILD_DIR) -T undefined_syms.txt -T $(BUILD_DIR)/$(LD_SCRIPT) -Map $(BUILD_DIR)/sm64.$(VERSION).map --no-check-sections $(addprefix -R ,$(SEG_FILES)) -o $@ $(O_FILES) -L$(LIBS_DIR) -l$(ULTRALIB) -Llib -lgcc -lnustd -lhvqm2 -lz -lgoddard -u sprintf -u osMapTLB
+
+# Build ROM
+$(ROM): $(ELF)
+	$(call print,Building ROM:,$<,$@)
+	$(V)$(OBJCOPY) --pad-to=0x100000 --gap-fill=0xFF $< $@ -O binary
+	$(V)$(N64CKSUM) $@
+
+$(BUILD_DIR)/$(TARGET).objdump: $(ELF)
+	$(OBJDUMP) -D $< > $@
+
+.PHONY: all clean distclean default diff test load
+# with no prerequisites, .SECONDARY causes no intermediate target to be removed
+.SECONDARY:
+
+# Remove built-in rules, to improve performance
+MAKEFLAGS += --no-builtin-rules
+
+-include $(DEP_FILES)
+
+print-% : ; $(info $* is a $(flavor $*) variable set to [$($*)]) @true
diff --git a/README.md b/README.md
index 036a7b9..cd7b7f3 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,6 @@
+# Super Mario 64 Lighting Engine
+
+- This repo contains a WIP lighting engine for SM64. It supports directional lights and point lights, the latter being able to use either dynamic directional lights or real point lights if using F3DZEX.
 # UltraSM64
 
 - This repo contains a full decompilation of Super Mario 64 (J), (U), (E), and (SH).
diff --git a/README.md.orig b/README.md.orig
new file mode 100644
index 0000000..036a7b9
--- /dev/null
+++ b/README.md.orig
@@ -0,0 +1,70 @@
+# UltraSM64
+
+- This repo contains a full decompilation of Super Mario 64 (J), (U), (E), and (SH).
+- Naming and documentation of the source code and data structures are in progress.
+- It has been edited to allow for the usage of the final "N64 OS" library, version ``2.0L``
+- Shindou Rumble Pak code is on for all regions.
+- Targeting the iQue Player is supported.
+- Saving to 32kbyte/256kbit SRAM is supported.
+- Using gzip DEFLATE compression is supported.
+- It has been patched with someone2639's shiftable segments patch
+- Getting HVQM FMV support to work with the game is in progress.
+- Getting UNFLoader (flashcart USB library) to work with the game is in progress.
+
+## Multi-Save support
+
+The repository supports SRAM in addition to EEPROM. The standard save data functions are #ifdef'd to accommedate this.
+
+To build with SRAM support, run make with ``SAVETYPE=sram``.
+
+I may attempt FlashRAM in the future.
+
+## Multi-Console support
+
+The repository supports targeting the iQue Player in addition to the N64. The iQue libultra is ***NOT*** compatible with N64 in many ways, so it is currently NOT possible to have one build for both consoles.
+
+To target iQue, run make with the ``CONSOLE=bb`` argument.
+
+## Compression
+
+The repository supports using DEFLATE compression instead of Nintendo's Yay0. This boasts a better compression ratio, but at a slight cost to load times.
+
+On average I'd estimate that the bottleneck on decompression is about 1-2 seconds.
+
+To switch to gzip, run make with the ``COMPRESS=gzip`` argument.
+
+The repo also supports gziping with ``libdeflate-gzip``. This compresses at a slightly better ratio than standard ``gzip``, with no real downside from a decompression standpoint.
+
+To use ``libdeflate-gzip``, first clone the [repo](https://github.com/ebiggers/libdeflate), then make and make install it.
+
+Then run make for sm64 with ``GZIPVER=libdef`` in addition to ``COMPRESS=gzip``
+
+The repo also supports RNC (Rob Northen Compression). RNC has two methods. 
+
+Method 1 is designed to compress as small as possible, while method 2 is designed so that decompression is as fast as possible.
+
+Both methods are fast. Method 1 has better compression than 2, so I suggest using method 1 if using RNC.
+
+To switch to RNC, run make with either ``COMPRESS=rnc1`` or ``COMPRESS=rnc2``, depending on preferred method.
+
+
+## FAQ
+
+Q: Why in the hell are you bundling your own build of ``ld``?
+
+A: Newer binutils (Like the one bundled with Ubuntu, 2.34) break linking with libultra builds due to local asm symbols.
+
+This puts me at a crossroads of either touching leaked code and requiring GCC, or just using an older linker that works just fine.
+
+I went with the latter.
+
+Thanks to "someone2639" for this hacky-ass idea
+
+Q: Will this allow me to use FlashRAM/Transfer Pak/microcode swapping/Other Cool N64 Features?
+
+A: Theoretically, all yes.
+
+## Installation help
+
+
+Go read the original repo README.md
diff --git a/actors/goomba/model.inc.c b/actors/goomba/model.inc.c
index f45d391..9dcb942 100644
--- a/actors/goomba/model.inc.c
+++ b/actors/goomba/model.inc.c
@@ -173,8 +173,10 @@ static const Vtx goomba_seg8_vertex_0801B238[] = {
 
 // 0x0801B2E8 - 0x0801B560
 const Gfx goomba_seg8_dl_0801B2E8[] = {
-    gsSPLight(&goomba_seg8_lights_0801AD30.l, 1),
-    gsSPLight(&goomba_seg8_lights_0801AD30.a, 2),
+    // gsSPLight(&goomba_seg8_lights_0801AD30.l, 1),
+    // gsSPLight(&goomba_seg8_lights_0801AD30.a, 2),
+    gsDPPipeSync(),
+    gsDPSetEnvColor(0xFF, 0xFF, 0xFF, 0xFF),
     gsSPVertex(goomba_seg8_vertex_0801AD48, 15, 0),
     gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
     gsSP2Triangles( 6,  5,  4, 0x0,  5,  7,  3, 0x0),
@@ -238,7 +240,7 @@ const Gfx goomba_seg8_dl_0801B5A0[] = {
     gsSPDisplayList(goomba_seg8_dl_0801B2E8),
     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
     gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE),
     gsSPEndDisplayList(),
 };
 
@@ -262,10 +264,10 @@ const Gfx goomba_seg8_dl_0801B5F0[] = {
 
 // 0x0801B618
 static const Vtx goomba_seg8_vertex_0801B618[] = {
-    {{{    18,     18,      0}, 0, {   990,      0}, {0xff, 0xff, 0xff, 0xff}}},
-    {{{   -18,     18,      0}, 0, {     0,      0}, {0xff, 0xff, 0xff, 0xff}}},
-    {{{   -18,    -18,      0}, 0, {     0,    990}, {0xff, 0xff, 0xff, 0xff}}},
-    {{{    18,    -18,      0}, 0, {   990,    990}, {0xff, 0xff, 0xff, 0xff}}},
+    {{{    18,     18,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{   -18,     18,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{   -18,    -18,      0}, 0, {     0,    990}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{    18,    -18,      0}, 0, {   990,    990}, {0x00, 0x00, 0x7f, 0xff}}},
 };
 
 // 0x0801B658 - 0x0801B690
@@ -281,8 +283,8 @@ const Gfx goomba_seg8_dl_0801B658[] = {
 // 0x0801B690 - 0x0801B700
 const Gfx goomba_seg8_dl_0801B690[] = {
     gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
-    gsSPClearGeometryMode(G_LIGHTING),
+    gsDPSetCombineMode(G_CC_MODULATEIDECALA, G_CC_MODULATEIDECALA),
+    // gsSPClearGeometryMode(G_LIGHTING),
     gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
     gsDPTileSync(),
@@ -291,7 +293,7 @@ const Gfx goomba_seg8_dl_0801B690[] = {
     gsSPDisplayList(goomba_seg8_dl_0801B658),
     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
     gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE),
     gsSPSetGeometryMode(G_LIGHTING),
     gsSPEndDisplayList(),
 };
@@ -772,8 +774,10 @@ static const Vtx goomba_seg8_vertex_0801CDF0[] = {
 
 // 0x0801CE20 - 0x0801CF78
 const Gfx goomba_seg8_dl_0801CE20[] = {
-    gsSPLight(&goomba_seg8_lights_080194D0.l, 1),
-    gsSPLight(&goomba_seg8_lights_080194D0.a, 2),
+    // gsSPLight(&goomba_seg8_lights_080194D0.l, 1),
+    // gsSPLight(&goomba_seg8_lights_080194D0.a, 2),
+    gsDPPipeSync(),
+    gsDPSetEnvColor(0x54, 0x2e, 0x10, 0xFF),
     gsSPVertex(goomba_seg8_vertex_0801B700, 16, 0),
     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
     gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
@@ -801,8 +805,10 @@ const Gfx goomba_seg8_dl_0801CE20[] = {
 
 // 0x0801CF78 - 0x0801D0D0
 const Gfx goomba_seg8_dl_0801CF78[] = {
-    gsSPLight(&goomba_seg8_lights_080194E8.l, 1),
-    gsSPLight(&goomba_seg8_lights_080194E8.a, 2),
+    // gsSPLight(&goomba_seg8_lights_080194E8.l, 1),
+    // gsSPLight(&goomba_seg8_lights_080194E8.a, 2),
+    gsDPPipeSync(),
+    gsDPSetEnvColor(0x61, 0x34, 0x13, 0xFF),
     gsSPVertex(goomba_seg8_vertex_0801BA50, 15, 0),
     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
     gsSP2Triangles( 1,  4,  5, 0x0,  1,  5,  2, 0x0),
@@ -830,8 +836,10 @@ const Gfx goomba_seg8_dl_0801CF78[] = {
 
 // 0x0801D0D0 - 0x0801D360
 const Gfx goomba_seg8_dl_0801D0D0[] = {
-    gsSPLight(&goomba_seg8_lights_08019500.l, 1),
-    gsSPLight(&goomba_seg8_lights_08019500.a, 2),
+    // gsSPLight(&goomba_seg8_lights_08019500.l, 1),
+    // gsSPLight(&goomba_seg8_lights_08019500.a, 2),
+    gsDPPipeSync(),
+    gsDPSetEnvColor(0x77, 0x42, 0x20, 0xFF),
     gsSPVertex(goomba_seg8_vertex_0801BDC0, 16, 0),
     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
     gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
@@ -882,8 +890,10 @@ const Gfx goomba_seg8_dl_0801D0D0[] = {
 
 // 0x0801D360 - 0x0801D760
 const Gfx goomba_seg8_dl_0801D360[] = {
-    gsSPLight(&goomba_seg8_lights_08019518.l, 1),
-    gsSPLight(&goomba_seg8_lights_08019518.a, 2),
+    // gsSPLight(&goomba_seg8_lights_08019518.l, 1),
+    // gsSPLight(&goomba_seg8_lights_08019518.a, 2),
+    gsDPPipeSync(),
+    gsDPSetEnvColor(0xde, 0xb4, 0x4e, 0xFF),
     gsSPVertex(goomba_seg8_vertex_0801C620, 16, 0),
     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
     gsSP2Triangles( 4,  5,  1, 0x0,  4,  1,  0, 0x0),
@@ -957,6 +967,6 @@ const Gfx goomba_seg8_dl_0801D360[] = {
 
 // 0x0801D760 - 0x0801D770
 const Gfx goomba_seg8_dl_0801D760[] = {
-    gsSPNumLights(NUMLIGHTS_1),
+    // gsSPNumLights(NUMLIGHTS_1),
     gsSPEndDisplayList(),
 };
diff --git a/actors/group0.c b/actors/group0.c
index f852e6c..3b4a6d2 100644
--- a/actors/group0.c
+++ b/actors/group0.c
@@ -25,3 +25,5 @@
 #include "white_particle_small/model.inc.c"
 
 #include "sparkle_animation/model.inc.c"
+
+#include "lantern/model.inc.c"
\ No newline at end of file
diff --git a/actors/group0.h b/actors/group0.h
index 44f8b05..66c4dd3 100644
--- a/actors/group0.h
+++ b/actors/group0.h
@@ -342,4 +342,8 @@ extern const Gfx white_particle_small_dl_end[];
 extern const Gfx white_particle_small_dl[];
 extern const Gfx white_particle_small_unused_dl[];
 
+#include "mario/geo_header.h"
+
+#include "lantern/geo_header.h"
+
 #endif
diff --git a/actors/group0_geo.c b/actors/group0_geo.c
index bddefae..0ecad78 100644
--- a/actors/group0_geo.c
+++ b/actors/group0_geo.c
@@ -16,3 +16,5 @@
 #include "water_splash/geo.inc.c"
 #include "sparkle_animation/geo.inc.c"
 #include "mario/geo.inc.c"
+
+#include "lantern/geo.inc.c"
\ No newline at end of file
diff --git a/actors/lantern/geo.inc.c b/actors/lantern/geo.inc.c
new file mode 100644
index 0000000..8de236e
--- /dev/null
+++ b/actors/lantern/geo.inc.c
@@ -0,0 +1,13 @@
+#include "src/game/envfx_snow.h"
+
+const GeoLayout lantern_geo[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, lantern_Lantern_mesh),
+		GEO_BILLBOARD_WITH_PARAMS_AND_DL(LAYER_TRANSPARENT, 0, 0, 0, lantern_Flame_mesh),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, lantern_Glass_mesh),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, lantern_material_revert_render_settings),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, lantern_material_revert_render_settings),
+	GEO_CLOSE_NODE(),
+	GEO_END(),
+};
diff --git a/actors/lantern/geo_header.h b/actors/lantern/geo_header.h
new file mode 100644
index 0000000..acbc328
--- /dev/null
+++ b/actors/lantern/geo_header.h
@@ -0,0 +1,19 @@
+extern const GeoLayout lantern_geo[];
+extern Vtx lantern_Lantern_mesh_vtx_0[20];
+extern Gfx lantern_Lantern_mesh_tri_0[];
+extern Vtx lantern_Lantern_mesh_vtx_1[6];
+extern Gfx lantern_Lantern_mesh_tri_1[];
+extern Vtx lantern_Lantern_mesh_vtx_2[18];
+extern Gfx lantern_Lantern_mesh_tri_2[];
+extern Vtx lantern_Lantern_mesh_vtx_3[16];
+extern Gfx lantern_Lantern_mesh_tri_3[];
+extern Vtx lantern_Flame_mesh_vtx_0[3];
+extern Gfx lantern_Flame_mesh_tri_0[];
+extern Vtx lantern_Glass_mesh_vtx_0[13];
+extern Gfx lantern_Glass_mesh_tri_0[];
+
+extern Gfx lantern_Lantern_mesh[];
+extern Gfx lantern_Flame_mesh[];
+extern Gfx lantern_Glass_mesh[];
+extern Gfx lantern_material_revert_render_settings[];
+
diff --git a/actors/lantern/model.inc.c b/actors/lantern/model.inc.c
new file mode 100644
index 0000000..7415b9c
--- /dev/null
+++ b/actors/lantern/model.inc.c
@@ -0,0 +1,359 @@
+Gfx lantern_sm64lanternfire_i8_aligner[] = {gsSPEndDisplayList()};
+u8 lantern_sm64lanternfire_i8[] = {
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x2, 0x6, 0x2, 0x4, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x4, 0x18, 0xC, 0x8, 0x7, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x8, 
+	0x19, 0x2F, 0x3B, 0xE, 0xB, 0x5, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xC, 0x3, 0x23, 0x43, 0x2E, 
+	0x4D, 0x33, 0x10, 0x15, 0x4, 0x1, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x1E, 0x11, 0x31, 0x67, 0x5F, 0x5F, 0x4E, 
+	0x1D, 0x33, 0x18, 0x2, 0x0, 0x0, 0x0, 0x1, 0xD, 
+	0xF, 0x36, 0x50, 0x72, 0x72, 0x64, 0x5B, 0x55, 0x5B, 
+	0x18, 0x5, 0x1, 0x0, 0x0, 0x2, 0x21, 0x2A, 0x5C, 
+	0x7E, 0x7D, 0x8C, 0x7F, 0x65, 0x62, 0x44, 0x3B, 0x18, 
+	0x4, 0x0, 0x0, 0x13, 0x39, 0x38, 0x70, 0x87, 0x8C, 
+	0x9F, 0x9C, 0x85, 0x96, 0x6A, 0x4A, 0x2F, 0x3, 0x0, 
+	0x0, 0x20, 0x44, 0x5C, 0xA4, 0xA4, 0x99, 0xB3, 0xBE, 
+	0xC3, 0x7E, 0xA6, 0x92, 0x3F, 0x4, 0x0, 0x0, 0x3, 
+	0x6E, 0x98, 0xB3, 0xD7, 0xAD, 0xBD, 0xCA, 0xE5, 0xCE, 
+	0xAD, 0x8A, 0x68, 0xA, 0x0, 0x0, 0x1A, 0x7A, 0x9B, 
+	0xE1, 0xE3, 0xDD, 0xE0, 0xED, 0xF5, 0xE7, 0xD1, 0xD2, 
+	0x83, 0x12, 0x0, 0x0, 0xE, 0x73, 0xC0, 0xF4, 0xF2, 
+	0xFD, 0xFA, 0xFB, 0xFB, 0xF1, 0xD5, 0xAE, 0x87, 0x6, 
+	0x0, 0x0, 0x2, 0x31, 0x92, 0xD9, 0xF5, 0xFF, 0xFF, 
+	0xFE, 0xFB, 0xE0, 0xB6, 0xA9, 0x2A, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x21, 0x4C, 0x72, 0x99, 0x9F, 0xA1, 0x8B, 
+	0x66, 0x4F, 0x16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 
+};
+
+Vtx lantern_Lantern_mesh_vtx_cull[8] = {
+	{{{-61, -75, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-61, -75, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-61, 58, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-61, 58, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{61, -75, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{61, -75, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{61, 58, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{61, 58, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+};
+
+Vtx lantern_Lantern_mesh_vtx_0[20] = {
+	{{{36, -75, 21},0, {-16, 1008},{0x0, 0x71, 0x3A, 0xFF}}},
+	{{{0, -10, 0},0, {-16, 1008},{0x0, 0x71, 0x3A, 0xFF}}},
+	{{{-36, -75, 21},0, {-16, 1008},{0x0, 0x71, 0x3A, 0xFF}}},
+	{{{0, -75, -42},0, {-16, 1008},{0x32, 0x71, 0xE3, 0xFF}}},
+	{{{0, -10, 0},0, {-16, 1008},{0x32, 0x71, 0xE3, 0xFF}}},
+	{{{36, -75, 21},0, {-16, 1008},{0x32, 0x71, 0xE3, 0xFF}}},
+	{{{-36, -75, 21},0, {-16, 1008},{0xCE, 0x71, 0xE3, 0xFF}}},
+	{{{0, -10, 0},0, {-16, 1008},{0xCE, 0x71, 0xE3, 0xFF}}},
+	{{{0, -75, -42},0, {-16, 1008},{0xCE, 0x71, 0xE3, 0xFF}}},
+	{{{-31, -24, 18},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{31, -24, 18},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{0, -24, -36},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{0, -73, 0},0, {832, 832},{0x73, 0x36, 0x0, 0xFF}}},
+	{{{-40, 11, -12},0, {160, 832},{0x7A, 0xDD, 0x0, 0xFF}}},
+	{{{-40, 11, 12},0, {160, 832},{0x7A, 0xDD, 0x0, 0xFF}}},
+	{{{0, 37, 10},0, {160, 160},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{0, 37, -10},0, {160, 160},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{40, 11, 12},0, {832, 160},{0x86, 0xDD, 0x0, 0xFF}}},
+	{{{40, 11, -12},0, {832, 160},{0x86, 0xDD, 0x0, 0xFF}}},
+	{{{0, -73, 0},0, {832, 832},{0x8D, 0x36, 0x0, 0xFF}}},
+};
+
+Gfx lantern_Lantern_mesh_tri_0[] = {
+	gsSPVertex(lantern_Lantern_mesh_vtx_0 + 0, 20, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
+	gsSP2Triangles(6, 7, 8, 0, 9, 10, 11, 0),
+	gsSP2Triangles(12, 13, 14, 0, 13, 15, 14, 0),
+	gsSP2Triangles(13, 16, 15, 0, 16, 17, 15, 0),
+	gsSP2Triangles(16, 18, 17, 0, 18, 19, 17, 0),
+	gsSPEndDisplayList(),
+};Vtx lantern_Lantern_mesh_vtx_1[6] = {
+	{{{0, -75, -42},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-36, -75, 21},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{36, -75, 21},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-7, -44, 26},0, {-16, 1008},{0x0, 0xBF, 0x93, 0xFF}}},
+	{{{0, -33, 19},0, {-16, 1008},{0x0, 0xBF, 0x93, 0xFF}}},
+	{{{7, -44, 26},0, {-16, 1008},{0x0, 0xBF, 0x93, 0xFF}}},
+};
+
+Gfx lantern_Lantern_mesh_tri_1[] = {
+	gsSPVertex(lantern_Lantern_mesh_vtx_1 + 0, 6, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
+	gsSPEndDisplayList(),
+};Vtx lantern_Lantern_mesh_vtx_2[18] = {
+	{{{0, -73, 0},0, {-16, 1008},{0x0, 0x73, 0xCA, 0xFF}}},
+	{{{-31, -24, 18},0, {-16, 1008},{0x0, 0x73, 0xCA, 0xFF}}},
+	{{{31, -24, 18},0, {-16, 1008},{0x0, 0x73, 0xCA, 0xFF}}},
+	{{{0, -73, 0},0, {-16, 1008},{0x99, 0x2C, 0x3C, 0xFF}}},
+	{{{31, -24, 18},0, {-16, 1008},{0x99, 0x2C, 0x3C, 0xFF}}},
+	{{{0, -24, -36},0, {-16, 1008},{0x99, 0x2C, 0x3C, 0xFF}}},
+	{{{0, -73, 0},0, {-16, 1008},{0x67, 0x2C, 0x3C, 0xFF}}},
+	{{{0, -24, -36},0, {-16, 1008},{0x67, 0x2C, 0x3C, 0xFF}}},
+	{{{-31, -24, 18},0, {-16, 1008},{0x67, 0x2C, 0x3C, 0xFF}}},
+	{{{-7, -44, 26},0, {-16, 1008},{0x0, 0x54, 0xA1, 0xFF}}},
+	{{{7, -44, 26},0, {-16, 1008},{0x0, 0x54, 0xA1, 0xFF}}},
+	{{{0, -73, 0},0, {-16, 1008},{0x0, 0x54, 0xA1, 0xFF}}},
+	{{{7, -44, 26},0, {-16, 1008},{0x98, 0xE0, 0x41, 0xFF}}},
+	{{{0, -33, 19},0, {-16, 1008},{0x98, 0xE0, 0x41, 0xFF}}},
+	{{{0, -73, 0},0, {-16, 1008},{0x98, 0xE0, 0x41, 0xFF}}},
+	{{{0, -33, 19},0, {-16, 1008},{0x68, 0xE0, 0x41, 0xFF}}},
+	{{{-7, -44, 26},0, {-16, 1008},{0x68, 0xE0, 0x41, 0xFF}}},
+	{{{0, -73, 0},0, {-16, 1008},{0x68, 0xE0, 0x41, 0xFF}}},
+};
+
+Gfx lantern_Lantern_mesh_tri_2[] = {
+	gsSPVertex(lantern_Lantern_mesh_vtx_2 + 0, 18, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
+	gsSP2Triangles(6, 7, 8, 0, 9, 10, 11, 0),
+	gsSP2Triangles(12, 13, 14, 0, 15, 16, 17, 0),
+	gsSPEndDisplayList(),
+};Vtx lantern_Lantern_mesh_vtx_3[16] = {
+	{{{0, -73, 0},0, {1008, 1008},{0x3B, 0x2B, 0x68, 0xFF}}},
+	{{{-40, 11, -12},0, {160, 832},{0x39, 0xF3, 0x71, 0xFF}}},
+	{{{-61, 11, 0},0, {-16, 1008},{0x39, 0xF7, 0x71, 0xFF}}},
+	{{{0, 58, 0},0, {-16, -16},{0x0, 0xBD, 0x6C, 0xFF}}},
+	{{{0, 37, -10},0, {160, 160},{0x0, 0xBD, 0x6C, 0xFF}}},
+	{{{61, 11, 0},0, {1008, -16},{0xC7, 0xF7, 0x71, 0xFF}}},
+	{{{40, 11, -12},0, {832, 160},{0xC7, 0xF3, 0x71, 0xFF}}},
+	{{{0, -73, 0},0, {832, 832},{0xC5, 0x2B, 0x68, 0xFF}}},
+	{{{0, -73, 0},0, {832, 832},{0x3B, 0x2B, 0x98, 0xFF}}},
+	{{{-61, 11, 0},0, {-16, 1008},{0x39, 0xF6, 0x8F, 0xFF}}},
+	{{{-40, 11, 12},0, {160, 832},{0x39, 0xF3, 0x8F, 0xFF}}},
+	{{{0, 58, 0},0, {-16, -16},{0x0, 0xBD, 0x94, 0xFF}}},
+	{{{0, 37, 10},0, {160, 160},{0x0, 0xBD, 0x94, 0xFF}}},
+	{{{61, 11, 0},0, {1008, -16},{0xC7, 0xF6, 0x8F, 0xFF}}},
+	{{{40, 11, 12},0, {832, 160},{0xC7, 0xF3, 0x8F, 0xFF}}},
+	{{{0, -73, 0},0, {1008, 1008},{0xC5, 0x2B, 0x98, 0xFF}}},
+};
+
+Gfx lantern_Lantern_mesh_tri_3[] = {
+	gsSPVertex(lantern_Lantern_mesh_vtx_3 + 0, 16, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
+	gsSP2Triangles(1, 4, 3, 0, 4, 5, 3, 0),
+	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
+	gsSP2Triangles(8, 9, 10, 0, 10, 9, 11, 0),
+	gsSP2Triangles(10, 11, 12, 0, 12, 11, 13, 0),
+	gsSP2Triangles(12, 13, 14, 0, 14, 13, 15, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx lantern_Flame_mesh_vtx_cull[8] = {
+	{{{-24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+};
+
+Vtx lantern_Flame_mesh_vtx_0[3] = {
+	{{{-24, -16, 0},0, {-172, 495},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{24, -16, 0},0, {639, 495},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{0, 46, 0},0, {238, -104},{0x0, 0x0, 0x7F, 0xFF}}},
+};
+
+Gfx lantern_Flame_mesh_tri_0[] = {
+	gsSPVertex(lantern_Flame_mesh_vtx_0 + 0, 3, 0),
+	gsSP1Triangle(0, 1, 2, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx lantern_Glass_mesh_vtx_cull[8] = {
+	{{{-25, -35, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-25, -35, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-25, 44, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{-25, 44, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{25, -35, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{25, -35, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{25, 44, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+	{{{25, 44, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
+};
+
+Vtx lantern_Glass_mesh_vtx_0[13] = {
+	{{{-25, -5, 25},0, {453, 1008},{0x59, 0xC, 0xA7, 0xFF}}},
+	{{{-25, -5, -25},0, {453, 752},{0x59, 0xC, 0x59, 0xFF}}},
+	{{{0, 44, 0},0, {624, 752},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{0, -35, 0},0, {368, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{25, -5, -25},0, {453, 496},{0xA7, 0xC, 0x59, 0xFF}}},
+	{{{0, 44, 0},0, {624, 496},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{0, -35, 0},0, {368, 752},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{25, -5, 25},0, {453, 240},{0xA7, 0xC, 0xA7, 0xFF}}},
+	{{{0, 44, 0},0, {624, 240},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{0, -35, 0},0, {368, 496},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-25, -5, 25},0, {453, -16},{0x59, 0xC, 0xA7, 0xFF}}},
+	{{{0, 44, 0},0, {624, -16},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{0, -35, 0},0, {368, 240},{0x0, 0x7F, 0x0, 0xFF}}},
+};
+
+Gfx lantern_Glass_mesh_tri_0[] = {
+	gsSPVertex(lantern_Glass_mesh_vtx_0 + 0, 13, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(1, 4, 5, 0, 6, 4, 1, 0),
+	gsSP2Triangles(4, 7, 8, 0, 9, 7, 4, 0),
+	gsSP2Triangles(7, 10, 11, 0, 12, 10, 7, 0),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_lantern_base_f3d[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(112, 43, 44, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_lantern_black_f3d[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPSetGeometryMode(G_CULL_FRONT),
+	gsSPClearGeometryMode(G_CULL_BACK),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(47, 47, 47, 255),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_lantern_black_f3d[] = {
+	gsDPPipeSync(),
+	gsSPClearGeometryMode(G_CULL_FRONT),
+	gsSPSetGeometryMode(G_CULL_BACK),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_lantern_grey_f3d[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPSetGeometryMode(G_CULL_FRONT),
+	gsSPClearGeometryMode(G_CULL_BACK),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(175, 175, 175, 255),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_lantern_grey_f3d[] = {
+	gsDPPipeSync(),
+	gsSPClearGeometryMode(G_CULL_FRONT),
+	gsSPSetGeometryMode(G_CULL_BACK),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_lantern_base_f3d_reverse[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1),
+	gsSPSetGeometryMode(G_CULL_FRONT),
+	gsSPClearGeometryMode(G_CULL_BACK),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(112, 43, 44, 255),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_lantern_base_f3d_reverse[] = {
+	gsDPPipeSync(),
+	gsSPClearGeometryMode(G_CULL_FRONT),
+	gsSPSetGeometryMode(G_CULL_BACK),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_lantern_flame_f3d[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_I, G_IM_SIZ_8b, 16, lantern_sm64lanternfire_i8),
+	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_8b, 2, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 60, 60),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_8b, 2, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0),
+	gsDPSetTileSize(0, 0, 0, 60, 60),
+	gsDPSetEnvColor(188, 148, 78, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_lantern_glass_f3d[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPSetGeometryMode(G_CULL_FRONT),
+	gsSPClearGeometryMode(G_CULL_BACK),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(154, 154, 154, 47),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_lantern_glass_f3d[] = {
+	gsDPPipeSync(),
+	gsSPClearGeometryMode(G_CULL_FRONT),
+	gsSPSetGeometryMode(G_CULL_BACK),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx lantern_Lantern_mesh[] = {
+	gsSPClearGeometryMode(G_LIGHTING),
+	gsSPVertex(lantern_Lantern_mesh_vtx_cull + 0, 8, 0),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPCullDisplayList(0, 7),
+	gsSPDisplayList(mat_lantern_base_f3d),
+	gsSPDisplayList(lantern_Lantern_mesh_tri_0),
+	gsSPDisplayList(mat_lantern_black_f3d),
+	gsSPDisplayList(lantern_Lantern_mesh_tri_1),
+	gsSPDisplayList(mat_revert_lantern_black_f3d),
+	gsSPDisplayList(mat_lantern_grey_f3d),
+	gsSPDisplayList(lantern_Lantern_mesh_tri_2),
+	gsSPDisplayList(mat_revert_lantern_grey_f3d),
+	gsSPDisplayList(mat_lantern_base_f3d_reverse),
+	gsSPDisplayList(lantern_Lantern_mesh_tri_3),
+	gsSPDisplayList(mat_revert_lantern_base_f3d_reverse),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx lantern_Flame_mesh[] = {
+	gsSPClearGeometryMode(G_LIGHTING),
+	gsSPVertex(lantern_Flame_mesh_vtx_cull + 0, 8, 0),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPCullDisplayList(0, 7),
+	gsSPDisplayList(mat_lantern_flame_f3d),
+	gsSPDisplayList(lantern_Flame_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx lantern_Glass_mesh[] = {
+	gsSPClearGeometryMode(G_LIGHTING),
+	gsSPVertex(lantern_Glass_mesh_vtx_cull + 0, 8, 0),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPCullDisplayList(0, 7),
+	gsSPDisplayList(mat_lantern_glass_f3d),
+	gsSPDisplayList(lantern_Glass_mesh_tri_0),
+	gsSPDisplayList(mat_revert_lantern_glass_f3d),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx lantern_material_revert_render_settings[] = {
+	gsDPPipeSync(),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPClearGeometryMode(G_TEXTURE_GEN),
+	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 0),
+	gsDPSetEnvColor(255, 255, 255, 255),
+	gsDPSetAlphaCompare(G_AC_NONE),
+	gsSPEndDisplayList(),
+};
diff --git a/actors/mario/geo.inc.c b/actors/mario/geo.inc.c
index 736d31f..bfa4df6 100644
--- a/actors/mario/geo.inc.c
+++ b/actors/mario/geo.inc.c
@@ -1,1825 +1,1013 @@
-// Normal Mario Geo
-
-// 0x170002E0
-const GeoLayout mario_geo_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_right), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_left), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_up), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_down), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_dead),
-         GEO_CLOSE_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_right), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_left), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_up), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_down), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_dead),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // left
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // right
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x1700041C
-const GeoLayout mario_geo_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_left_hand_closed),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000494
-const GeoLayout mario_geo_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// The body loads all the parts with some shared dls to apply the solid color of the dl that has it, the same rule applies to the medium and low poly geos
-
-// 0x1700053C
-const GeoLayout mario_geo_body[] = {
-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_butt), // starts sharing solid color with mario_torso (blue)
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_geo_face_and_wings), // stops sharing because faces has its own dl
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_arm), // starts sharing solid color with mario_left_forearm (red)
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_geo_left_hand), // stops sharing because hand has its solid color (white)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_geo_right_hand), // stops sharing because hand has its solid color (white)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_left_foot), // stops sharing because foot has its solid color (brown)
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_right_foot), // stops sharing because foot has its solid color (brown)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x170006F8
-const GeoLayout mario_geo_medium_poly_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_left_hand_closed),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000770
-const GeoLayout mario_geo_medium_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000818
-const GeoLayout mario_geo_medium_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_butt), // starts sharing solid color with mario_torso (blue)
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_medium_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_geo_face_and_wings), // stops sharing because faces has its own dl - medium poly mario uses high poly face
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_arm), // starts sharing solid color with mario_left_forearm (red)
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_geo_medium_poly_left_hand), // stops sharing because hand has its solid color (white)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_geo_medium_poly_right_hand), // stops sharing because hand has its solid color (white)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_medium_poly_left_foot), // stops sharing because foot has its solid color (brown)
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_right_foot), // stops sharing because foot has its solid color (brown)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x170009D4
-const GeoLayout mario_geo_low_poly_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_right), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_left), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_up), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_down), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_dead),
-         GEO_CLOSE_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_right), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_left), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_up), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_down), // unused
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_dead),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // left
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // right
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000B10
-const GeoLayout mario_geo_low_poly_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_left_hand_closed),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000B88
-const GeoLayout mario_geo_low_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000C30
-const GeoLayout mario_geo_low_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_butt), // starts sharing solid color with mario_torso (blue)
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_low_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_geo_low_poly_face_and_wings), // stops sharing because faces has its own dl
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_arm), // starts sharing solid color with mario_left_forearm (red)
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_geo_low_poly_left_hand), // stops sharing because hand has its solid color (white)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_geo_low_poly_right_hand), // stops sharing because hand has its solid color (white)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_low_poly_left_foot), // stops sharing because foot has its solid color (brown)
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_right_foot), // stops sharing because foot has its solid color (brown)
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Vanish Mario Geo
-
-// 0x17000DEC
-const GeoLayout mario_vanish_geo_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_right), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_left), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_up), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_down), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_dead),
-         GEO_CLOSE_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_right), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_left), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_up), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_down), // unused
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_dead),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17000F28
-const GeoLayout mario_vanish_geo_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_left_hand_closed),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
+#include "src/game/envfx_snow.h"
+
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_armature_002_switch_option_002[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+		GEO_OPEN_NODE(),
+			GEO_NODE_START(),
+			GEO_OPEN_NODE(),
+				GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh),
+			GEO_CLOSE_NODE(),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_right_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_left_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh),
+		GEO_OPEN_NODE(),
+			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_left_hand_peace_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_left_hand_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_left_hand_wing_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh),
+		GEO_OPEN_NODE(),
+			GEO_DISPLAY_LIST(LAYER_ALPHA, mario_006_switch_option_left_hand_wing_cap_wings_mesh),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+		GEO_OPEN_NODE(),
+			GEO_NODE_START(),
+			GEO_OPEN_NODE(),
+				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh),
+			GEO_CLOSE_NODE(),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6),
+			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh),
+		GEO_OPEN_NODE(),
+			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh),
+		GEO_OPEN_NODE(),
+			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_006_switch_option_left_hand_wing_cap_wings_mesh),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_1___eye_half_1),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_7___eye_X_3),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt1[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+		GEO_OPEN_NODE(),
+			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_mesh),
+			GEO_OPEN_NODE(),
+				GEO_ASM(0, geo_move_mario_part_from_parent),
+				GEO_ASM(0, geo_mario_tilt_torso),
+				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_000_offset_001_mesh),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ASM(0, geo_mario_head_rotation),
+							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+							GEO_OPEN_NODE(),
+								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+								GEO_OPEN_NODE(),
+									GEO_NODE_START(),
+									GEO_OPEN_NODE(),
+										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+										GEO_OPEN_NODE(),
+											GEO_NODE_START(),
+											GEO_OPEN_NODE(),
+												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh),
+											GEO_CLOSE_NODE(),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6),
+											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7),
+										GEO_CLOSE_NODE(),
+									GEO_CLOSE_NODE(),
+									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002),
+								GEO_CLOSE_NODE(),
+								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
+								GEO_OPEN_NODE(),
+									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+									GEO_OPEN_NODE(),
+										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_001_mesh),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
+								GEO_OPEN_NODE(),
+									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+									GEO_OPEN_NODE(),
+										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_002_mesh),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_003_mesh),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_004_mesh),
+								GEO_OPEN_NODE(),
+									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+									GEO_OPEN_NODE(),
+										GEO_NODE_START(),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+											GEO_OPEN_NODE(),
+												GEO_ASM(1, geo_mario_hand_foot_scaler),
+												GEO_SCALE(LAYER_FORCE, 65536),
+												GEO_OPEN_NODE(),
+													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_003_mesh),
+												GEO_CLOSE_NODE(),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_006_mesh),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_007_mesh),
+								GEO_OPEN_NODE(),
+									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+									GEO_OPEN_NODE(),
+										GEO_NODE_START(),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+											GEO_OPEN_NODE(),
+												GEO_ASM(0, geo_mario_hand_foot_scaler),
+												GEO_SCALE(LAYER_FORCE, 65536),
+												GEO_OPEN_NODE(),
+													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_004_mesh),
+												GEO_CLOSE_NODE(),
+												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_009_mesh),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_010_mesh),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_000_offset_011_mesh),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_012_mesh),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_013_mesh),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+							GEO_OPEN_NODE(),
+								GEO_ASM(2, geo_mario_hand_foot_scaler),
+								GEO_SCALE(LAYER_FORCE, 65536),
+								GEO_OPEN_NODE(),
+									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_005_mesh),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+		GEO_OPEN_NODE(),
+			GEO_NODE_START(),
+			GEO_OPEN_NODE(),
+				GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0),
+		GEO_OPEN_NODE(),
+			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0),
+		GEO_OPEN_NODE(),
+			GEO_DISPLAY_LIST(LAYER_ALPHA, mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt2[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+		GEO_OPEN_NODE(),
+			GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_mesh_mat_override_metal_0),
+			GEO_OPEN_NODE(),
+				GEO_ASM(0, geo_move_mario_part_from_parent),
+				GEO_ASM(0, geo_mario_tilt_torso),
+				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_000_offset_001_mesh_mat_override_metal_0),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ASM(0, geo_mario_head_rotation),
+							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+							GEO_OPEN_NODE(),
+								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+								GEO_OPEN_NODE(),
+									GEO_NODE_START(),
+									GEO_OPEN_NODE(),
+										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+										GEO_OPEN_NODE(),
+											GEO_NODE_START(),
+											GEO_OPEN_NODE(),
+												GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_metal_0),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+									GEO_CLOSE_NODE(),
+									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002),
+								GEO_CLOSE_NODE(),
+								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
+								GEO_OPEN_NODE(),
+									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+									GEO_OPEN_NODE(),
+										GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_001_mesh_mat_override_metal_0),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
+								GEO_OPEN_NODE(),
+									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+									GEO_OPEN_NODE(),
+										GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_002_mesh_mat_override_metal_0),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_003_mesh_mat_override_metal_0),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_004_mesh_mat_override_metal_0),
+								GEO_OPEN_NODE(),
+									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+									GEO_OPEN_NODE(),
+										GEO_NODE_START(),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+											GEO_OPEN_NODE(),
+												GEO_ASM(1, geo_mario_hand_foot_scaler),
+												GEO_SCALE(LAYER_FORCE, 65536),
+												GEO_OPEN_NODE(),
+													GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_003_mesh_mat_override_metal_0),
+												GEO_CLOSE_NODE(),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_006_mesh_mat_override_metal_0),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_007_mesh_mat_override_metal_0),
+								GEO_OPEN_NODE(),
+									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+									GEO_OPEN_NODE(),
+										GEO_NODE_START(),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+											GEO_OPEN_NODE(),
+												GEO_ASM(0, geo_mario_hand_foot_scaler),
+												GEO_SCALE(LAYER_FORCE, 65536),
+												GEO_OPEN_NODE(),
+													GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_004_mesh_mat_override_metal_0),
+												GEO_CLOSE_NODE(),
+												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_009_mesh_mat_override_metal_0),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_010_mesh_mat_override_metal_0),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_000_offset_011_mesh_mat_override_metal_0),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_012_mesh_mat_override_metal_0),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_013_mesh_mat_override_metal_0),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+							GEO_OPEN_NODE(),
+								GEO_ASM(2, geo_mario_hand_foot_scaler),
+								GEO_SCALE(LAYER_FORCE, 65536),
+								GEO_OPEN_NODE(),
+									GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_005_mesh_mat_override_metal_0),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+		GEO_OPEN_NODE(),
+			GEO_NODE_START(),
+			GEO_OPEN_NODE(),
+				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0),
+		GEO_OPEN_NODE(),
+			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0),
+		GEO_OPEN_NODE(),
+			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt3[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+		GEO_OPEN_NODE(),
+			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_mesh_mat_override_metal_0),
+			GEO_OPEN_NODE(),
+				GEO_ASM(0, geo_move_mario_part_from_parent),
+				GEO_ASM(0, geo_mario_tilt_torso),
+				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_000_offset_001_mesh_mat_override_metal_0),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ASM(0, geo_mario_head_rotation),
+							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+							GEO_OPEN_NODE(),
+								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+								GEO_OPEN_NODE(),
+									GEO_NODE_START(),
+									GEO_OPEN_NODE(),
+										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+										GEO_OPEN_NODE(),
+											GEO_NODE_START(),
+											GEO_OPEN_NODE(),
+												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_metal_0),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+									GEO_CLOSE_NODE(),
+									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002),
+								GEO_CLOSE_NODE(),
+								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
+								GEO_OPEN_NODE(),
+									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+									GEO_OPEN_NODE(),
+										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_001_mesh_mat_override_metal_0),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
+								GEO_OPEN_NODE(),
+									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+									GEO_OPEN_NODE(),
+										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_002_mesh_mat_override_metal_0),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_003_mesh_mat_override_metal_0),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_004_mesh_mat_override_metal_0),
+								GEO_OPEN_NODE(),
+									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+									GEO_OPEN_NODE(),
+										GEO_NODE_START(),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+											GEO_OPEN_NODE(),
+												GEO_ASM(1, geo_mario_hand_foot_scaler),
+												GEO_SCALE(LAYER_FORCE, 65536),
+												GEO_OPEN_NODE(),
+													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_003_mesh_mat_override_metal_0),
+												GEO_CLOSE_NODE(),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_006_mesh_mat_override_metal_0),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_007_mesh_mat_override_metal_0),
+								GEO_OPEN_NODE(),
+									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+									GEO_OPEN_NODE(),
+										GEO_NODE_START(),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+											GEO_OPEN_NODE(),
+												GEO_ASM(0, geo_mario_hand_foot_scaler),
+												GEO_SCALE(LAYER_FORCE, 65536),
+												GEO_OPEN_NODE(),
+													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_004_mesh_mat_override_metal_0),
+												GEO_CLOSE_NODE(),
+												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature),
+										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_009_mesh_mat_override_metal_0),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_010_mesh_mat_override_metal_0),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_000_offset_011_mesh_mat_override_metal_0),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+				GEO_OPEN_NODE(),
+					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_012_mesh_mat_override_metal_0),
+					GEO_OPEN_NODE(),
+						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_013_mesh_mat_override_metal_0),
+						GEO_OPEN_NODE(),
+							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+							GEO_OPEN_NODE(),
+								GEO_ASM(2, geo_mario_hand_foot_scaler),
+								GEO_SCALE(LAYER_FORCE, 65536),
+								GEO_OPEN_NODE(),
+									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_005_mesh_mat_override_metal_0),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_1___eye_half_1),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_7___eye_X_3),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
 };
-
-// 0x17000FA0
-const GeoLayout mario_vanish_geo_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Same rule body as Normal Mario
-
-// 0x17001048
-const GeoLayout mario_vanish_geo_body[] = {
-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_vanish_geo_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_arm),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_vanish_geo_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_arm),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_vanish_geo_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_left_foot),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001204
-const GeoLayout mario_vanish_geo_medium_poly_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_left_hand_closed),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x1700127C
-const GeoLayout mario_vanish_geo_medium_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001324
-const GeoLayout mario_vanish_geo_medium_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_medium_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_vanish_geo_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_arm),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_vanish_geo_medium_poly_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_arm),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_vanish_geo_medium_poly_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_medium_poly_left_foot),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x170014E0
-const GeoLayout mario_vanish_geo_low_poly_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_right),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_left),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_up),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_down),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_dead),
-         GEO_CLOSE_NODE(),
-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_front),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_half_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_closed),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_right),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_left),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_up),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_down),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_dead),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x1700161C
-const GeoLayout mario_vanish_geo_low_poly_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_left_hand_closed),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001694
-const GeoLayout mario_vanish_geo_low_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x1700173C
-const GeoLayout mario_vanish_geo_low_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_low_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_vanish_geo_low_poly_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_arm),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_vanish_geo_low_poly_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_arm),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_vanish_geo_low_poly_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_low_poly_left_foot),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Metal Mario Geo
-
-// 0x170018F8
-const GeoLayout mario_metal_geo_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_cap_on_shared_dl),
-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_cap_off_shared_dl),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings), // left
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings), // right
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x170019A4
-const GeoLayout mario_metal_geo_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_left_hand_closed_shared_dl),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001A1C
-const GeoLayout mario_metal_geo_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// A difference from Normal Mario is that the dls after the butt and left thigh shares the metal texture of it, same rule applies to the medium and low poly geos
-
-// 0x17001AC4
-const GeoLayout mario_metal_geo_body[] = {
-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_butt), // starts sharing metal texture with the dls below
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_torso_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_metal_geo_face_and_wings), // unlike normal mario geo, these dls still share the metal texture
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_geo_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_geo_right_hand), // stop sharing because the wing metal cap of it
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_left_thigh), // starts sharing metal texture with the dls below
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_left_foot_shared_dl),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_thigh_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001C80
-const GeoLayout mario_metal_geo_medium_poly_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_left_hand_closed_shared_dl),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001CF8
-const GeoLayout mario_metal_geo_medium_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_medium_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001DA0
-const GeoLayout mario_metal_geo_medium_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_medium_poly_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_medium_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_metal_geo_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_geo_medium_poly_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_geo_medium_poly_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_medium_poly_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_medium_poly_left_foot_shared_dl),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_thigh_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_medium_poly_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17001F5C
-const GeoLayout mario_metal_geo_low_poly_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_cap_on),
-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_cap_off),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002008
-const GeoLayout mario_metal_geo_low_poly_left_hand[] = {
-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_left_hand_closed_shared_dl),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002080
-const GeoLayout mario_metal_geo_low_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002128
-const GeoLayout mario_metal_geo_low_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_low_poly_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_low_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_metal_geo_low_poly_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_geo_low_poly_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_geo_low_poly_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_low_poly_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_low_poly_left_foot_shared_dl),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_thigh_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Metal Vanish Mario Geo
-
-// 0x170022E4
-const GeoLayout mario_metal_vanish_geo_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_on_shared_dl),
-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_off_shared_dl),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002390
-const GeoLayout mario_metal_vanish_geo_left_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_left_hand_closed_shared_dl),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002408
-const GeoLayout mario_metal_vanish_geo_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Same rules as Metal Mario
-
-// 0x170024B0
-const GeoLayout mario_metal_vanish_geo_body[] = {
-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_torso_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_metal_vanish_geo_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_vanish_geo_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_vanish_geo_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_left_foot_shared_dl),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_thigh_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x1700266C
-const GeoLayout mario_metal_vanish_geo_medium_poly_left_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_left_hand_closed_shared_dl),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x170026E4
-const GeoLayout mario_metal_vanish_geo_medium_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_medium_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x1700278C
-const GeoLayout mario_metal_vanish_geo_medium_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_medium_poly_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_medium_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_metal_vanish_geo_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-                        GEO_OPEN_NODE(),
-                           GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_right_hand),
-                        GEO_CLOSE_NODE(),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_medium_poly_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_medium_poly_left_foot_shared_dl),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_thigh_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_medium_poly_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002958
-const GeoLayout mario_metal_vanish_geo_low_poly_face_and_wings[] = {
-   GEO_ASM(0, geo_mario_head_rotation),
-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
-   GEO_OPEN_NODE(),
-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_cap_on),
-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_cap_off),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002A04
-const GeoLayout mario_metal_vanish_geo_low_poly_left_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(1, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_left_hand_closed_shared_dl),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002A7C
-const GeoLayout mario_metal_vanish_geo_low_poly_right_hand[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mario_hand_foot_scaler),
-         GEO_SCALE(0x00, 65536),
-         GEO_OPEN_NODE(),
-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_right_hand_closed),
-         GEO_CLOSE_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
-      GEO_OPEN_NODE(),
-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-      GEO_CLOSE_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
-      GEO_OPEN_NODE(),
-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002B24
-const GeoLayout mario_metal_vanish_geo_low_poly_body[] = {
-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
-   GEO_OPEN_NODE(),
-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_low_poly_butt),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_move_mario_part_from_parent),
-         GEO_ASM(0, geo_mario_tilt_torso),
-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_low_poly_torso),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_face_and_wings),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_left_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_arm_shared_dl),
-                  GEO_OPEN_NODE(),
-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
-                     GEO_OPEN_NODE(),
-                        GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_right_hand),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_low_poly_left_thigh),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_low_poly_left_foot_shared_dl),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
-         GEO_OPEN_NODE(),
-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_thigh_shared_dl),
-            GEO_OPEN_NODE(),
-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
-               GEO_OPEN_NODE(),
-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
-                  GEO_OPEN_NODE(),
-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
-                     GEO_SCALE(0x00, 65536),
-                     GEO_OPEN_NODE(),
-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_right_foot),
-                     GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
-            GEO_CLOSE_NODE(),
-         GEO_CLOSE_NODE(),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// High Poly
-
-// 0x17002CE0
-const GeoLayout mario_geo_load_body[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
-   GEO_OPEN_NODE(),
-      GEO_BRANCH(1, mario_geo_body),
-      GEO_BRANCH(1, mario_vanish_geo_body),
-      GEO_BRANCH(1, mario_metal_geo_body),
-      GEO_BRANCH(1, mario_metal_vanish_geo_body),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Medium Poly
-
-// 0x17002D14
-const GeoLayout mario_geo_load_medium_poly_body[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
-   GEO_OPEN_NODE(),
-      GEO_BRANCH(1, mario_geo_medium_poly_body),
-      GEO_BRANCH(1, mario_vanish_geo_medium_poly_body),
-      GEO_BRANCH(1, mario_metal_geo_medium_poly_body),
-      GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_body),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// Low Poly
-
-// 0x17002D48
-const GeoLayout mario_geo_load_low_poly_body[] = {
-   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
-   GEO_OPEN_NODE(),
-      GEO_BRANCH(1, mario_geo_low_poly_body),
-      GEO_BRANCH(1, mario_vanish_geo_low_poly_body),
-      GEO_BRANCH(1, mario_metal_geo_low_poly_body),
-      GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_body),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// 0x17002D7C
-const GeoLayout mario_geo_render_body[] = {
-   GEO_NODE_START(),
-   GEO_OPEN_NODE(),
-      GEO_RENDER_RANGE(-2048, 600),
-      GEO_OPEN_NODE(),
-         GEO_BRANCH(1, mario_geo_load_body),
-      GEO_CLOSE_NODE(),
-      GEO_RENDER_RANGE(600, 1600),
-      GEO_OPEN_NODE(),
-         GEO_BRANCH(1, mario_geo_load_medium_poly_body),
-      GEO_CLOSE_NODE(),
-      GEO_RENDER_RANGE(1600, 32767),
-      GEO_OPEN_NODE(),
-         GEO_BRANCH(1, mario_geo_load_low_poly_body),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_RETURN(),
-};
-
-// This last geo is used to load all of Mario Geo in the Level Scripts
-
-// 0x17002DD4
 const GeoLayout mario_geo[] = {
-   GEO_SHADOW(SHADOW_CIRCLE_PLAYER, 0xB4, 100),
-   GEO_OPEN_NODE(),
-      GEO_SCALE(0x00, 16384),
-      GEO_OPEN_NODE(),
-         GEO_ASM(0, geo_mirror_mario_backface_culling),
-         GEO_ASM(0, geo_mirror_mario_set_alpha),
-         GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
-         GEO_OPEN_NODE(),
-            GEO_BRANCH(1, mario_geo_load_body),
-            GEO_BRANCH(1, mario_geo_render_body),
-         GEO_CLOSE_NODE(),
-         GEO_ASM(1, geo_mirror_mario_backface_culling),
-      GEO_CLOSE_NODE(),
-   GEO_CLOSE_NODE(),
-   GEO_END(),
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_SHADOW(1, 180, 100),
+		GEO_OPEN_NODE(),
+			GEO_SCALE(LAYER_FORCE, 16384),
+			GEO_OPEN_NODE(),
+				GEO_ASM(0, geo_mirror_mario_backface_culling),
+				GEO_ASM(0, geo_mirror_mario_set_alpha),
+				GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
+				GEO_OPEN_NODE(),
+					GEO_NODE_START(),
+					GEO_OPEN_NODE(),
+						GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+						GEO_OPEN_NODE(),
+							GEO_NODE_START(),
+							GEO_OPEN_NODE(),
+								GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+								GEO_OPEN_NODE(),
+									GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_mesh),
+									GEO_OPEN_NODE(),
+										GEO_ASM(0, geo_move_mario_part_from_parent),
+										GEO_ASM(0, geo_mario_tilt_torso),
+										GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_000_offset_001_mesh),
+											GEO_OPEN_NODE(),
+												GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+												GEO_OPEN_NODE(),
+													GEO_ASM(0, geo_mario_head_rotation),
+													GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+													GEO_OPEN_NODE(),
+														GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+														GEO_OPEN_NODE(),
+															GEO_NODE_START(),
+															GEO_OPEN_NODE(),
+																GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+																GEO_OPEN_NODE(),
+																	GEO_NODE_START(),
+																	GEO_OPEN_NODE(),
+																		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh),
+																	GEO_CLOSE_NODE(),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6),
+																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7),
+																GEO_CLOSE_NODE(),
+															GEO_CLOSE_NODE(),
+															GEO_BRANCH(1, mario_armature_002_switch_option_002),
+														GEO_CLOSE_NODE(),
+														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
+														GEO_OPEN_NODE(),
+															GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+															GEO_OPEN_NODE(),
+																GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_001_mesh),
+															GEO_CLOSE_NODE(),
+														GEO_CLOSE_NODE(),
+														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
+														GEO_OPEN_NODE(),
+															GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
+															GEO_OPEN_NODE(),
+																GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_002_mesh),
+															GEO_CLOSE_NODE(),
+														GEO_CLOSE_NODE(),
+													GEO_CLOSE_NODE(),
+												GEO_CLOSE_NODE(),
+												GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+												GEO_OPEN_NODE(),
+													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_003_mesh),
+													GEO_OPEN_NODE(),
+														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_004_mesh),
+														GEO_OPEN_NODE(),
+															GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+															GEO_OPEN_NODE(),
+																GEO_NODE_START(),
+																GEO_OPEN_NODE(),
+																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+																	GEO_OPEN_NODE(),
+																		GEO_ASM(1, geo_mario_hand_foot_scaler),
+																		GEO_SCALE(LAYER_FORCE, 65536),
+																		GEO_OPEN_NODE(),
+																			GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_003_mesh),
+																		GEO_CLOSE_NODE(),
+																	GEO_CLOSE_NODE(),
+																GEO_CLOSE_NODE(),
+																GEO_BRANCH(1, mario_right_hand_open_armature),
+															GEO_CLOSE_NODE(),
+														GEO_CLOSE_NODE(),
+													GEO_CLOSE_NODE(),
+												GEO_CLOSE_NODE(),
+												GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+												GEO_OPEN_NODE(),
+													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_006_mesh),
+													GEO_OPEN_NODE(),
+														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_007_mesh),
+														GEO_OPEN_NODE(),
+															GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+															GEO_OPEN_NODE(),
+																GEO_NODE_START(),
+																GEO_OPEN_NODE(),
+																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+																	GEO_OPEN_NODE(),
+																		GEO_ASM(0, geo_mario_hand_foot_scaler),
+																		GEO_SCALE(LAYER_FORCE, 65536),
+																		GEO_OPEN_NODE(),
+																			GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_004_mesh),
+																		GEO_CLOSE_NODE(),
+																		GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+																	GEO_CLOSE_NODE(),
+																GEO_CLOSE_NODE(),
+																GEO_BRANCH(1, mario_left_hand_open_armature),
+																GEO_BRANCH(1, mario_left_hand_peace_armature),
+																GEO_BRANCH(1, mario_left_hand_cap_armature),
+																GEO_BRANCH(1, mario_left_hand_wing_cap_armature),
+															GEO_CLOSE_NODE(),
+														GEO_CLOSE_NODE(),
+													GEO_CLOSE_NODE(),
+												GEO_CLOSE_NODE(),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_009_mesh),
+											GEO_OPEN_NODE(),
+												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_010_mesh),
+												GEO_OPEN_NODE(),
+													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_000_offset_011_mesh),
+												GEO_CLOSE_NODE(),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+										GEO_OPEN_NODE(),
+											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_012_mesh),
+											GEO_OPEN_NODE(),
+												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_013_mesh),
+												GEO_OPEN_NODE(),
+													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+													GEO_OPEN_NODE(),
+														GEO_ASM(2, geo_mario_hand_foot_scaler),
+														GEO_SCALE(LAYER_FORCE, 65536),
+														GEO_OPEN_NODE(),
+															GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_005_mesh),
+														GEO_CLOSE_NODE(),
+													GEO_CLOSE_NODE(),
+												GEO_CLOSE_NODE(),
+											GEO_CLOSE_NODE(),
+										GEO_CLOSE_NODE(),
+									GEO_CLOSE_NODE(),
+								GEO_CLOSE_NODE(),
+							GEO_CLOSE_NODE(),
+							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1),
+							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2),
+							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3),
+						GEO_CLOSE_NODE(),
+					GEO_CLOSE_NODE(),
+				GEO_CLOSE_NODE(),
+				GEO_ASM(1, geo_mirror_mario_backface_culling),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_material_revert_render_settings),
+		GEO_DISPLAY_LIST(LAYER_ALPHA, mario_material_revert_render_settings),
+		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_material_revert_render_settings),
+	GEO_CLOSE_NODE(),
+	GEO_END(),
 };
diff --git a/actors/mario/geo_header.h b/actors/mario/geo_header.h
new file mode 100644
index 0000000..a2ab617
--- /dev/null
+++ b/actors/mario/geo_header.h
@@ -0,0 +1,193 @@
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[];
+extern const GeoLayout mario_armature_002_switch_option_002[];
+extern const GeoLayout mario_right_hand_open_armature[];
+extern const GeoLayout mario_left_hand_open_armature[];
+extern const GeoLayout mario_left_hand_peace_armature[];
+extern const GeoLayout mario_left_hand_cap_armature[];
+extern const GeoLayout mario_left_hand_wing_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt1[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt2[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt3[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[];
+extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[];
+extern const GeoLayout mario_geo[];
+extern Vtx mario_000_offset_mesh_vtx_0[53];
+extern Gfx mario_000_offset_mesh_tri_0[];
+extern Vtx mario_000_offset_001_mesh_vtx_0[88];
+extern Gfx mario_000_offset_001_mesh_tri_0[];
+extern Vtx mario_000_offset_001_mesh_vtx_1[23];
+extern Gfx mario_000_offset_001_mesh_tri_1[];
+extern Vtx mario_000_offset_001_mesh_vtx_2[14];
+extern Gfx mario_000_offset_001_mesh_tri_2[];
+extern Vtx mario_000_displaylist_mesh_vtx_0[10];
+extern Gfx mario_000_displaylist_mesh_tri_0[];
+extern Vtx mario_000_displaylist_mesh_vtx_1[71];
+extern Gfx mario_000_displaylist_mesh_tri_1[];
+extern Vtx mario_000_displaylist_mesh_vtx_2[24];
+extern Gfx mario_000_displaylist_mesh_tri_2[];
+extern Vtx mario_000_displaylist_mesh_vtx_3[19];
+extern Gfx mario_000_displaylist_mesh_tri_3[];
+extern Vtx mario_000_displaylist_mesh_vtx_4[12];
+extern Gfx mario_000_displaylist_mesh_tri_4[];
+extern Vtx mario_000_displaylist_mesh_vtx_5[30];
+extern Gfx mario_000_displaylist_mesh_tri_5[];
+extern Vtx mario_000_displaylist_mesh_vtx_6[7];
+extern Gfx mario_000_displaylist_mesh_tri_6[];
+extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_0[85];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_0[];
+extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_1[26];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_1[];
+extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_2[12];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_2[];
+extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_3[75];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_3[];
+extern Vtx mario_000_displaylist_001_mesh_vtx_0[4];
+extern Gfx mario_000_displaylist_001_mesh_tri_0[];
+extern Vtx mario_000_displaylist_001_mesh_vtx_1[4];
+extern Gfx mario_000_displaylist_001_mesh_tri_1[];
+extern Vtx mario_000_displaylist_002_mesh_vtx_0[4];
+extern Gfx mario_000_displaylist_002_mesh_tri_0[];
+extern Vtx mario_000_displaylist_002_mesh_vtx_1[4];
+extern Gfx mario_000_displaylist_002_mesh_tri_1[];
+extern Vtx mario_000_offset_003_mesh_vtx_0[20];
+extern Gfx mario_000_offset_003_mesh_tri_0[];
+extern Vtx mario_000_offset_004_mesh_vtx_0[16];
+extern Gfx mario_000_offset_004_mesh_tri_0[];
+extern Vtx mario_000_displaylist_003_mesh_vtx_0[30];
+extern Gfx mario_000_displaylist_003_mesh_tri_0[];
+extern Vtx mario_002_switch_option_right_hand_open_mesh_vtx_0[42];
+extern Gfx mario_002_switch_option_right_hand_open_mesh_tri_0[];
+extern Vtx mario_000_offset_006_mesh_vtx_0[20];
+extern Gfx mario_000_offset_006_mesh_tri_0[];
+extern Vtx mario_000_offset_007_mesh_vtx_0[16];
+extern Gfx mario_000_offset_007_mesh_tri_0[];
+extern Vtx mario_000_displaylist_004_mesh_vtx_0[30];
+extern Gfx mario_000_displaylist_004_mesh_tri_0[];
+extern Vtx mario_002_switch_option_left_hand_open_mesh_vtx_0[42];
+extern Gfx mario_002_switch_option_left_hand_open_mesh_tri_0[];
+extern Vtx mario_004_switch_option_left_hand_peace_mesh_vtx_0[61];
+extern Gfx mario_004_switch_option_left_hand_peace_mesh_tri_0[];
+extern Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_0[47];
+extern Gfx mario_005_switch_option_left_hand_cap_mesh_tri_0[];
+extern Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_1[30];
+extern Gfx mario_005_switch_option_left_hand_cap_mesh_tri_1[];
+extern Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0[47];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_0[];
+extern Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_1[30];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_1[];
+extern Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_0[8];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0[];
+extern Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_1[8];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1[];
+extern Vtx mario_000_offset_009_mesh_vtx_0[17];
+extern Gfx mario_000_offset_009_mesh_tri_0[];
+extern Vtx mario_000_offset_010_mesh_vtx_0[12];
+extern Gfx mario_000_offset_010_mesh_tri_0[];
+extern Vtx mario_000_offset_011_mesh_vtx_0[23];
+extern Gfx mario_000_offset_011_mesh_tri_0[];
+extern Vtx mario_000_offset_012_mesh_vtx_0[17];
+extern Gfx mario_000_offset_012_mesh_tri_0[];
+extern Vtx mario_000_offset_013_mesh_vtx_0[12];
+extern Gfx mario_000_offset_013_mesh_tri_0[];
+extern Vtx mario_000_displaylist_005_mesh_vtx_0[23];
+extern Gfx mario_000_displaylist_005_mesh_tri_0[];
+
+extern Gfx mario_000_offset_mesh[];
+extern Gfx mario_000_offset_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_001_mesh[];
+extern Gfx mario_000_offset_001_mesh_mat_override_metal_0[];
+extern Gfx mario_000_displaylist_mesh[];
+extern Gfx mario_000_displaylist_mesh_mat_override_metal_0[];
+extern Gfx mario_000_displaylist_mesh_mat_override_face_1___eye_half_1[];
+extern Gfx mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2[];
+extern Gfx mario_000_displaylist_mesh_mat_override_face_7___eye_X_3[];
+extern Gfx mario_002_switch_option_head__no_cap__mesh[];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0[];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1[];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2[];
+extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3[];
+extern Gfx mario_000_displaylist_001_mesh[];
+extern Gfx mario_000_displaylist_001_mesh_mat_override_metal_0[];
+extern Gfx mario_000_displaylist_002_mesh[];
+extern Gfx mario_000_displaylist_002_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_003_mesh[];
+extern Gfx mario_000_offset_003_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_004_mesh[];
+extern Gfx mario_000_offset_004_mesh_mat_override_metal_0[];
+extern Gfx mario_000_displaylist_003_mesh[];
+extern Gfx mario_000_displaylist_003_mesh_mat_override_metal_0[];
+extern Gfx mario_002_switch_option_right_hand_open_mesh[];
+extern Gfx mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_006_mesh[];
+extern Gfx mario_000_offset_006_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_007_mesh[];
+extern Gfx mario_000_offset_007_mesh_mat_override_metal_0[];
+extern Gfx mario_000_displaylist_004_mesh[];
+extern Gfx mario_000_displaylist_004_mesh_mat_override_metal_0[];
+extern Gfx mario_002_switch_option_left_hand_open_mesh[];
+extern Gfx mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0[];
+extern Gfx mario_004_switch_option_left_hand_peace_mesh[];
+extern Gfx mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0[];
+extern Gfx mario_005_switch_option_left_hand_cap_mesh[];
+extern Gfx mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0[];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh[];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0[];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh[];
+extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_009_mesh[];
+extern Gfx mario_000_offset_009_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_010_mesh[];
+extern Gfx mario_000_offset_010_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_011_mesh[];
+extern Gfx mario_000_offset_011_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_012_mesh[];
+extern Gfx mario_000_offset_012_mesh_mat_override_metal_0[];
+extern Gfx mario_000_offset_013_mesh[];
+extern Gfx mario_000_offset_013_mesh_mat_override_metal_0[];
+extern Gfx mario_000_displaylist_005_mesh[];
+extern Gfx mario_000_displaylist_005_mesh_mat_override_metal_0[];
+extern Gfx mario_material_revert_render_settings[];
+
diff --git a/actors/mario/model.inc.c b/actors/mario/model.inc.c
index 191d533..03ca48f 100644
--- a/actors/mario/model.inc.c
+++ b/actors/mario/model.inc.c
@@ -1,6825 +1,5845 @@
-// Mario
+Gfx mario_metal_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_metal_rgba16[] = {
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x43, 0x8, 0x41, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x1, 0x8, 0x43, 0x8, 0x1, 0x10, 
+	0x43, 0x8, 0x43, 0x8, 0x1, 0x8, 0x1, 0x8, 0x43, 
+	0x18, 0xC5, 0x29, 0x7, 0x29, 0x9, 0x29, 0x5, 0x29, 
+	0x7, 0x20, 0xC5, 0x18, 0x85, 0x10, 0x41, 0x8, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x8, 0x43, 0x10, 0x85, 0x18, 
+	0xC5, 0x10, 0x85, 0x8, 0x41, 0x10, 0x43, 0x10, 0x43, 
+	0x10, 0x45, 0x10, 0x45, 0x8, 0x45, 0x0, 0x3, 0x8, 
+	0x45, 0x8, 0x45, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
+	0x1, 0x8, 0x83, 0x18, 0x43, 0x10, 0xC5, 0x18, 0x83, 
+	0x20, 0xC5, 0x20, 0xC3, 0x18, 0x83, 0x8, 0x1, 0x8, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x3, 
+	0x19, 0x7, 0x31, 0x4B, 0x29, 0x49, 0x29, 0x9, 0x21, 
+	0x7, 0x10, 0x45, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x41, 0x8, 
+	0x1, 0x8, 0x41, 0x18, 0x43, 0x18, 0x43, 0x8, 0x41, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x21, 0x9, 0x5A, 0xD7, 
+	0x5A, 0x53, 0x39, 0x8B, 0x20, 0x85, 0x20, 0x87, 0x10, 
+	0x41, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 
+	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 
+	0x1, 0x10, 0x1, 0x18, 0x43, 0x8, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x18, 0x1, 0x8, 0x1, 0x8, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 
+	0x20, 0x83, 0x28, 0xC7, 0x18, 0x43, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x18, 0xC7, 0x42, 0xF, 0x5A, 0x91, 
+	0x6A, 0x95, 0x51, 0xD1, 0x61, 0x91, 0x41, 0xD, 0x20, 
+	0x45, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 
+	0x1, 0x10, 0x1, 0x18, 0x3, 0x40, 0x47, 0x20, 0x1, 
+	0x0, 0x1, 0x8, 0x1, 0x8, 0x1, 0x10, 0x1, 0x8, 
+	0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 
+	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x18, 0x41, 0x28, 0xC7, 0x30, 
+	0x87, 0x18, 0x45, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x10, 0x43, 0x4A, 0x53, 0x7B, 0x19, 0x7A, 0x55, 
+	0x72, 0x15, 0x8B, 0x1F, 0x9B, 0x63, 0x93, 0x63, 0x61, 
+	0xD5, 0x38, 0x89, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 
+	0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 0x1, 0x18, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 
+	0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x1, 0x8, 0x1, 0x8, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x10, 0x41, 0x10, 0x41, 0x18, 0xC1, 
+	0x28, 0xC3, 0x10, 0x41, 0x0, 0x1, 0x10, 0x81, 0x28, 
+	0xC7, 0x31, 0x49, 0x28, 0xC5, 0x30, 0xC9, 0x10, 0x43, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x20, 0x85, 0x59, 0xD1, 0x82, 0x15, 0x8A, 0x17, 
+	0x89, 0x91, 0xAB, 0xE7, 0xBD, 0x33, 0xB4, 0x6D, 0x9B, 
+	0xE7, 0x41, 0xF, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x20, 0x85, 0x62, 0x8F, 0x49, 0xC9, 
+	0x31, 0x45, 0x28, 0xC1, 0x31, 0x3, 0x39, 0x87, 0x29, 
+	0x43, 0x39, 0x87, 0x52, 0x4B, 0x39, 0x49, 0x18, 0xC5, 
+	0x49, 0x4D, 0x30, 0xC9, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x31, 0xB, 0x71, 0x95, 0x91, 0xD1, 0xA2, 0xD1, 
+	0xAB, 0x51, 0xB3, 0x9D, 0xB4, 0x6D, 0xA4, 0x2B, 0x62, 
+	0x5B, 0x31, 0xB, 0x10, 0x3, 0x18, 0x45, 0x30, 0xCB, 
+	0x20, 0x45, 0x39, 0xD, 0x18, 0x43, 0x8, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x8, 0x41, 0x10, 0x81, 0x18, 0x81, 0x41, 0x87, 
+	0x4A, 0x9, 0x4A, 0x9, 0x52, 0x4B, 0x73, 0x11, 0x8B, 
+	0xD3, 0x7B, 0x53, 0x39, 0x45, 0x42, 0x5, 0x42, 0x5, 
+	0x18, 0x43, 0x10, 0x43, 0x41, 0xB, 0x38, 0xC7, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x38, 0xC9, 0x81, 0xD5, 0x9A, 0x19, 0xB3, 0xD7, 
+	0xC4, 0x9B, 0xAB, 0x5F, 0x9B, 0x63, 0x41, 0x4F, 0x20, 
+	0x47, 0x0, 0x1, 0x0, 0x1, 0x18, 0x45, 0x7A, 0x9F, 
+	0xB4, 0xB1, 0x8B, 0x61, 0x8B, 0x21, 0x7A, 0x9B, 0x30, 
+	0x45, 0x28, 0xC9, 0x18, 0x45, 0x8, 0x41, 0x0, 0x1, 
+	0x0, 0x1, 0x18, 0x5, 0x18, 0x89, 0x8, 0x47, 0x8, 
+	0x45, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x18, 0x81, 0x20, 0x81, 0x28, 0xC3, 
+	0x39, 0x85, 0x5A, 0x8B, 0x83, 0x93, 0x62, 0xCF, 0x52, 
+	0x4B, 0x83, 0xD1, 0x83, 0x93, 0x73, 0x11, 0x49, 0xC7, 
+	0x31, 0x85, 0x10, 0x81, 0x0, 0x1, 0x18, 0xC7, 0x61, 
+	0xCF, 0x49, 0x49, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x40, 0xC9, 0x79, 0x97, 0x91, 0xD7, 0xB3, 0xE5, 
+	0xBB, 0xE3, 0xA3, 0x23, 0x9A, 0x5F, 0x6A, 0x59, 0x51, 
+	0xD1, 0x41, 0x91, 0x28, 0xCB, 0x10, 0x1, 0x51, 0x95, 
+	0xB4, 0x6F, 0xC5, 0x75, 0xBC, 0xAB, 0xAC, 0x6B, 0x9B, 
+	0x21, 0x8A, 0x9B, 0x59, 0x91, 0x10, 0x43, 0x8, 0x1, 
+	0x0, 0x1, 0x8, 0x41, 0x10, 0x45, 0x10, 0x43, 0x8, 
+	0x43, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x41, 0x18, 0x83, 
+	0x21, 0x1, 0x49, 0xC9, 0x8B, 0x95, 0x8C, 0x15, 0x8B, 
+	0xD3, 0x83, 0x91, 0x73, 0x4F, 0x9C, 0x95, 0xA4, 0x55, 
+	0x6A, 0xCB, 0x19, 0x3, 0x8, 0x41, 0x0, 0x1, 0x0, 
+	0x1, 0x29, 0x9, 0x61, 0xCF, 0x39, 0x7, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x28, 0x87, 0x79, 0x95, 0x9A, 0x1D, 0xA2, 0xE3, 
+	0xB3, 0xA5, 0xA2, 0x61, 0x9A, 0x61, 0xAC, 0x6B, 0x94, 
+	0x6B, 0x8C, 0x69, 0x7B, 0x61, 0x6A, 0x59, 0x71, 0xD7, 
+	0x8A, 0x9D, 0xB3, 0xEB, 0xC4, 0x9D, 0xAB, 0xB, 0xA2, 
+	0xD7, 0x92, 0x5D, 0x71, 0x51, 0x38, 0x85, 0x41, 0xCB, 
+	0x31, 0x4B, 0x39, 0x8B, 0x4A, 0x51, 0x29, 0x4B, 0x10, 
+	0x43, 0x8, 0x41, 0x8, 0x41, 0x0, 0x1, 0x18, 0xC5, 
+	0x20, 0xC5, 0x18, 0xC5, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x10, 0x83, 0x10, 0x41, 0x29, 0x5, 
+	0x52, 0x49, 0x39, 0xC5, 0x39, 0x83, 0x31, 0x45, 0x52, 
+	0x9, 0x7B, 0x93, 0x94, 0x11, 0x94, 0x11, 0xAC, 0xD9, 
+	0xA4, 0x55, 0x94, 0x11, 0x4A, 0x4B, 0x8, 0x1, 0x8, 
+	0x41, 0x0, 0x1, 0x0, 0x1, 0x20, 0xC5, 0x61, 0xD3, 
+	0x18, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x8, 0x1, 0x58, 0xCD, 0x92, 0x1D, 0xB3, 0x69, 
+	0xAA, 0xDD, 0xAA, 0xCF, 0xA2, 0xDF, 0xB4, 0x6F, 0xAD, 
+	0xB5, 0xAD, 0x75, 0xAD, 0xB5, 0xB5, 0x73, 0xA3, 0x69, 
+	0x92, 0x1D, 0x9A, 0x1F, 0xBB, 0xEB, 0xC4, 0xDB, 0xBC, 
+	0x11, 0xB3, 0x9D, 0x99, 0xD7, 0x71, 0xD, 0x71, 0x4D, 
+	0x9C, 0x63, 0x73, 0x99, 0x6A, 0xD7, 0x5A, 0xD5, 0x39, 
+	0xCF, 0x8, 0x41, 0x8, 0x43, 0x10, 0x1, 0x29, 0x9, 
+	0x4A, 0x4F, 0x39, 0x8B, 0x10, 0xC3, 0x0, 0x1, 0x10, 
+	0x1, 0x18, 0x1, 0x10, 0x43, 0x39, 0xCD, 0x49, 0x89, 
+	0x18, 0x83, 0x29, 0x3, 0x19, 0x1, 0x18, 0x81, 0x10, 
+	0xC3, 0x8, 0x41, 0x18, 0xC1, 0x5A, 0x8D, 0x9C, 0x53, 
+	0xAC, 0xD9, 0xBD, 0x5F, 0xAD, 0x1B, 0x94, 0x15, 0x31, 
+	0x47, 0x30, 0xC7, 0x28, 0x45, 0x0, 0x1, 0x8, 0x1, 
+	0x39, 0x4D, 0x51, 0x4F, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x20, 0x45, 0x70, 0xCD, 0x9A, 0x61, 
+	0xA3, 0x25, 0xA2, 0x5D, 0xA2, 0x5D, 0xAB, 0xA7, 0xAD, 
+	0x35, 0xA5, 0x73, 0xA5, 0x75, 0xAD, 0x75, 0xBD, 0x73, 
+	0xAB, 0x27, 0x99, 0xD7, 0xAB, 0x15, 0xAB, 0x61, 0xBC, 
+	0x29, 0xB3, 0xA5, 0x9A, 0x1F, 0x89, 0x11, 0x81, 0x51, 
+	0x9A, 0x9D, 0x93, 0x1F, 0x6B, 0x17, 0x52, 0x51, 0x6B, 
+	0x19, 0x31, 0x8D, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 
+	0x31, 0x49, 0x39, 0x89, 0x31, 0x47, 0x10, 0x43, 0x29, 
+	0x7, 0x20, 0xC5, 0x20, 0x45, 0x0, 0x1, 0x18, 0x85, 
+	0x20, 0x85, 0x0, 0x41, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x8, 0x41, 0x20, 0x45, 0x30, 0xC5, 0x29, 0x5, 
+	0x7B, 0x51, 0x9C, 0x97, 0xAC, 0xDD, 0xA4, 0x9D, 0x94, 
+	0x57, 0x5A, 0x8D, 0x49, 0x47, 0x30, 0xC7, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x41, 0x49, 0x4F, 0x10, 0x5, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x40, 0x45, 0x79, 0xD, 
+	0x79, 0x99, 0x8A, 0x1B, 0x8A, 0x1D, 0x6A, 0x19, 0x83, 
+	0xA5, 0x94, 0xB1, 0x8C, 0xAD, 0x94, 0xF1, 0x94, 0xF1, 
+	0x94, 0x29, 0x8A, 0x1F, 0x9A, 0x1B, 0xAA, 0x99, 0x9A, 
+	0x5D, 0xAB, 0x69, 0xAB, 0x67, 0xAB, 0x25, 0x89, 0x99, 
+	0x89, 0x57, 0x9A, 0x9F, 0x71, 0x53, 0x40, 0xC9, 0x20, 
+	0x83, 0x10, 0x85, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 
+	0x10, 0x45, 0x51, 0x49, 0x7A, 0x4D, 0x7A, 0x4F, 0x69, 
+	0xD1, 0x72, 0x53, 0x93, 0x19, 0x82, 0xDB, 0x39, 0xB, 
+	0x18, 0x83, 0x20, 0xC5, 0x8, 0x43, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x8, 0x1, 0x28, 0x87, 0x38, 0xC7, 
+	0x49, 0xC5, 0x62, 0xCB, 0x93, 0xD5, 0x94, 0x59, 0x9C, 
+	0x5B, 0x94, 0x19, 0x83, 0x91, 0x73, 0xB, 0x41, 0x87, 
+	0x0, 0x41, 0x0, 0x1, 0x0, 0x1, 0x20, 0x45, 0x18, 
+	0x45, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x50, 0x87, 
+	0x81, 0x91, 0x61, 0x51, 0x20, 0x47, 0x28, 0x87, 0x10, 
+	0x45, 0x41, 0x4F, 0x41, 0xD5, 0x29, 0x91, 0x31, 0x93, 
+	0x52, 0x17, 0x31, 0xF, 0x20, 0x87, 0x49, 0xF, 0x48, 
+	0xCF, 0x61, 0x93, 0x59, 0x53, 0x7A, 0x19, 0x9A, 0xA3, 
+	0x89, 0x55, 0x78, 0xCB, 0x68, 0x87, 0x68, 0x8B, 0x60, 
+	0x8D, 0x38, 0xC7, 0x10, 0x43, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x3, 0x30, 0x47, 0x59, 0xB, 0x59, 
+	0xB, 0x59, 0xF, 0x7A, 0x17, 0x93, 0x19, 0x82, 0x99, 
+	0x28, 0xC7, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
+	0x1, 0x0, 0x41, 0x10, 0x3, 0x18, 0x45, 0x20, 0xC5, 
+	0x62, 0x4F, 0x9C, 0x57, 0xAC, 0x97, 0xAC, 0xDB, 0xBD, 
+	0x69, 0xAC, 0xDF, 0xBD, 0xA7, 0xB5, 0x21, 0xBC, 0xDB, 
+	0x94, 0x1B, 0x39, 0x7, 0x18, 0x85, 0x0, 0x3, 0x18, 
+	0x41, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x48, 0x45, 0x89, 0xD5, 0x49, 0x51, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x8, 0x3, 0x8, 0x3, 0x10, 0xC9, 
+	0x8, 0x3, 0x10, 0x3, 0x0, 0x3, 0x0, 0x1, 0x0, 
+	0x1, 0x8, 0x3, 0x0, 0x1, 0x8, 0x3, 0x38, 0xCB, 
+	0x8A, 0xE3, 0x91, 0xD9, 0x81, 0xB, 0x68, 0x87, 0x70, 
+	0x8D, 0x70, 0xCF, 0x58, 0xCF, 0x18, 0x43, 0x8, 0x3, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x28, 
+	0xC3, 0x39, 0x3, 0x28, 0xC5, 0x18, 0x43, 0x20, 0x85, 
+	0x18, 0x85, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 
+	0x45, 0x8, 0x41, 0x18, 0x45, 0x51, 0x4D, 0x9B, 0xA1, 
+	0x7B, 0x1B, 0x83, 0x19, 0xB5, 0x27, 0xC5, 0xAB, 0xC5, 
+	0xA3, 0xC5, 0xA5, 0xC5, 0xA9, 0xC5, 0xA5, 0xC5, 0x63, 
+	0xC5, 0xEB, 0x93, 0xDF, 0x7A, 0x97, 0x49, 0x4D, 0x0, 
+	0x41, 0x18, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x40, 0x3, 0x79, 0x11, 0x41, 0xD, 0x8, 
+	0x43, 0x0, 0x3, 0x0, 0x1, 0x8, 0x3, 0x20, 0x47, 
+	0x18, 0x87, 0x28, 0xC7, 0x20, 0x47, 0x10, 0x43, 0x8, 
+	0x3, 0x0, 0x3, 0x8, 0x47, 0x0, 0x43, 0x0, 0x1, 
+	0x8, 0x1, 0x28, 0xC7, 0x7A, 0x17, 0x8A, 0x5D, 0x71, 
+	0xD7, 0x59, 0xF, 0x40, 0xC9, 0x38, 0x87, 0x20, 0x87, 
+	0x10, 0x3, 0x0, 0x1, 0x18, 0x1, 0x18, 0x1, 0x10, 
+	0x85, 0x41, 0x4B, 0x39, 0x85, 0x28, 0xC5, 0x8, 0x41, 
+	0x8, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x3, 0x20, 0xC5, 0x19, 0x7, 0x39, 0x9, 0x9B, 0xA1, 
+	0xC5, 0xF5, 0xAC, 0xE9, 0xA3, 0xE3, 0xB5, 0x6F, 0xC5, 
+	0xB1, 0xCE, 0x2D, 0xCE, 0x31, 0xCE, 0x33, 0xCE, 0x2F, 
+	0xCD, 0xEB, 0xBD, 0x6B, 0x9C, 0x23, 0xA4, 0x25, 0x49, 
+	0x8F, 0x8, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x30, 0x7, 0x79, 0x11, 0x40, 
+	0xCB, 0x0, 0x3, 0x8, 0x45, 0x8, 0x5, 0x18, 0x45, 
+	0x30, 0xC9, 0x31, 0x8D, 0x31, 0x4B, 0x29, 0x4B, 0x28, 
+	0xCD, 0x20, 0x89, 0x8, 0x45, 0x8, 0x5, 0x8, 0x43, 
+	0x0, 0x1, 0x0, 0x1, 0x31, 0x49, 0x52, 0x4D, 0x52, 
+	0xD, 0x29, 0x7, 0x18, 0x85, 0x28, 0x85, 0x20, 0x85, 
+	0x10, 0x43, 0x10, 0x45, 0x18, 0x43, 0x20, 0x85, 0x39, 
+	0x5, 0x49, 0xCF, 0x5A, 0x51, 0x29, 0x89, 0x31, 0x49, 
+	0x10, 0x83, 0x18, 0x43, 0x8, 0x41, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x18, 0x83, 0x39, 0x8B, 0x4A, 0x11, 
+	0x8C, 0x63, 0xAD, 0x2B, 0xAD, 0x2D, 0xB5, 0xB3, 0xCE, 
+	0x37, 0xD6, 0x7B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 
+	0xD6, 0xBB, 0xCE, 0x35, 0xB5, 0x6F, 0xAC, 0x69, 0xB5, 
+	0x2F, 0x51, 0x8D, 0x10, 0x45, 0x8, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x18, 0x5, 0x79, 
+	0x97, 0x71, 0xD7, 0x10, 0x45, 0x0, 0x1, 0x0, 0x3, 
+	0x18, 0x47, 0x29, 0x4F, 0x29, 0xD, 0x19, 0xB, 0x18, 
+	0xCD, 0x29, 0x91, 0x21, 0xF, 0x29, 0x11, 0x20, 0xCB, 
+	0x8, 0x45, 0x0, 0x3, 0x10, 0x87, 0x31, 0x4F, 0x4A, 
+	0xF, 0x52, 0x91, 0x31, 0x49, 0x18, 0xC7, 0x30, 0xC7, 
+	0x31, 0x7, 0x31, 0x9, 0x21, 0xD, 0x18, 0x45, 0x10, 
+	0x83, 0x28, 0xC9, 0x62, 0xD5, 0x73, 0x19, 0x5A, 0x91, 
+	0x42, 0xB, 0x10, 0x85, 0x18, 0x83, 0x18, 0x85, 0x10, 
+	0x83, 0x10, 0x83, 0x18, 0x43, 0x28, 0x45, 0x41, 0x8D, 
+	0x7B, 0xA1, 0xAD, 0x2F, 0xBD, 0xF5, 0xCE, 0x39, 0xD6, 
+	0xBB, 0xD6, 0x7B, 0xCE, 0x7B, 0xD6, 0x7B, 0xCE, 0xBB, 
+	0xD6, 0x7B, 0xD6, 0xBB, 0xCE, 0x7B, 0xB5, 0x2F, 0xAD, 
+	0x2B, 0x7B, 0x9D, 0x28, 0xC7, 0x0, 0x1, 0x8, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x49, 0xF, 0x82, 0x5B, 0x39, 0x9, 0x0, 0x1, 
+	0x8, 0x3, 0x18, 0xCB, 0x21, 0xF, 0x29, 0x53, 0x19, 
+	0x4F, 0x10, 0x8B, 0x19, 0x51, 0x21, 0x4F, 0x29, 0x53, 
+	0x29, 0x11, 0x20, 0xCB, 0x10, 0x8B, 0x21, 0xD, 0x21, 
+	0x51, 0x21, 0xF, 0x52, 0x51, 0x4A, 0xF, 0x29, 0xB, 
+	0x31, 0x9, 0x28, 0xC7, 0x21, 0xB, 0x18, 0xC9, 0x10, 
+	0x85, 0x8, 0x1, 0x28, 0xC7, 0x62, 0x55, 0x7A, 0x93, 
+	0x51, 0xCD, 0x39, 0x49, 0x21, 0x7, 0x20, 0xC7, 0x3A, 
+	0xD, 0x29, 0x9, 0x20, 0xC7, 0x18, 0x85, 0x29, 0xB, 
+	0x6A, 0x9B, 0xAC, 0xEF, 0xC6, 0x3B, 0xCE, 0x7B, 0xC6, 
+	0x7B, 0xC6, 0x7D, 0xBE, 0x7B, 0xC6, 0x7B, 0xCE, 0x7B, 
+	0xC6, 0x7D, 0xCE, 0x7B, 0xD6, 0xBB, 0xCE, 0x79, 0xAC, 
+	0xED, 0x7C, 0x1F, 0x31, 0x49, 0x10, 0x3, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x10, 0x3, 0x41, 0xD, 0x51, 0x8D, 
+	0x29, 0x7, 0x8, 0x43, 0x10, 0x45, 0x20, 0x8D, 0x21, 
+	0x51, 0x29, 0x51, 0x21, 0xF, 0x21, 0x4D, 0x21, 0xD, 
+	0x10, 0xCB, 0x21, 0xF, 0x19, 0xF, 0x21, 0x53, 0x29, 
+	0x51, 0x29, 0x95, 0x31, 0xD7, 0x4A, 0x55, 0x39, 0xCB, 
+	0x29, 0x7, 0x21, 0x5, 0x18, 0x43, 0x18, 0xC9, 0x4A, 
+	0x55, 0x29, 0xB, 0x20, 0xC7, 0x20, 0x87, 0x69, 0x93, 
+	0x79, 0x91, 0x59, 0x91, 0x69, 0xD5, 0x51, 0x91, 0x30, 
+	0xC9, 0x41, 0x8B, 0x39, 0xCD, 0x49, 0xD1, 0x31, 0xD, 
+	0x4A, 0x57, 0x9C, 0xF1, 0xA5, 0xF9, 0xA6, 0x3B, 0xAD, 
+	0xFB, 0xA5, 0xF9, 0xAE, 0x3B, 0xAD, 0xFB, 0xB6, 0x39, 
+	0xB6, 0x3B, 0xC6, 0x7B, 0xC6, 0x7D, 0xD6, 0xBB, 0xBD, 
+	0xF5, 0x8C, 0x27, 0x4A, 0x51, 0x10, 0x43, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x43, 
+	0x20, 0x45, 0x39, 0x47, 0x42, 0xB, 0x18, 0xC9, 0x10, 
+	0x47, 0x20, 0x8B, 0x21, 0x51, 0x19, 0xF, 0x18, 0x89, 
+	0x18, 0xC9, 0x21, 0x4F, 0x31, 0x95, 0x3A, 0x17, 0x39, 
+	0xD9, 0x3A, 0x59, 0x42, 0x19, 0x42, 0x5B, 0x62, 0xDF, 
+	0x7B, 0x1D, 0x7B, 0x1D, 0x62, 0x13, 0x39, 0x4B, 0x41, 
+	0xD5, 0x42, 0x11, 0x41, 0x8D, 0x49, 0x8F, 0x59, 0x91, 
+	0x59, 0x91, 0x59, 0x91, 0x5A, 0x17, 0x83, 0x63, 0x8C, 
+	0x2D, 0x83, 0xA5, 0x7A, 0x9B, 0x72, 0x59, 0x82, 0x5F, 
+	0x6A, 0xE1, 0x7C, 0x2D, 0x7D, 0x35, 0x85, 0x35, 0x7D, 
+	0x77, 0x7D, 0x37, 0x7D, 0x35, 0x7D, 0x37, 0x85, 0x77, 
+	0x9D, 0xB9, 0xAE, 0x39, 0xBE, 0x3B, 0xC6, 0x7D, 0xCE, 
+	0x79, 0x94, 0x27, 0x39, 0xCF, 0x10, 0x43, 0x8, 0x41, 
+	0x10, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x18, 0x43, 0x31, 0x49, 0x41, 
+	0xCD, 0x29, 0x4F, 0x21, 0x11, 0x21, 0xF, 0x19, 0xF, 
+	0x21, 0x11, 0x29, 0x93, 0x5B, 0x1F, 0xA5, 0x73, 0xA5, 
+	0x73, 0xA5, 0x75, 0xAD, 0xB3, 0xB5, 0xB7, 0xB5, 0xF9, 
+	0xBE, 0x37, 0xA5, 0x33, 0xB5, 0xB5, 0xBD, 0x75, 0xA4, 
+	0xF1, 0x7B, 0xA3, 0x39, 0xCF, 0x51, 0x95, 0x82, 0xDD, 
+	0x7A, 0x9F, 0x8B, 0x25, 0x83, 0x23, 0x7B, 0xA7, 0x7C, 
+	0x71, 0x6C, 0xF3, 0x6C, 0xF5, 0x6C, 0xB1, 0x64, 0x31, 
+	0x64, 0x71, 0x5C, 0x31, 0x54, 0x71, 0x54, 0x71, 0x4C, 
+	0x31, 0x4C, 0x2F, 0x43, 0xF1, 0x4C, 0x2F, 0x54, 0x71, 
+	0x7D, 0x37, 0x8D, 0xB9, 0xA5, 0xF9, 0xB6, 0x39, 0xAC, 
+	0xF1, 0x83, 0xA1, 0x39, 0x4D, 0x10, 0x1, 0x0, 0x41, 
+	0x10, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 
+	0x41, 0x18, 0xC5, 0x39, 0x8D, 0x31, 0x8F, 0x21, 0xD, 
+	0x19, 0xD, 0x31, 0xD9, 0x29, 0x95, 0x4A, 0x5B, 0xAD, 
+	0xB5, 0xC6, 0xBD, 0xC6, 0x7D, 0xCE, 0xBB, 0xC6, 0x7D, 
+	0xCE, 0xBD, 0xC6, 0xBD, 0xCE, 0x7B, 0xBE, 0x3B, 0xC6, 
+	0x7D, 0xBD, 0xF9, 0xA4, 0xEF, 0x83, 0xE9, 0x6B, 0x65, 
+	0x84, 0xB1, 0x6C, 0xB3, 0x6C, 0xB3, 0x64, 0xF5, 0x5C, 
+	0x71, 0x54, 0x73, 0x54, 0x71, 0x43, 0xF1, 0x4C, 0x2F, 
+	0x43, 0xED, 0x3B, 0xAF, 0x3B, 0xAB, 0x33, 0x6D, 0x33, 
+	0x6B, 0x33, 0x2B, 0x2B, 0x6B, 0x3B, 0x6D, 0x44, 0x2F, 
+	0x64, 0xB3, 0x7D, 0x77, 0x95, 0xB9, 0xA5, 0xB7, 0x8C, 
+	0x27, 0x41, 0x91, 0x20, 0x87, 0x8, 0x1, 0x8, 0x1, 
+	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x10, 0x3, 0x18, 0x85, 0x29, 0x7, 
+	0x31, 0x8B, 0x41, 0xD3, 0x3A, 0x19, 0x31, 0xD5, 0x31, 
+	0x95, 0x7C, 0x29, 0xBE, 0x7B, 0xCE, 0x7B, 0xC6, 0xBD, 
+	0xCE, 0x7D, 0xCE, 0xBD, 0xC6, 0x7D, 0xCE, 0xBD, 0xBE, 
+	0x7D, 0xB6, 0x3B, 0xB6, 0x3B, 0xAD, 0xF9, 0x9D, 0xF9, 
+	0x85, 0x77, 0x7D, 0x35, 0x74, 0xF5, 0x5C, 0x73, 0x54, 
+	0x31, 0x4C, 0x2F, 0x43, 0xEF, 0x43, 0xAD, 0x3B, 0x6D, 
+	0x3B, 0xAD, 0x33, 0x2B, 0x33, 0x69, 0x3B, 0x2B, 0x33, 
+	0x2B, 0x2B, 0x29, 0x33, 0x6B, 0x33, 0xAD, 0x4B, 0xEF, 
+	0x5C, 0xB3, 0x7C, 0xF3, 0x73, 0xE7, 0x5B, 0x21, 0x4A, 
+	0x55, 0x29, 0x9, 0x18, 0x87, 0x10, 0x41, 0x8, 0x41, 
+	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x20, 0x85, 0x31, 0x9, 0x39, 0xCF, 0x39, 
+	0x8F, 0x3A, 0xF, 0x52, 0x15, 0x9C, 0xAD, 0xBD, 0xF9, 
+	0xBD, 0xF9, 0xC6, 0x79, 0xC6, 0x7D, 0xCE, 0x7B, 0xBE, 
+	0xBD, 0xBE, 0x3B, 0xAE, 0x3B, 0xA5, 0xF9, 0x9D, 0xB9, 
+	0x8D, 0x77, 0x8D, 0x77, 0x8D, 0x77, 0x7D, 0x35, 0x6C, 
+	0xB3, 0x5C, 0x31, 0x5C, 0x31, 0x54, 0x2F, 0x4B, 0xEF, 
+	0x43, 0xAD, 0x3B, 0x6D, 0x3B, 0x29, 0x33, 0x2B, 0x33, 
+	0x6B, 0x3B, 0xAD, 0x3B, 0xAD, 0x43, 0xEF, 0x64, 0x31, 
+	0x6B, 0xEB, 0x6B, 0x23, 0x62, 0x9B, 0x39, 0x4D, 0x21, 
+	0x7, 0x10, 0x85, 0x31, 0x7, 0x21, 0x7, 0x8, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x18, 
+	0x83, 0x29, 0x7, 0x28, 0xC7, 0x31, 0x7, 0x41, 0x8D, 
+	0x6A, 0xDB, 0x8B, 0xE5, 0xA4, 0xEF, 0xB5, 0xB5, 0xC6, 
+	0x3B, 0xBE, 0x7B, 0xBD, 0xFB, 0xB5, 0xF9, 0xA5, 0xF9, 
+	0x9D, 0xF9, 0x95, 0x77, 0x85, 0x77, 0x85, 0x37, 0x7D, 
+	0x35, 0x64, 0x73, 0x5C, 0x71, 0x54, 0x2F, 0x4B, 0xF1, 
+	0x43, 0xED, 0x3B, 0xAD, 0x43, 0xAF, 0x43, 0xAD, 0x43, 
+	0xEF, 0x4C, 0x2F, 0x54, 0x71, 0x64, 0x2F, 0x73, 0xA9, 
+	0x6A, 0x5B, 0x59, 0xD1, 0x41, 0x91, 0x41, 0xCD, 0x29, 
+	0x49, 0x18, 0x85, 0x18, 0x81, 0x8, 0x41, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x8, 0x1, 0x18, 0x85, 0x20, 0x87, 
+	0x21, 0x9, 0x20, 0xC9, 0x29, 0x9, 0x29, 0xB, 0x49, 
+	0xD1, 0x73, 0x61, 0x94, 0x6D, 0x83, 0xE5, 0x6B, 0x1D, 
+	0x6A, 0xDF, 0x73, 0x63, 0x7C, 0x2B, 0x84, 0xB3, 0x7C, 
+	0xB3, 0x6C, 0xF3, 0x6C, 0xB3, 0x5C, 0x73, 0x5C, 0x71, 
+	0x5C, 0x71, 0x5C, 0x71, 0x5C, 0x31, 0x64, 0x71, 0x64, 
+	0xB3, 0x74, 0xB3, 0x7C, 0xB1, 0x7B, 0xA7, 0x59, 0xD3, 
+	0x41, 0x4D, 0x31, 0x49, 0x21, 0x7, 0x10, 0x83, 0x20, 
+	0xC5, 0x10, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x3, 0x10, 0x85, 0x18, 0x47, 0x18, 
+	0x85, 0x18, 0x87, 0x29, 0x8D, 0x4A, 0x15, 0x42, 0x13, 
+	0x39, 0x8F, 0x31, 0x49, 0x41, 0x91, 0x5A, 0x15, 0x6A, 
+	0x57, 0x6A, 0x19, 0x72, 0x5B, 0x72, 0x5F, 0x7B, 0x1F, 
+	0x6A, 0x5D, 0x62, 0x57, 0x6A, 0x5B, 0x62, 0x9B, 0x62, 
+	0x9B, 0x7B, 0x1F, 0x72, 0xDD, 0x59, 0xD5, 0x41, 0x8D, 
+	0x39, 0x4B, 0x39, 0x8B, 0x21, 0x5, 0x10, 0x43, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x8, 0x1, 0x8, 0x1, 0x8, 0x43, 
+	0x10, 0x3, 0x18, 0x83, 0x18, 0x85, 0x20, 0xC7, 0x20, 
+	0x85, 0x10, 0x43, 0x20, 0x87, 0x41, 0x4D, 0x59, 0x91, 
+	0x62, 0x15, 0x6A, 0x13, 0x6A, 0x13, 0x62, 0x11, 0x5A, 
+	0xF, 0x52, 0xF, 0x41, 0x8F, 0x39, 0x89, 0x18, 0xC5, 
+	0x10, 0x43, 0x0, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x43, 
+	0x10, 0x43, 0x10, 0x85, 0x18, 0x85, 0x10, 0x85, 0x8, 
+	0x43, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 
+};
+
+Gfx mario_mario_button_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_button_rgba16[] = {
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0xF7, 0x41, 0xF7, 0x1, 0xF7, 0x1, 0xF7, 0x1, 0xF7, 
+	0x1, 0xF6, 0xC1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0xF7, 0x1, 0xF7, 0x1, 0xF7, 
+	0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x1, 0xF7, 0x41, 0xF7, 
+	0x1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x41, 0xF7, 0x1, 0xF7, 0x41, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0xF7, 0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x1, 
+	0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF7, 
+	0x41, 0xF7, 0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x41, 0xF6, 0xC1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x1, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF7, 
+	0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x41, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF7, 0x1, 
+	0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF6, 
+	0xC1, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x41, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0xF6, 0xC1, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x41, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF6, 
+	0x81, 0xF6, 0x81, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x1, 0xF7, 0x1, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0xF6, 0x1, 0xF6, 0x41, 0xF6, 0xC1, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x1, 0xF6, 0xC1, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0xF5, 0xC1, 0xF5, 0xC1, 0xF6, 0x81, 0xF7, 0x41, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF6, 0xC1, 0xF6, 
+	0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0xED, 0x41, 0xE5, 0x1, 0xF5, 0xC1, 0xF6, 
+	0xC1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF6, 0xC1, 
+	0xF6, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0xE5, 0x1, 0xDC, 0x81, 0xDD, 0x1, 
+	0xF6, 0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF6, 
+	0x81, 0xF6, 0x81, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0xE5, 0x1, 0xDC, 0x81, 0xDC, 
+	0xC1, 0xED, 0x81, 0xF6, 0xC1, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF6, 0xC1, 
+	0xED, 0x81, 0xF6, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 0xC1, 0xDC, 0x81, 
+	0xD4, 0x81, 0xCC, 0x81, 0xDD, 0x41, 0xF7, 0x1, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF6, 0xC1, 0xE5, 
+	0x81, 0xDD, 0x1, 0xF6, 0x5, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xE5, 
+	0x41, 0xDC, 0x81, 0xCC, 0x41, 0xC4, 0x41, 0xDD, 0x41, 
+	0xF6, 0xC1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x1, 0xEE, 0x1, 0xDD, 0x41, 
+	0xD4, 0xC1, 0xDD, 0x41, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0xE5, 0x41, 0xE4, 0xC1, 0xD4, 0x81, 0xC4, 0x1, 0xBC, 
+	0x1, 0xCC, 0xC1, 0xE6, 0x1, 0xF7, 0x41, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
+	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF6, 0x81, 0xDD, 0x81, 0xCC, 0xC1, 0xCC, 
+	0x41, 0xD4, 0x81, 0xE5, 0x81, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0xED, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xD4, 0x81, 
+	0xBB, 0xC1, 0xB3, 0xC1, 0xC4, 0x41, 0xD5, 0x1, 0xEE, 
+	0x1, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
+	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x1, 0xEE, 0x41, 0xDD, 
+	0x81, 0xD5, 0x41, 0xCC, 0xC1, 0xC4, 0x81, 0xC4, 0x41, 
+	0xCC, 0x81, 0xDC, 0xC1, 0xF6, 0x3, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0xF5, 0xC1, 0xE4, 0xC1, 0xE4, 
+	0xC1, 0xD4, 0x41, 0xBB, 0xC1, 0xB3, 0xC1, 0xB3, 0xC1, 
+	0xBC, 0x1, 0xC4, 0x81, 0xCC, 0xC1, 0xD5, 0x1, 0xD5, 
+	0x41, 0xD5, 0x1, 0xCC, 0xC1, 0xC4, 0x81, 0xBC, 0x1, 
+	0xB3, 0xC1, 0xB4, 0x1, 0xBC, 0x1, 0xC4, 0x41, 0xD4, 
+	0x81, 0xDC, 0xC1, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 0x41, 
+	0xE4, 0xC1, 0xE4, 0xC1, 0xD4, 0x81, 0xC4, 0x1, 0xBB, 
+	0xC1, 0xB3, 0x81, 0xAB, 0x81, 0xAB, 0x81, 0xB3, 0x81, 
+	0xB3, 0xC1, 0xB3, 0x81, 0xB3, 0x81, 0xB3, 0xC1, 0xB3, 
+	0xC1, 0xBC, 0x1, 0xCC, 0x41, 0xD4, 0xC1, 0xDC, 0xC1, 
+	0xE5, 0x1, 0xED, 0x41, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 
+	0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xDC, 0xC1, 
+	0xD4, 0x81, 0xCC, 0x41, 0xC4, 0x1, 0xBC, 0x1, 0xBC, 
+	0x1, 0xBC, 0x1, 0xBC, 0x1, 0xC4, 0x41, 0xCC, 0x81, 
+	0xD4, 0xC1, 0xDD, 0x1, 0xE5, 0x1, 0xED, 0x1, 0xED, 
+	0x1, 0xEC, 0xC1, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0xED, 0xC1, 0xED, 0x41, 0xE4, 0xC1, 0xE4, 
+	0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xDC, 0xC1, 0xDC, 0xC1, 
+	0xDC, 0xC1, 0xDC, 0xC1, 0xE5, 0x1, 0xE5, 0x1, 0xED, 
+	0x41, 0xED, 0x41, 0xF5, 0x41, 0xF5, 0x41, 0xED, 0x1, 
+	0xF5, 0x81, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 0xC1, 
+	0xDC, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE5, 
+	0x1, 0xED, 0x1, 0xED, 0x1, 0xED, 0x1, 0xED, 0x41, 
+	0xF5, 0x41, 0xED, 0x1, 0xED, 0x1, 0xED, 0x1, 0xF6, 
+	0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0xED, 0xC1, 0xE5, 0x1, 0xE5, 0x1, 0xE4, 0xC1, 
+	0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 
+	0xC1, 0xEC, 0xC1, 0xED, 0x41, 0xED, 0x41, 0xF5, 0xC1, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 
+	0xC1, 0xE5, 0x1, 0xED, 0x41, 0xED, 0x41, 0xED, 0x41, 
+	0xED, 0x41, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
+	0x3F, 0x0, 0x3F, 0x0, 0x3F, 
+};
+
+Gfx mario_mario_face_1_ci8_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_face_1_ci8[] = {
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x1, 0x2, 0x2, 0x2, 0x3, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x2, 0x2, 0x2, 0x2, 0x1, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x2, 0x2, 
+	0x2, 0x2, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x2, 
+	0x2, 0x2, 0x2, 0x2, 0x4, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x5, 0x2, 0x6, 0x0, 0x0, 0x0, 0x7, 0x2, 
+	0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x9, 0x2, 0xA, 0x0, 0x0, 0x0, 0x6, 
+	0x2, 0xA, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 
+	0xC, 0xD, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0xC, 0xC, 0xC, 
+	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0xC, 0xC, 0xC, 0xC, 0x10, 0x11, 0x12, 0x13, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x14, 0x15, 0x16, 0xC, 0xC, 0xC, 0xC, 0xC, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
+	0x17, 0x18, 0x19, 0x1A, 0x1B, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x14, 0x1A, 0x1A, 0x1C, 0x1D, 
+	0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0xC, 0xC, 0xC, 0xC, 0x1E, 0x1F, 0x1B, 0x20, 
+	0x21, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x23, 
+	0x21, 0x24, 0x1B, 0x1A, 0x12, 0x25, 0xC, 0xC, 0xC, 
+	0xC, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
+	0x26, 0x18, 0x1B, 0x27, 0x28, 0x29, 0x2A, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x2B, 0x2C, 0x2D, 0x2E, 0x1B, 
+	0x19, 0x13, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 
+	0x0, 0xC, 0xC, 0xC, 0xC, 0x1D, 0x1A, 0x1B, 0x2F, 
+	0x2, 0x2, 0x2D, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x2F, 0x2, 0x2, 0x31, 0x32, 0x1A, 0x33, 0xC, 0xC, 
+	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 
+	0xC, 0x34, 0x1A, 0x24, 0x35, 0x2, 0x2, 0x2, 0x36, 
+	0x0, 0x0, 0x0, 0x0, 0x37, 0x2, 0x2, 0x2, 0x2, 
+	0x38, 0x1B, 0x14, 0xC, 0xC, 0xC, 0xC, 0xC, 0x0, 
+	0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 0x39, 0x1A, 0x3A, 
+	0x2, 0x2, 0x3B, 0x2, 0x3C, 0x0, 0x0, 0x0, 0x0, 
+	0x3D, 0x2, 0x3E, 0x2, 0x2, 0x3F, 0x40, 0x41, 0xD, 
+	0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0xC, 0xC, 0xC, 
+	0xC, 0xC, 0x42, 0x1A, 0x43, 0x2, 0x44, 0x45, 0x46, 
+	0x47, 0x0, 0x0, 0x0, 0x0, 0x48, 0x49, 0x45, 0x4A, 
+	0x2, 0x2F, 0x40, 0x18, 0x4B, 0xC, 0xC, 0xC, 0xC, 
+	0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 0x14, 0x40, 
+	0x4C, 0x2, 0x4D, 0xC, 0x4E, 0x4F, 0x0, 0x0, 0x0, 
+	0x0, 0x50, 0x51, 0xC, 0x52, 0x2, 0x2C, 0x53, 0x18, 
+	0x26, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0xC, 0xC, 
+	0xC, 0xC, 0xC, 0x54, 0x1A, 0x43, 0x2, 0x55, 0x4E, 
+	0x4D, 0x47, 0x0, 0x0, 0x0, 0x0, 0x56, 0x57, 0x4E, 
+	0x58, 0x2, 0x2F, 0x53, 0x15, 0xF, 0xC, 0xC, 0xC, 
+	0xC, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 0x33, 
+	0x1A, 0x38, 0x2, 0x2, 0x2, 0x2, 0x59, 0x0, 0x0, 
+	0x0, 0x0, 0x5A, 0x2, 0x35, 0x2, 0x2, 0x5B, 0x40, 
+	0x41, 0xD, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 
+	0xC, 0xC, 0xC, 0xC, 0x34, 0x1A, 0x5C, 0x35, 0x2, 
+	0x2, 0x2, 0x5D, 0x0, 0x0, 0x0, 0x0, 0x5E, 0x2, 
+	0x2, 0x2, 0x2, 0x5F, 0x60, 0x61, 0xC, 0xC, 0xC, 
+	0xC, 0xC, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
+	0x62, 0x1A, 0x53, 0x2C, 0x2, 0x2, 0x2, 0x63, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x2C, 0x2, 0x2, 0x35, 0x27, 
+	0x1A, 0x64, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 
+	0x0, 0xC, 0xC, 0xC, 0xC, 0x4B, 0x18, 0x1B, 0x65, 
+	0x2, 0x2, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x66, 0x2D, 0x2, 0x4C, 0x1B, 0x1A, 0x67, 0xC, 0xC, 
+	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 
+	0xC, 0xC, 0x33, 0x1F, 0x1B, 0x68, 0x69, 0x61, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x6A, 0x6B, 0x53, 
+	0x1A, 0x11, 0xF, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0x26, 0x18, 
+	0x1C, 0x1A, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x11, 0x6C, 0x1A, 0x1C, 0x62, 0xC, 0xC, 
+	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0xC, 0xC, 0xC, 0xC, 0x6D, 0x54, 0x6E, 0x67, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x17, 0x1E, 
+	0x61, 0x62, 0xC, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
+	0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 
+	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+};
+
+Gfx mario_mario_face_1_ci8_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_face_1_ci8_pal_rgba16[] = {
+	0xF5, 0xDD, 0x10, 0x45, 0x0, 0x1, 0x8, 0x1, 0x8, 
+	0x3, 0x21, 0x9, 0x39, 0x8D, 0x29, 0x4B, 0x18, 0x87, 
+	0x10, 0x43, 0x31, 0x4D, 0x18, 0x85, 0xF7, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0x7D, 0xE7, 0x7D, 0xB6, 0xBD, 0x33, 0xFB, 
+	0x2B, 0xB9, 0xA6, 0x3D, 0x3C, 0x3B, 0x23, 0xB9, 0x8D, 
+	0xBD, 0xC6, 0xFD, 0x23, 0x79, 0x13, 0x37, 0x13, 0x39, 
+	0x1B, 0x79, 0xA, 0xF7, 0x95, 0xFD, 0x54, 0xBD, 0x12, 
+	0xF7, 0x1A, 0xF5, 0xA, 0xB5, 0x44, 0x7D, 0x7D, 0x7D, 
+	0x12, 0xF3, 0xDF, 0x7D, 0xD7, 0x3D, 0x12, 0xB3, 0x0, 
+	0x51, 0x0, 0x11, 0x12, 0x6F, 0x33, 0xB5, 0x0, 0x97, 
+	0x0, 0x9, 0xA, 0x2B, 0x0, 0xDB, 0x85, 0x7D, 0x0, 
+	0xD, 0x12, 0xF5, 0x64, 0xFD, 0x75, 0x3D, 0x0, 0x3, 
+	0x53, 0xF3, 0x8D, 0x7B, 0x9, 0xE9, 0x5C, 0xFD, 0x9, 
+	0xEB, 0x0, 0x4B, 0x2A, 0xA7, 0x64, 0x73, 0x0, 0x4D, 
+	0x1, 0x21, 0x1B, 0x39, 0x2B, 0xBB, 0x4C, 0x7B, 0x9, 
+	0xA7, 0x19, 0x9B, 0xCE, 0xBD, 0x63, 0xEF, 0x11, 0x9F, 
+	0x4B, 0xAD, 0x2A, 0x1F, 0x4B, 0x69, 0xDF, 0x3D, 0x1, 
+	0xA5, 0x53, 0xAB, 0xB6, 0x3D, 0x9, 0x5D, 0x3A, 0xE9, 
+	0x6C, 0x2F, 0x9D, 0xB9, 0x1B, 0x37, 0x4C, 0x7D, 0x11, 
+	0x59, 0x43, 0x6D, 0x21, 0xDD, 0x43, 0x27, 0x22, 0x67, 
+	0x5C, 0x33, 0x1, 0x1F, 0x12, 0xB1, 0x4B, 0xB1, 0x85, 
+	0x3B, 0x9, 0xE7, 0x13, 0x79, 0x44, 0x3B, 0x9E, 0x3D, 
+	0x7D, 0x7B, 0x6D, 0x3D, 0xA, 0x2D, 0x23, 0x33, 0xAE, 
+	0x7D, 0x12, 0x71, 0xA, 0x2F, 0x2, 0x31, 0xA, 0x6D, 
+	0xB, 0x39, 0xBE, 0xBD, 0x44, 0x7B, 
+};
+
+Gfx mario_mario_mustache_ci4_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_mustache_ci4[] = {
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x11, 0x10, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x10, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x11, 
+	0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 
+	0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 
+	0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 
+	0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x11, 0x11, 0x11, 0x0, 0x11, 0x11, 0x11, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 
+	0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+};
+
+Gfx mario_mario_mustache_ci4_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_mustache_ci4_pal_rgba16[] = {
+	0xF5, 0xDD, 0x0, 0x1, 
+};
+
+Gfx mario_mario_sideburn_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_sideburn_rgba16[] = {
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x68, 0x1, 0x70, 0x1, 0x60, 
+	0x1, 0x58, 0x1, 0x48, 0x1, 0x48, 0x1, 0x40, 0x1, 
+	0x58, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xB0, 0x1, 0x78, 0x1, 0x78, 0x1, 
+	0x70, 0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x38, 
+	0x1, 0x30, 0x1, 0x28, 0x1, 0x20, 0x1, 0x28, 0x1, 
+	0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x80, 0x1, 0x80, 0x1, 0x78, 
+	0x1, 0x70, 0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x28, 
+	0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x78, 0x1, 0x80, 0x1, 
+	0x70, 0x1, 0x60, 0x1, 0x50, 0x1, 0x48, 0x1, 0x40, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 
+	0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x90, 0x1, 0x80, 0x1, 0x78, 
+	0x1, 0x70, 0x1, 0x58, 0x1, 0x50, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x28, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xA8, 0x1, 0x78, 0x1, 0x78, 0x1, 
+	0x70, 0x1, 0x60, 0x1, 0x50, 0x1, 0x48, 0x1, 0x40, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
+	0x28, 0x1, 0x50, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xA8, 0x1, 0x78, 0x1, 0x78, 0x1, 0x70, 
+	0x1, 0x60, 0x1, 0x50, 0x1, 0x48, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x78, 0x1, 
+	0x80, 0x1, 0x80, 0x1, 0x98, 0x1, 0xF5, 0xDD, 0xA8, 
+	0x1, 0x80, 0x1, 0x78, 0x1, 0x78, 0x1, 0x70, 0x1, 
+	0x60, 0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 
+	0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x88, 0x1, 0x70, 0x1, 0x78, 
+	0x1, 0x80, 0x1, 0x80, 0x1, 0x80, 0x1, 0x78, 0x1, 
+	0x78, 0x1, 0x78, 0x1, 0x78, 0x1, 0x70, 0x1, 0x60, 
+	0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x28, 0x1, 0x48, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x88, 0x1, 0x60, 0x1, 0x70, 0x1, 
+	0x78, 0x1, 0x80, 0x1, 0x80, 0x1, 0x80, 0x1, 0x78, 
+	0x1, 0x78, 0x1, 0x70, 0x1, 0x60, 0x1, 0x58, 0x1, 
+	0x50, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x58, 0x1, 0x58, 0x1, 0x60, 
+	0x1, 0x70, 0x1, 0x70, 0x1, 0x70, 0x1, 0x70, 0x1, 
+	0x68, 0x1, 0x60, 0x1, 0x58, 0x1, 0x50, 0x1, 0x48, 
+	0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x30, 0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x50, 0x1, 0x48, 0x1, 
+	0x50, 0x1, 0x58, 0x1, 0x58, 0x1, 0x58, 0x1, 0x58, 
+	0x1, 0x58, 0x1, 0x50, 0x1, 0x48, 0x1, 0x48, 0x1, 
+	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x20, 0x1, 0x50, 0x1, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x70, 0x1, 0x38, 
+	0x1, 0x48, 0x1, 0x48, 0x1, 0x48, 0x1, 0x48, 0x1, 
+	0x48, 0x1, 0x48, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 
+	0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x30, 0x1, 0x28, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 
+	0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x20, 0x1, 0x58, 0x1, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x50, 0x1, 0x70, 0x1, 0x88, 
+	0x1, 0x80, 0x1, 0x60, 0x1, 0x48, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 
+	0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x28, 0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x30, 0x1, 0x50, 0x1, 0x70, 0x1, 
+	0x78, 0x1, 0x78, 0x1, 0x60, 0x1, 0x48, 0x1, 0x40, 
+	0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 
+	0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x38, 0x1, 0x30, 0x1, 0x40, 0x1, 0x50, 
+	0x1, 0x58, 0x1, 0x58, 0x1, 0x50, 0x1, 0x40, 0x1, 
+	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 
+	0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x30, 0x1, 0x28, 0x1, 0x30, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 
+	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x28, 0x1, 
+	0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x30, 0x1, 0x28, 0x1, 0x30, 
+	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x38, 0x1, 
+	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 
+	0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 
+	0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x18, 0x1, 
+	0x28, 0x1, 0x28, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 
+	0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x20, 0x1, 
+	0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x30, 
+	0x1, 0x20, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 
+	0x28, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
+	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x28, 0x1, 
+	0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x20, 0x1, 0x58, 
+	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x40, 0x1, 0x18, 0x1, 0x20, 0x1, 0x20, 
+	0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 
+	0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x30, 0x1, 0x28, 
+	0x1, 0x28, 0x1, 0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x60, 0x1, 0x30, 0x1, 
+	0x18, 0x1, 0x20, 0x1, 0x20, 0x1, 0x28, 0x1, 0x28, 
+	0x1, 0x28, 0x1, 0x28, 0x1, 0x20, 0x1, 0x20, 0x1, 
+	0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x58, 0x1, 0x48, 0x1, 0x30, 0x1, 
+	0x38, 0x1, 0x30, 0x1, 0x38, 0x1, 0x58, 0x1, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+};
+
+Gfx mario_mario_logo_rgba16_ci8_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_logo_rgba16_ci8[] = {
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x2, 0x3, 0x4, 0x1, 0x1, 0x1, 0x5, 
+	0x6, 0x7, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
+	0x0, 0x8, 0x1, 0x9, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x5, 0x0, 0x0, 0x0, 0x0, 0x1, 0xA, 
+	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0xB, 0x0, 
+	0x0, 0x0, 0x0, 0xC, 0xD, 0x0, 0x0, 0x0, 0x0, 
+	0xE, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0xF, 0x0, 
+	0x0, 0x10, 0x11, 0x0, 0x0, 0x0, 0x0, 0x12, 0x0, 
+	0x0, 0x0, 0x13, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x14, 0x1, 0x0, 
+	0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x7, 0x0, 
+	0x0, 0x0, 0x15, 0x1, 0x0, 0x0, 0x0, 0x16, 0x1, 
+	0x17, 0x0, 0x0, 0x0, 0x18, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x1, 0x1, 0x1, 0x19, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x9, 0x1A, 0x1B, 0x1, 0x1, 0x2, 0x0, 0x0, 0x0, 
+	0x0, 0x1C, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 
+	0x0, 0x0, 0x19, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x1, 0x1, 0x1, 0x1D, 0x0, 0x0, 0x0, 0x1E, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1F, 0x0, 
+	0x0, 0x0, 0x0, 0x8, 0x1, 0x1, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 
+	0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x20, 0x0, 0x0, 0x0, 0x21, 0x1, 
+	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x1, 0x1, 0x22, 0x21, 0x0, 0x0, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x0, 0x1F, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x23, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
+	0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+};
+
+Gfx mario_mario_logo_rgba16_ci8_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_logo_rgba16_ci8_pal_rgba16[] = {
+	0xF8, 0x1, 0xFF, 0xFF, 0xFE, 0xB5, 0xFD, 0xAF, 0xEC, 
+	0xE9, 0xFD, 0xEF, 0xFD, 0x2B, 0xFD, 0x29, 0xFB, 0x9F, 
+	0xFF, 0x3B, 0xFA, 0xD7, 0xF8, 0x3, 0xEE, 0xF7, 0xF8, 
+	0x43, 0xFD, 0x6D, 0xFA, 0x97, 0xF9, 0xCF, 0xF9, 0x8F, 
+	0xFC, 0x65, 0xFB, 0x5B, 0xFB, 0xDF, 0xFE, 0x33, 0xFC, 
+	0xE7, 0xFA, 0x53, 0xF9, 0x9, 0xF8, 0x45, 0xFC, 0xA5, 
+	0xFC, 0x63, 0xFE, 0xF7, 0xFA, 0x13, 0xFB, 0xE1, 0xF9, 
+	0xD1, 0xFE, 0x75, 0xFB, 0x5D, 0xFF, 0x7B, 0xFF, 0x7F, 
+	
+};
+
+Gfx mario_mario_face_2_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_face_2_rgba16[] = {
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x10, 0x45, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x3, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0x21, 0x9, 0x0, 0x1, 0x39, 0x8D, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x29, 0x4B, 0x0, 0x1, 0x18, 
+	0x87, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x10, 0x43, 0x0, 0x1, 0x31, 0x4D, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x39, 0x8D, 0x0, 
+	0x1, 0x31, 0x4D, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x10, 0x85, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x18, 0x85, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x6B, 0x5B, 0x4A, 
+	0x53, 0x10, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x10, 0x85, 0x18, 0xC7, 0x4A, 0x53, 0x84, 0x21, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0x7B, 0xDF, 0x94, 0xA5, 0x6B, 0x5B, 0x39, 0xCF, 
+	0x18, 0xC7, 0x10, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x2A, 0xA7, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x18, 0xC7, 0x18, 0xC7, 0x39, 
+	0xCF, 0x6B, 0x5B, 0x84, 0x21, 0x94, 0xA5, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0x4C, 0x7B, 0x13, 0x39, 0x9, 0xA7, 
+	0x0, 0x1, 0x19, 0x9B, 0xCE, 0xBD, 0x63, 0xEF, 0x11, 
+	0x9F, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x4B, 0xAD, 0x2A, 0x1F, 0xCE, 0xBD, 0x4B, 0x69, 0x0, 
+	0x1, 0x0, 0xDB, 0x1B, 0x39, 0x23, 0x79, 0xDF, 0x3D, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0x3C, 0x3B, 0x1B, 0x39, 0x1, 
+	0xA5, 0x0, 0x1, 0x53, 0xAB, 0xF7, 0xBD, 0xB6, 0x3D, 
+	0x9, 0x5D, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0x3A, 0xE9, 0x6C, 0x2F, 0xF7, 0xBD, 0x9D, 0xB9, 
+	0x0, 0x1, 0x0, 0x97, 0x1B, 0x37, 0x23, 0x79, 0xD7, 
+	0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x4C, 0x7D, 0x13, 0x39, 
+	0x9, 0xA7, 0x0, 0x1, 0x11, 0x59, 0xB6, 0x3D, 0x53, 
+	0xAB, 0x11, 0x9F, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x43, 0x6D, 0x21, 0xDD, 0xB6, 0x3D, 0x43, 
+	0x27, 0x0, 0x1, 0x0, 0xDB, 0x1B, 0x37, 0x23, 0xB9, 
+	0xE7, 0x7D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x64, 0xFD, 0x13, 
+	0x39, 0x9, 0xE9, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x22, 0x67, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x5C, 0x33, 0x0, 0x1, 0x0, 0x3, 
+	0x0, 0x1, 0x0, 0x1, 0x1, 0x1F, 0x1B, 0x39, 0x2B, 
+	0xBB, 0xEF, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x75, 0x3D, 
+	0x13, 0x39, 0x12, 0xB1, 0x0, 0x3, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x4B, 0xB1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x85, 0x3B, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x9, 0xE7, 0x13, 0x79, 
+	0x44, 0x3B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x9E, 
+	0x3D, 0x13, 0x39, 0x1B, 0x37, 0x0, 0x97, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x7D, 0x7B, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x97, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x3, 0x12, 0xB3, 0x13, 
+	0x39, 0x6D, 0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xDF, 0x3D, 0x23, 0x79, 0x1B, 0x79, 0xA, 0x2D, 0x0, 
+	0x1, 0x0, 0x1, 0x9, 0xA7, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x23, 
+	0x33, 0x0, 0x9, 0x0, 0x1, 0x1, 0xA5, 0x1B, 0x79, 
+	0x13, 0x39, 0xAE, 0x7D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0x64, 0xFD, 0x12, 0xF7, 0x1B, 0x79, 
+	0x12, 0x71, 0xA, 0x2F, 0x44, 0x3B, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x75, 0x3D, 0x2, 0x31, 0xA, 0x6D, 0x1B, 0x37, 0x13, 
+	0x39, 0x33, 0xFB, 0xE7, 0x7D, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xD7, 0x3D, 0x23, 0x79, 0xA, 
+	0xF7, 0x13, 0x39, 0x1B, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x33, 0xFB, 0xB, 0x39, 0x13, 0x39, 
+	0xA, 0xF7, 0x9E, 0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xBE, 0xBD, 
+	0x4C, 0x7D, 0x44, 0x7B, 0xAE, 0x7D, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xC6, 0xFD, 0x54, 0xBD, 0x44, 
+	0x3B, 0x9E, 0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+};
+
+Gfx mario_mario_face_3_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_face_3_rgba16[] = {
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x10, 0x45, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x8, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x10, 0x45, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x3, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0x21, 0x9, 0x0, 0x1, 0x39, 0x8D, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x29, 0x4B, 0x0, 0x1, 0x0, 
+	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x10, 0x43, 0x0, 0x1, 0x31, 0x4D, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 
+	0x1, 0x31, 0x4D, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x10, 0x85, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x10, 0x85, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x18, 0x85, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x10, 0x45, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x0, 0x1, 0x0, 0x1, 0x29, 0x4B, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x29, 0x4B, 0x0, 0x3, 0x0, 0x3, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x3, 
+	0x0, 0x3, 0x29, 0x4B, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0x29, 0x4B, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x18, 
+	0xC7, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0x0, 0x1, 0x0, 0x1, 0x18, 0xC7, 0x18, 0xC7, 
+	0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x3, 0x0, 0x3, 
+	0x0, 0x3, 0x0, 0x3, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x3, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+};
+
+Gfx mario_mario_face_4_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_mario_face_4_rgba16[] = {
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 
+	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 
+	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xE7, 0x39, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xE7, 
+	0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 
+	0x39, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0xC6, 0x31, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 
+	0x0, 0x1, 0x6B, 0x5B, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 0x39, 
+	0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 
+	0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF7, 0xBD, 0x18, 0xC7, 0x0, 0x1, 0x39, 0xCF, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 
+	0x1, 0x0, 0x1, 0xC6, 0x31, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
+	0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0xC6, 0x31, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 
+	0x1, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF7, 0xBD, 0x52, 0x95, 0x0, 0x1, 0x0, 
+	0x1, 0xC6, 0x31, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 
+	0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x39, 
+	0xCF, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
+	0x39, 0xCF, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 
+	0x0, 0x1, 0x39, 0xCF, 0xC6, 0x31, 0x39, 0xCF, 0x0, 
+	0x1, 0x0, 0x1, 0xC6, 0x31, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 
+	0x0, 0x1, 0xAD, 0x6B, 0x39, 0xCF, 0x0, 0x1, 0x39, 
+	0xCF, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 
+	0x39, 0x18, 0xC7, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0x18, 
+	0xC7, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0xC6, 0x31, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0x52, 0x95, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0xC6, 0x31, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0x52, 0x95, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x39, 
+	0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
+	0xAD, 0x6B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 
+	0x1, 0x0, 0x1, 0xAD, 0x6B, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x0, 
+	0x1, 0x39, 0xCF, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 0xE7, 0x39, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0x0, 0x1, 0x52, 0x95, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 0x0, 
+	0x1, 0xAD, 0x6B, 0x18, 0xC7, 0x0, 0x1, 0x39, 0xCF, 
+	0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0x94, 
+	0xA5, 0x0, 0x1, 0x0, 0x1, 0x18, 0xC7, 0xE7, 0x39, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 
+	0x39, 0xCF, 0xE7, 0x39, 0x52, 0x95, 0x0, 0x1, 0x0, 
+	0x1, 0x52, 0x95, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
+	0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 
+	0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0x39, 
+	0xCF, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x18, 
+	0xC7, 0xE7, 0x39, 0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 
+	0x0, 0x1, 0x18, 0xC7, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0xC6, 
+	0x31, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
+	0x0, 0x1, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
+	0x52, 0x95, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 
+	0x39, 0x39, 0xCF, 0x8, 0x43, 0xE7, 0x39, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xE7, 0x39, 0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 
+	0x1, 0x0, 0x1, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 0x39, 0xE7, 
+	0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 0x39, 0xE7, 0x39, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xE7, 0x39, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
+	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
+};
+
+Gfx mario_wing_2_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_wing_2_rgba16[] = {
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 0x63, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x84, 0x21, 0xBD, 0xEF, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0xAD, 0x6B, 0xA5, 0x29, 0xB5, 0xAD, 0xDE, 0xF7, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 
+	0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 0xEF, 0x7B, 0xCE, 
+	0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 
+	0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 
+	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 
+	0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
+	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xF7, 0xBD, 0xEF, 0x7B, 
+	0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xD6, 
+	0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xE7, 0x39, 0xE7, 0x39, 
+	0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 
+	0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xD6, 
+	0xB5, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0xDE, 0xF7, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 
+	0xC6, 0x31, 0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xCE, 
+	0x73, 0xB5, 0xAD, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xD6, 0xB5, 
+	0xBD, 0xEF, 0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xE7, 0x39, 0xDE, 0xF7, 0xCE, 0x73, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0x94, 0xA5, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
+	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 
+	0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
+	0xF7, 0xD6, 0xB5, 0xCE, 0x73, 0xC6, 0x31, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 
+	0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
+	0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0xC6, 0x31, 0xD6, 
+	0xB5, 0xDE, 0xF7, 0xE7, 0x39, 0xD6, 0xB5, 0xCE, 0x73, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xBD, 0xEF, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xAD, 0x6B, 0xBD, 0xEF, 0xC6, 0x31, 0xDE, 0xF7, 0xE7, 
+	0x39, 0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 
+	0x7B, 0xE7, 0x39, 0xE7, 0x39, 0xE7, 0x39, 0xDE, 0xF7, 
+	0xDE, 0xF7, 0xDE, 0xF7, 0xD6, 0xB5, 0xDE, 0xF7, 0xD6, 
+	0xB5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 0x29, 
+	0xA5, 0x29, 0xA5, 0x29, 0xBD, 0xEF, 0xC6, 0x31, 0xDE, 
+	0xF7, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 
+	0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 
+	0xAD, 0xC6, 0x31, 0xDE, 0xF7, 0xE7, 0x39, 0xEF, 0x7B, 
+	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xC6, 
+	0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 
+	0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xCE, 0x73, 
+	0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 
+	0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 
+	0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 0x39, 0xEF, 0x7B, 
+	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xC6, 0x31, 0xAD, 
+	0x6B, 0x84, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
+	0x31, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 0xEF, 0xC6, 0x31, 
+	0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 
+	0x73, 0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 
+	0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xE7, 0x39, 0xE7, 
+	0x39, 0xDE, 0xF7, 0xCE, 0x73, 0xBD, 0xEF, 0xAD, 0x6B, 
+	0x8C, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 
+	0xBD, 0xEF, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x94, 
+	0xA5, 0x73, 0x9D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 
+	0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 
+	0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 
+	0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0x9C, 0xE7, 
+	0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
+	0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x8C, 0x63, 
+	0x73, 0x9D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 0x29, 0x9C, 0xE7, 
+	0x94, 0xA5, 0x94, 0xA5, 0x8C, 0x63, 0x8C, 0x63, 0x84, 
+	0x21, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 0x7B, 0xDF, 
+	0x7B, 0xDF, 0x7B, 0xDF, 0x84, 0x21, 0x84, 0x21, 0x84, 
+	0x21, 0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 
+	0x8C, 0x63, 0x8C, 0x63, 0x84, 0x21, 0x7B, 0xDF, 0x6B, 
+	0x5B, 0x4A, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0xA5, 0x94, 
+	0xA5, 0x8C, 0x63, 0x84, 0x21, 0x7B, 0xDF, 0x7B, 0xDF, 
+	0x73, 0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 
+	0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 
+	0x6B, 0x5B, 0x6B, 0x5B, 0x73, 0x9D, 0x73, 0x9D, 0x73, 
+	0x9D, 0x73, 0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x5A, 0xD7, 
+	0x42, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 0x63, 
+	0x84, 0x21, 0x7B, 0xDF, 0x73, 0x9D, 0x6B, 0x5B, 0x6B, 
+	0x5B, 0x63, 0x19, 0x5A, 0xD7, 0x5A, 0xD7, 0x52, 0x95, 
+	0x52, 0x95, 0x4A, 0x53, 0x4A, 0x53, 0x4A, 0x53, 0x4A, 
+	0x53, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
+	0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x39, 0xCF, 0x31, 
+	0x8D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7B, 
+	0xDF, 0x73, 0x9D, 0x6B, 0x5B, 0x63, 0x19, 0x5A, 0xD7, 
+	0x52, 0x95, 0x42, 0x11, 0x52, 0x95, 0x4A, 0x53, 0x52, 
+	0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
+	0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x4A, 
+	0x53, 0x31, 0x8D, 0x31, 0x8D, 0x29, 0x4B, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x6B, 0x5B, 0x63, 0x19, 0x52, 0x95, 0x5A, 0xD7, 0x52, 
+	0x95, 0x5A, 0xD7, 0x63, 0x19, 0x63, 0x19, 0x5A, 0xD7, 
+	0x5A, 0xD7, 0x5A, 0xD7, 0x5A, 0xD7, 0x5A, 0xD7, 0x5A, 
+	0xD7, 0x5A, 0xD7, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
+	0x39, 0xCF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x5A, 0xD7, 0x63, 0x19, 0x5A, 0xD7, 0x5A, 0xD7, 
+	0x52, 0x95, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 0x9C, 
+	0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0xBD, 
+	0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x5A, 0xD7, 0x7B, 0xDF, 0xA5, 0x29, 0xBD, 
+	0xEF, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 
+	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xF7, 0xBD, 0xF7, 0xBD, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xC6, 0x31, 0xD6, 0xB5, 0xDE, 0xF7, 
+	0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 
+	0x39, 0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 
+	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 
+	0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 
+	0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
+	0xF7, 0xE7, 0x39, 0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 
+	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 
+	0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 
+	0xC6, 0x31, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 
+	0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xD6, 0xB5, 
+	0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 
+	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 0x39, 0xE7, 0x39, 
+	0xCE, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xBD, 0xEF, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xC6, 0x31, 
+	0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
+	0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 
+	0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xC6, 
+	0x31, 0xA5, 0x29, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xAD, 0x6B, 
+	0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 
+	0x94, 0xA5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 
+	0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 
+	0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0x94, 0xA5, 0x7B, 
+	0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x8C, 0x63, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 
+	0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x94, 0xA5, 0x94, 
+	0xA5, 0x8C, 0x63, 0x84, 0x21, 0x6B, 0x5B, 0x4A, 0x53, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x6B, 0x5B, 0x73, 0x9D, 0x7B, 0xDF, 0x7B, 0xDF, 
+	0x7B, 0xDF, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 0x84, 
+	0x21, 0x7B, 0xDF, 0x7B, 0xDF, 0x7B, 0xDF, 0x73, 0x9D, 
+	0x63, 0x19, 0x52, 0x95, 0x4A, 0x53, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x7B, 0xDF, 0x6B, 0x5B, 0x5A, 0xD7, 0x52, 
+	0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
+	0x52, 0x95, 0x4A, 0x53, 0x52, 0x95, 0x42, 0x11, 0x31, 
+	0x8D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xE7, 0x39, 0xE7, 0x39, 0xE7, 0x39, 
+	0xDE, 0xF7, 0xCE, 0x73, 0xC6, 0x31, 0xAD, 0x6B, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0x7B, 0xDF, 0x73, 0x9D, 0x63, 0x19, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 
+	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 0x39, 0xE7, 0x39, 
+	0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 
+	0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xD6, 
+	0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 
+	0xD6, 0xB5, 0xB5, 0xAD, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 
+	0xAD, 0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 0x29, 
+	0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
+	0x29, 0xA5, 0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 
+	0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 
+	0x63, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 
+	0x84, 0x21, 0x84, 0x21, 0x7B, 0xDF, 0x6B, 0x5B, 0x52, 
+	0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x6B, 0x5B, 0x6B, 0x5B, 0x63, 0x19, 0x63, 0x19, 0x5A, 
+	0xD7, 0x52, 0x95, 0x42, 0x11, 0x39, 0xCF, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 0x39, 0xCF, 
+	0x39, 0xCF, 0x39, 0xCF, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x6B, 
+	0x5B, 0x6B, 0x5B, 0x73, 0x9D, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 
+	0xC6, 0x31, 0xC6, 0x31, 0xAD, 0x6B, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xA5, 0x29, 0x94, 0xA5, 0x6B, 0x5B, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0xA5, 0x8C, 0x63, 
+	0x84, 0x21, 0x6B, 0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5A, 0xD7, 0x4A, 
+	0x53, 0x39, 0xCF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 
+};
+
+Gfx mario_wing1_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 mario_wing1_rgba16[] = {
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9C, 0xE7, 0xA5, 
+	0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x84, 
+	0x21, 0x8C, 0x63, 0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 
+	0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x7B, 0xDF, 0x84, 0x21, 
+	0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 
+	0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 0x8C, 
+	0x63, 0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
+	0xBD, 0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 
+	0xF7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x73, 0x9D, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 
+	0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xBD, 
+	0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 
+	0xE7, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6B, 0x5B, 
+	0x6B, 0x5B, 0x6B, 0x5B, 0x7B, 0xDF, 0x84, 0x21, 0x8C, 
+	0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xBD, 0xEF, 
+	0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 0xE7, 
+	0x39, 0xEF, 0x7B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x19, 0x63, 
+	0x19, 0x6B, 0x5B, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 
+	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 
+	0xEF, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 
+	0xE7, 0x39, 0xEF, 0x7B, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x5A, 0xD7, 0x5A, 0xD7, 
+	0x63, 0x19, 0x6B, 0x5B, 0x73, 0x9D, 0x84, 0x21, 0x8C, 
+	0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 
+	0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 
+	0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0x95, 0x5A, 
+	0xD7, 0x63, 0x19, 0x73, 0x9D, 0x7B, 0xDF, 0x8C, 0x63, 
+	0x9C, 0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 
+	0x31, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 
+	0xCE, 0x73, 0xCE, 0x73, 0xC6, 0x31, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x4A, 0x53, 0x52, 0x95, 
+	0x63, 0x19, 0x6B, 0x5B, 0x7B, 0xDF, 0x84, 0x21, 0x94, 
+	0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 
+	0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x42, 0x11, 0x4A, 0x53, 0x5A, 
+	0xD7, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 
+	0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x39, 0xCF, 0x52, 0x95, 
+	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
+	0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xA5, 0x29, 0xA5, 0x29, 0x9C, 0xE7, 0xB5, 0xAD, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x31, 0x8D, 0x42, 0x11, 0x52, 
+	0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
+	0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 
+	0x9C, 0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xC6, 0x31, 0xD6, 
+	0xB5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x4A, 0x53, 
+	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
+	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
+	0x29, 0xAD, 0x6B, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 
+	0xCE, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x39, 0xCF, 0x52, 
+	0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
+	0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0xAD, 0x6B, 
+	0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
+	0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x18, 0xC7, 0x31, 0x8D, 0x4A, 0x53, 
+	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x94, 0xA5, 0xA5, 
+	0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xAD, 0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xB5, 
+	0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 0x42, 0x11, 0x52, 
+	0x95, 0x63, 0x19, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 
+	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
+	0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xB5, 0xAD, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 
+	0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 0x4A, 0x53, 
+	0x5A, 0xD7, 0x6B, 0x5B, 0x84, 0x21, 0x94, 0xA5, 0xA5, 
+	0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xAD, 0x6B, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xB5, 
+	0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xAD, 0x6B, 0xA5, 0x29, 0xA5, 0x29, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x52, 
+	0x95, 0x63, 0x19, 0x73, 0x9D, 0x8C, 0x63, 0x9C, 0xE7, 
+	0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
+	0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 
+	0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x4A, 0x53, 
+	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x94, 0xA5, 0xA5, 
+	0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xAD, 0x6B, 0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 
+	0x9C, 0xE7, 0x94, 0xA5, 0x94, 0xA5, 0x8C, 0x63, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x52, 
+	0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x9C, 0xE7, 
+	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
+	0x6B, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 
+	0xE7, 0x94, 0xA5, 0x8C, 0x63, 0x84, 0x21, 0x7B, 0xDF, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 0x42, 0x11, 
+	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
+	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 
+	0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 
+	0x94, 0xA5, 0x8C, 0x63, 0x84, 0x21, 0x73, 0x9D, 0x6B, 
+	0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 0x4A, 
+	0x53, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
+	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0x94, 
+	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 
+	0xA5, 0x8C, 0x63, 0x7B, 0xDF, 0x73, 0x9D, 0x63, 0x19, 
+	0x5A, 0xD7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x42, 0x11, 
+	0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
+	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 
+	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 
+	0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 
+	0x8C, 0x63, 0x7B, 0xDF, 0x6B, 0x5B, 0x5A, 0xD7, 0x6B, 
+	0x5B, 0x5A, 0xD7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x4A, 
+	0x53, 0x5A, 0xD7, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
+	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x8C, 
+	0x63, 0x7B, 0xDF, 0x6B, 0x5B, 0x73, 0x9D, 0x6B, 0x5B, 
+	0x94, 0xA5, 0xC6, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 
+	0x52, 0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x9C, 
+	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 0x9C, 0xE7, 
+	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x94, 0xA5, 0x8C, 0x63, 
+	0x7B, 0xDF, 0x7B, 0xDF, 0x6B, 0x5B, 0x94, 0xA5, 0xC6, 
+	0x31, 0xCE, 0x73, 0xCE, 0x73, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 
+	0xCF, 0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 
+	0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xAD, 0x6B, 0x94, 
+	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x8C, 0x63, 0x84, 
+	0x21, 0x7B, 0xDF, 0x6B, 0x5B, 0xAD, 0x6B, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 
+	0x4A, 0x53, 0x5A, 0xD7, 0x73, 0x9D, 0x84, 0x21, 0x94, 
+	0xA5, 0xA5, 0x29, 0xB5, 0xAD, 0xBD, 0xEF, 0x94, 0xA5, 
+	0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x8C, 0x63, 0x94, 0xA5, 
+	0x7B, 0xDF, 0x8C, 0x63, 0xAD, 0x6B, 0xAD, 0x6B, 0xB5, 
+	0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 
+	0x8D, 0x52, 0x95, 0x63, 0x19, 0x73, 0x9D, 0x8C, 0x63, 
+	0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xA5, 0x29, 0x94, 
+	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x9C, 0xE7, 0x8C, 
+	0x63, 0x7B, 0xDF, 0x94, 0xA5, 0x9C, 0xE7, 0x9C, 0xE7, 
+	0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 
+	0x39, 0xCF, 0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 
+	0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0x8C, 0x63, 
+	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0xAD, 0x6B, 0xCE, 0x73, 
+	0xEF, 0x7B, 0xE7, 0x39, 0xD6, 0xB5, 0xC6, 0x31, 0xA5, 
+	0x29, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0xA5, 0x29, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 
+	0x9, 0x42, 0x11, 0x5A, 0xD7, 0x73, 0x9D, 0x84, 0x21, 
+	0x94, 0xA5, 0xA5, 0x29, 0xB5, 0xAD, 0xAD, 0x6B, 0x94, 
+	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xA5, 0x29, 0x9C, 0xE7, 0xAD, 0x6B, 0xE7, 0x39, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
+	0xEF, 0x7B, 0xBD, 0xEF, 0x94, 0xA5, 0x84, 0x21, 0x8C, 
+	0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x21, 0x9, 0x4A, 0x53, 0x63, 0x19, 0x73, 0x9D, 0x84, 
+	0x21, 0x94, 0xA5, 0xA5, 0x29, 0xB5, 0xAD, 0x94, 0xA5, 
+	0x94, 0xA5, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0x9C, 0xE7, 0xA5, 0x29, 0xD6, 0xB5, 0xDE, 0xF7, 
+	0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 
+	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xB5, 0xAD, 0x6B, 0x5B, 
+	0x6B, 0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x31, 0x8D, 0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 
+	0x8C, 0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0xAD, 0x6B, 0x94, 
+	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
+	0xA5, 0x29, 0x9C, 0xE7, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 
+	0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xE7, 0x39, 
+	0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0x9C, 
+	0xE7, 0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x18, 0xC7, 0x39, 0xCF, 0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 
+	0xDF, 0x8C, 0x63, 0xA5, 0x29, 0xAD, 0x6B, 0x9C, 0xE7, 
+	0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xA5, 
+	0x29, 0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 
+	0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 
+	0xDE, 0xF7, 0xE7, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x18, 0xC7, 0x42, 0x11, 0x5A, 0xD7, 0x73, 0x9D, 
+	0x84, 0x21, 0x94, 0xA5, 0xA5, 0x29, 0xA5, 0x29, 0x8C, 
+	0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 
+	0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xA5, 
+	0x29, 0xD6, 0xB5, 0xD6, 0xB5, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x21, 0x9, 0x4A, 0x53, 0x63, 0x19, 0x73, 
+	0x9D, 0x8C, 0x63, 0x94, 0xA5, 0xA5, 0x29, 0xA5, 0x29, 
+	0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xA5, 
+	0x29, 0x9C, 0xE7, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 
+	0x94, 0xA5, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x8C, 0x63, 0x73, 0x9D, 
+	0xB5, 0xAD, 0xC6, 0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x29, 0x4B, 0x4A, 0x53, 0x6B, 0x5B, 
+	0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0x8C, 
+	0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 
+	0xA5, 0x29, 0x84, 0x21, 0x42, 0x11, 0x52, 0x95, 0x5A, 
+	0xD7, 0x63, 0x19, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 
+	0x63, 0x19, 0x5A, 0xD7, 0x52, 0x95, 0x52, 0x95, 0xAD, 
+	0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x52, 0x95, 0x6B, 
+	0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 
+	0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
+	0x29, 0xA5, 0x29, 0x73, 0x9D, 0x4A, 0x53, 0x42, 0x11, 
+	0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 0x39, 0xCF, 0x39, 
+	0xCF, 0x39, 0xCF, 0x39, 0xCF, 0x63, 0x19, 0x8C, 0x63, 
+	0x9C, 0xE7, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0x0, 
+	0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 0x5A, 0xD7, 
+	0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 0xA5, 0x29, 0x8C, 
+	0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 
+	0xA5, 0x29, 0xB5, 0xAD, 0x94, 0xA5, 0x7B, 0xDF, 0x6B, 
+	0x5B, 0x63, 0x19, 0x52, 0x95, 0x42, 0x11, 0x42, 0x11, 
+	0x42, 0x11, 0x42, 0x11, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 
+	0x21, 0x84, 0x21, 0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 
+	0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x5A, 
+	0xD7, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 0xA5, 0x29, 
+	0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 
+	0x29, 0xAD, 0x6B, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 
+	0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 0xEF, 0x7B, 0xD6, 
+	0xB5, 0x84, 0x21, 0x42, 0x11, 0x52, 0x95, 0x5A, 0xD7, 
+	0x5A, 0xD7, 0x63, 0x19, 0x63, 0x19, 0x6B, 0x5B, 0x6B, 
+	0x5B, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x42, 0x11, 
+	0x63, 0x19, 0x73, 0x9D, 0x8C, 0x63, 0x94, 0xA5, 0x94, 
+	0xA5, 0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 
+	0xA5, 0x29, 0xA5, 0x29, 0xBD, 0xEF, 0xC6, 0x31, 0xCE, 
+	0x73, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 0xEF, 0x7B, 
+	0xF7, 0xBD, 0xCE, 0x73, 0x39, 0xCF, 0x39, 0xCF, 0x31, 
+	0x8D, 0x39, 0xCF, 0x39, 0xCF, 0x42, 0x11, 0x42, 0x11, 
+	0x42, 0x11, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 0x4A, 
+	0x53, 0x63, 0x19, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 
+	0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 
+	0x29, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 
+	0x73, 0xD6, 0xB5, 0xCE, 0x73, 0xBD, 0xEF, 0xAD, 0x6B, 
+	0x9C, 0xE7, 0x84, 0x21, 0x84, 0x21, 0x73, 0x9D, 0x6B, 
+	0x5B, 0x63, 0x19, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 
+	0x4A, 0x53, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x94, 
+	0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 
+	0xA5, 0x29, 0x94, 0xA5, 0x84, 0x21, 0x94, 0xA5, 0x9C, 
+	0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 
+	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xC6, 0x31, 
+	0xC6, 0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 0x0, 0x21, 
+	0x9, 0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 
+	0x94, 0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 
+	0x29, 0xA5, 0x29, 0x4A, 0x53, 0x52, 0x95, 0x6B, 0x5B, 
+	0x7B, 0xDF, 0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 
+	0x63, 0x73, 0x9D, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 
+	0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 
+	0x21, 0x9, 0x52, 0x95, 0x6B, 0x5B, 0x84, 0x21, 0x94, 
+	0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 
+	0xA5, 0x29, 0x84, 0x21, 0x42, 0x11, 0x42, 0x11, 0x39, 
+	0xCF, 0x39, 0xCF, 0x42, 0x11, 0x42, 0x11, 0x4A, 0x53, 
+	0x39, 0xCF, 0x4A, 0x53, 0x8C, 0x63, 0x8C, 0x63, 0x94, 
+	0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 
+	0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x0, 0x0, 0x0, 
+	0x0, 0x29, 0x4B, 0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 
+	0x8C, 0x63, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 
+	0x29, 0xA5, 0x29, 0x4A, 0x53, 0x42, 0x11, 0x42, 0x11, 
+	0x42, 0x11, 0x42, 0x11, 0x31, 0x8D, 0x31, 0x8D, 0x31, 
+	0x8D, 0x39, 0xCF, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 
+	0x73, 0x9D, 0x73, 0x9D, 0x73, 0x9D, 0x73, 0x9D, 0x73, 
+	0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x5A, 0xD7, 0x0, 0x0, 
+	0x0, 0x0, 0x29, 0x4B, 0x52, 0x95, 0x73, 0x9D, 0x84, 
+	0x21, 0x8C, 0x63, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 
+	0xA5, 0x29, 0xAD, 0x6B, 0xA5, 0x29, 0x6B, 0x5B, 0x5A, 
+	0xD7, 0x42, 0x11, 0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 
+	0x31, 0x8D, 0x39, 0xCF, 0x39, 0xCF, 0x39, 0xCF, 0x39, 
+	0xCF, 0x42, 0x11, 0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 
+	0x31, 0x8D, 0x31, 0x8D, 0x29, 0x4B, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 0xD7, 0x73, 0x9D, 
+	0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 
+	0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 
+	0xB5, 0xAD, 0xAD, 0x6B, 0x9C, 0xE7, 0x73, 0x9D, 0x6B, 
+	0x5B, 0x6B, 0x5B, 0x52, 0x95, 0x4A, 0x53, 0x39, 0xCF, 
+	0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 0x42, 0x11, 0x42, 
+	0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 0xD7, 0x73, 
+	0x9D, 0x84, 0x21, 0x84, 0x21, 0x8C, 0x63, 0x94, 0xA5, 
+	0x9C, 0xE7, 0x94, 0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x8C, 0x63, 0xBD, 0xEF, 
+	0xC6, 0x31, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xBD, 
+	0xEF, 0xAD, 0x6B, 0xA5, 0x29, 0x8C, 0x63, 0x8C, 0x63, 
+	0x6B, 0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 0xD7, 
+	0x73, 0x9D, 0x84, 0x21, 0x84, 0x21, 0x94, 0xA5, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0x52, 0x95, 0x5A, 0xD7, 0x5A, 0xD7, 
+	0x5A, 0xD7, 0x52, 0x95, 0x52, 0x95, 0x9C, 0xE7, 0xAD, 
+	0x6B, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
+	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 
+	0xEF, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 
+	0xD7, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 0x94, 0xA5, 
+	0x9C, 0xE7, 0x63, 0x19, 0x29, 0x4B, 0x29, 0x4B, 0x31, 
+	0x8D, 0x31, 0x8D, 0x4A, 0x53, 0x84, 0x21, 0x8C, 0x63, 
+	0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0x9C, 
+	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x94, 0xA5, 
+	0x84, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 
+	0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 0x94, 
+	0xA5, 0x94, 0xA5, 0x31, 0x8D, 0x18, 0xC7, 0x21, 0x9, 
+	0x29, 0x4B, 0x31, 0x8D, 0x5A, 0xD7, 0x63, 0x19, 0x6B, 
+	0x5B, 0x6B, 0x5B, 0x73, 0x9D, 0x73, 0x9D, 0x73, 0x9D, 
+	0x73, 0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x5A, 0xD7, 0x42, 
+	0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 
+	0x94, 0xA5, 0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x18, 0xC7, 0x18, 0xC7, 0x29, 0x4B, 0x29, 0x4B, 
+	0x31, 0x8D, 0x31, 0x8D, 0x31, 0x8D, 0x39, 0xCF, 0x31, 
+	0x8D, 0x31, 0x8D, 0x31, 0x8D, 0x21, 0x9, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 0x8C, 
+	0x63, 0x84, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x52, 0x95, 0x7B, 0xDF, 0x84, 0x21, 
+	0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7B, 0xDF, 0x73, 
+	0x9D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+	0x0, 
+};
+
+Vtx mario_000_offset_mesh_vtx_0[53] = {
+	{{{73, 11, 0},0, {-16, -16},{0x7F, 0x5, 0x0, 0xFF}}},
+	{{{55, -61, -36},0, {-16, -16},{0x64, 0xB5, 0xE7, 0xFF}}},
+	{{{44, -10, -92},0, {-16, -16},{0x50, 0xF0, 0x9F, 0xFF}}},
+	{{{55, -61, 36},0, {-16, -16},{0x64, 0xB5, 0x19, 0xFF}}},
+	{{{44, -9, 92},0, {-16, -16},{0x51, 0xF1, 0x60, 0xFF}}},
+	{{{43, 40, 91},0, {-16, -16},{0x45, 0x2C, 0x61, 0xFF}}},
+	{{{52, 70, 38},0, {-16, -16},{0x5C, 0x53, 0x1A, 0xFF}}},
+	{{{52, 70, -39},0, {-16, -16},{0x5C, 0x53, 0xE5, 0xFF}}},
+	{{{43, 40, -91},0, {-16, -16},{0x45, 0x2C, 0x9F, 0xFF}}},
+	{{{6, 33, -95},0, {-16, -16},{0xE3, 0x28, 0x8B, 0xFF}}},
+	{{{8, -8, -99},0, {-16, -16},{0xEB, 0xF4, 0x83, 0xFF}}},
+	{{{36, -51, -79},0, {-16, -16},{0x3A, 0xB7, 0xAA, 0xFF}}},
+	{{{26, -74, -46},0, {-16, -16},{0x19, 0x88, 0xDE, 0xFF}}},
+	{{{26, -74, 45},0, {-16, -16},{0x19, 0x88, 0x20, 0xFF}}},
+	{{{36, -52, 79},0, {-16, -16},{0x3B, 0xB7, 0x55, 0xFF}}},
+	{{{8, -8, 99},0, {-16, -16},{0xEA, 0xF4, 0x7D, 0xFF}}},
+	{{{7, 33, 95},0, {-16, -16},{0xE5, 0x28, 0x76, 0xFF}}},
+	{{{27, 72, 63},0, {-16, -16},{0x11, 0x6D, 0x3F, 0xFF}}},
+	{{{22, 82, 26},0, {-16, -16},{0x5, 0x7E, 0xD, 0xFF}}},
+	{{{22, 82, -26},0, {-16, -16},{0x5, 0x7E, 0xF3, 0xFF}}},
+	{{{27, 72, -63},0, {-16, -16},{0x10, 0x6D, 0xC1, 0xFF}}},
+	{{{-5, 59, -72},0, {-16, -16},{0xC5, 0x56, 0xB8, 0xFF}}},
+	{{{-17, 32, -79},0, {-16, -16},{0xA0, 0x21, 0xB4, 0xFF}}},
+	{{{-20, -8, -81},0, {-16, -16},{0x9D, 0xF6, 0xB2, 0xFF}}},
+	{{{4, -48, -86},0, {-16, -16},{0xDF, 0xBC, 0x9A, 0xFF}}},
+	{{{-9, -69, -55},0, {-16, -16},{0xCC, 0x99, 0xCB, 0xFF}}},
+	{{{-14, -74, 0},0, {-16, -16},{0xC6, 0x8F, 0x0, 0xFF}}},
+	{{{-9, -69, 55},0, {-16, -16},{0xCC, 0x98, 0x34, 0xFF}}},
+	{{{4, -49, 86},0, {-16, -16},{0xDF, 0xBB, 0x66, 0xFF}}},
+	{{{-20, -7, 81},0, {-16, -16},{0x9D, 0xF6, 0x4E, 0xFF}}},
+	{{{-18, 32, 79},0, {-16, -16},{0xA1, 0x20, 0x4E, 0xFF}}},
+	{{{-5, 59, 72},0, {-16, -16},{0xC6, 0x57, 0x49, 0xFF}}},
+	{{{27, 72, 63},0, {-16, -16},{0x11, 0x6D, 0x3F, 0xFF}}},
+	{{{-9, 73, 34},0, {-16, -16},{0xBA, 0x68, 0x15, 0xFF}}},
+	{{{-5, 59, 72},0, {-16, -16},{0xC6, 0x57, 0x49, 0xFF}}},
+	{{{22, 82, 26},0, {-16, -16},{0x5, 0x7E, 0xD, 0xFF}}},
+	{{{22, 82, -26},0, {-16, -16},{0x5, 0x7E, 0xF3, 0xFF}}},
+	{{{-9, 73, -34},0, {-16, -16},{0xBA, 0x68, 0xEB, 0xFF}}},
+	{{{27, 72, -63},0, {-16, -16},{0x10, 0x6D, 0xC1, 0xFF}}},
+	{{{-5, 59, -72},0, {-16, -16},{0xC5, 0x56, 0xB8, 0xFF}}},
+	{{{-32, 40, -39},0, {-16, -16},{0x89, 0x27, 0xEA, 0xFF}}},
+	{{{-17, 32, -79},0, {-16, -16},{0xA0, 0x21, 0xB4, 0xFF}}},
+	{{{-20, -8, -81},0, {-16, -16},{0x9D, 0xF6, 0xB2, 0xFF}}},
+	{{{-31, -51, -42},0, {-16, -16},{0x8E, 0xD1, 0xE1, 0xFF}}},
+	{{{4, -48, -86},0, {-16, -16},{0xDF, 0xBC, 0x9A, 0xFF}}},
+	{{{-9, -69, -55},0, {-16, -16},{0xCC, 0x99, 0xCB, 0xFF}}},
+	{{{-14, -74, 0},0, {-16, -16},{0xC6, 0x8F, 0x0, 0xFF}}},
+	{{{-31, -51, 42},0, {-16, -16},{0x8E, 0xD1, 0x1F, 0xFF}}},
+	{{{-9, -69, 55},0, {-16, -16},{0xCC, 0x98, 0x34, 0xFF}}},
+	{{{4, -49, 86},0, {-16, -16},{0xDF, 0xBB, 0x66, 0xFF}}},
+	{{{-20, -7, 81},0, {-16, -16},{0x9D, 0xF6, 0x4E, 0xFF}}},
+	{{{-32, 40, 39},0, {-16, -16},{0x89, 0x27, 0x15, 0xFF}}},
+	{{{-18, 32, 79},0, {-16, -16},{0xA1, 0x20, 0x4E, 0xFF}}},
+};
+
+Gfx mario_000_offset_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(3, 0, 4, 0, 5, 4, 0, 0),
+	gsSP2Triangles(0, 6, 5, 0, 6, 0, 7, 0),
+	gsSP2Triangles(8, 7, 0, 0, 0, 2, 8, 0),
+	gsSP2Triangles(9, 8, 2, 0, 2, 10, 9, 0),
+	gsSP2Triangles(10, 2, 11, 0, 1, 11, 2, 0),
+	gsSP2Triangles(1, 12, 11, 0, 12, 1, 3, 0),
+	gsSP2Triangles(3, 13, 12, 0, 14, 13, 3, 0),
+	gsSP2Triangles(4, 14, 3, 0, 15, 14, 4, 0),
+	gsSP2Triangles(16, 15, 4, 0, 16, 4, 5, 0),
+	gsSP2Triangles(16, 5, 17, 0, 17, 5, 6, 0),
+	gsSP2Triangles(6, 18, 17, 0, 19, 18, 6, 0),
+	gsSP2Triangles(7, 19, 6, 0, 20, 19, 7, 0),
+	gsSP2Triangles(8, 20, 7, 0, 9, 20, 8, 0),
+	gsSP2Triangles(9, 21, 20, 0, 21, 9, 22, 0),
+	gsSP2Triangles(23, 22, 9, 0, 9, 10, 23, 0),
+	gsSP2Triangles(23, 10, 24, 0, 11, 24, 10, 0),
+	gsSP2Triangles(24, 11, 12, 0, 12, 25, 24, 0),
+	gsSP2Triangles(26, 25, 12, 0, 13, 26, 12, 0),
+	gsSP2Triangles(13, 27, 26, 0, 28, 27, 13, 0),
+	gsSP2Triangles(13, 14, 28, 0, 15, 28, 14, 0),
+	gsSP2Triangles(28, 15, 29, 0, 29, 15, 16, 0),
+	gsSP2Triangles(16, 30, 29, 0, 30, 16, 31, 0),
+	gsSP1Triangle(17, 31, 16, 0),
+	gsSPVertex(mario_000_offset_mesh_vtx_0 + 32, 21, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(1, 3, 4, 0, 5, 1, 4, 0),
+	gsSP2Triangles(5, 4, 6, 0, 7, 5, 6, 0),
+	gsSP2Triangles(8, 5, 7, 0, 7, 9, 8, 0),
+	gsSP2Triangles(8, 9, 10, 0, 8, 10, 11, 0),
+	gsSP2Triangles(10, 12, 11, 0, 12, 13, 11, 0),
+	gsSP2Triangles(11, 13, 14, 0, 15, 11, 14, 0),
+	gsSP2Triangles(14, 16, 15, 0, 15, 16, 17, 0),
+	gsSP2Triangles(17, 18, 15, 0, 18, 19, 15, 0),
+	gsSP2Triangles(18, 20, 19, 0, 19, 20, 2, 0),
+	gsSP2Triangles(2, 1, 19, 0, 19, 1, 8, 0),
+	gsSP2Triangles(1, 5, 8, 0, 15, 19, 8, 0),
+	gsSP1Triangle(8, 11, 15, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_001_mesh_vtx_0[88] = {
+	{{{47, 75, -34},0, {-16, -16},{0x48, 0x66, 0xE6, 0xFF}}},
+	{{{28, 85, 30},0, {-16, -16},{0x2D, 0x76, 0x10, 0xFF}}},
+	{{{47, 75, 35},0, {-16, -16},{0x48, 0x66, 0x1A, 0xFF}}},
+	{{{28, 85, -29},0, {-16, -16},{0x2D, 0x76, 0xF0, 0xFF}}},
+	{{{9, 89, -40},0, {-16, -16},{0xF, 0x78, 0xD8, 0xFF}}},
+	{{{9, 89, 41},0, {-16, -16},{0x10, 0x78, 0x28, 0xFF}}},
+	{{{-15, 88, 35},0, {-16, -16},{0xEC, 0x7A, 0x1D, 0xFF}}},
+	{{{-15, 87, -35},0, {-16, -16},{0xEB, 0x7A, 0xE2, 0xFF}}},
+	{{{3, 77, -61},0, {-16, -16},{0x4, 0x6C, 0xBD, 0xFF}}},
+	{{{-28, 63, -74},0, {-16, -16},{0xCB, 0x48, 0xA6, 0xFF}}},
+	{{{-4, 58, -82},0, {-16, -16},{0xFA, 0x41, 0x93, 0xFF}}},
+	{{{17, 66, -75},0, {-16, -16},{0x17, 0x57, 0xA7, 0xFF}}},
+	{{{12, 33, -90},0, {-16, -16},{0xD, 0x1C, 0x85, 0xFF}}},
+	{{{32, 62, -73},0, {-16, -16},{0x2A, 0x51, 0xA8, 0xFF}}},
+	{{{43, 51, -74},0, {-16, -16},{0x3D, 0x34, 0x9E, 0xFF}}},
+	{{{48, 64, -58},0, {-16, -16},{0x46, 0x59, 0xC7, 0xFF}}},
+	{{{80, 14, -61},0, {-16, -16},{0x61, 0x24, 0xB7, 0xFF}}},
+	{{{82, 37, -26},0, {-16, -16},{0x68, 0x45, 0xEB, 0xFF}}},
+	{{{100, 1, -23},0, {-16, -16},{0x7C, 0x12, 0xEB, 0xFF}}},
+	{{{84, -29, -62},0, {-16, -16},{0x5E, 0xD7, 0xB5, 0xFF}}},
+	{{{93, -36, -25},0, {-16, -16},{0x6B, 0xBE, 0xF0, 0xFF}}},
+	{{{66, -52, -50},0, {-16, -16},{0x3B, 0x98, 0xD5, 0xFF}}},
+	{{{54, -63, 0},0, {-16, -16},{0x30, 0x8A, 0x0, 0xFF}}},
+	{{{20, -61, -67},0, {-16, -16},{0xA, 0x97, 0xB9, 0xFF}}},
+	{{{8, -74, 0},0, {-16, -16},{0x2, 0x81, 0x0, 0xFF}}},
+	{{{20, -61, 68},0, {-16, -16},{0x9, 0x97, 0x47, 0xFF}}},
+	{{{66, -52, 51},0, {-16, -16},{0x3B, 0x98, 0x2B, 0xFF}}},
+	{{{93, -36, 26},0, {-16, -16},{0x6B, 0xBE, 0x10, 0xFF}}},
+	{{{84, -29, 63},0, {-16, -16},{0x5E, 0xD7, 0x4B, 0xFF}}},
+	{{{100, 1, 24},0, {-16, -16},{0x7C, 0x12, 0x15, 0xFF}}},
+	{{{80, 14, 62},0, {-16, -16},{0x61, 0x23, 0x4A, 0xFF}}},
+	{{{82, 37, 27},0, {-16, -16},{0x68, 0x45, 0x15, 0xFF}}},
+	{{{80, 14, 62},0, {-16, -16},{0x61, 0x23, 0x4A, 0xFF}}},
+	{{{82, 37, 27},0, {-16, -16},{0x68, 0x45, 0x15, 0xFF}}},
+	{{{48, 64, 59},0, {-16, -16},{0x46, 0x5A, 0x37, 0xFF}}},
+	{{{47, 75, 35},0, {-16, -16},{0x48, 0x66, 0x1A, 0xFF}}},
+	{{{44, 51, 75},0, {-16, -16},{0x3E, 0x37, 0x60, 0xFF}}},
+	{{{32, 62, 74},0, {-16, -16},{0x29, 0x53, 0x57, 0xFF}}},
+	{{{13, 33, 91},0, {-16, -16},{0x10, 0x1C, 0x7B, 0xFF}}},
+	{{{17, 66, 76},0, {-16, -16},{0x19, 0x58, 0x59, 0xFF}}},
+	{{{-4, 58, 84},0, {-16, -16},{0xFB, 0x42, 0x6D, 0xFF}}},
+	{{{3, 77, 62},0, {-16, -16},{0x4, 0x6C, 0x42, 0xFF}}},
+	{{{-28, 63, 75},0, {-16, -16},{0xCB, 0x49, 0x59, 0xFF}}},
+	{{{-15, 88, 35},0, {-16, -16},{0xEC, 0x7A, 0x1D, 0xFF}}},
+	{{{9, 89, 41},0, {-16, -16},{0x10, 0x78, 0x28, 0xFF}}},
+	{{{-40, 72, 55},0, {-16, -16},{0xC1, 0x59, 0x40, 0xFF}}},
+	{{{-43, 83, 25},0, {-16, -16},{0xC4, 0x6E, 0x13, 0xFF}}},
+	{{{-43, 83, -24},0, {-16, -16},{0xC5, 0x6F, 0xED, 0xFF}}},
+	{{{-15, 87, -35},0, {-16, -16},{0xEB, 0x7A, 0xE2, 0xFF}}},
+	{{{-40, 72, -54},0, {-16, -16},{0xC1, 0x59, 0xC0, 0xFF}}},
+	{{{-28, 63, -74},0, {-16, -16},{0xCB, 0x48, 0xA6, 0xFF}}},
+	{{{-71, 54, -29},0, {-16, -16},{0x8B, 0x25, 0xDE, 0xFF}}},
+	{{{-27, 26, -89},0, {-16, -16},{0xC4, 0xE, 0x91, 0xFF}}},
+	{{{-4, 58, -82},0, {-16, -16},{0xFA, 0x41, 0x93, 0xFF}}},
+	{{{12, 33, -90},0, {-16, -16},{0xD, 0x1C, 0x85, 0xFF}}},
+	{{{6, -10, -92},0, {-16, -16},{0x0, 0xEA, 0x83, 0xFF}}},
+	{{{-27, -25, -86},0, {-16, -16},{0xC5, 0xDA, 0x96, 0xFF}}},
+	{{{20, -61, -67},0, {-16, -16},{0xA, 0x97, 0xB9, 0xFF}}},
+	{{{46, -34, -83},0, {-16, -16},{0x24, 0xC9, 0x93, 0xFF}}},
+	{{{66, -52, -50},0, {-16, -16},{0x3B, 0x98, 0xD5, 0xFF}}},
+	{{{84, -29, -62},0, {-16, -16},{0x5E, 0xD7, 0xB5, 0xFF}}},
+	{{{-29, -58, -59},0, {-16, -16},{0xC5, 0x9F, 0xC8, 0xFF}}},
+	{{{8, -74, 0},0, {-16, -16},{0x2, 0x81, 0x0, 0xFF}}},
+	{{{-30, -66, 0},0, {-16, -16},{0xBF, 0x93, 0x0, 0xFF}}},
+	{{{-29, -58, 59},0, {-16, -16},{0xC4, 0x9F, 0x38, 0xFF}}},
+	{{{-30, -66, 0},0, {-16, -16},{0xBF, 0x93, 0x0, 0xFF}}},
+	{{{8, -74, 0},0, {-16, -16},{0x2, 0x81, 0x0, 0xFF}}},
+	{{{20, -61, 68},0, {-16, -16},{0x9, 0x97, 0x47, 0xFF}}},
+	{{{-27, -25, 87},0, {-16, -16},{0xC5, 0xD8, 0x69, 0xFF}}},
+	{{{6, -11, 93},0, {-16, -16},{0x0, 0xE9, 0x7D, 0xFF}}},
+	{{{46, -34, 84},0, {-16, -16},{0x24, 0xC9, 0x6D, 0xFF}}},
+	{{{66, -52, 51},0, {-16, -16},{0x3B, 0x98, 0x2B, 0xFF}}},
+	{{{84, -29, 63},0, {-16, -16},{0x5E, 0xD7, 0x4B, 0xFF}}},
+	{{{-27, 26, 91},0, {-16, -16},{0xC4, 0xD, 0x6F, 0xFF}}},
+	{{{13, 33, 91},0, {-16, -16},{0x10, 0x1C, 0x7B, 0xFF}}},
+	{{{-4, 58, 84},0, {-16, -16},{0xFB, 0x42, 0x6D, 0xFF}}},
+	{{{-28, 63, 75},0, {-16, -16},{0xCB, 0x49, 0x59, 0xFF}}},
+	{{{-71, 54, 30},0, {-16, -16},{0x8B, 0x25, 0x22, 0xFF}}},
+	{{{-40, 72, 55},0, {-16, -16},{0xC1, 0x59, 0x40, 0xFF}}},
+	{{{-43, 83, 25},0, {-16, -16},{0xC4, 0x6E, 0x13, 0xFF}}},
+	{{{-71, 54, -29},0, {-16, -16},{0x8B, 0x25, 0xDE, 0xFF}}},
+	{{{-43, 83, -24},0, {-16, -16},{0xC5, 0x6F, 0xED, 0xFF}}},
+	{{{-40, 72, -54},0, {-16, -16},{0xC1, 0x59, 0xC0, 0xFF}}},
+	{{{-59, -28, 38},0, {-16, -16},{0x8E, 0xD4, 0x22, 0xFF}}},
+	{{{-59, -28, -37},0, {-16, -16},{0x8E, 0xD4, 0xDE, 0xFF}}},
+	{{{-27, 26, -89},0, {-16, -16},{0xC4, 0xE, 0x91, 0xFF}}},
+	{{{-27, -25, -86},0, {-16, -16},{0xC5, 0xDA, 0x96, 0xFF}}},
+	{{{-29, -58, -59},0, {-16, -16},{0xC5, 0x9F, 0xC8, 0xFF}}},
+};
+
+Gfx mario_000_offset_001_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_001_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(1, 3, 4, 0, 5, 1, 4, 0),
+	gsSP2Triangles(5, 4, 6, 0, 4, 7, 6, 0),
+	gsSP2Triangles(7, 4, 8, 0, 7, 8, 9, 0),
+	gsSP2Triangles(9, 8, 10, 0, 11, 10, 8, 0),
+	gsSP2Triangles(12, 10, 11, 0, 12, 11, 13, 0),
+	gsSP2Triangles(12, 13, 14, 0, 15, 14, 13, 0),
+	gsSP2Triangles(16, 14, 15, 0, 17, 16, 15, 0),
+	gsSP2Triangles(15, 0, 17, 0, 16, 17, 18, 0),
+	gsSP2Triangles(16, 18, 19, 0, 18, 20, 19, 0),
+	gsSP2Triangles(19, 20, 21, 0, 22, 21, 20, 0),
+	gsSP2Triangles(23, 21, 22, 0, 22, 24, 23, 0),
+	gsSP2Triangles(25, 24, 22, 0, 25, 22, 26, 0),
+	gsSP2Triangles(27, 26, 22, 0, 26, 27, 28, 0),
+	gsSP2Triangles(28, 27, 29, 0, 30, 28, 29, 0),
+	gsSP1Triangle(29, 31, 30, 0),
+	gsSPVertex(mario_000_offset_001_mesh_vtx_0 + 32, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 2, 1, 0),
+	gsSP2Triangles(2, 4, 0, 0, 5, 4, 2, 0),
+	gsSP2Triangles(6, 4, 5, 0, 5, 7, 6, 0),
+	gsSP2Triangles(7, 8, 6, 0, 9, 8, 7, 0),
+	gsSP2Triangles(10, 8, 9, 0, 11, 10, 9, 0),
+	gsSP2Triangles(9, 12, 11, 0, 11, 13, 10, 0),
+	gsSP2Triangles(13, 11, 14, 0, 15, 14, 11, 0),
+	gsSP2Triangles(15, 11, 16, 0, 15, 16, 17, 0),
+	gsSP2Triangles(18, 17, 16, 0, 17, 18, 19, 0),
+	gsSP2Triangles(18, 20, 19, 0, 20, 18, 21, 0),
+	gsSP2Triangles(20, 21, 22, 0, 23, 20, 22, 0),
+	gsSP2Triangles(24, 20, 23, 0, 25, 24, 23, 0),
+	gsSP2Triangles(23, 26, 25, 0, 26, 27, 25, 0),
+	gsSP2Triangles(27, 26, 28, 0, 25, 29, 24, 0),
+	gsSP2Triangles(29, 25, 30, 0, 30, 31, 29, 0),
+	gsSPVertex(mario_000_offset_001_mesh_vtx_0 + 64, 24, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
+	gsSP2Triangles(0, 3, 4, 0, 3, 5, 4, 0),
+	gsSP2Triangles(3, 6, 5, 0, 3, 7, 6, 0),
+	gsSP2Triangles(8, 6, 7, 0, 5, 9, 4, 0),
+	gsSP2Triangles(9, 5, 10, 0, 9, 10, 11, 0),
+	gsSP2Triangles(12, 9, 11, 0, 13, 9, 12, 0),
+	gsSP2Triangles(13, 12, 14, 0, 14, 15, 13, 0),
+	gsSP2Triangles(15, 16, 13, 0, 15, 17, 16, 0),
+	gsSP2Triangles(16, 17, 18, 0, 16, 19, 13, 0),
+	gsSP2Triangles(16, 20, 19, 0, 20, 16, 21, 0),
+	gsSP2Triangles(21, 22, 20, 0, 22, 23, 20, 0),
+	gsSP2Triangles(1, 20, 23, 0, 19, 20, 1, 0),
+	gsSP2Triangles(1, 0, 19, 0, 0, 4, 19, 0),
+	gsSP2Triangles(19, 4, 9, 0, 9, 13, 19, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_offset_001_mesh_vtx_1[23] = {
+	{{{47, 75, -34},0, {-16, -16},{0x48, 0x66, 0xE6, 0xFF}}},
+	{{{47, 75, 35},0, {-16, -16},{0x48, 0x66, 0x1A, 0xFF}}},
+	{{{82, 37, 27},0, {-16, -16},{0x68, 0x45, 0x15, 0xFF}}},
+	{{{82, 37, -26},0, {-16, -16},{0x68, 0x45, 0xEB, 0xFF}}},
+	{{{100, 1, 24},0, {-16, -16},{0x7C, 0x12, 0x15, 0xFF}}},
+	{{{100, 1, -23},0, {-16, -16},{0x7C, 0x12, 0xEB, 0xFF}}},
+	{{{93, -36, 26},0, {-16, -16},{0x6B, 0xBE, 0x10, 0xFF}}},
+	{{{93, -36, -25},0, {-16, -16},{0x6B, 0xBE, 0xF0, 0xFF}}},
+	{{{54, -63, 0},0, {-16, -16},{0x30, 0x8A, 0x0, 0xFF}}},
+	{{{46, -34, 84},0, {-16, -16},{0x24, 0xC9, 0x6D, 0xFF}}},
+	{{{47, 3, 89},0, {-16, -16},{0x2F, 0x8, 0x76, 0xFF}}},
+	{{{6, -11, 93},0, {-16, -16},{0x0, 0xE9, 0x7D, 0xFF}}},
+	{{{84, -29, 63},0, {-16, -16},{0x5E, 0xD7, 0x4B, 0xFF}}},
+	{{{80, 14, 62},0, {-16, -16},{0x61, 0x23, 0x4A, 0xFF}}},
+	{{{44, 51, 75},0, {-16, -16},{0x3E, 0x37, 0x60, 0xFF}}},
+	{{{13, 33, 91},0, {-16, -16},{0x10, 0x1C, 0x7B, 0xFF}}},
+	{{{6, -10, -92},0, {-16, -16},{0x0, 0xEA, 0x83, 0xFF}}},
+	{{{47, 3, -88},0, {-16, -16},{0x2F, 0x9, 0x8A, 0xFF}}},
+	{{{46, -34, -83},0, {-16, -16},{0x24, 0xC9, 0x93, 0xFF}}},
+	{{{12, 33, -90},0, {-16, -16},{0xD, 0x1C, 0x85, 0xFF}}},
+	{{{43, 51, -74},0, {-16, -16},{0x3D, 0x34, 0x9E, 0xFF}}},
+	{{{80, 14, -61},0, {-16, -16},{0x61, 0x24, 0xB7, 0xFF}}},
+	{{{84, -29, -62},0, {-16, -16},{0x5E, 0xD7, 0xB5, 0xFF}}},
+};
+
+Gfx mario_000_offset_001_mesh_tri_1[] = {
+	gsSPVertex(mario_000_offset_001_mesh_vtx_1 + 0, 23, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSP2Triangles(4, 3, 2, 0, 4, 5, 3, 0),
+	gsSP2Triangles(5, 4, 6, 0, 5, 6, 7, 0),
+	gsSP2Triangles(8, 7, 6, 0, 9, 10, 11, 0),
+	gsSP2Triangles(10, 9, 12, 0, 13, 10, 12, 0),
+	gsSP2Triangles(14, 10, 13, 0, 15, 10, 14, 0),
+	gsSP2Triangles(15, 11, 10, 0, 16, 17, 18, 0),
+	gsSP2Triangles(16, 19, 17, 0, 17, 19, 20, 0),
+	gsSP2Triangles(21, 17, 20, 0, 22, 17, 21, 0),
+	gsSP1Triangle(22, 18, 17, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_offset_001_mesh_vtx_2[14] = {
+	{{{9, 89, -40},0, {760, 904},{0xF, 0x78, 0xD8, 0xFF}}},
+	{{{28, 85, -29},0, {974, 496},{0x2D, 0x76, 0xF0, 0xFF}}},
+	{{{47, 75, -34},0, {834, 56},{0x48, 0x66, 0xE6, 0xFF}}},
+	{{{3, 77, -61},0, {248, 956},{0x4, 0x6C, 0xBD, 0xFF}}},
+	{{{17, 66, -75},0, {-74, 626},{0x17, 0x57, 0xA7, 0xFF}}},
+	{{{32, 62, -73},0, {-40, 294},{0x2A, 0x51, 0xA8, 0xFF}}},
+	{{{48, 64, -58},0, {296, -16},{0x46, 0x59, 0xC7, 0xFF}}},
+	{{{47, 75, 35},0, {18, 90},{0x48, 0x66, 0x1A, 0xFF}}},
+	{{{28, 85, 30},0, {-76, 556},{0x2D, 0x76, 0x10, 0xFF}}},
+	{{{9, 89, 41},0, {164, 946},{0x10, 0x78, 0x28, 0xFF}}},
+	{{{3, 77, 62},0, {666, 950},{0x4, 0x6C, 0x42, 0xFF}}},
+	{{{17, 66, 76},0, {950, 574},{0x19, 0x58, 0x59, 0xFF}}},
+	{{{32, 62, 74},0, {886, 236},{0x29, 0x53, 0x57, 0xFF}}},
+	{{{48, 64, 59},0, {532, -16},{0x46, 0x5A, 0x37, 0xFF}}},
+};
+
+Gfx mario_000_offset_001_mesh_tri_2[] = {
+	gsSPVertex(mario_000_offset_001_mesh_vtx_2 + 0, 14, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
+	gsSP2Triangles(4, 3, 2, 0, 5, 4, 2, 0),
+	gsSP2Triangles(2, 6, 5, 0, 7, 8, 9, 0),
+	gsSP2Triangles(9, 10, 7, 0, 10, 11, 7, 0),
+	gsSP2Triangles(11, 12, 7, 0, 12, 13, 7, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_displaylist_mesh_vtx_0[10] = {
+	{{{97, 103, 25},0, {708, 942},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{104, 87, 70},0, {1122, 848},{0x2B, 0x63, 0x44, 0xFF}}},
+	{{{144, 83, 67},0, {1092, 412},{0x20, 0x5B, 0x52, 0xFF}}},
+	{{{175, 91, 39},0, {826, 96},{0xA5, 0x57, 0xB, 0xFF}}},
+	{{{145, 101, 0},0, {464, 430},{0x17, 0x7D, 0x0, 0xFF}}},
+	{{{175, 91, -38},0, {90, 114},{0xA5, 0x57, 0xF5, 0xFF}}},
+	{{{97, 103, -24},0, {240, 954},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{144, 83, -66},0, {-162, 444},{0x20, 0x5B, 0xAE, 0xFF}}},
+	{{{104, 87, -69},0, {-176, 882},{0x2B, 0x63, 0xBC, 0xFF}}},
+	{{{108, 105, 0},0, {472, 838},{0x65, 0x4D, 0xFF, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_0[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_0 + 0, 10, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
+	gsSP2Triangles(3, 4, 0, 0, 5, 4, 3, 0),
+	gsSP2Triangles(6, 4, 5, 0, 6, 5, 7, 0),
+	gsSP2Triangles(8, 6, 7, 0, 6, 9, 4, 0),
+	gsSP1Triangle(4, 9, 0, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_mesh_vtx_1[71] = {
+	{{{153, 33, 95},0, {1346, 280},{0x1, 0x46, 0x6A, 0xFF}}},
+	{{{175, 91, 39},0, {826, 96},{0xA5, 0x57, 0xB, 0xFF}}},
+	{{{144, 83, 67},0, {1092, 412},{0x20, 0x5B, 0x52, 0xFF}}},
+	{{{144, 83, -66},0, {-162, 444},{0x20, 0x5B, 0xAE, 0xFF}}},
+	{{{175, 91, -38},0, {90, 114},{0xA5, 0x57, 0xF5, 0xFF}}},
+	{{{153, 33, -94},0, {-420, 326},{0x0, 0x46, 0x96, 0xFF}}},
+	{{{92, 88, 84},0, {-16, -16},{0x2B, 0x4E, 0x5A, 0xFF}}},
+	{{{104, 87, 70},0, {-16, -16},{0x2B, 0x63, 0x44, 0xFF}}},
+	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{96, 49, 94},0, {-16, -16},{0xC, 0x29, 0x78, 0xFF}}},
+	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{144, 83, 67},0, {-16, -16},{0x20, 0x5B, 0x52, 0xFF}}},
+	{{{153, 33, 95},0, {-16, -16},{0x1, 0x46, 0x6A, 0xFF}}},
+	{{{92, 88, -83},0, {-16, -16},{0x2B, 0x4E, 0xA6, 0xFF}}},
+	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{104, 87, -69},0, {-16, -16},{0x2B, 0x63, 0xBC, 0xFF}}},
+	{{{96, 49, -93},0, {-16, -16},{0xC, 0x28, 0x88, 0xFF}}},
+	{{{144, 83, -66},0, {-16, -16},{0x20, 0x5B, 0xAE, 0xFF}}},
+	{{{153, 33, -94},0, {-16, -16},{0x0, 0x46, 0x96, 0xFF}}},
+	{{{44, 44, -96},0, {-16, -16},{0xD1, 0x1E, 0x8E, 0xFF}}},
+	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
+	{{{42, 0, 103},0, {-16, -16},{0xB8, 0xFF, 0x68, 0xFF}}},
+	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
+	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
+	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
+	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
+	{{{42, 0, -102},0, {-16, -16},{0xB8, 0xFF, 0x98, 0xFF}}},
+	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
+	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
+	{{{85, -23, -110},0, {-16, -16},{0x7, 0x5A, 0xA7, 0xFF}}},
+	{{{102, -33, -134},0, {-16, -16},{0x33, 0xED, 0x8D, 0xFF}}},
+	{{{120, -12, -109},0, {-16, -16},{0xEE, 0x20, 0x86, 0xFF}}},
+	{{{102, -33, -134},0, {-16, -16},{0x33, 0xED, 0x8D, 0xFF}}},
+	{{{120, -12, -109},0, {-16, -16},{0xEE, 0x20, 0x86, 0xFF}}},
+	{{{91, -54, -85},0, {-16, -16},{0xC7, 0xC0, 0xA3, 0xFF}}},
+	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
+	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
+	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{108, 105, 0},0, {-16, -16},{0x65, 0x4D, 0xFF, 0xFF}}},
+	{{{117, 128, 0},0, {-16, -16},{0x7C, 0xE4, 0xFF, 0xFF}}},
+	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{102, 129, -40},0, {-16, -16},{0x4C, 0xDF, 0xA0, 0xFF}}},
+	{{{77, 108, -33},0, {-16, -16},{0x18, 0x2D, 0x8C, 0xFF}}},
+	{{{75, 130, -45},0, {-16, -16},{0xFE, 0xE1, 0x85, 0xFF}}},
+	{{{47, 131, -40},0, {-16, -16},{0xAF, 0xE9, 0xA1, 0xFF}}},
+	{{{52, 111, -30},0, {-16, -16},{0xB4, 0x37, 0xAB, 0xFF}}},
+	{{{32, 132, 0},0, {-16, -16},{0x83, 0xEC, 0xFE, 0xFF}}},
+	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{52, 111, 31},0, {-16, -16},{0xB4, 0x37, 0x55, 0xFF}}},
+	{{{47, 131, 41},0, {-16, -16},{0xB0, 0xE7, 0x60, 0xFF}}},
+	{{{77, 108, 34},0, {-16, -16},{0x18, 0x2D, 0x74, 0xFF}}},
+	{{{75, 130, 46},0, {-16, -16},{0xFE, 0xE1, 0x7B, 0xFF}}},
+	{{{102, 129, 41},0, {-16, -16},{0x4C, 0xDF, 0x60, 0xFF}}},
+	{{{104, 162, 41},0, {-16, -16},{0x49, 0x39, 0x57, 0xFF}}},
+	{{{119, 161, 0},0, {-16, -16},{0x78, 0x29, 0x0, 0xFF}}},
+	{{{104, 162, -40},0, {-16, -16},{0x48, 0x38, 0xA8, 0xFF}}},
+	{{{78, 163, -45},0, {-16, -16},{0x3, 0x43, 0x94, 0xFF}}},
+	{{{52, 164, -40},0, {-16, -16},{0xC2, 0x41, 0xA7, 0xFF}}},
+	{{{33, 165, 0},0, {-16, -16},{0x90, 0x3C, 0xFE, 0xFF}}},
+	{{{52, 164, 41},0, {-16, -16},{0xC3, 0x43, 0x59, 0xFF}}},
+	{{{78, 163, 46},0, {-16, -16},{0x3, 0x44, 0x6B, 0xFF}}},
+	{{{101, 179, 0},0, {-16, -16},{0x30, 0x76, 0x0, 0xFF}}},
+	{{{60, 181, 0},0, {-16, -16},{0xE5, 0x7C, 0x0, 0xFF}}},
+	{{{42, 0, 103},0, {-16, -16},{0xB8, 0xFF, 0x68, 0xFF}}},
+	{{{64, -25, 135},0, {-16, -16},{0xD6, 0x6, 0x78, 0xFF}}},
+	{{{85, -23, 111},0, {-16, -16},{0x5, 0x5A, 0x59, 0xFF}}},
+	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
+	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
+	{{{91, -54, 86},0, {-16, -16},{0xC7, 0xC0, 0x5D, 0xFF}}},
+	{{{102, -33, 135},0, {-16, -16},{0x32, 0xEB, 0x73, 0xFF}}},
+	{{{120, -11, 111},0, {-16, -16},{0xED, 0x20, 0x7A, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_1[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_1 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
+	gsSP2Triangles(6, 7, 8, 0, 7, 6, 9, 0),
+	gsSP2Triangles(10, 9, 6, 0, 11, 7, 9, 0),
+	gsSP2Triangles(9, 12, 11, 0, 13, 14, 15, 0),
+	gsSP2Triangles(16, 13, 15, 0, 16, 15, 17, 0),
+	gsSP2Triangles(17, 18, 16, 0, 13, 16, 19, 0),
+	gsSP2Triangles(10, 20, 21, 0, 20, 22, 21, 0),
+	gsSP2Triangles(22, 20, 23, 0, 24, 22, 23, 0),
+	gsSP2Triangles(24, 23, 25, 0, 26, 24, 25, 0),
+	gsSP2Triangles(26, 25, 19, 0, 26, 27, 24, 0),
+	gsSP2Triangles(26, 28, 27, 0, 29, 28, 26, 0),
+	gsSP2Triangles(29, 30, 28, 0, 30, 29, 31, 0),
+	gsSPVertex(mario_000_displaylist_mesh_vtx_1 + 32, 31, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
+	gsSP2Triangles(4, 3, 2, 0, 5, 6, 7, 0),
+	gsSP2Triangles(7, 6, 8, 0, 8, 9, 7, 0),
+	gsSP2Triangles(9, 8, 10, 0, 11, 9, 10, 0),
+	gsSP2Triangles(12, 11, 10, 0, 10, 13, 12, 0),
+	gsSP2Triangles(14, 12, 13, 0, 13, 15, 14, 0),
+	gsSP2Triangles(14, 15, 16, 0, 16, 17, 14, 0),
+	gsSP2Triangles(17, 16, 18, 0, 19, 17, 18, 0),
+	gsSP2Triangles(20, 19, 18, 0, 18, 5, 20, 0),
+	gsSP2Triangles(7, 20, 5, 0, 21, 20, 7, 0),
+	gsSP2Triangles(22, 21, 7, 0, 7, 9, 22, 0),
+	gsSP2Triangles(9, 23, 22, 0, 11, 23, 9, 0),
+	gsSP2Triangles(11, 24, 23, 0, 25, 24, 11, 0),
+	gsSP2Triangles(12, 25, 11, 0, 25, 12, 14, 0),
+	gsSP2Triangles(26, 25, 14, 0, 14, 17, 26, 0),
+	gsSP2Triangles(17, 27, 26, 0, 27, 17, 19, 0),
+	gsSP2Triangles(27, 19, 28, 0, 28, 19, 21, 0),
+	gsSP2Triangles(19, 20, 21, 0, 21, 29, 28, 0),
+	gsSP2Triangles(29, 21, 22, 0, 29, 22, 23, 0),
+	gsSP2Triangles(29, 23, 24, 0, 24, 30, 29, 0),
+	gsSP2Triangles(30, 24, 25, 0, 26, 30, 25, 0),
+	gsSP2Triangles(26, 27, 30, 0, 27, 28, 30, 0),
+	gsSP1Triangle(30, 28, 29, 0),
+	gsSPVertex(mario_000_displaylist_mesh_vtx_1 + 63, 8, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
+	gsSP2Triangles(4, 3, 0, 0, 1, 3, 5, 0),
+	gsSP2Triangles(1, 5, 6, 0, 5, 7, 6, 0),
+	gsSP2Triangles(7, 2, 6, 0, 1, 6, 2, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_mesh_vtx_2[24] = {
+	{{{92, 88, -83},0, {906, -20},{0x2B, 0x4E, 0xA6, 0xFF}}},
+	{{{77, 108, -33},0, {346, 328},{0x18, 0x2D, 0x8C, 0xFF}}},
+	{{{97, 103, -24},0, {258, 84},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{48, 94, -75},0, {840, 592},{0xD5, 0x59, 0xB0, 0xFF}}},
+	{{{44, 44, -96},0, {1234, 502},{0xD1, 0x1E, 0x8E, 0xFF}}},
+	{{{3, 54, -51},0, {790, 1146},{0x8F, 0x1A, 0xCB, 0xFF}}},
+	{{{27, 100, -29},0, {378, 982},{0xB0, 0x60, 0xE6, 0xFF}}},
+	{{{52, 111, -30},0, {324, 668},{0xB4, 0x37, 0xAB, 0xFF}}},
+	{{{41, 109, 0},0, {34, 884},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{27, 100, 30},0, {426, 966},{0xB0, 0x60, 0x1A, 0xFF}}},
+	{{{52, 111, 31},0, {338, 674},{0xB4, 0x37, 0x55, 0xFF}}},
+	{{{41, 109, 0},0, {54, 908},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{48, 94, 76},0, {872, 548},{0xD5, 0x59, 0x50, 0xFF}}},
+	{{{3, 54, 52},0, {876, 1074},{0x8F, 0x1A, 0x35, 0xFF}}},
+	{{{44, 44, 97},0, {1280, 422},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{92, 88, 84},0, {882, -34},{0x2B, 0x4E, 0x5A, 0xFF}}},
+	{{{77, 108, 34},0, {326, 352},{0x18, 0x2D, 0x74, 0xFF}}},
+	{{{97, 103, 25},0, {208, 130},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{27, 100, -29},0, {-16, -16},{0xB0, 0x60, 0xE6, 0xFF}}},
+	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
+	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
+	{{{27, 100, 30},0, {-16, -16},{0xB0, 0x60, 0x1A, 0xFF}}},
+	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
+	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_2[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_2 + 0, 24, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(0, 4, 3, 0, 5, 3, 4, 0),
+	gsSP2Triangles(6, 3, 5, 0, 7, 3, 6, 0),
+	gsSP2Triangles(8, 7, 6, 0, 3, 7, 1, 0),
+	gsSP2Triangles(9, 10, 11, 0, 9, 12, 10, 0),
+	gsSP2Triangles(13, 12, 9, 0, 14, 12, 13, 0),
+	gsSP2Triangles(12, 14, 15, 0, 15, 16, 12, 0),
+	gsSP2Triangles(16, 15, 17, 0, 16, 10, 12, 0),
+	gsSP2Triangles(18, 19, 20, 0, 21, 18, 20, 0),
+	gsSP2Triangles(20, 22, 21, 0, 23, 18, 21, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_mesh_vtx_3[19] = {
+	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
+	{{{31, -84, 0},0, {-16, -16},{0x9E, 0xB0, 0x1, 0xFF}}},
+	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
+	{{{9, -88, -58},0, {-16, -16},{0x84, 0xEC, 0xEA, 0xFF}}},
+	{{{31, -85, -86},0, {-16, -16},{0xE4, 0xFA, 0x84, 0xFF}}},
+	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
+	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
+	{{{64, -103, -51},0, {-16, -16},{0xF2, 0x95, 0xBD, 0xFF}}},
+	{{{91, -54, -85},0, {-16, -16},{0xC7, 0xC0, 0xA3, 0xFF}}},
+	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
+	{{{35, -120, -67},0, {-16, -16},{0xE6, 0x92, 0xC6, 0xFF}}},
+	{{{64, -103, 52},0, {-16, -16},{0xF2, 0x95, 0x43, 0xFF}}},
+	{{{36, -116, 36},0, {-16, -16},{0xEE, 0x92, 0xC3, 0xFF}}},
+	{{{58, -114, 60},0, {-16, -16},{0x57, 0xAA, 0x21, 0xFF}}},
+	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
+	{{{91, -54, 86},0, {-16, -16},{0xC7, 0xC0, 0x5D, 0xFF}}},
+	{{{31, -85, 87},0, {-16, -16},{0xE4, 0xFA, 0x7C, 0xFF}}},
+	{{{9, -88, 59},0, {-16, -16},{0x84, 0xEC, 0x16, 0xFF}}},
+	{{{35, -120, 68},0, {-16, -16},{0xE6, 0x92, 0x3A, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_3[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_3 + 0, 19, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
+	gsSP2Triangles(4, 3, 0, 0, 0, 5, 4, 0),
+	gsSP2Triangles(6, 4, 5, 0, 5, 7, 6, 0),
+	gsSP2Triangles(5, 8, 7, 0, 9, 6, 7, 0),
+	gsSP2Triangles(9, 10, 6, 0, 3, 10, 9, 0),
+	gsSP2Triangles(3, 9, 1, 0, 1, 9, 7, 0),
+	gsSP2Triangles(1, 7, 11, 0, 1, 11, 12, 0),
+	gsSP2Triangles(13, 12, 11, 0, 13, 11, 14, 0),
+	gsSP2Triangles(11, 15, 14, 0, 14, 16, 13, 0),
+	gsSP2Triangles(16, 14, 2, 0, 2, 17, 16, 0),
+	gsSP2Triangles(17, 2, 1, 0, 1, 12, 17, 0),
+	gsSP2Triangles(12, 18, 17, 0, 13, 18, 12, 0),
+	gsSP2Triangles(16, 18, 13, 0, 17, 18, 16, 0),
+	gsSP2Triangles(10, 4, 6, 0, 4, 10, 3, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_mesh_vtx_4[12] = {
+	{{{96, 49, 94},0, {-90, 710},{0xC, 0x29, 0x78, 0xFF}}},
+	{{{44, 44, 97},0, {180, 1350},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{42, 0, 103},0, {952, 1176},{0xB8, 0xFF, 0x68, 0xFF}}},
+	{{{85, -23, 111},0, {1222, 502},{0x5, 0x5A, 0x59, 0xFF}}},
+	{{{120, -11, 111},0, {906, 106},{0xED, 0x20, 0x7A, 0xFF}}},
+	{{{153, 33, 95},0, {6, -84},{0x1, 0x46, 0x6A, 0xFF}}},
+	{{{120, -12, -109},0, {900, 168},{0xEE, 0x20, 0x86, 0xFF}}},
+	{{{96, 49, -93},0, {-86, 684},{0xC, 0x28, 0x88, 0xFF}}},
+	{{{153, 33, -94},0, {74, -74},{0x0, 0x46, 0x96, 0xFF}}},
+	{{{85, -23, -110},0, {1134, 566},{0x7, 0x5A, 0xA7, 0xFF}}},
+	{{{42, 0, -102},0, {826, 1194},{0xB8, 0xFF, 0x98, 0xFF}}},
+	{{{44, 44, -96},0, {102, 1318},{0xD1, 0x1E, 0x8E, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_4[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_4 + 0, 12, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
+	gsSP2Triangles(3, 4, 0, 0, 5, 0, 4, 0),
+	gsSP2Triangles(6, 7, 8, 0, 9, 7, 6, 0),
+	gsSP2Triangles(7, 9, 10, 0, 10, 11, 7, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_mesh_vtx_5[30] = {
+	{{{120, -12, -109},0, {-16, -16},{0xEE, 0x20, 0x86, 0xFF}}},
+	{{{131, -56, -123},0, {-16, -16},{0xEA, 0xD7, 0x8A, 0xFF}}},
+	{{{91, -54, -85},0, {-16, -16},{0xC7, 0xC0, 0xA3, 0xFF}}},
+	{{{187, -6, -133},0, {-16, -16},{0x22, 0x6, 0x86, 0xFF}}},
+	{{{153, 33, -94},0, {-16, -16},{0x0, 0x46, 0x96, 0xFF}}},
+	{{{252, 62, -69},0, {-16, -16},{0x47, 0x41, 0xAE, 0xFF}}},
+	{{{271, 0, -41},0, {-16, -16},{0x71, 0xD2, 0xDB, 0xFF}}},
+	{{{272, 85, 0},0, {-16, -16},{0x5E, 0x55, 0x0, 0xFF}}},
+	{{{271, 0, 42},0, {-16, -16},{0x71, 0xD2, 0x25, 0xFF}}},
+	{{{252, 62, 70},0, {-16, -16},{0x47, 0x41, 0x52, 0xFF}}},
+	{{{187, -6, 134},0, {-16, -16},{0x23, 0x6, 0x7A, 0xFF}}},
+	{{{153, 33, 95},0, {-16, -16},{0x1, 0x46, 0x6A, 0xFF}}},
+	{{{120, -11, 111},0, {-16, -16},{0xED, 0x20, 0x7A, 0xFF}}},
+	{{{131, -56, 124},0, {-16, -16},{0xEA, 0xD6, 0x76, 0xFF}}},
+	{{{91, -54, 86},0, {-16, -16},{0xC7, 0xC0, 0x5D, 0xFF}}},
+	{{{64, -103, 52},0, {-16, -16},{0xF2, 0x95, 0x43, 0xFF}}},
+	{{{77, -138, 51},0, {-16, -16},{0xBE, 0xA0, 0x32, 0xFF}}},
+	{{{77, -138, -50},0, {-16, -16},{0xBE, 0xA0, 0xCE, 0xFF}}},
+	{{{64, -103, -51},0, {-16, -16},{0xF2, 0x95, 0xBD, 0xFF}}},
+	{{{122, -139, -48},0, {-16, -16},{0x2C, 0x90, 0xD6, 0xFF}}},
+	{{{164, -89, -74},0, {-16, -16},{0x4A, 0xA7, 0xCC, 0xFF}}},
+	{{{164, -89, 75},0, {-16, -16},{0x4A, 0xA7, 0x34, 0xFF}}},
+	{{{122, -139, 49},0, {-16, -16},{0x2C, 0x90, 0x2A, 0xFF}}},
+	{{{195, 93, 32},0, {-16, -16},{0x53, 0x52, 0x34, 0xFF}}},
+	{{{173, 132, 66},0, {-16, -16},{0xE9, 0x58, 0x59, 0xFF}}},
+	{{{182, 155, 0},0, {-16, -16},{0xFD, 0x7F, 0x0, 0xFF}}},
+	{{{195, 93, -31},0, {-16, -16},{0x52, 0x51, 0xCB, 0xFF}}},
+	{{{173, 132, -65},0, {-16, -16},{0xE9, 0x57, 0xA7, 0xFF}}},
+	{{{175, 91, -38},0, {-16, -16},{0xA5, 0x57, 0xF5, 0xFF}}},
+	{{{175, 91, 39},0, {-16, -16},{0xA5, 0x57, 0xB, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_5[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_5 + 0, 30, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
+	gsSP2Triangles(6, 3, 5, 0, 5, 7, 6, 0),
+	gsSP2Triangles(6, 7, 8, 0, 8, 7, 9, 0),
+	gsSP2Triangles(9, 10, 8, 0, 10, 9, 11, 0),
+	gsSP2Triangles(10, 11, 12, 0, 12, 13, 10, 0),
+	gsSP2Triangles(14, 13, 12, 0, 14, 15, 13, 0),
+	gsSP2Triangles(13, 15, 16, 0, 16, 15, 17, 0),
+	gsSP2Triangles(15, 18, 17, 0, 17, 18, 1, 0),
+	gsSP2Triangles(2, 1, 18, 0, 1, 19, 17, 0),
+	gsSP2Triangles(20, 19, 1, 0, 3, 20, 1, 0),
+	gsSP2Triangles(20, 3, 6, 0, 20, 6, 21, 0),
+	gsSP2Triangles(6, 8, 21, 0, 8, 10, 21, 0),
+	gsSP2Triangles(13, 21, 10, 0, 13, 22, 21, 0),
+	gsSP2Triangles(16, 22, 13, 0, 17, 22, 16, 0),
+	gsSP2Triangles(17, 19, 22, 0, 22, 19, 20, 0),
+	gsSP2Triangles(20, 21, 22, 0, 23, 24, 11, 0),
+	gsSP2Triangles(23, 25, 24, 0, 26, 25, 23, 0),
+	gsSP2Triangles(27, 25, 26, 0, 27, 26, 4, 0),
+	gsSP2Triangles(28, 27, 4, 0, 28, 25, 27, 0),
+	gsSP2Triangles(28, 29, 25, 0, 24, 25, 29, 0),
+	gsSP1Triangle(11, 24, 29, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_mesh_vtx_6[7] = {
+	{{{195, 93, 32},0, {728, 716},{0x53, 0x52, 0x34, 0xFF}}},
+	{{{153, 33, 95},0, {1234, 1050},{0x1, 0x46, 0x6A, 0xFF}}},
+	{{{252, 62, 70},0, {1016, 136},{0x47, 0x41, 0x52, 0xFF}}},
+	{{{272, 85, 0},0, {456, -32},{0x5E, 0x55, 0x0, 0xFF}}},
+	{{{195, 93, -31},0, {216, 720},{0x52, 0x51, 0xCB, 0xFF}}},
+	{{{252, 62, -69},0, {-94, 142},{0x47, 0x41, 0xAE, 0xFF}}},
+	{{{153, 33, -94},0, {-274, 1060},{0x0, 0x46, 0x96, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_mesh_tri_6[] = {
+	gsSPVertex(mario_000_displaylist_mesh_vtx_6 + 0, 7, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
+	gsSP2Triangles(3, 4, 0, 0, 3, 5, 4, 0),
+	gsSP1Triangle(5, 6, 4, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_002_switch_option_head__no_cap__mesh_vtx_0[85] = {
+	{{{104, 87, -69},0, {-176, 882},{0x2B, 0x63, 0xBC, 0xFF}}},
+	{{{97, 103, -24},0, {240, 954},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{144, 83, -66},0, {-162, 444},{0x20, 0x5B, 0xAE, 0xFF}}},
+	{{{175, 91, -38},0, {90, 114},{0x21, 0x73, 0xD5, 0xFF}}},
+	{{{145, 101, 0},0, {464, 430},{0x17, 0x7D, 0x0, 0xFF}}},
+	{{{108, 105, 0},0, {472, 838},{0x65, 0x4D, 0xFF, 0xFF}}},
+	{{{97, 103, 25},0, {708, 942},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{175, 91, 39},0, {826, 96},{0x21, 0x73, 0x2B, 0xFF}}},
+	{{{144, 83, 67},0, {1092, 412},{0x20, 0x5B, 0x52, 0xFF}}},
+	{{{104, 87, 70},0, {1122, 848},{0x2B, 0x63, 0x44, 0xFF}}},
+	{{{153, 33, 95},0, {1346, 280},{0xFE, 0x36, 0x73, 0xFF}}},
+	{{{153, 33, -94},0, {-420, 326},{0xF5, 0x33, 0x8C, 0xFF}}},
+	{{{144, 83, -66},0, {-16, -16},{0x20, 0x5B, 0xAE, 0xFF}}},
+	{{{153, 33, -94},0, {-16, -16},{0xF5, 0x33, 0x8C, 0xFF}}},
+	{{{96, 49, -93},0, {-16, -16},{0xC, 0x28, 0x88, 0xFF}}},
+	{{{104, 87, -69},0, {-16, -16},{0x2B, 0x63, 0xBC, 0xFF}}},
+	{{{92, 88, -83},0, {-16, -16},{0x2B, 0x4E, 0xA6, 0xFF}}},
+	{{{44, 44, -96},0, {-16, -16},{0xD1, 0x1E, 0x8E, 0xFF}}},
+	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{92, 88, 84},0, {-16, -16},{0x2B, 0x4E, 0x5A, 0xFF}}},
+	{{{104, 87, 70},0, {-16, -16},{0x2B, 0x63, 0x44, 0xFF}}},
+	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{96, 49, 94},0, {-16, -16},{0xC, 0x29, 0x78, 0xFF}}},
+	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{144, 83, 67},0, {-16, -16},{0x20, 0x5B, 0x52, 0xFF}}},
+	{{{153, 33, 95},0, {-16, -16},{0xFE, 0x36, 0x73, 0xFF}}},
+	{{{42, 0, -102},0, {-16, -16},{0xB8, 0xFF, 0x98, 0xFF}}},
+	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
+	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
+	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
+	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
+	{{{85, -23, -110},0, {-16, -16},{0x7, 0x5A, 0xA7, 0xFF}}},
+	{{{85, -23, -110},0, {-16, -16},{0x7, 0x5A, 0xA7, 0xFF}}},
+	{{{102, -33, -134},0, {-16, -16},{0x33, 0xED, 0x8D, 0xFF}}},
+	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
+	{{{120, -12, -109},0, {-16, -16},{0x2, 0xE, 0x82, 0xFF}}},
+	{{{91, -54, -85},0, {-16, -16},{0xDA, 0xB6, 0xA0, 0xFF}}},
+	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
+	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
+	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
+	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
+	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
+	{{{31, -84, 0},0, {-16, -16},{0x9E, 0xB0, 0x1, 0xFF}}},
+	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
+	{{{42, 0, 103},0, {-16, -16},{0xB8, 0xFF, 0x68, 0xFF}}},
+	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
+	{{{64, -25, 135},0, {-16, -16},{0xD6, 0x6, 0x78, 0xFF}}},
+	{{{91, -54, 86},0, {-16, -16},{0xDA, 0xB6, 0x60, 0xFF}}},
+	{{{102, -33, 135},0, {-16, -16},{0x32, 0xEB, 0x73, 0xFF}}},
+	{{{120, -11, 111},0, {-16, -16},{0x1, 0xF, 0x7E, 0xFF}}},
+	{{{85, -23, 111},0, {-16, -16},{0x5, 0x5A, 0x59, 0xFF}}},
+	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{108, 105, 0},0, {-16, -16},{0x65, 0x4D, 0xFF, 0xFF}}},
+	{{{117, 128, 0},0, {-16, -16},{0x7C, 0xE4, 0xFF, 0xFF}}},
+	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{102, 129, -40},0, {-16, -16},{0x4C, 0xDF, 0xA0, 0xFF}}},
+	{{{77, 108, -33},0, {-16, -16},{0x18, 0x2D, 0x8C, 0xFF}}},
+	{{{75, 130, -45},0, {-16, -16},{0xFE, 0xE1, 0x85, 0xFF}}},
+	{{{47, 131, -40},0, {-16, -16},{0xAF, 0xE9, 0xA1, 0xFF}}},
+	{{{52, 111, -30},0, {-16, -16},{0xB4, 0x37, 0xAB, 0xFF}}},
+	{{{32, 132, 0},0, {-16, -16},{0x83, 0xEC, 0xFE, 0xFF}}},
+	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{52, 111, 31},0, {-16, -16},{0xB4, 0x37, 0x55, 0xFF}}},
+	{{{52, 111, 31},0, {-16, -16},{0xB4, 0x37, 0x55, 0xFF}}},
+	{{{47, 131, 41},0, {-16, -16},{0xB0, 0xE7, 0x60, 0xFF}}},
+	{{{32, 132, 0},0, {-16, -16},{0x83, 0xEC, 0xFE, 0xFF}}},
+	{{{77, 108, 34},0, {-16, -16},{0x18, 0x2D, 0x74, 0xFF}}},
+	{{{75, 130, 46},0, {-16, -16},{0xFE, 0xE1, 0x7B, 0xFF}}},
+	{{{102, 129, 41},0, {-16, -16},{0x4C, 0xDF, 0x60, 0xFF}}},
+	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{117, 128, 0},0, {-16, -16},{0x7C, 0xE4, 0xFF, 0xFF}}},
+	{{{104, 162, 41},0, {-16, -16},{0x49, 0x39, 0x57, 0xFF}}},
+	{{{119, 161, 0},0, {-16, -16},{0x78, 0x29, 0x0, 0xFF}}},
+	{{{102, 129, -40},0, {-16, -16},{0x4C, 0xDF, 0xA0, 0xFF}}},
+	{{{104, 162, -40},0, {-16, -16},{0x48, 0x38, 0xA8, 0xFF}}},
+	{{{75, 130, -45},0, {-16, -16},{0xFE, 0xE1, 0x85, 0xFF}}},
+	{{{78, 163, -45},0, {-16, -16},{0x3, 0x43, 0x94, 0xFF}}},
+	{{{52, 164, -40},0, {-16, -16},{0xC2, 0x41, 0xA7, 0xFF}}},
+	{{{47, 131, -40},0, {-16, -16},{0xAF, 0xE9, 0xA1, 0xFF}}},
+	{{{33, 165, 0},0, {-16, -16},{0x90, 0x3C, 0xFE, 0xFF}}},
+	{{{52, 164, 41},0, {-16, -16},{0xC3, 0x43, 0x59, 0xFF}}},
+	{{{78, 163, 46},0, {-16, -16},{0x3, 0x44, 0x6B, 0xFF}}},
+	{{{101, 179, 0},0, {-16, -16},{0x30, 0x76, 0x0, 0xFF}}},
+	{{{60, 181, 0},0, {-16, -16},{0xE5, 0x7C, 0x0, 0xFF}}},
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_tri_0[] = {
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
+	gsSP2Triangles(1, 4, 3, 0, 1, 5, 4, 0),
+	gsSP2Triangles(4, 5, 6, 0, 7, 4, 6, 0),
+	gsSP2Triangles(8, 7, 6, 0, 6, 9, 8, 0),
+	gsSP2Triangles(10, 7, 8, 0, 3, 4, 7, 0),
+	gsSP2Triangles(2, 3, 11, 0, 12, 13, 14, 0),
+	gsSP2Triangles(14, 15, 12, 0, 14, 16, 15, 0),
+	gsSP2Triangles(16, 14, 17, 0, 16, 18, 15, 0),
+	gsSP2Triangles(19, 20, 21, 0, 20, 19, 22, 0),
+	gsSP2Triangles(23, 22, 19, 0, 24, 20, 22, 0),
+	gsSP2Triangles(22, 25, 24, 0, 26, 27, 17, 0),
+	gsSP2Triangles(26, 28, 27, 0, 26, 29, 28, 0),
+	gsSP2Triangles(26, 30, 29, 0, 31, 30, 26, 0),
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_0 + 32, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
+	gsSP2Triangles(1, 3, 4, 0, 2, 1, 4, 0),
+	gsSP2Triangles(5, 2, 4, 0, 6, 7, 8, 0),
+	gsSP2Triangles(6, 9, 7, 0, 6, 10, 9, 0),
+	gsSP2Triangles(9, 11, 7, 0, 11, 9, 12, 0),
+	gsSP2Triangles(9, 13, 12, 0, 14, 12, 13, 0),
+	gsSP2Triangles(14, 13, 15, 0, 14, 15, 16, 0),
+	gsSP2Triangles(15, 17, 16, 0, 17, 18, 16, 0),
+	gsSP2Triangles(14, 16, 18, 0, 12, 14, 18, 0),
+	gsSP2Triangles(19, 11, 12, 0, 20, 21, 22, 0),
+	gsSP2Triangles(22, 21, 23, 0, 23, 24, 22, 0),
+	gsSP2Triangles(24, 23, 25, 0, 26, 24, 25, 0),
+	gsSP2Triangles(27, 26, 25, 0, 25, 28, 27, 0),
+	gsSP2Triangles(29, 27, 28, 0, 28, 30, 29, 0),
+	gsSP1Triangle(29, 30, 31, 0),
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_0 + 64, 21, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
+	gsSP2Triangles(4, 1, 3, 0, 5, 4, 3, 0),
+	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
+	gsSP2Triangles(8, 5, 7, 0, 9, 8, 7, 0),
+	gsSP2Triangles(7, 10, 9, 0, 10, 11, 9, 0),
+	gsSP2Triangles(12, 11, 10, 0, 12, 13, 11, 0),
+	gsSP2Triangles(14, 13, 12, 0, 15, 14, 12, 0),
+	gsSP2Triangles(14, 15, 2, 0, 16, 14, 2, 0),
+	gsSP2Triangles(2, 1, 16, 0, 1, 17, 16, 0),
+	gsSP2Triangles(17, 1, 4, 0, 17, 4, 18, 0),
+	gsSP2Triangles(18, 4, 8, 0, 4, 5, 8, 0),
+	gsSP2Triangles(8, 19, 18, 0, 19, 8, 9, 0),
+	gsSP2Triangles(19, 9, 11, 0, 19, 11, 13, 0),
+	gsSP2Triangles(13, 20, 19, 0, 20, 13, 14, 0),
+	gsSP2Triangles(16, 20, 14, 0, 16, 17, 20, 0),
+	gsSP2Triangles(17, 18, 20, 0, 20, 18, 19, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_002_switch_option_head__no_cap__mesh_vtx_1[26] = {
+	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{48, 94, 76},0, {-16, -16},{0xD5, 0x59, 0x50, 0xFF}}},
+	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
+	{{{77, 108, 34},0, {314, 300},{0x18, 0x2D, 0x74, 0xFF}}},
+	{{{92, 88, 84},0, {932, -24},{0x2B, 0x4E, 0x5A, 0xFF}}},
+	{{{97, 103, 25},0, {232, 34},{0x4E, 0x42, 0x4C, 0xFF}}},
+	{{{48, 94, 76},0, {832, 614},{0xD5, 0x59, 0x50, 0xFF}}},
+	{{{52, 111, 31},0, {276, 654},{0xB4, 0x37, 0x55, 0xFF}}},
+	{{{27, 100, 30},0, {320, 990},{0xB0, 0x60, 0x1A, 0xFF}}},
+	{{{41, 109, 0},0, {-46, 860},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{3, 54, 52},0, {752, 1194},{0x8F, 0x1A, 0x35, 0xFF}}},
+	{{{44, 44, 97},0, {1260, 550},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{92, 88, -83},0, {976, -26},{0x2B, 0x4E, 0xA6, 0xFF}}},
+	{{{77, 108, -33},0, {344, 280},{0x18, 0x2D, 0x8C, 0xFF}}},
+	{{{97, 103, -24},0, {282, 4},{0x4D, 0x42, 0xB4, 0xFF}}},
+	{{{48, 94, -75},0, {828, 624},{0xD5, 0x59, 0xB0, 0xFF}}},
+	{{{44, 44, -96},0, {1256, 576},{0xD1, 0x1E, 0x8E, 0xFF}}},
+	{{{3, 54, -51},0, {704, 1212},{0x8F, 0x1A, 0xCB, 0xFF}}},
+	{{{27, 100, -29},0, {294, 986},{0xB0, 0x60, 0xE6, 0xFF}}},
+	{{{52, 111, -30},0, {278, 640},{0xB4, 0x37, 0xAB, 0xFF}}},
+	{{{41, 109, 0},0, {-54, 836},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
+	{{{27, 100, 30},0, {-16, -16},{0xB0, 0x60, 0x1A, 0xFF}}},
+	{{{27, 100, -29},0, {-16, -16},{0xB0, 0x60, 0xE6, 0xFF}}},
+	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
+	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_tri_1[] = {
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_1 + 0, 26, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
+	gsSP2Triangles(4, 3, 6, 0, 3, 7, 6, 0),
+	gsSP2Triangles(8, 6, 7, 0, 8, 7, 9, 0),
+	gsSP2Triangles(10, 6, 8, 0, 6, 11, 4, 0),
+	gsSP2Triangles(12, 13, 14, 0, 15, 13, 12, 0),
+	gsSP2Triangles(12, 16, 15, 0, 17, 15, 16, 0),
+	gsSP2Triangles(18, 15, 17, 0, 19, 15, 18, 0),
+	gsSP2Triangles(20, 19, 18, 0, 15, 19, 13, 0),
+	gsSP2Triangles(21, 2, 22, 0, 22, 23, 21, 0),
+	gsSP2Triangles(24, 23, 22, 0, 23, 25, 21, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_002_switch_option_head__no_cap__mesh_vtx_2[12] = {
+	{{{96, 49, 94},0, {-90, 710},{0xC, 0x29, 0x78, 0xFF}}},
+	{{{44, 44, 97},0, {180, 1350},{0xD1, 0x1E, 0x72, 0xFF}}},
+	{{{42, 0, 103},0, {952, 1176},{0xB8, 0xFF, 0x68, 0xFF}}},
+	{{{85, -23, 111},0, {1222, 502},{0x5, 0x5A, 0x59, 0xFF}}},
+	{{{120, -11, 111},0, {906, 106},{0x1, 0xF, 0x7E, 0xFF}}},
+	{{{153, 33, 95},0, {6, -84},{0xFE, 0x36, 0x73, 0xFF}}},
+	{{{42, 0, -102},0, {826, 1194},{0xB8, 0xFF, 0x98, 0xFF}}},
+	{{{44, 44, -96},0, {102, 1318},{0xD1, 0x1E, 0x8E, 0xFF}}},
+	{{{96, 49, -93},0, {-86, 684},{0xC, 0x28, 0x88, 0xFF}}},
+	{{{85, -23, -110},0, {1134, 566},{0x7, 0x5A, 0xA7, 0xFF}}},
+	{{{120, -12, -109},0, {900, 168},{0x2, 0xE, 0x82, 0xFF}}},
+	{{{153, 33, -94},0, {74, -74},{0xF5, 0x33, 0x8C, 0xFF}}},
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_tri_2[] = {
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_2 + 0, 12, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
+	gsSP2Triangles(3, 4, 0, 0, 5, 0, 4, 0),
+	gsSP2Triangles(6, 7, 8, 0, 8, 9, 6, 0),
+	gsSP2Triangles(9, 8, 10, 0, 10, 8, 11, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_002_switch_option_head__no_cap__mesh_vtx_3[75] = {
+	{{{153, 33, 95},0, {-16, -16},{0xFE, 0x36, 0x73, 0xFF}}},
+	{{{200, 75, 84},0, {-16, -16},{0x21, 0x51, 0x5D, 0xFF}}},
+	{{{151, 72, 70},0, {-16, -16},{0xE2, 0x5B, 0x54, 0xFF}}},
+	{{{181, -9, 116},0, {-16, -16},{0x2A, 0x2, 0x78, 0xFF}}},
+	{{{120, -11, 111},0, {-16, -16},{0x1, 0xF, 0x7E, 0xFF}}},
+	{{{145, -83, 105},0, {-16, -16},{0xFF, 0xCA, 0x73, 0xFF}}},
+	{{{91, -54, 86},0, {-16, -16},{0xDA, 0xB6, 0x60, 0xFF}}},
+	{{{64, -103, 52},0, {-16, -16},{0x19, 0x8B, 0x2C, 0xFF}}},
+	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
+	{{{58, -114, 60},0, {-16, -16},{0x57, 0xAA, 0x21, 0xFF}}},
+	{{{31, -85, 87},0, {-16, -16},{0xE4, 0xFA, 0x7C, 0xFF}}},
+	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
+	{{{9, -88, 59},0, {-16, -16},{0x84, 0xEC, 0x16, 0xFF}}},
+	{{{31, -84, 0},0, {-16, -16},{0x9E, 0xB0, 0x1, 0xFF}}},
+	{{{36, -116, 36},0, {-16, -16},{0xEE, 0x92, 0xC3, 0xFF}}},
+	{{{64, -103, -51},0, {-16, -16},{0x1A, 0x8C, 0xD4, 0xFF}}},
+	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
+	{{{9, -88, -58},0, {-16, -16},{0x84, 0xEC, 0xEA, 0xFF}}},
+	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
+	{{{31, -85, -86},0, {-16, -16},{0xE4, 0xFA, 0x84, 0xFF}}},
+	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
+	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
+	{{{91, -54, -85},0, {-16, -16},{0xDA, 0xB6, 0xA0, 0xFF}}},
+	{{{145, -84, -104},0, {-16, -16},{0x0, 0xC8, 0x8E, 0xFF}}},
+	{{{120, -12, -109},0, {-16, -16},{0x2, 0xE, 0x82, 0xFF}}},
+	{{{182, -9, -115},0, {-16, -16},{0x2B, 0xFF, 0x88, 0xFF}}},
+	{{{153, 33, -94},0, {-16, -16},{0xF5, 0x33, 0x8C, 0xFF}}},
+	{{{200, 70, -97},0, {-16, -16},{0x21, 0x3F, 0x97, 0xFF}}},
+	{{{151, 72, -68},0, {-16, -16},{0xD7, 0x5E, 0xB5, 0xFF}}},
+	{{{175, 91, -38},0, {-16, -16},{0xC7, 0x63, 0xC8, 0xFF}}},
+	{{{211, 91, -71},0, {-16, -16},{0x23, 0x52, 0xA5, 0xFF}}},
+	{{{201, 125, -13},0, {-16, -16},{0xF8, 0x7F, 0xFF, 0xFF}}},
+	{{{175, 91, -38},0, {-16, -16},{0xC7, 0x63, 0xC8, 0xFF}}},
+	{{{160, 96, 0},0, {-16, -16},{0xB8, 0x68, 0x5, 0xFF}}},
+	{{{201, 125, -13},0, {-16, -16},{0xF8, 0x7F, 0xFF, 0xFF}}},
+	{{{175, 91, 39},0, {-16, -16},{0xE2, 0x70, 0x34, 0xFF}}},
+	{{{209, 86, 60},0, {-16, -16},{0x32, 0x62, 0x3F, 0xFF}}},
+	{{{200, 75, 84},0, {-16, -16},{0x21, 0x51, 0x5D, 0xFF}}},
+	{{{151, 72, 70},0, {-16, -16},{0xE2, 0x5B, 0x54, 0xFF}}},
+	{{{227, 35, 75},0, {-16, -16},{0x6C, 0xB, 0x42, 0xFF}}},
+	{{{181, -9, 116},0, {-16, -16},{0x2A, 0x2, 0x78, 0xFF}}},
+	{{{227, -14, 59},0, {-16, -16},{0x72, 0xEA, 0x34, 0xFF}}},
+	{{{189, -102, 73},0, {-16, -16},{0x49, 0xB0, 0x41, 0xFF}}},
+	{{{145, -83, 105},0, {-16, -16},{0xFF, 0xCA, 0x73, 0xFF}}},
+	{{{116, -126, 68},0, {-16, -16},{0xEA, 0x95, 0x41, 0xFF}}},
+	{{{64, -103, 52},0, {-16, -16},{0x19, 0x8B, 0x2C, 0xFF}}},
+	{{{119, -134, 0},0, {-16, -16},{0xF1, 0x82, 0xFE, 0xFF}}},
+	{{{64, -103, -51},0, {-16, -16},{0x1A, 0x8C, 0xD4, 0xFF}}},
+	{{{116, -124, -67},0, {-16, -16},{0xEB, 0x95, 0xBF, 0xFF}}},
+	{{{145, -84, -104},0, {-16, -16},{0x0, 0xC8, 0x8E, 0xFF}}},
+	{{{189, -102, -71},0, {-16, -16},{0x49, 0xAF, 0xC0, 0xFF}}},
+	{{{182, -9, -115},0, {-16, -16},{0x2B, 0xFF, 0x88, 0xFF}}},
+	{{{227, -14, -58},0, {-16, -16},{0x72, 0xEF, 0xCA, 0xFF}}},
+	{{{221, 35, -73},0, {-16, -16},{0x70, 0x3, 0xC4, 0xFF}}},
+	{{{200, 70, -97},0, {-16, -16},{0x21, 0x3F, 0x97, 0xFF}}},
+	{{{211, 91, -71},0, {-16, -16},{0x23, 0x52, 0xA5, 0xFF}}},
+	{{{232, 69, -34},0, {-16, -16},{0x75, 0xE2, 0xD8, 0xFF}}},
+	{{{248, 104, -43},0, {-16, -16},{0x6A, 0x32, 0xCF, 0xFF}}},
+	{{{231, 81, 33},0, {-16, -16},{0x6C, 0x34, 0x2A, 0xFF}}},
+	{{{237, 64, 0},0, {-16, -16},{0x7F, 0xF8, 0x5, 0xFF}}},
+	{{{241, -34, 0},0, {-16, -16},{0x7C, 0xE4, 0x0, 0xFF}}},
+	{{{200, -117, 0},0, {-16, -16},{0x4F, 0x9D, 0xFF, 0xFF}}},
+	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
+	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
+	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
+	{{{35, -120, -67},0, {-16, -16},{0xE6, 0x92, 0xC6, 0xFF}}},
+	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
+	{{{9, -88, -58},0, {-16, -16},{0x84, 0xEC, 0xEA, 0xFF}}},
+	{{{31, -85, -86},0, {-16, -16},{0xE4, 0xFA, 0x84, 0xFF}}},
+	{{{58, -114, 60},0, {-16, -16},{0x57, 0xAA, 0x21, 0xFF}}},
+	{{{36, -116, 36},0, {-16, -16},{0xEE, 0x92, 0xC3, 0xFF}}},
+	{{{64, -103, 52},0, {-16, -16},{0x19, 0x8B, 0x2C, 0xFF}}},
+	{{{35, -120, 68},0, {-16, -16},{0xE6, 0x92, 0x3A, 0xFF}}},
+	{{{31, -85, 87},0, {-16, -16},{0xE4, 0xFA, 0x7C, 0xFF}}},
+	{{{9, -88, 59},0, {-16, -16},{0x84, 0xEC, 0x16, 0xFF}}},
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_tri_3[] = {
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_3 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(0, 4, 3, 0, 5, 3, 4, 0),
+	gsSP2Triangles(6, 5, 4, 0, 7, 5, 6, 0),
+	gsSP2Triangles(7, 6, 8, 0, 9, 7, 8, 0),
+	gsSP2Triangles(8, 10, 9, 0, 10, 8, 11, 0),
+	gsSP2Triangles(11, 12, 10, 0, 12, 11, 13, 0),
+	gsSP2Triangles(13, 14, 12, 0, 13, 7, 14, 0),
+	gsSP2Triangles(13, 15, 7, 0, 13, 16, 15, 0),
+	gsSP2Triangles(17, 16, 13, 0, 13, 18, 17, 0),
+	gsSP2Triangles(19, 17, 18, 0, 18, 20, 19, 0),
+	gsSP2Triangles(21, 19, 20, 0, 20, 15, 21, 0),
+	gsSP2Triangles(20, 22, 15, 0, 22, 23, 15, 0),
+	gsSP2Triangles(23, 22, 24, 0, 25, 23, 24, 0),
+	gsSP2Triangles(24, 26, 25, 0, 26, 27, 25, 0),
+	gsSP2Triangles(27, 26, 28, 0, 29, 27, 28, 0),
+	gsSP2Triangles(27, 29, 30, 0, 30, 29, 31, 0),
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_3 + 32, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(4, 2, 3, 0, 3, 5, 4, 0),
+	gsSP2Triangles(3, 6, 5, 0, 5, 7, 4, 0),
+	gsSP2Triangles(8, 7, 5, 0, 7, 8, 9, 0),
+	gsSP2Triangles(9, 8, 10, 0, 11, 10, 8, 0),
+	gsSP2Triangles(11, 12, 10, 0, 13, 12, 11, 0),
+	gsSP2Triangles(13, 14, 12, 0, 13, 15, 14, 0),
+	gsSP2Triangles(15, 16, 14, 0, 17, 16, 15, 0),
+	gsSP2Triangles(18, 16, 17, 0, 19, 18, 17, 0),
+	gsSP2Triangles(18, 19, 20, 0, 20, 19, 21, 0),
+	gsSP2Triangles(22, 21, 19, 0, 21, 22, 23, 0),
+	gsSP2Triangles(21, 23, 24, 0, 24, 23, 25, 0),
+	gsSP2Triangles(23, 2, 25, 0, 2, 4, 25, 0),
+	gsSP2Triangles(4, 26, 25, 0, 7, 26, 4, 0),
+	gsSP2Triangles(7, 27, 26, 0, 27, 7, 9, 0),
+	gsSP2Triangles(9, 28, 27, 0, 28, 9, 10, 0),
+	gsSP2Triangles(29, 28, 10, 0, 29, 10, 12, 0),
+	gsSP2Triangles(14, 29, 12, 0, 14, 16, 29, 0),
+	gsSP2Triangles(16, 18, 29, 0, 29, 18, 28, 0),
+	gsSP2Triangles(18, 20, 28, 0, 20, 27, 28, 0),
+	gsSP2Triangles(20, 21, 27, 0, 21, 24, 27, 0),
+	gsSP2Triangles(27, 24, 25, 0, 27, 25, 26, 0),
+	gsSP1Triangle(30, 31, 15, 0),
+	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_3 + 64, 11, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 1, 3, 0, 1, 4, 2, 0),
+	gsSP2Triangles(5, 6, 7, 0, 5, 8, 6, 0),
+	gsSP2Triangles(9, 8, 5, 0, 10, 8, 9, 0),
+	gsSP1Triangle(6, 8, 10, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_displaylist_001_mesh_vtx_0[4] = {
+	{{{0, 0, 0},0, {-16, 1978},{0x17, 0x0, 0x7D, 0xFF}}},
+	{{{104, 0, -19},0, {974, 1978},{0x18, 0xFF, 0x7D, 0xFF}}},
+	{{{104, 212, -19},0, {974, -34},{0x17, 0x0, 0x7D, 0xFF}}},
+	{{{0, 212, 0},0, {-16, -34},{0x17, 0x0, 0x7D, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_001_mesh_tri_0[] = {
+	gsSPVertex(mario_000_displaylist_001_mesh_vtx_0 + 0, 4, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_001_mesh_vtx_1[4] = {
+	{{{-103, 212, 18},0, {-16, -34},{0x17, 0x0, 0x7D, 0xFF}}},
+	{{{0, 0, 0},0, {974, 1978},{0x17, 0x0, 0x7D, 0xFF}}},
+	{{{0, 212, 0},0, {974, -34},{0x17, 0x0, 0x7D, 0xFF}}},
+	{{{-103, 0, 19},0, {-16, 1978},{0x17, 0x0, 0x7D, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_001_mesh_tri_1[] = {
+	gsSPVertex(mario_000_displaylist_001_mesh_vtx_1 + 0, 4, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_displaylist_002_mesh_vtx_0[4] = {
+	{{{0, 0, 0},0, {-16, 1978},{0xE9, 0x0, 0x7D, 0xFF}}},
+	{{{104, 0, 19},0, {974, 1978},{0xE8, 0x1, 0x7D, 0xFF}}},
+	{{{104, 212, 19},0, {974, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
+	{{{0, 212, 0},0, {-16, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_002_mesh_tri_0[] = {
+	gsSPVertex(mario_000_displaylist_002_mesh_vtx_0 + 0, 4, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_000_displaylist_002_mesh_vtx_1[4] = {
+	{{{-103, 212, -18},0, {-16, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
+	{{{-103, 0, -19},0, {-16, 1978},{0xE9, 0x0, 0x7D, 0xFF}}},
+	{{{0, 0, 0},0, {974, 1978},{0xE9, 0x0, 0x7D, 0xFF}}},
+	{{{0, 212, 0},0, {974, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_002_mesh_tri_1[] = {
+	gsSPVertex(mario_000_displaylist_002_mesh_vtx_1 + 0, 4, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_003_mesh_vtx_0[20] = {
+	{{{6, -13, -42},0, {-16, -16},{0xDB, 0xE1, 0x8A, 0xFF}}},
+	{{{-8, -9, -27},0, {-16, -16},{0x90, 0xF1, 0xC6, 0xFF}}},
+	{{{-8, 17, -17},0, {-16, -16},{0x92, 0x36, 0xDF, 0xFF}}},
+	{{{5, -42, -5},0, {-16, -16},{0xD7, 0x88, 0xFD, 0xFF}}},
+	{{{57, -36, -5},0, {-16, -16},{0x32, 0x8B, 0xFD, 0xFF}}},
+	{{{58, -13, -34},0, {-16, -16},{0x33, 0xDF, 0x90, 0xFF}}},
+	{{{7, 29, -26},0, {-16, -16},{0xDF, 0x66, 0xBC, 0xFF}}},
+	{{{-8, 16, 10},0, {-16, -16},{0x92, 0x33, 0x26, 0xFF}}},
+	{{{-8, -11, 18},0, {-16, -16},{0x91, 0xEC, 0x3A, 0xFF}}},
+	{{{-9, -26, -5},0, {-16, -16},{0x8E, 0xC8, 0xFD, 0xFF}}},
+	{{{6, -16, 32},0, {-16, -16},{0xDB, 0xD8, 0x73, 0xFF}}},
+	{{{58, -15, 25},0, {-16, -16},{0x35, 0xD7, 0x6C, 0xFF}}},
+	{{{67, -12, 16},0, {-16, -16},{0x6E, 0xE8, 0x3B, 0xFF}}},
+	{{{67, -26, -5},0, {-16, -16},{0x6D, 0xBF, 0xFE, 0xFF}}},
+	{{{68, -10, -25},0, {-16, -16},{0x6D, 0xEF, 0xC1, 0xFF}}},
+	{{{68, 13, -16},0, {-16, -16},{0x6F, 0x33, 0xDC, 0xFF}}},
+	{{{59, 21, -21},0, {-16, -16},{0x37, 0x5F, 0xC0, 0xFF}}},
+	{{{7, 27, 20},0, {-16, -16},{0xDF, 0x60, 0x4C, 0xFF}}},
+	{{{59, 20, 15},0, {-16, -16},{0x37, 0x5A, 0x46, 0xFF}}},
+	{{{68, 12, 9},0, {-16, -16},{0x70, 0x2D, 0x27, 0xFF}}},
+};
+
+Gfx mario_000_offset_003_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_003_mesh_vtx_0 + 0, 20, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(3, 0, 4, 0, 0, 5, 4, 0),
+	gsSP2Triangles(0, 6, 5, 0, 0, 2, 6, 0),
+	gsSP2Triangles(6, 2, 7, 0, 8, 7, 2, 0),
+	gsSP2Triangles(2, 1, 8, 0, 1, 9, 8, 0),
+	gsSP2Triangles(3, 9, 1, 0, 10, 9, 3, 0),
+	gsSP2Triangles(10, 3, 11, 0, 3, 4, 11, 0),
+	gsSP2Triangles(4, 12, 11, 0, 4, 13, 12, 0),
+	gsSP2Triangles(14, 13, 4, 0, 5, 14, 4, 0),
+	gsSP2Triangles(15, 14, 5, 0, 16, 15, 5, 0),
+	gsSP2Triangles(6, 16, 5, 0, 6, 17, 16, 0),
+	gsSP2Triangles(6, 7, 17, 0, 17, 7, 8, 0),
+	gsSP2Triangles(17, 8, 10, 0, 10, 8, 9, 0),
+	gsSP2Triangles(17, 10, 18, 0, 10, 11, 18, 0),
+	gsSP2Triangles(11, 12, 18, 0, 12, 19, 18, 0),
+	gsSP2Triangles(19, 12, 14, 0, 12, 13, 14, 0),
+	gsSP2Triangles(19, 14, 15, 0, 18, 19, 15, 0),
+	gsSP2Triangles(18, 15, 16, 0, 17, 18, 16, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_004_mesh_vtx_0[16] = {
+	{{{-2, 21, -21},0, {-16, -16},{0xDF, 0x67, 0xBE, 0xFF}}},
+	{{{-14, 13, -15},0, {-16, -16},{0x97, 0x3E, 0xDD, 0xFF}}},
+	{{{-14, 11, 10},0, {-16, -16},{0x96, 0x37, 0x2B, 0xFF}}},
+	{{{-3, -14, -34},0, {-16, -16},{0xDC, 0xE0, 0x8A, 0xFF}}},
+	{{{46, -14, -30},0, {-16, -16},{0x40, 0xE0, 0x97, 0xFF}}},
+	{{{47, 16, -19},0, {-16, -16},{0x43, 0x59, 0xC4, 0xFF}}},
+	{{{-2, 19, 16},0, {-16, -16},{0xE0, 0x60, 0x4C, 0xFF}}},
+	{{{-15, -13, 17},0, {-16, -16},{0x95, 0xEB, 0x41, 0xFF}}},
+	{{{-15, -27, -4},0, {-16, -16},{0x93, 0xBF, 0xFD, 0xFF}}},
+	{{{-15, -11, -24},0, {-16, -16},{0x94, 0xF1, 0xBF, 0xFF}}},
+	{{{-3, -38, -4},0, {-16, -16},{0xDB, 0x86, 0xFC, 0xFF}}},
+	{{{45, -34, -4},0, {-16, -16},{0x3D, 0x91, 0xFB, 0xFF}}},
+	{{{58, -7, -3},0, {-16, -16},{0x7F, 0xFC, 0x1, 0xFF}}},
+	{{{47, 14, 13},0, {-16, -16},{0x43, 0x53, 0x44, 0xFF}}},
+	{{{-3, -17, 26},0, {-16, -16},{0xDD, 0xD7, 0x73, 0xFF}}},
+	{{{46, -17, 22},0, {-16, -16},{0x40, 0xD8, 0x66, 0xFF}}},
+};
+
+Gfx mario_000_offset_004_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_004_mesh_vtx_0 + 0, 16, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(3, 0, 4, 0, 0, 5, 4, 0),
+	gsSP2Triangles(0, 6, 5, 0, 0, 2, 6, 0),
+	gsSP2Triangles(6, 2, 7, 0, 8, 7, 2, 0),
+	gsSP2Triangles(8, 2, 1, 0, 9, 8, 1, 0),
+	gsSP2Triangles(3, 9, 1, 0, 10, 9, 3, 0),
+	gsSP2Triangles(10, 3, 11, 0, 3, 4, 11, 0),
+	gsSP2Triangles(4, 12, 11, 0, 5, 12, 4, 0),
+	gsSP2Triangles(13, 12, 5, 0, 6, 13, 5, 0),
+	gsSP2Triangles(6, 14, 13, 0, 6, 7, 14, 0),
+	gsSP2Triangles(14, 7, 8, 0, 14, 8, 10, 0),
+	gsSP2Triangles(10, 8, 9, 0, 14, 10, 15, 0),
+	gsSP2Triangles(10, 11, 15, 0, 11, 12, 15, 0),
+	gsSP2Triangles(15, 12, 13, 0, 14, 15, 13, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_displaylist_003_mesh_vtx_0[30] = {
+	{{{17, -38, -39},0, {-16, -16},{0x9E, 0xB9, 0xDA, 0xFF}}},
+	{{{-14, -14, -4},0, {-16, -16},{0x8C, 0xCD, 0x3, 0xFF}}},
+	{{{-10, 26, -38},0, {-16, -16},{0x88, 0xEC, 0xDA, 0xFF}}},
+	{{{27, -58, 6},0, {-16, -16},{0xA2, 0xAC, 0xE, 0xFF}}},
+	{{{5, -6, 36},0, {-16, -16},{0x99, 0xD2, 0x3A, 0xFF}}},
+	{{{-18, 45, 8},0, {-16, -16},{0x82, 0xF5, 0xE, 0xFF}}},
+	{{{26, -25, -32},0, {-16, -16},{0x17, 0xC9, 0x90, 0xFF}}},
+	{{{17, -38, -39},0, {-16, -16},{0x5E, 0xEC, 0xAC, 0xFF}}},
+	{{{-10, 26, -38},0, {-16, -16},{0x33, 0x54, 0xB0, 0xFF}}},
+	{{{34, -41, 3},0, {-16, -16},{0x3D, 0x97, 0x26, 0xFF}}},
+	{{{58, -45, 7},0, {-16, -16},{0x6, 0x8A, 0x2F, 0xFF}}},
+	{{{80, -31, -61},0, {-16, -16},{0x1D, 0xB6, 0x9D, 0xFF}}},
+	{{{33, 7, -44},0, {-16, -16},{0xC4, 0xFD, 0x90, 0xFF}}},
+	{{{4, 24, -31},0, {-16, -16},{0xFB, 0x44, 0x95, 0xFF}}},
+	{{{-1, 39, 5},0, {-16, -16},{0xDB, 0x71, 0x2D, 0xFF}}},
+	{{{-18, 45, 8},0, {-16, -16},{0x2E, 0x73, 0x1C, 0xFF}}},
+	{{{5, -6, 36},0, {-16, -16},{0x43, 0x1C, 0x68, 0xFF}}},
+	{{{17, -1, 27},0, {-16, -16},{0xFE, 0xFD, 0x7F, 0xFF}}},
+	{{{27, -58, 6},0, {-16, -16},{0x75, 0xD4, 0x18, 0xFF}}},
+	{{{36, 6, 42},0, {-16, -16},{0xE2, 0xEF, 0x7A, 0xFF}}},
+	{{{12, 59, 10},0, {-16, -16},{0xAF, 0x55, 0x30, 0xFF}}},
+	{{{59, 81, 8},0, {-16, -16},{0x15, 0x79, 0x21, 0xFF}}},
+	{{{86, 29, 41},0, {-16, -16},{0x3F, 0x1A, 0x6B, 0xFF}}},
+	{{{107, -26, 4},0, {-16, -16},{0x65, 0xBF, 0x29, 0xFF}}},
+	{{{100, -6, -46},0, {-16, -16},{0x69, 0xFD, 0xB9, 0xFF}}},
+	{{{61, 12, -60},0, {-16, -16},{0xF4, 0x18, 0x84, 0xFF}}},
+	{{{32, 63, -28},0, {-16, -16},{0xD0, 0x5B, 0xB6, 0xFF}}},
+	{{{57, 55, -37},0, {-16, -16},{0x18, 0x54, 0xA4, 0xFF}}},
+	{{{99, 40, -16},0, {-16, -16},{0x6B, 0x41, 0xEA, 0xFF}}},
+	{{{90, 17, -46},0, {-16, -16},{0x47, 0x31, 0xA3, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_003_mesh_tri_0[] = {
+	gsSPVertex(mario_000_displaylist_003_mesh_vtx_0 + 0, 30, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 1, 3, 0, 5, 1, 4, 0),
+	gsSP2Triangles(2, 1, 5, 0, 6, 7, 8, 0),
+	gsSP2Triangles(7, 6, 9, 0, 10, 9, 6, 0),
+	gsSP2Triangles(6, 11, 10, 0, 6, 12, 11, 0),
+	gsSP2Triangles(6, 13, 12, 0, 8, 13, 6, 0),
+	gsSP2Triangles(14, 13, 8, 0, 8, 15, 14, 0),
+	gsSP2Triangles(14, 15, 16, 0, 16, 17, 14, 0),
+	gsSP2Triangles(9, 17, 16, 0, 16, 18, 9, 0),
+	gsSP2Triangles(9, 18, 7, 0, 19, 17, 9, 0),
+	gsSP2Triangles(14, 17, 19, 0, 14, 19, 20, 0),
+	gsSP2Triangles(19, 21, 20, 0, 19, 22, 21, 0),
+	gsSP2Triangles(23, 22, 19, 0, 10, 23, 19, 0),
+	gsSP2Triangles(9, 10, 19, 0, 11, 23, 10, 0),
+	gsSP2Triangles(11, 24, 23, 0, 25, 24, 11, 0),
+	gsSP2Triangles(12, 25, 11, 0, 25, 12, 26, 0),
+	gsSP2Triangles(26, 12, 13, 0, 20, 26, 13, 0),
+	gsSP2Triangles(13, 14, 20, 0, 26, 20, 21, 0),
+	gsSP2Triangles(21, 27, 26, 0, 21, 28, 27, 0),
+	gsSP2Triangles(22, 28, 21, 0, 23, 28, 22, 0),
+	gsSP2Triangles(24, 28, 23, 0, 29, 28, 24, 0),
+	gsSP2Triangles(25, 29, 24, 0, 27, 29, 25, 0),
+	gsSP2Triangles(25, 26, 27, 0, 29, 27, 28, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_002_switch_option_right_hand_open_mesh_vtx_0[42] = {
+	{{{2, 3, 26},0, {-16, -16},{0x4A, 0x34, 0x59, 0xFF}}},
+	{{{20, -46, 12},0, {-16, -16},{0x75, 0xDD, 0x23, 0xFF}}},
+	{{{26, -32, 6},0, {-16, -16},{0x37, 0xA8, 0x49, 0xFF}}},
+	{{{13, -39, -31},0, {-16, -16},{0x63, 0xDD, 0xB9, 0xFF}}},
+	{{{20, -27, -27},0, {-16, -16},{0x11, 0xB1, 0x9E, 0xFF}}},
+	{{{-10, 14, -43},0, {-16, -16},{0x32, 0x3C, 0x9C, 0xFF}}},
+	{{{1, 15, -37},0, {-16, -16},{0xE0, 0x1D, 0x88, 0xFF}}},
+	{{{-3, 35, -9},0, {-16, -16},{0xCE, 0x72, 0x19, 0xFF}}},
+	{{{-17, 40, -8},0, {-16, -16},{0x2B, 0x78, 0x0, 0xFF}}},
+	{{{11, 5, 17},0, {-16, -16},{0x6, 0x1C, 0x7C, 0xFF}}},
+	{{{26, 16, 28},0, {-16, -16},{0xDE, 0xD, 0x7A, 0xFF}}},
+	{{{45, -34, 10},0, {-16, -16},{0xFF, 0x9F, 0x52, 0xFF}}},
+	{{{41, -37, -36},0, {-16, -16},{0xD7, 0x9E, 0xBB, 0xFF}}},
+	{{{25, -1, -44},0, {-16, -16},{0xDF, 0xE2, 0x89, 0xFF}}},
+	{{{11, 29, -52},0, {-16, -16},{0xDA, 0x1F, 0x8B, 0xFF}}},
+	{{{6, 53, -9},0, {-16, -16},{0xAC, 0x5C, 0x17, 0xFF}}},
+	{{{70, 89, -20},0, {-16, -16},{0xF0, 0x7E, 0xF8, 0xFF}}},
+	{{{77, 41, 21},0, {-16, -16},{0x14, 0x28, 0x77, 0xFF}}},
+	{{{83, -17, 10},0, {-16, -16},{0x42, 0xC1, 0x58, 0xFF}}},
+	{{{89, -47, -37},0, {-16, -16},{0x4B, 0xA4, 0xD3, 0xFF}}},
+	{{{76, -18, -48},0, {-16, -16},{0x2D, 0x3, 0x89, 0xFF}}},
+	{{{26, 41, -41},0, {-16, -16},{0xF5, 0x42, 0x94, 0xFF}}},
+	{{{78, 59, -34},0, {-16, -16},{0xF6, 0x16, 0x83, 0xFF}}},
+	{{{119, 70, -42},0, {-16, -16},{0x33, 0x40, 0x9F, 0xFF}}},
+	{{{121, 73, -21},0, {-16, -16},{0x4D, 0x5F, 0x22, 0xFF}}},
+	{{{141, 34, -7},0, {-16, -16},{0x74, 0xF7, 0x33, 0xFF}}},
+	{{{133, 28, -40},0, {-16, -16},{0x50, 0xD8, 0xA6, 0xFF}}},
+	{{{89, -6, -27},0, {-16, -16},{0x64, 0xE3, 0xB8, 0xFF}}},
+	{{{69, 10, -36},0, {-16, -16},{0x34, 0x1D, 0x90, 0xFF}}},
+	{{{2, 3, 26},0, {-16, -16},{0xA8, 0xF0, 0x5A, 0xFF}}},
+	{{{6, -38, 7},0, {-16, -16},{0xA7, 0xB0, 0x2A, 0xFF}}},
+	{{{20, -46, 12},0, {-16, -16},{0xBA, 0xA1, 0x2E, 0xFF}}},
+	{{{2, 3, 26},0, {-16, -16},{0xA8, 0xF0, 0x5A, 0xFF}}},
+	{{{-6, -3, 17},0, {-16, -16},{0x97, 0xE2, 0x42, 0xFF}}},
+	{{{6, -38, 7},0, {-16, -16},{0xA7, 0xB0, 0x2A, 0xFF}}},
+	{{{-20, 22, -7},0, {-16, -16},{0x83, 0x0, 0x17, 0xFF}}},
+	{{{-17, 40, -8},0, {-16, -16},{0x84, 0x16, 0x11, 0xFF}}},
+	{{{-10, 14, -43},0, {-16, -16},{0x91, 0xF4, 0xC4, 0xFF}}},
+	{{{-15, 4, -32},0, {-16, -16},{0x8D, 0xDE, 0xD6, 0xFF}}},
+	{{{1, -33, -23},0, {-16, -16},{0x9F, 0xB3, 0xE2, 0xFF}}},
+	{{{13, -39, -31},0, {-16, -16},{0xB5, 0xA4, 0xD4, 0xFF}}},
+	{{{20, -46, 12},0, {-16, -16},{0xBA, 0xA1, 0x2E, 0xFF}}},
+};
+
+Gfx mario_002_switch_option_right_hand_open_mesh_tri_0[] = {
+	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(3, 4, 2, 0, 4, 3, 5, 0),
+	gsSP2Triangles(5, 6, 4, 0, 7, 6, 5, 0),
+	gsSP2Triangles(5, 8, 7, 0, 7, 8, 0, 0),
+	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
+	gsSP2Triangles(10, 9, 2, 0, 2, 11, 10, 0),
+	gsSP2Triangles(2, 12, 11, 0, 2, 4, 12, 0),
+	gsSP2Triangles(4, 13, 12, 0, 4, 6, 13, 0),
+	gsSP2Triangles(6, 14, 13, 0, 14, 6, 7, 0),
+	gsSP2Triangles(7, 15, 14, 0, 7, 10, 15, 0),
+	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
+	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
+	gsSP2Triangles(11, 18, 10, 0, 19, 18, 11, 0),
+	gsSP2Triangles(11, 12, 19, 0, 19, 12, 20, 0),
+	gsSP2Triangles(12, 13, 20, 0, 20, 13, 21, 0),
+	gsSP2Triangles(13, 14, 21, 0, 15, 21, 14, 0),
+	gsSP2Triangles(21, 15, 16, 0, 16, 22, 21, 0),
+	gsSP2Triangles(23, 22, 16, 0, 16, 24, 23, 0),
+	gsSP2Triangles(24, 16, 17, 0, 25, 24, 17, 0),
+	gsSP2Triangles(18, 25, 17, 0, 26, 25, 18, 0),
+	gsSP2Triangles(27, 26, 18, 0, 19, 27, 18, 0),
+	gsSP2Triangles(20, 27, 19, 0, 20, 28, 27, 0),
+	gsSP2Triangles(20, 21, 28, 0, 21, 22, 28, 0),
+	gsSP2Triangles(28, 22, 27, 0, 22, 26, 27, 0),
+	gsSP2Triangles(22, 23, 26, 0, 23, 25, 26, 0),
+	gsSP2Triangles(24, 25, 23, 0, 29, 30, 31, 0),
+	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_vtx_0 + 32, 10, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 3, 0, 0, 5, 3, 4, 0),
+	gsSP2Triangles(5, 6, 3, 0, 7, 6, 5, 0),
+	gsSP2Triangles(8, 7, 5, 0, 2, 7, 8, 0),
+	gsSP2Triangles(9, 2, 8, 0, 7, 2, 1, 0),
+	gsSP2Triangles(1, 6, 7, 0, 1, 3, 6, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_006_mesh_vtx_0[20] = {
+	{{{58, 17, 27},0, {-16, -16},{0x37, 0x5A, 0x48, 0xFF}}},
+	{{{67, 10, 21},0, {-16, -16},{0x6F, 0x31, 0x26, 0xFF}}},
+	{{{67, 11, -4},0, {-16, -16},{0x6F, 0x33, 0xDE, 0xFF}}},
+	{{{67, -14, 28},0, {-16, -16},{0x6E, 0xE8, 0x3B, 0xFF}}},
+	{{{57, -17, 37},0, {-16, -16},{0x33, 0xD7, 0x6D, 0xFF}}},
+	{{{7, 25, 32},0, {-16, -16},{0xDF, 0x60, 0x4C, 0xFF}}},
+	{{{7, 27, -13},0, {-16, -16},{0xE0, 0x68, 0xBF, 0xFF}}},
+	{{{58, 19, -9},0, {-16, -16},{0x37, 0x60, 0xC2, 0xFF}}},
+	{{{67, -12, -13},0, {-16, -16},{0x6E, 0xEE, 0xC3, 0xFF}}},
+	{{{66, -28, 6},0, {-16, -16},{0x6F, 0xC3, 0xFA, 0xFF}}},
+	{{{57, -38, 6},0, {-16, -16},{0x34, 0x8C, 0xF9, 0xFF}}},
+	{{{57, -14, -22},0, {-16, -16},{0x32, 0xE2, 0x8F, 0xFF}}},
+	{{{5, -44, 5},0, {-16, -16},{0xD8, 0x88, 0xF8, 0xFF}}},
+	{{{6, -19, 44},0, {-16, -16},{0xDC, 0xD5, 0x72, 0xFF}}},
+	{{{-8, 14, 22},0, {-16, -16},{0x93, 0x35, 0x26, 0xFF}}},
+	{{{-8, 15, -5},0, {-16, -16},{0x93, 0x38, 0xDE, 0xFF}}},
+	{{{-9, -10, -15},0, {-16, -16},{0x90, 0xF5, 0xC4, 0xFF}}},
+	{{{6, -15, -30},0, {-16, -16},{0xDC, 0xE2, 0x8A, 0xFF}}},
+	{{{-9, -28, 6},0, {-16, -16},{0x8F, 0xC6, 0xFB, 0xFF}}},
+	{{{-9, -13, 30},0, {-16, -16},{0x91, 0xEE, 0x3B, 0xFF}}},
+};
+
+Gfx mario_000_offset_006_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_006_mesh_vtx_0 + 0, 20, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 0, 5, 0),
+	gsSP2Triangles(0, 6, 5, 0, 0, 7, 6, 0),
+	gsSP2Triangles(0, 2, 7, 0, 7, 2, 8, 0),
+	gsSP2Triangles(8, 2, 9, 0, 2, 3, 9, 0),
+	gsSP2Triangles(2, 1, 3, 0, 10, 9, 3, 0),
+	gsSP2Triangles(8, 9, 10, 0, 11, 8, 10, 0),
+	gsSP2Triangles(11, 10, 12, 0, 10, 13, 12, 0),
+	gsSP2Triangles(10, 4, 13, 0, 10, 3, 4, 0),
+	gsSP2Triangles(4, 5, 13, 0, 5, 14, 13, 0),
+	gsSP2Triangles(15, 14, 5, 0, 6, 15, 5, 0),
+	gsSP2Triangles(16, 15, 6, 0, 17, 16, 6, 0),
+	gsSP2Triangles(7, 17, 6, 0, 7, 11, 17, 0),
+	gsSP2Triangles(7, 8, 11, 0, 11, 12, 17, 0),
+	gsSP2Triangles(12, 18, 17, 0, 19, 18, 12, 0),
+	gsSP2Triangles(13, 19, 12, 0, 14, 19, 13, 0),
+	gsSP2Triangles(19, 14, 15, 0, 19, 15, 16, 0),
+	gsSP2Triangles(16, 18, 19, 0, 18, 16, 17, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_007_mesh_vtx_0[16] = {
+	{{{-2, -18, 38},0, {-16, -16},{0xDC, 0xD6, 0x72, 0xFF}}},
+	{{{-14, -14, 28},0, {-16, -16},{0x93, 0xED, 0x3E, 0xFF}}},
+	{{{-3, -39, 6},0, {-16, -16},{0xD8, 0x88, 0xF9, 0xFF}}},
+	{{{-13, 10, 21},0, {-16, -16},{0x95, 0x36, 0x2A, 0xFF}}},
+	{{{-1, 18, 28},0, {-16, -16},{0xDF, 0x60, 0x4C, 0xFF}}},
+	{{{47, -17, 34},0, {-16, -16},{0x41, 0xD9, 0x66, 0xFF}}},
+	{{{46, -36, 6},0, {-16, -16},{0x3D, 0x91, 0xFA, 0xFF}}},
+	{{{47, -15, -19},0, {-16, -16},{0x3F, 0xE3, 0x96, 0xFF}}},
+	{{{-2, -15, -23},0, {-16, -16},{0xDC, 0xE2, 0x8A, 0xFF}}},
+	{{{-14, -28, 6},0, {-16, -16},{0x92, 0xC1, 0xFA, 0xFF}}},
+	{{{-14, -12, -13},0, {-16, -16},{0x94, 0xF2, 0xBF, 0xFF}}},
+	{{{-13, 12, -4},0, {-16, -16},{0x98, 0x3E, 0xDA, 0xFF}}},
+	{{{-1, 20, -9},0, {-16, -16},{0xE1, 0x68, 0xBE, 0xFF}}},
+	{{{48, 13, 25},0, {-16, -16},{0x44, 0x54, 0x44, 0xFF}}},
+	{{{59, -8, 7},0, {-16, -16},{0x7F, 0xFD, 0xFE, 0xFF}}},
+	{{{48, 15, -7},0, {-16, -16},{0x43, 0x5B, 0xC5, 0xFF}}},
+};
+
+Gfx mario_000_offset_007_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_007_mesh_vtx_0 + 0, 16, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 3, 0, 0, 5, 4, 0, 0),
+	gsSP2Triangles(6, 5, 0, 0, 6, 0, 2, 0),
+	gsSP2Triangles(7, 6, 2, 0, 7, 2, 8, 0),
+	gsSP2Triangles(2, 9, 8, 0, 1, 9, 2, 0),
+	gsSP2Triangles(9, 1, 3, 0, 10, 9, 3, 0),
+	gsSP2Triangles(10, 3, 11, 0, 11, 3, 4, 0),
+	gsSP2Triangles(12, 11, 4, 0, 13, 12, 4, 0),
+	gsSP2Triangles(5, 13, 4, 0, 5, 14, 13, 0),
+	gsSP2Triangles(6, 14, 5, 0, 7, 14, 6, 0),
+	gsSP2Triangles(15, 14, 7, 0, 15, 7, 8, 0),
+	gsSP2Triangles(15, 8, 12, 0, 8, 10, 12, 0),
+	gsSP2Triangles(9, 10, 8, 0, 10, 11, 12, 0),
+	gsSP2Triangles(13, 14, 15, 0, 13, 15, 12, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_displaylist_004_mesh_vtx_0[30] = {
+	{{{-14, 26, 41},0, {-16, -16},{0x2D, 0x50, 0x57, 0xFF}}},
+	{{{13, -38, 41},0, {-16, -16},{0x57, 0xE5, 0x58, 0xFF}}},
+	{{{23, -26, 35},0, {-16, -16},{0xF, 0xBF, 0x6C, 0xFF}}},
+	{{{31, -40, -1},0, {-16, -16},{0x3D, 0x99, 0xD4, 0xFF}}},
+	{{{24, -57, -4},0, {-16, -16},{0x75, 0xD3, 0xEC, 0xFF}}},
+	{{{4, -3, -33},0, {-16, -16},{0x4C, 0x21, 0x9F, 0xFF}}},
+	{{{15, 0, -23},0, {-16, -16},{0xC, 0x1, 0x82, 0xFF}}},
+	{{{-2, 41, -1},0, {-16, -16},{0xDA, 0x71, 0xD3, 0xFF}}},
+	{{{-19, 47, -4},0, {-16, -16},{0x2D, 0x75, 0xEB, 0xFF}}},
+	{{{1, 24, 35},0, {-16, -16},{0xF5, 0x3E, 0x6E, 0xFF}}},
+	{{{29, 6, 49},0, {-16, -16},{0xBF, 0xF9, 0x6D, 0xFF}}},
+	{{{75, -33, 66},0, {-16, -16},{0x19, 0xB2, 0x61, 0xFF}}},
+	{{{55, -44, -4},0, {-16, -16},{0x7, 0x8C, 0xCC, 0xFF}}},
+	{{{35, 9, -37},0, {-16, -16},{0xE7, 0xF6, 0x84, 0xFF}}},
+	{{{10, 60, -4},0, {-16, -16},{0xB1, 0x58, 0xD2, 0xFF}}},
+	{{{29, 62, 34},0, {-16, -16},{0xCE, 0x59, 0x4B, 0xFF}}},
+	{{{57, 10, 66},0, {-16, -16},{0xF3, 0x15, 0x7D, 0xFF}}},
+	{{{96, -8, 52},0, {-16, -16},{0x67, 0xF9, 0x4A, 0xFF}}},
+	{{{104, -26, 1},0, {-16, -16},{0x65, 0xBF, 0xD7, 0xFF}}},
+	{{{86, 30, -33},0, {-16, -16},{0x45, 0x1C, 0x99, 0xFF}}},
+	{{{58, 81, 0},0, {-16, -16},{0x17, 0x7A, 0xE4, 0xFF}}},
+	{{{54, 54, 44},0, {-16, -16},{0x14, 0x51, 0x5F, 0xFF}}},
+	{{{86, 15, 52},0, {-16, -16},{0x45, 0x2E, 0x61, 0xFF}}},
+	{{{97, 39, 24},0, {-16, -16},{0x6B, 0x3E, 0x1C, 0xFF}}},
+	{{{4, -3, -33},0, {-16, -16},{0x9A, 0xD6, 0xC1, 0xFF}}},
+	{{{-16, -12, 6},0, {-16, -16},{0x8B, 0xCF, 0xF6, 0xFF}}},
+	{{{-19, 47, -4},0, {-16, -16},{0x83, 0xF6, 0xEB, 0xFF}}},
+	{{{24, -57, -4},0, {-16, -16},{0xA0, 0xAF, 0xEC, 0xFF}}},
+	{{{13, -38, 41},0, {-16, -16},{0x9C, 0xB8, 0x1F, 0xFF}}},
+	{{{-14, 26, 41},0, {-16, -16},{0x86, 0xEB, 0x1E, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_004_mesh_tri_0[] = {
+	gsSPVertex(mario_000_displaylist_004_mesh_vtx_0 + 0, 30, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 2, 1, 0),
+	gsSP2Triangles(1, 4, 3, 0, 3, 4, 5, 0),
+	gsSP2Triangles(5, 6, 3, 0, 7, 6, 5, 0),
+	gsSP2Triangles(5, 8, 7, 0, 7, 8, 0, 0),
+	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
+	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
+	gsSP2Triangles(12, 11, 2, 0, 2, 3, 12, 0),
+	gsSP2Triangles(13, 12, 3, 0, 3, 6, 13, 0),
+	gsSP2Triangles(13, 6, 7, 0, 14, 13, 7, 0),
+	gsSP2Triangles(14, 7, 9, 0, 15, 14, 9, 0),
+	gsSP2Triangles(9, 10, 15, 0, 15, 10, 16, 0),
+	gsSP2Triangles(11, 16, 10, 0, 11, 17, 16, 0),
+	gsSP2Triangles(18, 17, 11, 0, 12, 18, 11, 0),
+	gsSP2Triangles(13, 18, 12, 0, 13, 19, 18, 0),
+	gsSP2Triangles(20, 19, 13, 0, 14, 20, 13, 0),
+	gsSP2Triangles(20, 14, 15, 0, 15, 21, 20, 0),
+	gsSP2Triangles(21, 15, 16, 0, 22, 21, 16, 0),
+	gsSP2Triangles(17, 22, 16, 0, 17, 23, 22, 0),
+	gsSP2Triangles(18, 23, 17, 0, 19, 23, 18, 0),
+	gsSP2Triangles(20, 23, 19, 0, 21, 23, 20, 0),
+	gsSP2Triangles(23, 21, 22, 0, 24, 25, 26, 0),
+	gsSP2Triangles(27, 25, 24, 0, 28, 25, 27, 0),
+	gsSP2Triangles(29, 25, 28, 0, 26, 25, 29, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_002_switch_option_left_hand_open_mesh_vtx_0[42] = {
+	{{{7, 1, -26},0, {-16, -16},{0x4C, 0x2B, 0xA4, 0xFF}}},
+	{{{-9, 41, 5},0, {-16, -16},{0x32, 0x74, 0xF3, 0xFF}}},
+	{{{3, 36, 6},0, {-16, -16},{0xD7, 0x74, 0xE0, 0xFF}}},
+	{{{-1, 18, 42},0, {-16, -16},{0x3E, 0x42, 0x5A, 0xFF}}},
+	{{{9, 18, 35},0, {-16, -16},{0xEA, 0x29, 0x76, 0xFF}}},
+	{{{26, -24, 28},0, {-16, -16},{0xE, 0xBA, 0x69, 0xFF}}},
+	{{{19, -36, 33},0, {-16, -16},{0x66, 0xE1, 0x45, 0xFF}}},
+	{{{30, -32, -4},0, {-16, -16},{0x37, 0xA3, 0xBD, 0xFF}}},
+	{{{25, -46, -9},0, {-16, -16},{0x77, 0xE1, 0xDF, 0xFF}}},
+	{{{16, 4, -17},0, {-16, -16},{0xFF, 0x11, 0x82, 0xFF}}},
+	{{{30, 13, -30},0, {-16, -16},{0xD6, 0x3, 0x88, 0xFF}}},
+	{{{13, 53, 5},0, {-16, -16},{0xAE, 0x5E, 0xE7, 0xFF}}},
+	{{{20, 33, 48},0, {-16, -16},{0xE2, 0x2B, 0x74, 0xFF}}},
+	{{{32, 2, 43},0, {-16, -16},{0xE2, 0xED, 0x7A, 0xFF}}},
+	{{{46, -35, 37},0, {-16, -16},{0xD8, 0xA4, 0x4E, 0xFF}}},
+	{{{48, -35, -9},0, {-16, -16},{0xF7, 0x99, 0xB7, 0xFF}}},
+	{{{86, -19, -13},0, {-16, -16},{0x3D, 0xB9, 0xAB, 0xFF}}},
+	{{{81, 37, -28},0, {-16, -16},{0x11, 0x1E, 0x86, 0xFF}}},
+	{{{76, 88, 9},0, {-16, -16},{0xF2, 0x7E, 0xFE, 0xFF}}},
+	{{{34, 43, 36},0, {-16, -16},{0xFD, 0x4A, 0x67, 0xFF}}},
+	{{{81, -15, 45},0, {-16, -16},{0x35, 0xC, 0x73, 0xFF}}},
+	{{{93, -45, 36},0, {-16, -16},{0x4C, 0xA7, 0x31, 0xFF}}},
+	{{{93, -5, 22},0, {-16, -16},{0x68, 0xE6, 0x45, 0xFF}}},
+	{{{136, 28, 31},0, {-16, -16},{0x51, 0xDD, 0x5B, 0xFF}}},
+	{{{143, 31, -1},0, {-16, -16},{0x72, 0xF0, 0xCB, 0xFF}}},
+	{{{125, 71, 9},0, {-16, -16},{0x4E, 0x5B, 0xD4, 0xFF}}},
+	{{{124, 69, 30},0, {-16, -16},{0x38, 0x45, 0x5A, 0xFF}}},
+	{{{84, 59, 25},0, {-16, -16},{0xFD, 0x21, 0x7B, 0xFF}}},
+	{{{75, 11, 32},0, {-16, -16},{0x3E, 0x24, 0x69, 0xFF}}},
+	{{{25, -46, -9},0, {-16, -16},{0xB8, 0x9F, 0xDA, 0xFF}}},
+	{{{11, -38, -3},0, {-16, -16},{0xA5, 0xAD, 0xE2, 0xFF}}},
+	{{{7, 1, -26},0, {-16, -16},{0x9E, 0xE7, 0xB3, 0xFF}}},
+	{{{19, -36, 33},0, {-16, -16},{0xB6, 0xA8, 0x37, 0xFF}}},
+	{{{11, -38, -3},0, {-16, -16},{0xA5, 0xAD, 0xE2, 0xFF}}},
+	{{{25, -46, -9},0, {-16, -16},{0xB8, 0x9F, 0xDA, 0xFF}}},
+	{{{7, -30, 26},0, {-16, -16},{0x9E, 0xBA, 0x2A, 0xFF}}},
+	{{{-1, 18, 42},0, {-16, -16},{0x94, 0xFD, 0x42, 0xFF}}},
+	{{{-7, 7, 32},0, {-16, -16},{0x8E, 0xE6, 0x31, 0xFF}}},
+	{{{-12, 23, 6},0, {-16, -16},{0x82, 0x0, 0xF0, 0xFF}}},
+	{{{-9, 41, 5},0, {-16, -16},{0x83, 0x14, 0xF4, 0xFF}}},
+	{{{7, 1, -26},0, {-16, -16},{0x9E, 0xE7, 0xB3, 0xFF}}},
+	{{{0, -4, -15},0, {-16, -16},{0x92, 0xDD, 0xCB, 0xFF}}},
+};
+
+Gfx mario_002_switch_option_left_hand_open_mesh_tri_0[] = {
+	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(3, 4, 2, 0, 5, 4, 3, 0),
+	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
+	gsSP2Triangles(6, 8, 7, 0, 7, 8, 0, 0),
+	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
+	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
+	gsSP2Triangles(12, 11, 2, 0, 2, 4, 12, 0),
+	gsSP2Triangles(13, 12, 4, 0, 13, 4, 5, 0),
+	gsSP2Triangles(14, 13, 5, 0, 14, 5, 7, 0),
+	gsSP2Triangles(15, 14, 7, 0, 10, 15, 7, 0),
+	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
+	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
+	gsSP2Triangles(11, 18, 10, 0, 18, 11, 19, 0),
+	gsSP2Triangles(12, 19, 11, 0, 19, 12, 13, 0),
+	gsSP2Triangles(19, 13, 20, 0, 20, 13, 14, 0),
+	gsSP2Triangles(20, 14, 21, 0, 21, 14, 15, 0),
+	gsSP2Triangles(15, 16, 21, 0, 16, 22, 21, 0),
+	gsSP2Triangles(16, 23, 22, 0, 16, 24, 23, 0),
+	gsSP2Triangles(17, 24, 16, 0, 17, 25, 24, 0),
+	gsSP2Triangles(17, 18, 25, 0, 26, 25, 18, 0),
+	gsSP2Triangles(18, 27, 26, 0, 19, 27, 18, 0),
+	gsSP2Triangles(28, 27, 19, 0, 28, 19, 20, 0),
+	gsSP2Triangles(22, 28, 20, 0, 21, 22, 20, 0),
+	gsSP2Triangles(22, 27, 28, 0, 22, 23, 27, 0),
+	gsSP2Triangles(23, 26, 27, 0, 23, 24, 26, 0),
+	gsSP2Triangles(26, 24, 25, 0, 29, 30, 31, 0),
+	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_vtx_0 + 32, 10, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
+	gsSP2Triangles(6, 5, 4, 0, 7, 6, 4, 0),
+	gsSP2Triangles(8, 6, 7, 0, 8, 9, 6, 0),
+	gsSP2Triangles(1, 9, 8, 0, 9, 1, 3, 0),
+	gsSP2Triangles(3, 5, 9, 0, 5, 6, 9, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_004_switch_option_left_hand_peace_mesh_vtx_0[61] = {
+	{{{166, -13, -17},0, {-16, -16},{0x7A, 0x9, 0x23, 0xFF}}},
+	{{{162, 14, -11},0, {-16, -16},{0x7A, 0xB, 0x22, 0xFF}}},
+	{{{153, 7, 24},0, {-16, -16},{0x49, 0xF2, 0x67, 0xFF}}},
+	{{{155, -15, 21},0, {-16, -16},{0x47, 0xF8, 0x69, 0xFF}}},
+	{{{101, -29, 15},0, {-16, -16},{0x42, 0x97, 0x1A, 0xFF}}},
+	{{{98, 10, 29},0, {-16, -16},{0x4F, 0x9, 0x63, 0xFF}}},
+	{{{90, -3, 52},0, {-16, -16},{0x47, 0x3, 0x69, 0xFF}}},
+	{{{84, 48, 24},0, {-16, -16},{0x1A, 0x4F, 0x60, 0xFF}}},
+	{{{139, 53, 25},0, {-16, -16},{0xFC, 0x14, 0x7D, 0xFF}}},
+	{{{123, 72, 21},0, {-16, -16},{0xFC, 0x17, 0x7D, 0xFF}}},
+	{{{46, 49, 45},0, {-16, -16},{0xF7, 0x48, 0x68, 0xFF}}},
+	{{{56, 80, 1},0, {-16, -16},{0x7, 0x7D, 0xEC, 0xFF}}},
+	{{{84, 60, -7},0, {-16, -16},{0x2, 0x70, 0xC4, 0xFF}}},
+	{{{126, 84, -3},0, {-16, -16},{0xC3, 0x67, 0x2B, 0xFF}}},
+	{{{123, 72, 21},0, {-16, -16},{0xC4, 0x67, 0x2C, 0xFF}}},
+	{{{89, 18, -34},0, {-16, -16},{0x7, 0xB, 0x82, 0xFF}}},
+	{{{126, 84, -3},0, {-16, -16},{0x6, 0x33, 0x8C, 0xFF}}},
+	{{{146, 59, -8},0, {-16, -16},{0x17, 0x2A, 0x8A, 0xFF}}},
+	{{{33, 7, -37},0, {-16, -16},{0xDF, 0xF9, 0x86, 0xFF}}},
+	{{{94, -22, -18},0, {-16, -16},{0x1A, 0xA8, 0xA9, 0xFF}}},
+	{{{166, -13, -17},0, {-16, -16},{0x1E, 0x7, 0x85, 0xFF}}},
+	{{{162, 14, -11},0, {-16, -16},{0x27, 0x20, 0x8B, 0xFF}}},
+	{{{56, -47, -5},0, {-16, -16},{0x3, 0x8A, 0xD1, 0xFF}}},
+	{{{32, -43, 0},0, {-16, -16},{0x34, 0x95, 0xD3, 0xFF}}},
+	{{{45, -29, 52},0, {-16, -16},{0xE7, 0xBC, 0x69, 0xFF}}},
+	{{{88, -34, 39},0, {-16, -16},{0x3D, 0xA6, 0x41, 0xFF}}},
+	{{{155, -15, 21},0, {-16, -16},{0x15, 0x83, 0xF6, 0xFF}}},
+	{{{166, -13, -17},0, {-16, -16},{0x10, 0x82, 0xFE, 0xFF}}},
+	{{{18, 30, 41},0, {-16, -16},{0xC9, 0x2E, 0x69, 0xFF}}},
+	{{{8, 58, -2},0, {-16, -16},{0xAF, 0x5D, 0xE2, 0xFF}}},
+	{{{-4, 38, 0},0, {-16, -16},{0xD9, 0x72, 0xD8, 0xFF}}},
+	{{{14, -1, -22},0, {-16, -16},{0x4, 0x4, 0x81, 0xFF}}},
+	{{{2, -5, -33},0, {-16, -16},{0xFA, 0x3, 0x81, 0xFF}}},
+	{{{14, -1, -22},0, {-16, -16},{0x4, 0x4, 0x81, 0xFF}}},
+	{{{32, -43, 0},0, {-16, -16},{0x34, 0x95, 0xD3, 0xFF}}},
+	{{{24, -59, -3},0, {-16, -16},{0x27, 0x8D, 0xDA, 0xFF}}},
+	{{{23, -29, 36},0, {-16, -16},{0x17, 0xC5, 0x6E, 0xFF}}},
+	{{{45, -29, 52},0, {-16, -16},{0xE7, 0xBC, 0x69, 0xFF}}},
+	{{{18, 30, 41},0, {-16, -16},{0xC9, 0x2E, 0x69, 0xFF}}},
+	{{{0, 21, 37},0, {-16, -16},{0x5, 0x44, 0x6B, 0xFF}}},
+	{{{-4, 38, 0},0, {-16, -16},{0xD9, 0x72, 0xD8, 0xFF}}},
+	{{{8, 58, -2},0, {-16, -16},{0xAF, 0x5D, 0xE2, 0xFF}}},
+	{{{-15, 23, 43},0, {-16, -16},{0xD4, 0x3C, 0x67, 0xFF}}},
+	{{{15, -39, 42},0, {-16, -16},{0x13, 0xBA, 0x68, 0xFF}}},
+	{{{0, -35, 32},0, {-16, -16},{0xA4, 0xB8, 0x32, 0xFF}}},
+	{{{-21, 9, 33},0, {-16, -16},{0x8D, 0xE6, 0x30, 0xFF}}},
+	{{{-22, 43, -3},0, {-16, -16},{0xC2, 0x68, 0xD9, 0xFF}}},
+	{{{-25, 24, 0},0, {-16, -16},{0x84, 0xFB, 0xE5, 0xFF}}},
+	{{{-8, -12, -20},0, {-16, -16},{0x9B, 0xD0, 0xC4, 0xFF}}},
+	{{{6, -49, 0},0, {-16, -16},{0xAC, 0xA5, 0xE6, 0xFF}}},
+	{{{146, 59, -8},0, {-16, -16},{0x5E, 0x4B, 0x29, 0xFF}}},
+	{{{126, 84, -3},0, {-16, -16},{0x60, 0x44, 0x2F, 0xFF}}},
+	{{{123, 72, 21},0, {-16, -16},{0x5D, 0x4C, 0x28, 0xFF}}},
+	{{{139, 53, 25},0, {-16, -16},{0x5A, 0x53, 0x22, 0xFF}}},
+	{{{105, 17, 3},0, {-16, -16},{0x77, 0x2D, 0x3, 0xFF}}},
+	{{{98, 10, 29},0, {-16, -16},{0x6E, 0x30, 0x2B, 0xFF}}},
+	{{{153, 7, 24},0, {-16, -16},{0xD, 0x7B, 0x1E, 0xFF}}},
+	{{{139, 53, 25},0, {-16, -16},{0x5B, 0xA8, 0x3, 0xFF}}},
+	{{{146, 59, -8},0, {-16, -16},{0x59, 0xA6, 0xF5, 0xFF}}},
+	{{{89, 18, -34},0, {-16, -16},{0x70, 0x25, 0xD0, 0xFF}}},
+	{{{162, 14, -11},0, {-16, -16},{0xB, 0x7D, 0x13, 0xFF}}},
+};
+
+Gfx mario_004_switch_option_left_hand_peace_mesh_tri_0[] = {
+	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSP2Triangles(4, 3, 2, 0, 4, 2, 5, 0),
+	gsSP2Triangles(4, 5, 6, 0, 5, 7, 6, 0),
+	gsSP2Triangles(7, 5, 8, 0, 8, 9, 7, 0),
+	gsSP2Triangles(6, 7, 10, 0, 10, 7, 11, 0),
+	gsSP2Triangles(11, 7, 12, 0, 12, 7, 13, 0),
+	gsSP2Triangles(7, 14, 13, 0, 11, 12, 15, 0),
+	gsSP2Triangles(16, 15, 12, 0, 15, 16, 17, 0),
+	gsSP2Triangles(11, 15, 18, 0, 18, 15, 19, 0),
+	gsSP2Triangles(20, 19, 15, 0, 15, 21, 20, 0),
+	gsSP2Triangles(22, 18, 19, 0, 18, 22, 23, 0),
+	gsSP2Triangles(22, 24, 23, 0, 24, 22, 25, 0),
+	gsSP2Triangles(4, 25, 22, 0, 4, 22, 19, 0),
+	gsSP2Triangles(19, 26, 4, 0, 26, 19, 27, 0),
+	gsSP2Triangles(25, 4, 6, 0, 25, 6, 24, 0),
+	gsSP2Triangles(24, 6, 10, 0, 24, 10, 28, 0),
+	gsSP2Triangles(10, 29, 28, 0, 10, 11, 29, 0),
+	gsSP2Triangles(29, 11, 18, 0, 29, 18, 30, 0),
+	gsSP2Triangles(18, 31, 30, 0, 23, 31, 18, 0),
+	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_vtx_0 + 32, 29, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSP2Triangles(3, 2, 4, 0, 5, 4, 2, 0),
+	gsSP2Triangles(4, 5, 6, 0, 7, 4, 6, 0),
+	gsSP2Triangles(8, 7, 6, 0, 6, 9, 8, 0),
+	gsSP2Triangles(10, 7, 8, 0, 11, 7, 10, 0),
+	gsSP2Triangles(10, 12, 11, 0, 10, 13, 12, 0),
+	gsSP2Triangles(14, 13, 10, 0, 10, 8, 14, 0),
+	gsSP2Triangles(14, 8, 1, 0, 14, 1, 0, 0),
+	gsSP2Triangles(0, 15, 14, 0, 0, 16, 15, 0),
+	gsSP2Triangles(3, 16, 0, 0, 3, 17, 16, 0),
+	gsSP2Triangles(11, 17, 3, 0, 3, 4, 11, 0),
+	gsSP2Triangles(11, 4, 7, 0, 11, 12, 17, 0),
+	gsSP2Triangles(16, 17, 12, 0, 12, 13, 16, 0),
+	gsSP2Triangles(13, 15, 16, 0, 14, 15, 13, 0),
+	gsSP2Triangles(18, 19, 20, 0, 20, 21, 18, 0),
+	gsSP2Triangles(22, 23, 24, 0, 25, 23, 22, 0),
+	gsSP2Triangles(25, 22, 26, 0, 26, 22, 27, 0),
+	gsSP2Triangles(28, 27, 22, 0, 22, 24, 28, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_0[47] = {
+	{{{131, 47, -1},0, {1088, 212},{0xE3, 0x5C, 0xAE, 0xFF}}},
+	{{{107, -19, -33},0, {458, 16},{0xCE, 0xF, 0x8C, 0xFF}}},
+	{{{78, 11, 40},0, {756, 802},{0xD2, 0x41, 0x9D, 0xFF}}},
+	{{{70, -52, 35},0, {180, 784},{0xC6, 0xDB, 0x95, 0xFF}}},
+	{{{114, -92, -11},0, {-164, 172},{0xD0, 0xBA, 0xA2, 0xFF}}},
+	{{{192, 11, -2},0, {-16, -16},{0x52, 0x22, 0xA6, 0xFF}}},
+	{{{107, -19, -33},0, {-16, -16},{0xCE, 0xF, 0x8C, 0xFF}}},
+	{{{131, 47, -1},0, {-16, -16},{0xE3, 0x5C, 0xAE, 0xFF}}},
+	{{{182, -72, -8},0, {-16, -16},{0x4A, 0xD8, 0xA0, 0xFF}}},
+	{{{246, 29, 128},0, {-16, -16},{0x71, 0x29, 0xD6, 0xFF}}},
+	{{{183, 100, 86},0, {-16, -16},{0x14, 0x7B, 0xE9, 0xFF}}},
+	{{{129, 65, 103},0, {-16, -16},{0xA4, 0x4D, 0x2A, 0xFF}}},
+	{{{78, 11, 40},0, {-16, -16},{0xD2, 0x41, 0x9D, 0xFF}}},
+	{{{45, 49, 53},0, {-16, -16},{0x18, 0x3B, 0x92, 0xFF}}},
+	{{{18, -13, 33},0, {-16, -16},{0x1, 0xA, 0x81, 0xFF}}},
+	{{{70, -52, 35},0, {-16, -16},{0xC6, 0xDB, 0x95, 0xFF}}},
+	{{{29, -82, 43},0, {-16, -16},{0xB, 0xD2, 0x8A, 0xFF}}},
+	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
+	{{{114, -92, -11},0, {-16, -16},{0xD0, 0xBA, 0xA2, 0xFF}}},
+	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
+	{{{228, -121, 117},0, {-16, -16},{0x64, 0xC4, 0xCE, 0xFF}}},
+	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
+	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
+	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
+	{{{211, 81, 156},0, {-16, -16},{0x26, 0x71, 0x2C, 0xFF}}},
+	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
+	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
+	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
+	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
+	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
+	{{{45, 49, 53},0, {-16, -16},{0xC8, 0xEC, 0x70, 0xFF}}},
+	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
+	{{{65, -53, 55},0, {-16, -16},{0xBB, 0x8, 0x6A, 0xFF}}},
+	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
+	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
+	{{{29, -82, 43},0, {-16, -16},{0xCC, 0x10, 0x73, 0xFF}}},
+	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
+	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
+	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
+	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
+	{{{171, -129, 178},0, {-16, -16},{0xB7, 0xCD, 0x5A, 0xFF}}},
+	{{{216, -104, 220},0, {-16, -16},{0xF4, 0xCE, 0x74, 0xFF}}},
+	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
+	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
+	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
+	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
+	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
+};
+
+Gfx mario_005_switch_option_left_hand_cap_mesh_tri_0[] = {
+	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
+	gsSP2Triangles(1, 4, 3, 0, 5, 6, 7, 0),
+	gsSP2Triangles(8, 6, 5, 0, 8, 5, 9, 0),
+	gsSP2Triangles(5, 10, 9, 0, 7, 10, 5, 0),
+	gsSP2Triangles(10, 7, 11, 0, 12, 11, 7, 0),
+	gsSP2Triangles(12, 13, 11, 0, 12, 14, 13, 0),
+	gsSP2Triangles(15, 14, 12, 0, 16, 14, 15, 0),
+	gsSP2Triangles(16, 15, 17, 0, 18, 17, 15, 0),
+	gsSP2Triangles(17, 18, 19, 0, 8, 19, 18, 0),
+	gsSP2Triangles(18, 6, 8, 0, 20, 19, 8, 0),
+	gsSP2Triangles(19, 20, 21, 0, 20, 22, 21, 0),
+	gsSP2Triangles(23, 22, 20, 0, 20, 9, 23, 0),
+	gsSP2Triangles(20, 8, 9, 0, 24, 23, 9, 0),
+	gsSP2Triangles(25, 23, 24, 0, 25, 24, 26, 0),
+	gsSP2Triangles(26, 24, 27, 0, 27, 24, 10, 0),
+	gsSP2Triangles(24, 9, 10, 0, 10, 11, 27, 0),
+	gsSP2Triangles(27, 11, 28, 0, 11, 29, 28, 0),
+	gsSP2Triangles(11, 30, 29, 0, 30, 31, 29, 0),
+	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_vtx_0 + 32, 15, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSP2Triangles(0, 3, 4, 0, 0, 4, 5, 0),
+	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
+	gsSP2Triangles(5, 7, 8, 0, 8, 7, 9, 0),
+	gsSP2Triangles(7, 10, 9, 0, 9, 10, 11, 0),
+	gsSP2Triangles(10, 12, 11, 0, 9, 11, 13, 0),
+	gsSP2Triangles(13, 8, 9, 0, 13, 5, 8, 0),
+	gsSP2Triangles(13, 14, 5, 0, 1, 0, 5, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_1[30] = {
+	{{{4, -3, -32},0, {-16, -16},{0x48, 0x20, 0x9D, 0xFF}}},
+	{{{-19, 47, -4},0, {-16, -16},{0x2F, 0x74, 0xE8, 0xFF}}},
+	{{{-2, 41, 0},0, {-16, -16},{0xDD, 0x73, 0xD7, 0xFF}}},
+	{{{-13, 26, 41},0, {-16, -16},{0x2E, 0x50, 0x57, 0xFF}}},
+	{{{1, 24, 35},0, {-16, -16},{0xF8, 0x3F, 0x6E, 0xFF}}},
+	{{{23, -25, 35},0, {-16, -16},{0x10, 0xC1, 0x6D, 0xFF}}},
+	{{{13, -37, 41},0, {-16, -16},{0x57, 0xE5, 0x59, 0xFF}}},
+	{{{31, -39, 0},0, {-16, -16},{0x3C, 0x98, 0xD7, 0xFF}}},
+	{{{24, -55, -4},0, {-16, -16},{0x74, 0xD2, 0xE9, 0xFF}}},
+	{{{16, 1, -22},0, {-16, -16},{0x4, 0xFF, 0x81, 0xFF}}},
+	{{{35, 9, -36},0, {-16, -16},{0xE6, 0xF5, 0x84, 0xFF}}},
+	{{{11, 60, -3},0, {-16, -16},{0xB1, 0x59, 0xD2, 0xFF}}},
+	{{{29, 62, 34},0, {-16, -16},{0xCE, 0x59, 0x4B, 0xFF}}},
+	{{{29, 7, 48},0, {-16, -16},{0xC1, 0xF9, 0x6E, 0xFF}}},
+	{{{75, -32, 65},0, {-16, -16},{0x19, 0xB2, 0x61, 0xFF}}},
+	{{{55, -43, -3},0, {-16, -16},{0x7, 0x8C, 0xCD, 0xFF}}},
+	{{{103, -25, 1},0, {-16, -16},{0x65, 0xC0, 0xD6, 0xFF}}},
+	{{{85, 30, -32},0, {-16, -16},{0x45, 0x1C, 0x99, 0xFF}}},
+	{{{58, 81, 0},0, {-16, -16},{0x18, 0x79, 0xE3, 0xFF}}},
+	{{{54, 54, 44},0, {-16, -16},{0x15, 0x51, 0x5F, 0xFF}}},
+	{{{56, 11, 65},0, {-16, -16},{0xF0, 0x13, 0x7D, 0xFF}}},
+	{{{95, -8, 52},0, {-16, -16},{0x67, 0xF9, 0x4A, 0xFF}}},
+	{{{96, 39, 24},0, {-16, -16},{0x6C, 0x3D, 0x1C, 0xFF}}},
+	{{{85, 15, 52},0, {-16, -16},{0x44, 0x2D, 0x61, 0xFF}}},
+	{{{13, -37, 41},0, {-16, -16},{0x9B, 0xB8, 0x1E, 0xFF}}},
+	{{{-15, -12, 7},0, {-16, -16},{0x8B, 0xCF, 0xF8, 0xFF}}},
+	{{{24, -55, -4},0, {-16, -16},{0xA1, 0xAF, 0xEC, 0xFF}}},
+	{{{-13, 26, 41},0, {-16, -16},{0x87, 0xEA, 0x1F, 0xFF}}},
+	{{{-19, 47, -4},0, {-16, -16},{0x83, 0xF4, 0xED, 0xFF}}},
+	{{{4, -3, -32},0, {-16, -16},{0x99, 0xD5, 0xC3, 0xFF}}},
+};
+
+Gfx mario_005_switch_option_left_hand_cap_mesh_tri_1[] = {
+	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_vtx_1 + 0, 30, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(3, 4, 2, 0, 5, 4, 3, 0),
+	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
+	gsSP2Triangles(6, 8, 7, 0, 7, 8, 0, 0),
+	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
+	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
+	gsSP2Triangles(11, 2, 4, 0, 12, 11, 4, 0),
+	gsSP2Triangles(4, 13, 12, 0, 13, 4, 5, 0),
+	gsSP2Triangles(14, 13, 5, 0, 15, 14, 5, 0),
+	gsSP2Triangles(5, 7, 15, 0, 10, 15, 7, 0),
+	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
+	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
+	gsSP2Triangles(11, 18, 10, 0, 18, 11, 12, 0),
+	gsSP2Triangles(12, 19, 18, 0, 19, 12, 20, 0),
+	gsSP2Triangles(12, 13, 20, 0, 14, 20, 13, 0),
+	gsSP2Triangles(14, 21, 20, 0, 16, 21, 14, 0),
+	gsSP2Triangles(15, 16, 14, 0, 16, 22, 21, 0),
+	gsSP2Triangles(17, 22, 16, 0, 18, 22, 17, 0),
+	gsSP2Triangles(19, 22, 18, 0, 22, 19, 23, 0),
+	gsSP2Triangles(23, 19, 20, 0, 21, 23, 20, 0),
+	gsSP2Triangles(21, 22, 23, 0, 24, 25, 26, 0),
+	gsSP2Triangles(27, 25, 24, 0, 28, 25, 27, 0),
+	gsSP2Triangles(29, 25, 28, 0, 26, 25, 29, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0[47] = {
+	{{{131, 47, -1},0, {1088, 212},{0xE3, 0x5C, 0xAE, 0xFF}}},
+	{{{107, -19, -33},0, {458, 16},{0xCE, 0xF, 0x8C, 0xFF}}},
+	{{{78, 11, 40},0, {756, 802},{0xD2, 0x41, 0x9D, 0xFF}}},
+	{{{70, -52, 35},0, {180, 784},{0xC6, 0xDB, 0x95, 0xFF}}},
+	{{{114, -92, -11},0, {-164, 172},{0xD0, 0xBA, 0xA2, 0xFF}}},
+	{{{192, 11, -2},0, {-16, -16},{0x52, 0x22, 0xA6, 0xFF}}},
+	{{{107, -19, -33},0, {-16, -16},{0xCE, 0xF, 0x8C, 0xFF}}},
+	{{{131, 47, -1},0, {-16, -16},{0xE3, 0x5C, 0xAE, 0xFF}}},
+	{{{182, -72, -8},0, {-16, -16},{0x4A, 0xD8, 0xA0, 0xFF}}},
+	{{{246, 29, 128},0, {-16, -16},{0x71, 0x29, 0xD6, 0xFF}}},
+	{{{183, 100, 86},0, {-16, -16},{0x14, 0x7B, 0xE9, 0xFF}}},
+	{{{129, 65, 103},0, {-16, -16},{0xA4, 0x4D, 0x2A, 0xFF}}},
+	{{{78, 11, 40},0, {-16, -16},{0xD2, 0x41, 0x9D, 0xFF}}},
+	{{{45, 49, 53},0, {-16, -16},{0x18, 0x3B, 0x92, 0xFF}}},
+	{{{18, -13, 33},0, {-16, -16},{0x1, 0xA, 0x81, 0xFF}}},
+	{{{70, -52, 35},0, {-16, -16},{0xC6, 0xDB, 0x95, 0xFF}}},
+	{{{29, -82, 43},0, {-16, -16},{0xB, 0xD2, 0x8A, 0xFF}}},
+	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
+	{{{114, -92, -11},0, {-16, -16},{0xD0, 0xBA, 0xA2, 0xFF}}},
+	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
+	{{{228, -121, 117},0, {-16, -16},{0x64, 0xC4, 0xCE, 0xFF}}},
+	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
+	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
+	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
+	{{{211, 81, 156},0, {-16, -16},{0x26, 0x71, 0x2C, 0xFF}}},
+	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
+	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
+	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
+	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
+	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
+	{{{45, 49, 53},0, {-16, -16},{0xC8, 0xEC, 0x70, 0xFF}}},
+	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
+	{{{65, -53, 55},0, {-16, -16},{0xBB, 0x8, 0x6A, 0xFF}}},
+	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
+	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
+	{{{29, -82, 43},0, {-16, -16},{0xCC, 0x10, 0x73, 0xFF}}},
+	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
+	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
+	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
+	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
+	{{{171, -129, 178},0, {-16, -16},{0xB7, 0xCD, 0x5A, 0xFF}}},
+	{{{216, -104, 220},0, {-16, -16},{0xF4, 0xCE, 0x74, 0xFF}}},
+	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
+	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
+	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
+	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
+	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
+};
+
+Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_0[] = {
+	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
+	gsSP2Triangles(1, 4, 3, 0, 5, 6, 7, 0),
+	gsSP2Triangles(8, 6, 5, 0, 8, 5, 9, 0),
+	gsSP2Triangles(5, 10, 9, 0, 7, 10, 5, 0),
+	gsSP2Triangles(10, 7, 11, 0, 12, 11, 7, 0),
+	gsSP2Triangles(12, 13, 11, 0, 12, 14, 13, 0),
+	gsSP2Triangles(15, 14, 12, 0, 16, 14, 15, 0),
+	gsSP2Triangles(16, 15, 17, 0, 18, 17, 15, 0),
+	gsSP2Triangles(17, 18, 19, 0, 8, 19, 18, 0),
+	gsSP2Triangles(18, 6, 8, 0, 20, 19, 8, 0),
+	gsSP2Triangles(19, 20, 21, 0, 20, 22, 21, 0),
+	gsSP2Triangles(23, 22, 20, 0, 20, 9, 23, 0),
+	gsSP2Triangles(20, 8, 9, 0, 24, 23, 9, 0),
+	gsSP2Triangles(25, 23, 24, 0, 25, 24, 26, 0),
+	gsSP2Triangles(26, 24, 27, 0, 27, 24, 10, 0),
+	gsSP2Triangles(24, 9, 10, 0, 10, 11, 27, 0),
+	gsSP2Triangles(27, 11, 28, 0, 11, 29, 28, 0),
+	gsSP2Triangles(11, 30, 29, 0, 30, 31, 29, 0),
+	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0 + 32, 15, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSP2Triangles(0, 3, 4, 0, 0, 4, 5, 0),
+	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
+	gsSP2Triangles(5, 7, 8, 0, 8, 7, 9, 0),
+	gsSP2Triangles(7, 10, 9, 0, 9, 10, 11, 0),
+	gsSP2Triangles(10, 12, 11, 0, 9, 11, 13, 0),
+	gsSP2Triangles(13, 8, 9, 0, 13, 5, 8, 0),
+	gsSP2Triangles(13, 14, 5, 0, 1, 0, 5, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_1[30] = {
+	{{{4, -3, -32},0, {-16, -16},{0x48, 0x20, 0x9D, 0xFF}}},
+	{{{-19, 47, -4},0, {-16, -16},{0x2F, 0x74, 0xE8, 0xFF}}},
+	{{{-2, 41, 0},0, {-16, -16},{0xDD, 0x73, 0xD7, 0xFF}}},
+	{{{-13, 26, 41},0, {-16, -16},{0x2E, 0x50, 0x57, 0xFF}}},
+	{{{1, 24, 35},0, {-16, -16},{0xF8, 0x3F, 0x6E, 0xFF}}},
+	{{{23, -25, 35},0, {-16, -16},{0x10, 0xC1, 0x6D, 0xFF}}},
+	{{{13, -37, 41},0, {-16, -16},{0x57, 0xE5, 0x59, 0xFF}}},
+	{{{31, -39, 0},0, {-16, -16},{0x3C, 0x98, 0xD7, 0xFF}}},
+	{{{24, -55, -4},0, {-16, -16},{0x74, 0xD2, 0xE9, 0xFF}}},
+	{{{16, 1, -22},0, {-16, -16},{0x4, 0xFF, 0x81, 0xFF}}},
+	{{{35, 9, -36},0, {-16, -16},{0xE6, 0xF5, 0x84, 0xFF}}},
+	{{{11, 60, -3},0, {-16, -16},{0xB1, 0x59, 0xD2, 0xFF}}},
+	{{{29, 62, 34},0, {-16, -16},{0xCE, 0x59, 0x4B, 0xFF}}},
+	{{{29, 7, 48},0, {-16, -16},{0xC1, 0xF9, 0x6E, 0xFF}}},
+	{{{75, -32, 65},0, {-16, -16},{0x19, 0xB2, 0x61, 0xFF}}},
+	{{{55, -43, -3},0, {-16, -16},{0x7, 0x8C, 0xCD, 0xFF}}},
+	{{{103, -25, 1},0, {-16, -16},{0x65, 0xC0, 0xD6, 0xFF}}},
+	{{{85, 30, -32},0, {-16, -16},{0x45, 0x1C, 0x99, 0xFF}}},
+	{{{58, 81, 0},0, {-16, -16},{0x18, 0x79, 0xE3, 0xFF}}},
+	{{{54, 54, 44},0, {-16, -16},{0x15, 0x51, 0x5F, 0xFF}}},
+	{{{56, 11, 65},0, {-16, -16},{0xF0, 0x13, 0x7D, 0xFF}}},
+	{{{95, -8, 52},0, {-16, -16},{0x67, 0xF9, 0x4A, 0xFF}}},
+	{{{96, 39, 24},0, {-16, -16},{0x6C, 0x3D, 0x1C, 0xFF}}},
+	{{{85, 15, 52},0, {-16, -16},{0x44, 0x2D, 0x61, 0xFF}}},
+	{{{13, -37, 41},0, {-16, -16},{0x9B, 0xB8, 0x1E, 0xFF}}},
+	{{{-15, -12, 7},0, {-16, -16},{0x8B, 0xCF, 0xF8, 0xFF}}},
+	{{{24, -55, -4},0, {-16, -16},{0xA1, 0xAF, 0xEC, 0xFF}}},
+	{{{-13, 26, 41},0, {-16, -16},{0x87, 0xEA, 0x1F, 0xFF}}},
+	{{{-19, 47, -4},0, {-16, -16},{0x83, 0xF4, 0xED, 0xFF}}},
+	{{{4, -3, -32},0, {-16, -16},{0x99, 0xD5, 0xC3, 0xFF}}},
+};
+
+Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_1[] = {
+	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_vtx_1 + 0, 30, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(3, 4, 2, 0, 5, 4, 3, 0),
+	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
+	gsSP2Triangles(6, 8, 7, 0, 7, 8, 0, 0),
+	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
+	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
+	gsSP2Triangles(11, 2, 4, 0, 12, 11, 4, 0),
+	gsSP2Triangles(4, 13, 12, 0, 13, 4, 5, 0),
+	gsSP2Triangles(14, 13, 5, 0, 15, 14, 5, 0),
+	gsSP2Triangles(5, 7, 15, 0, 10, 15, 7, 0),
+	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
+	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
+	gsSP2Triangles(11, 18, 10, 0, 18, 11, 12, 0),
+	gsSP2Triangles(12, 19, 18, 0, 19, 12, 20, 0),
+	gsSP2Triangles(12, 13, 20, 0, 14, 20, 13, 0),
+	gsSP2Triangles(14, 21, 20, 0, 16, 21, 14, 0),
+	gsSP2Triangles(15, 16, 14, 0, 16, 22, 21, 0),
+	gsSP2Triangles(17, 22, 16, 0, 18, 22, 17, 0),
+	gsSP2Triangles(19, 22, 18, 0, 22, 19, 23, 0),
+	gsSP2Triangles(23, 19, 20, 0, 21, 23, 20, 0),
+	gsSP2Triangles(21, 22, 23, 0, 24, 25, 26, 0),
+	gsSP2Triangles(27, 25, 24, 0, 28, 25, 27, 0),
+	gsSP2Triangles(29, 25, 28, 0, 26, 25, 29, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_0[8] = {
+	{{{178, -177, 128},0, {-16, 4008},{0xA8, 0xB3, 0xCF, 0xFF}}},
+	{{{319, -248, -14},0, {-16, -16},{0xA8, 0xB4, 0xCE, 0xFF}}},
+	{{{349, -325, 53},0, {974, -16},{0xA8, 0xB3, 0xCF, 0xFF}}},
+	{{{207, -253, 195},0, {974, 4008},{0xA8, 0xB3, 0xCF, 0xFF}}},
+	{{{414, 206, 82},0, {974, -16},{0xBD, 0x64, 0xD8, 0xFF}}},
+	{{{368, 146, 7},0, {-16, -16},{0xBE, 0x65, 0xD8, 0xFF}}},
+	{{{212, 96, 143},0, {-16, 4008},{0xBE, 0x65, 0xD8, 0xFF}}},
+	{{{258, 156, 218},0, {974, 4008},{0xBD, 0x64, 0xD8, 0xFF}}},
+};
+
+Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0[] = {
+	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_0 + 0, 8, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
+	gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
+	gsSPEndDisplayList(),
+};Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_1[8] = {
+	{{{368, 146, 7},0, {974, -16},{0xBE, 0x65, 0xD8, 0xFF}}},
+	{{{166, 37, 68},0, {-16, 4008},{0xBE, 0x65, 0xD9, 0xFF}}},
+	{{{212, 96, 143},0, {974, 4008},{0xBE, 0x65, 0xD8, 0xFF}}},
+	{{{322, 87, -67},0, {-16, -16},{0xBE, 0x65, 0xD8, 0xFF}}},
+	{{{178, -177, 128},0, {974, 4008},{0xA8, 0xB3, 0xCF, 0xFF}}},
+	{{{149, -100, 60},0, {-16, 4008},{0xA8, 0xB4, 0xCE, 0xFF}}},
+	{{{319, -248, -14},0, {974, -16},{0xA8, 0xB4, 0xCE, 0xFF}}},
+	{{{290, -171, -81},0, {-16, -16},{0xA8, 0xB4, 0xCE, 0xFF}}},
+};
+
+Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1[] = {
+	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_1 + 0, 8, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(4, 5, 6, 0, 5, 7, 6, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_009_mesh_vtx_0[17] = {
+	{{{-5, 37, 31},0, {-16, -16},{0x9D, 0x3F, 0x32, 0xFF}}},
+	{{{-15, 0, 7},0, {-16, -16},{0x81, 0xF7, 0xFE, 0xFF}}},
+	{{{-1, -12, 47},0, {-16, -16},{0xA5, 0xE2, 0x53, 0xFF}}},
+	{{{-4, 37, -17},0, {-16, -16},{0xA0, 0x3E, 0xC9, 0xFF}}},
+	{{{14, 48, -23},0, {-16, -16},{0xE2, 0x62, 0xB5, 0xFF}}},
+	{{{13, 48, 38},0, {-16, -16},{0xE0, 0x62, 0x4A, 0xFF}}},
+	{{{18, -15, 58},0, {-16, -16},{0xEB, 0xD9, 0x77, 0xFF}}},
+	{{{1, -44, 8},0, {-16, -16},{0xAA, 0xA3, 0x0, 0xFF}}},
+	{{{0, -13, -32},0, {-16, -16},{0xA8, 0xDF, 0xAA, 0xFF}}},
+	{{{19, -15, -42},0, {-16, -16},{0xEE, 0xD8, 0x89, 0xFF}}},
+	{{{92, 45, -16},0, {-16, -16},{0x3B, 0x5C, 0xC0, 0xFF}}},
+	{{{91, 45, 32},0, {-16, -16},{0x39, 0x5D, 0x40, 0xFF}}},
+	{{{95, -5, 48},0, {-16, -16},{0x42, 0xE6, 0x69, 0xFF}}},
+	{{{98, -37, 8},0, {-16, -16},{0x4A, 0x99, 0x0, 0xFF}}},
+	{{{21, -54, 8},0, {-16, -16},{0xF3, 0x82, 0x0, 0xFF}}},
+	{{{96, -5, -31},0, {-16, -16},{0x44, 0xE5, 0x98, 0xFF}}},
+	{{{116, 10, 8},0, {-16, -16},{0x7F, 0xA, 0x1, 0xFF}}},
+};
+
+Gfx mario_000_offset_009_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_009_mesh_vtx_0 + 0, 17, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 0, 5, 0),
+	gsSP2Triangles(5, 0, 6, 0, 0, 2, 6, 0),
+	gsSP2Triangles(6, 2, 7, 0, 2, 1, 7, 0),
+	gsSP2Triangles(7, 1, 8, 0, 8, 1, 3, 0),
+	gsSP2Triangles(9, 8, 3, 0, 9, 3, 4, 0),
+	gsSP2Triangles(9, 4, 10, 0, 4, 5, 10, 0),
+	gsSP2Triangles(5, 11, 10, 0, 5, 6, 11, 0),
+	gsSP2Triangles(6, 12, 11, 0, 13, 12, 6, 0),
+	gsSP2Triangles(6, 14, 13, 0, 6, 7, 14, 0),
+	gsSP2Triangles(14, 7, 9, 0, 7, 8, 9, 0),
+	gsSP2Triangles(14, 9, 13, 0, 9, 15, 13, 0),
+	gsSP2Triangles(10, 15, 9, 0, 10, 16, 15, 0),
+	gsSP2Triangles(11, 16, 10, 0, 12, 16, 11, 0),
+	gsSP2Triangles(13, 16, 12, 0, 15, 16, 13, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_010_mesh_vtx_0[12] = {
+	{{{8, 44, 33},0, {-16, -16},{0xC5, 0x5C, 0x40, 0xFF}}},
+	{{{65, -11, 54},0, {-16, -16},{0x3A, 0xDB, 0x6B, 0xFF}}},
+	{{{68, 45, 37},0, {-16, -16},{0x40, 0x57, 0x44, 0xFF}}},
+	{{{6, -6, 49},0, {-16, -16},{0xBF, 0xE3, 0x69, 0xFF}}},
+	{{{-14, 8, 8},0, {-16, -16},{0x81, 0x6, 0xFE, 0xFF}}},
+	{{{9, 44, -16},0, {-16, -16},{0xC7, 0x5C, 0xBE, 0xFF}}},
+	{{{69, 45, -18},0, {-16, -16},{0x42, 0x57, 0xC0, 0xFF}}},
+	{{{81, 3, 9},0, {-16, -16},{0x7F, 0xF9, 0x1, 0xFF}}},
+	{{{64, -46, 9},0, {-16, -16},{0x36, 0x8D, 0x0, 0xFF}}},
+	{{{4, -37, 9},0, {-16, -16},{0xBA, 0x96, 0x0, 0xFF}}},
+	{{{6, -6, -31},0, {-16, -16},{0xBF, 0xE2, 0x97, 0xFF}}},
+	{{{66, -11, -36},0, {-16, -16},{0x3B, 0xDB, 0x96, 0xFF}}},
+};
+
+Gfx mario_000_offset_010_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_010_mesh_vtx_0 + 0, 12, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(0, 4, 3, 0, 5, 4, 0, 0),
+	gsSP2Triangles(6, 5, 0, 0, 0, 2, 6, 0),
+	gsSP2Triangles(2, 7, 6, 0, 1, 7, 2, 0),
+	gsSP2Triangles(8, 7, 1, 0, 9, 8, 1, 0),
+	gsSP2Triangles(1, 3, 9, 0, 3, 4, 9, 0),
+	gsSP2Triangles(9, 4, 10, 0, 10, 4, 5, 0),
+	gsSP2Triangles(11, 10, 5, 0, 5, 6, 11, 0),
+	gsSP2Triangles(6, 7, 11, 0, 11, 7, 8, 0),
+	gsSP2Triangles(9, 11, 8, 0, 9, 10, 11, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_011_mesh_vtx_0[23] = {
+	{{{-11, 54, 53},0, {-16, -16},{0x2D, 0x77, 0xFE, 0xFF}}},
+	{{{-39, 64, -8},0, {-16, -16},{0x2E, 0x76, 0xFE, 0xFF}}},
+	{{{-41, 65, 26},0, {-16, -16},{0x2D, 0x77, 0xFF, 0xFF}}},
+	{{{-12, 53, -32},0, {-16, -16},{0x2D, 0x77, 0xFE, 0xFF}}},
+	{{{78, 21, 61},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
+	{{{76, 20, -41},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
+	{{{110, 9, 35},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
+	{{{110, 8, -20},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
+	{{{-34, 12, 44},0, {-16, -16},{0xB3, 0xCF, 0x58, 0xFF}}},
+	{{{-11, 54, 53},0, {-16, -16},{0xD1, 0x3, 0x76, 0xFF}}},
+	{{{-41, 65, 26},0, {-16, -16},{0x8E, 0x1A, 0x31, 0xFF}}},
+	{{{43, -18, 54},0, {-16, -16},{0x0, 0xB0, 0x62, 0xFF}}},
+	{{{27, -35, 11},0, {-16, -16},{0xE4, 0x84, 0xFC, 0xFF}}},
+	{{{-54, 15, 8},0, {-16, -16},{0x89, 0xD3, 0xFC, 0xFF}}},
+	{{{-39, 64, -8},0, {-16, -16},{0x92, 0x19, 0xC6, 0xFF}}},
+	{{{-35, 11, -21},0, {-16, -16},{0xB4, 0xCB, 0xA9, 0xFF}}},
+	{{{-12, 53, -32},0, {-16, -16},{0xCE, 0xFE, 0x8B, 0xFF}}},
+	{{{44, -12, -33},0, {-16, -16},{0xFB, 0xB5, 0x99, 0xFF}}},
+	{{{76, 20, -41},0, {-16, -16},{0x13, 0xD0, 0x8C, 0xFF}}},
+	{{{110, 8, -20},0, {-16, -16},{0x48, 0xAA, 0xC5, 0xFF}}},
+	{{{80, -31, 7},0, {-16, -16},{0x36, 0x8D, 0xF9, 0xFF}}},
+	{{{110, 9, 35},0, {-16, -16},{0x4E, 0xAC, 0x36, 0xFF}}},
+	{{{78, 21, 61},0, {-16, -16},{0x1C, 0xD2, 0x73, 0xFF}}},
+};
+
+Gfx mario_000_offset_011_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_011_mesh_vtx_0 + 0, 23, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(0, 4, 3, 0, 4, 5, 3, 0),
+	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
+	gsSP2Triangles(8, 9, 10, 0, 8, 11, 9, 0),
+	gsSP2Triangles(12, 11, 8, 0, 12, 8, 13, 0),
+	gsSP2Triangles(10, 13, 8, 0, 13, 10, 14, 0),
+	gsSP2Triangles(14, 15, 13, 0, 14, 16, 15, 0),
+	gsSP2Triangles(17, 15, 16, 0, 17, 16, 18, 0),
+	gsSP2Triangles(17, 18, 19, 0, 19, 20, 17, 0),
+	gsSP2Triangles(20, 19, 21, 0, 11, 20, 21, 0),
+	gsSP2Triangles(21, 22, 11, 0, 11, 22, 9, 0),
+	gsSP2Triangles(20, 11, 12, 0, 12, 17, 20, 0),
+	gsSP2Triangles(15, 17, 12, 0, 13, 15, 12, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_012_mesh_vtx_0[17] = {
+	{{{95, -3, -49},0, {-16, -16},{0x41, 0xE8, 0x96, 0xFF}}},
+	{{{116, 11, -9},0, {-16, -16},{0x7F, 0xB, 0xFF, 0xFF}}},
+	{{{98, -35, -10},0, {-16, -16},{0x4B, 0x99, 0xFD, 0xFF}}},
+	{{{90, 47, -32},0, {-16, -16},{0x37, 0x5F, 0xC1, 0xFF}}},
+	{{{18, -13, -58},0, {-16, -16},{0xEB, 0xDC, 0x88, 0xFF}}},
+	{{{22, -54, -9},0, {-16, -16},{0xF6, 0x81, 0xFE, 0xFF}}},
+	{{{19, -16, 41},0, {-16, -16},{0xEF, 0xD5, 0x76, 0xFF}}},
+	{{{96, -5, 30},0, {-16, -16},{0x44, 0xE2, 0x67, 0xFF}}},
+	{{{91, 46, 16},0, {-16, -16},{0x3B, 0x5C, 0x42, 0xFF}}},
+	{{{12, 49, -37},0, {-16, -16},{0xE0, 0x64, 0xB9, 0xFF}}},
+	{{{-6, 38, -31},0, {-16, -16},{0x9E, 0x3F, 0xCD, 0xFF}}},
+	{{{-1, -11, -47},0, {-16, -16},{0xA5, 0xE2, 0xAC, 0xFF}}},
+	{{{1, -44, -9},0, {-16, -16},{0xAB, 0xA2, 0xFE, 0xFF}}},
+	{{{0, -14, 31},0, {-16, -16},{0xA9, 0xDB, 0x54, 0xFF}}},
+	{{{-5, 36, 18},0, {-16, -16},{0x9E, 0x39, 0x39, 0xFF}}},
+	{{{13, 48, 24},0, {-16, -16},{0xE1, 0x60, 0x4D, 0xFF}}},
+	{{{-15, 0, -7},0, {-16, -16},{0x81, 0xF5, 0x2, 0xFF}}},
+};
+
+Gfx mario_000_offset_012_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_012_mesh_vtx_0 + 0, 17, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(3, 0, 4, 0, 4, 0, 2, 0),
+	gsSP2Triangles(2, 5, 4, 0, 2, 6, 5, 0),
+	gsSP2Triangles(2, 7, 6, 0, 2, 1, 7, 0),
+	gsSP2Triangles(7, 1, 8, 0, 8, 1, 3, 0),
+	gsSP2Triangles(8, 3, 9, 0, 3, 4, 9, 0),
+	gsSP2Triangles(4, 10, 9, 0, 4, 11, 10, 0),
+	gsSP2Triangles(12, 11, 4, 0, 5, 12, 4, 0),
+	gsSP2Triangles(6, 12, 5, 0, 6, 13, 12, 0),
+	gsSP2Triangles(14, 13, 6, 0, 15, 14, 6, 0),
+	gsSP2Triangles(8, 15, 6, 0, 6, 7, 8, 0),
+	gsSP2Triangles(8, 9, 15, 0, 9, 10, 15, 0),
+	gsSP2Triangles(10, 14, 15, 0, 10, 16, 14, 0),
+	gsSP2Triangles(11, 16, 10, 0, 12, 16, 11, 0),
+	gsSP2Triangles(13, 16, 12, 0, 14, 16, 13, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_offset_013_mesh_vtx_0[12] = {
+	{{{66, -11, 34},0, {-16, -16},{0x39, 0xD8, 0x6A, 0xFF}}},
+	{{{69, 45, 18},0, {-16, -16},{0x40, 0x55, 0x44, 0xFF}}},
+	{{{9, 44, 16},0, {-16, -16},{0xC6, 0x5A, 0x45, 0xFF}}},
+	{{{83, 4, -10},0, {-16, -16},{0x7F, 0xF8, 0x0, 0xFF}}},
+	{{{63, -45, -12},0, {-16, -16},{0x33, 0x8C, 0xFC, 0xFF}}},
+	{{{4, -36, -10},0, {-16, -16},{0xB9, 0x96, 0xFF, 0xFF}}},
+	{{{6, -6, 30},0, {-16, -16},{0xC0, 0xE0, 0x69, 0xFF}}},
+	{{{-13, 10, -9},0, {-16, -16},{0x81, 0x8, 0x2, 0xFF}}},
+	{{{9, 46, -33},0, {-16, -16},{0xC6, 0x5F, 0xC3, 0xFF}}},
+	{{{69, 46, -37},0, {-16, -16},{0x40, 0x58, 0xBF, 0xFF}}},
+	{{{65, -9, -56},0, {-16, -16},{0x37, 0xDD, 0x93, 0xFF}}},
+	{{{5, -3, -50},0, {-16, -16},{0xBC, 0xE7, 0x97, 0xFF}}},
+};
+
+Gfx mario_000_offset_013_mesh_tri_0[] = {
+	gsSPVertex(mario_000_offset_013_mesh_vtx_0 + 0, 12, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 0, 5, 0),
+	gsSP2Triangles(0, 6, 5, 0, 2, 6, 0, 0),
+	gsSP2Triangles(2, 7, 6, 0, 8, 7, 2, 0),
+	gsSP2Triangles(8, 2, 1, 0, 1, 9, 8, 0),
+	gsSP2Triangles(1, 3, 9, 0, 9, 3, 10, 0),
+	gsSP2Triangles(10, 3, 4, 0, 10, 4, 5, 0),
+	gsSP2Triangles(5, 11, 10, 0, 5, 7, 11, 0),
+	gsSP2Triangles(6, 7, 5, 0, 11, 7, 8, 0),
+	gsSP2Triangles(10, 11, 8, 0, 9, 10, 8, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx mario_000_displaylist_005_mesh_vtx_0[23] = {
+	{{{75, 23, 40},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
+	{{{109, 11, 20},0, {-16, -16},{0x2B, 0x78, 0x1, 0xFF}}},
+	{{{110, 11, -36},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
+	{{{78, 22, -61},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
+	{{{-14, 54, 29},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
+	{{{-11, 53, -56},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
+	{{{-40, 63, 5},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
+	{{{-42, 64, -29},0, {-16, -16},{0x2C, 0x77, 0x1, 0xFF}}},
+	{{{110, 11, -36},0, {-16, -16},{0x50, 0xAD, 0xCB, 0xFF}}},
+	{{{109, 11, 20},0, {-16, -16},{0x49, 0xAD, 0x3E, 0xFF}}},
+	{{{80, -29, -7},0, {-16, -16},{0x39, 0x8F, 0x9, 0xFF}}},
+	{{{44, -11, 32},0, {-16, -16},{0xFC, 0xB7, 0x68, 0xFF}}},
+	{{{75, 23, 40},0, {-16, -16},{0x12, 0xD4, 0x76, 0xFF}}},
+	{{{-14, 54, 29},0, {-16, -16},{0xCD, 0x0, 0x74, 0xFF}}},
+	{{{-36, 11, 19},0, {-16, -16},{0xB4, 0xCC, 0x57, 0xFF}}},
+	{{{-40, 63, 5},0, {-16, -16},{0x91, 0x19, 0x38, 0xFF}}},
+	{{{-54, 14, -10},0, {-16, -16},{0x8A, 0xD1, 0x4, 0xFF}}},
+	{{{-42, 64, -29},0, {-16, -16},{0x8D, 0x17, 0xCE, 0xFF}}},
+	{{{-34, 11, -46},0, {-16, -16},{0xB4, 0xCC, 0xA9, 0xFF}}},
+	{{{-11, 53, -56},0, {-16, -16},{0xD2, 0x0, 0x8A, 0xFF}}},
+	{{{43, -18, -55},0, {-16, -16},{0x2, 0xAF, 0x9F, 0xFF}}},
+	{{{78, 22, -61},0, {-16, -16},{0x1F, 0xD4, 0x8D, 0xFF}}},
+	{{{27, -35, -11},0, {-16, -16},{0xE6, 0x84, 0x6, 0xFF}}},
+};
+
+Gfx mario_000_displaylist_005_mesh_tri_0[] = {
+	gsSPVertex(mario_000_displaylist_005_mesh_vtx_0 + 0, 23, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSP2Triangles(4, 0, 3, 0, 4, 3, 5, 0),
+	gsSP2Triangles(6, 4, 5, 0, 7, 6, 5, 0),
+	gsSP2Triangles(8, 9, 10, 0, 11, 10, 9, 0),
+	gsSP2Triangles(9, 12, 11, 0, 12, 13, 11, 0),
+	gsSP2Triangles(13, 14, 11, 0, 14, 13, 15, 0),
+	gsSP2Triangles(16, 14, 15, 0, 15, 17, 16, 0),
+	gsSP2Triangles(18, 16, 17, 0, 17, 19, 18, 0),
+	gsSP2Triangles(19, 20, 18, 0, 19, 21, 20, 0),
+	gsSP2Triangles(20, 21, 8, 0, 8, 10, 20, 0),
+	gsSP2Triangles(22, 20, 10, 0, 10, 11, 22, 0),
+	gsSP2Triangles(22, 11, 14, 0, 22, 14, 16, 0),
+	gsSP2Triangles(16, 18, 22, 0, 18, 20, 22, 0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_mario_blue[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(0, 0, 254, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_metal[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT, 0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT),
+	gsSPSetGeometryMode(G_TEXTURE_GEN),
+	gsSPTexture(4031, 1983, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, mario_metal_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 252, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0),
+	gsDPSetTileSize(0, 0, 0, 252, 124),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_mario_metal[] = {
+	gsDPPipeSync(),
+	gsSPClearGeometryMode(G_TEXTURE_GEN),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_red[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(254, 0, 0, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_body[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_button_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_face_0___eye_open[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetTextureLUT(G_TT_RGBA16),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_mario_face_1_ci8_pal_rgba16),
+	gsDPTileSync(),
+	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
+	gsDPLoadSync(),
+	gsDPLoadTLUTCmd(7, 110),
+	gsDPPipeSync(),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 32, mario_mario_face_1_ci8),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_mario_face_0___eye_open[] = {
+	gsDPPipeSync(),
+	gsDPSetTextureLUT(G_TT_NONE),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_skin[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(253, 192, 121, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_mustache[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetTextureLUT(G_TT_RGBA16),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_mario_mustache_ci4_pal_rgba16),
+	gsDPTileSync(),
+	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
+	gsDPLoadSync(),
+	gsDPLoadTLUTCmd(7, 1),
+	gsDPPipeSync(),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 16, mario_mario_mustache_ci4),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 2, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 62, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_4b, 2, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_mario_mustache[] = {
+	gsDPPipeSync(),
+	gsDPSetTextureLUT(G_TT_NONE),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_hair[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(115, 5, 0, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_sideburns[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_sideburn_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_cap[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetTextureLUT(G_TT_RGBA16),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_mario_logo_rgba16_ci8_pal_rgba16),
+	gsDPTileSync(),
+	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
+	gsDPLoadSync(),
+	gsDPLoadTLUTCmd(7, 35),
+	gsDPPipeSync(),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 32, mario_mario_logo_rgba16_ci8),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_mario_cap[] = {
+	gsDPPipeSync(),
+	gsDPSetTextureLUT(G_TT_NONE),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_face_1___eye_half[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_face_2_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_face_2___eye_closed[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_face_3_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_face_7___eye_X[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_face_4_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_wing_2[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
+	gsSPClearGeometryMode(G_CULL_BACK),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_wing_2_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 252),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 252),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_mario_wing_2[] = {
+	gsDPPipeSync(),
+	gsSPSetGeometryMode(G_CULL_BACK),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_wing_1[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
+	gsSPClearGeometryMode(G_CULL_BACK),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_wing1_rgba16),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 124, 252),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 252),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_mario_wing_1[] = {
+	gsDPPipeSync(),
+	gsSPSetGeometryMode(G_CULL_BACK),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_gloves[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(254, 254, 254, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mat_mario_shoes[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetEnvColor(114, 27, 14, 255),
+	gsSPEndDisplayList(),
+};
+
+
+Gfx mario_000_offset_mesh[] = {
+	gsSPDisplayList(mat_mario_blue),
+	gsSPDisplayList(mario_000_offset_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_offset_001_mesh[] = {
+	gsSPDisplayList(mat_mario_blue),
+	gsSPDisplayList(mario_000_offset_001_mesh_tri_0),
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_offset_001_mesh_tri_1),
+	gsSPDisplayList(mat_mario_body),
+	gsSPDisplayList(mario_000_offset_001_mesh_tri_2),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_001_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_001_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_001_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_001_mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_displaylist_mesh[] = {
+	gsSPDisplayList(mat_mario_face_0___eye_open),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_face_0___eye_open),
+	gsSPDisplayList(mat_mario_skin),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
+	gsSPDisplayList(mat_mario_cap),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
+	gsSPDisplayList(mat_revert_mario_cap),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_displaylist_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_displaylist_mesh_mat_override_face_1___eye_half_1[] = {
+	gsSPDisplayList(mat_mario_face_1___eye_half),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
+	gsSPDisplayList(mat_mario_skin),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
+	gsSPDisplayList(mat_mario_cap),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
+	gsSPDisplayList(mat_revert_mario_cap),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2[] = {
+	gsSPDisplayList(mat_mario_face_2___eye_closed),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
+	gsSPDisplayList(mat_mario_skin),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
+	gsSPDisplayList(mat_mario_cap),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
+	gsSPDisplayList(mat_revert_mario_cap),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_displaylist_mesh_mat_override_face_7___eye_X_3[] = {
+	gsSPDisplayList(mat_mario_face_7___eye_X),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
+	gsSPDisplayList(mat_mario_skin),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
+	gsSPDisplayList(mat_mario_cap),
+	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
+	gsSPDisplayList(mat_revert_mario_cap),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_002_switch_option_head__no_cap__mesh[] = {
+	gsSPDisplayList(mat_mario_face_0___eye_open),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_face_0___eye_open),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1[] = {
+	gsSPDisplayList(mat_mario_face_1___eye_half),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2[] = {
+	gsSPDisplayList(mat_mario_face_2___eye_closed),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3[] = {
+	gsSPDisplayList(mat_mario_face_7___eye_X),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
+	gsSPDisplayList(mat_mario_mustache),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_mustache),
+	gsSPDisplayList(mat_mario_sideburns),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
+	gsSPDisplayList(mat_mario_hair),
+	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
+	gsSPEndDisplayList(),
+};
 
-// 0x04000000 # solid color blue - butt, left thigh, right thigh - all poly types
-static const Lights1 mario_blue_lights_group = gdSPDefLights1(
-    0x00, 0x00, 0x7f,
-    0x00, 0x00, 0xff, 0x28, 0x28, 0x28
-);
 
-// 0x04000018 # solid color red - left & right arm, torso (tshirt part), caps - all poly types
-static const Lights1 mario_red_lights_group = gdSPDefLights1(
-    0x7f, 0x00, 0x00,
-    0xff, 0x00, 0x00, 0x28, 0x28, 0x28
-);
 
-// 0x04000030 # solid color white - metal butt & left thigh - normal left & right hand closed & open (with cap too) and all wings - all poly types
-static const Lights1 mario_white_lights_group = gdSPDefLights1(
-    0x7f, 0x7f, 0x7f,
-    0xff, 0xff, 0xff, 0x28, 0x28, 0x28
-);
+Gfx mario_000_displaylist_001_mesh[] = {
+	gsSPDisplayList(mat_mario_wing_2),
+	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_wing_2),
+	gsSPDisplayList(mat_mario_wing_1),
+	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_wing_1),
+	gsSPEndDisplayList(),
+};
 
-// 0x04000048 # solid color brown 1 - foot - all poly types
-static const Lights1 mario_brown1_lights_group = gdSPDefLights1(
-    0x39, 0x0e, 0x07,
-    0x72, 0x1c, 0x0e, 0x28, 0x28, 0x28
-);
+Gfx mario_000_displaylist_001_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_wing_2),
+	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_wing_2),
+	gsSPDisplayList(mat_mario_wing_1),
+	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_wing_1),
+	gsSPEndDisplayList(),
+};
 
-// 0x04000060 # solid color beige skin - face (cap on and off dls) - all poly types
-static const Lights1 mario_beige_lights_group = gdSPDefLights1(
-    0x7f, 0x60, 0x3c,
-    0xfe, 0xc1, 0x79, 0x28, 0x28, 0x28
-);
 
-// 0x04000078  # solid color brown 2 - hair - all poly types
-static const Lights1 mario_brown2_lights_group = gdSPDefLights1(
-    0x39, 0x03, 0x00,
-    0x73, 0x06, 0x00, 0x28, 0x28, 0x28
-);
 
-// 0x04000090
-ALIGNED8 static const Texture mario_texture_metal[] = {
-#include "actors/mario/mario_metal.rgba16.inc.c"
+Gfx mario_000_displaylist_002_mesh[] = {
+	gsSPDisplayList(mat_mario_wing_2),
+	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_wing_2),
+	gsSPDisplayList(mat_mario_wing_1),
+	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_wing_1),
+	gsSPEndDisplayList(),
 };
 
-// 0x04001090
-ALIGNED8 static const Texture mario_texture_yellow_button[] = {
-#include "actors/mario/mario_overalls_button.rgba16.inc.c"
+Gfx mario_000_displaylist_002_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_wing_2),
+	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_wing_2),
+	gsSPDisplayList(mat_mario_wing_1),
+	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_wing_1),
+	gsSPEndDisplayList(),
 };
 
-// 0x04001890
-ALIGNED8 static const Texture mario_texture_m_logo[] = {
-#include "actors/mario/mario_logo.rgba16.inc.c"
+
+
+Gfx mario_000_offset_003_mesh[] = {
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_offset_003_mesh_tri_0),
+	gsSPEndDisplayList(),
 };
 
-// 0x04002090
-ALIGNED8 static const Texture mario_texture_hair_sideburn[] = {
-#include "actors/mario/mario_sideburn.rgba16.inc.c"
+Gfx mario_000_offset_003_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_003_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// 0x04002890
-ALIGNED8 static const Texture mario_texture_mustache[] = {
-#include "actors/mario/mario_mustache.rgba16.inc.c"
+
+
+Gfx mario_000_offset_004_mesh[] = {
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_offset_004_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_004_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_004_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// 0x04003090
-ALIGNED8 static const Texture mario_texture_eyes_front[] = {
-#include "actors/mario/mario_eyes_center.rgba16.inc.c"
+
+
+Gfx mario_000_displaylist_003_mesh[] = {
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_000_displaylist_003_mesh_tri_0),
+	gsSPEndDisplayList(),
 };
 
-// 0x04003890
-ALIGNED8 static const Texture mario_texture_eyes_half_closed[] = {
-#include "actors/mario/mario_eyes_half_closed.rgba16.inc.c"
+Gfx mario_000_displaylist_003_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_003_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// 0x04004090
-ALIGNED8 static const Texture mario_texture_eyes_closed[] = {
-#include "actors/mario/mario_eyes_closed.rgba16.inc.c"
+
+
+Gfx mario_002_switch_option_right_hand_open_mesh[] = {
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_002_switch_option_right_hand_open_mesh_tri_0),
+	gsSPEndDisplayList(),
 };
 
-// Unreferenced
-// 0x04004890
-ALIGNED8 static const Texture mario_texture_eyes_closed_unused1[] = {
-#include "actors/mario/mario_eyes_closed_unused_0.rgba16.inc.c"
+Gfx mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_002_switch_option_right_hand_open_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// Unreferenced
-// 0x04005090
-ALIGNED8 static const Texture mario_texture_eyes_closed_unused2[] = {
-#include "actors/mario/mario_eyes_closed_unused_1.rgba16.inc.c"
+
+
+Gfx mario_000_offset_006_mesh[] = {
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_offset_006_mesh_tri_0),
+	gsSPEndDisplayList(),
 };
 
-// 0x04005890
-ALIGNED8 static const Texture mario_texture_eyes_right[] = {
-#include "actors/mario/mario_eyes_left_unused.rgba16.inc.c"
+Gfx mario_000_offset_006_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_006_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// 0x04006090
-ALIGNED8 static const Texture mario_texture_eyes_left[] = {
-#include "actors/mario/mario_eyes_right_unused.rgba16.inc.c"
+
+
+Gfx mario_000_offset_007_mesh[] = {
+	gsSPDisplayList(mat_mario_red),
+	gsSPDisplayList(mario_000_offset_007_mesh_tri_0),
+	gsSPEndDisplayList(),
 };
 
-// 0x04006890
-ALIGNED8 static const Texture mario_texture_eyes_up[] = {
-#include "actors/mario/mario_eyes_up_unused.rgba16.inc.c"
+Gfx mario_000_offset_007_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_007_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// 0x04007090
-ALIGNED8 static const Texture mario_texture_eyes_down[] = {
-#include "actors/mario/mario_eyes_down_unused.rgba16.inc.c"
-};
 
-// 0x04007890
-ALIGNED8 static const Texture mario_texture_eyes_dead[] = {
-#include "actors/mario/mario_eyes_dead.rgba16.inc.c"
+
+Gfx mario_000_displaylist_004_mesh[] = {
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_000_displaylist_004_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_displaylist_004_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_004_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
 };
 
-// 0x04008090
-ALIGNED8 static const Texture mario_texture_wings_half_1[] = {
-#include "actors/mario/mario_wing.rgba16.inc.c"
+
+
+Gfx mario_002_switch_option_left_hand_open_mesh[] = {
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_002_switch_option_left_hand_open_mesh_tri_0),
+	gsSPEndDisplayList(),
 };
 
-// 0x04009090
-ALIGNED8 static const Texture mario_texture_wings_half_2[] = {
-#include "actors/mario/mario_wing_tip.rgba16.inc.c"
-};
-
-// 0x0400A090
-ALIGNED8 static const Texture mario_texture_metal_wings_half_1[] = {
-#include "actors/mario/mario_metal_wing_unused.rgba16.inc.c"
-};
+Gfx mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_002_switch_option_left_hand_open_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_004_switch_option_left_hand_peace_mesh[] = {
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_004_switch_option_left_hand_peace_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_004_switch_option_left_hand_peace_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_005_switch_option_left_hand_cap_mesh[] = {
+	gsSPDisplayList(mat_mario_cap),
+	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_cap),
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_1),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_006_switch_option_left_hand_wing_cap_mesh[] = {
+	gsSPDisplayList(mat_mario_cap),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_cap),
+	gsSPDisplayList(mat_mario_gloves),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_1),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh[] = {
+	gsSPDisplayList(mat_mario_wing_2),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_wing_2),
+	gsSPDisplayList(mat_mario_wing_1),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_wing_1),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_wing_2),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_wing_2),
+	gsSPDisplayList(mat_mario_wing_1),
+	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1),
+	gsSPDisplayList(mat_revert_mario_wing_1),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_offset_009_mesh[] = {
+	gsSPDisplayList(mat_mario_blue),
+	gsSPDisplayList(mario_000_offset_009_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_009_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_009_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_offset_010_mesh[] = {
+	gsSPDisplayList(mat_mario_blue),
+	gsSPDisplayList(mario_000_offset_010_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_010_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_010_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_offset_011_mesh[] = {
+	gsSPDisplayList(mat_mario_shoes),
+	gsSPDisplayList(mario_000_offset_011_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_011_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_011_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_offset_012_mesh[] = {
+	gsSPDisplayList(mat_mario_blue),
+	gsSPDisplayList(mario_000_offset_012_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_012_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_012_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_offset_013_mesh[] = {
+	gsSPDisplayList(mat_mario_blue),
+	gsSPDisplayList(mario_000_offset_013_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_offset_013_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_offset_013_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
+
+Gfx mario_000_displaylist_005_mesh[] = {
+	gsSPDisplayList(mat_mario_shoes),
+	gsSPDisplayList(mario_000_displaylist_005_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mario_000_displaylist_005_mesh_mat_override_metal_0[] = {
+	gsSPDisplayList(mat_mario_metal),
+	gsSPDisplayList(mario_000_displaylist_005_mesh_tri_0),
+	gsSPDisplayList(mat_revert_mario_metal),
+	gsSPEndDisplayList(),
+};
+
+
 
-// 0x0400B090
-ALIGNED8 static const Texture mario_texture_metal_wings_half_2[] = {
-#include "actors/mario/mario_metal_wing_tip_unused.rgba16.inc.c"
-};
-
-// 0x0400C090
-static const Vtx mario_butt_dl_vertex_group1[] = {
-    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
-    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
-    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
-};
-
-// 0x0400C180
-static const Vtx mario_butt_dl_vertex_group2[] = {
-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
-    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
-    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
-    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
-};
-
-// 0x0400C260
-static const Vtx mario_butt_dl_vertex_group3[] = {
-    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
-    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
-    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
-    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
-};
-
-// 0x0400C360
-static const Vtx mario_butt_dl_vertex_group4[] = {
-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
-    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
-    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
-    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
-    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
-};
-
-// 0x0400C450
-static const Vtx mario_butt_dl_vertex_group5[] = {
-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
-    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
-};
-
-// 0x0400C540
-static const Vtx mario_butt_dl_vertex_group6[] = {
-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
-    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
-    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
-};
-
-// 0x0400C630
-static const Vtx mario_butt_dl_vertex_group7[] = {
-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
-    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
-    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
-    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
-};
-
-// 0x0400C720
-static const Vtx mario_butt_dl_vertex_group8[] = {
-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
-    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
-    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
-};
-
-// 0x0400C820
-static const Vtx mario_butt_dl_vertex_group9[] = {
-    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
-    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
-    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
-    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
-};
-
-// 0x0400C920
-static const Vtx mario_butt_dl_vertex_group10[] = {
-    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
-    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
-    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
-    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
-    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
-};
-
-// 0x0400CA00 - 0x0400CC98
-const Gfx mario_butt_dl[] = {
-    gsSPVertex(mario_butt_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9,  5, 10, 0x0),
-    gsSP2Triangles( 4, 11, 10, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group2, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles(12,  3, 13, 0x0,  6,  8, 12, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  1,  7, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles(11,  9, 12, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group4, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 4,  6,  5, 0x0,  7,  8,  2, 0x0),
-    gsSP2Triangles( 9,  7, 10, 0x0, 11, 12,  7, 0x0),
-    gsSP1Triangle(13, 11, 14, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group5, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  2,  7,  8, 0x0),
-    gsSP2Triangles( 9, 10, 11, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group6, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
-    gsSP2Triangles(11, 10,  9, 0x0, 12, 13, 14, 0x0),
-    gsSP1Triangle( 0, 13, 12, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group7, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  2,  3, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  9,  8, 11, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0, 13, 14,  1, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group8, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  5, 0x0),
-    gsSP2Triangles( 4, 11, 12, 0x0,  6, 11, 13, 0x0),
-    gsSP2Triangles(13,  3, 14, 0x0, 15,  2,  1, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group9, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 1,  0,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0,  0, 13, 14, 0x0),
-    gsSP1Triangle(15,  0, 14, 0x0),
-    gsSPVertex(mario_butt_dl_vertex_group10, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 3,  4,  0, 0x0,  0,  4,  5, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  5,  7,  0, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
-    gsSP2Triangles( 9,  1, 11, 0x0, 11, 12, 10, 0x0),
-    gsSP1Triangle(10, 13,  8, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400CC98 - 0x0400CCC8
-const Gfx mario_butt[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_butt_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400CCC8 - 0x0400CD40
-const Gfx mario_metal_butt[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_butt_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400CD40
-static const Vtx mario_left_arm_shared_dl_vertex_group1[] = {
-    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
-    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
-    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
-    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
-    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
-    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
-    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
-    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
-    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
-    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
-    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
-    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
-    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
-    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
-};
-
-// 0x0400CE30
-static const Vtx mario_left_arm_shared_dl_vertex_group2[] = {
-    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
-    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
-    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
-    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
-    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
-    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
-    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
-    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
-    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
-    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
-    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
-    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
-    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
-    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
-};
-
-// 0x0400CF20
-static const Vtx mario_left_arm_shared_dl_vertex_group3[] = {
-    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
-    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
-    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
-    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
-    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
-    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
-    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
-    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
-    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
-    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
-    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
-    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
-    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
-};
-
-// 0x0400D000
-static const Vtx mario_left_arm_shared_dl_vertex_group4[] = {
-    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
-    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
-    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
-    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
-    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
-    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
-    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
-    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
-};
-
-// 0x0400D090 - 0x0400D1D8
-const Gfx mario_left_arm_shared_dl[] = {
-    gsSPVertex(mario_left_arm_shared_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
-    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
-    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
-    gsSPVertex(mario_left_arm_shared_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
-    gsSP2Triangles( 1,  7,  6, 0x0,  2,  1,  6, 0x0),
-    gsSP2Triangles( 6,  5,  8, 0x0,  8,  5,  3, 0x0),
-    gsSP2Triangles( 3,  0,  9, 0x0,  9,  0,  2, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_left_arm_shared_dl_vertex_group3, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  2,  4,  7, 0x0),
-    gsSP2Triangles( 0,  2,  8, 0x0,  9,  0, 10, 0x0),
-    gsSP2Triangles( 6,  9, 11, 0x0,  4,  6, 12, 0x0),
-    gsSP1Triangle(13,  5,  3, 0x0),
-    gsSPVertex(mario_left_arm_shared_dl_vertex_group4, 9, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 3,  4,  1, 0x0,  5,  6,  7, 0x0),
-    gsSP1Triangle( 6,  8,  7, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400D1D8 - 0x0400D1F8
-const Gfx mario_left_arm[] = {
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_left_arm_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400D1F8
-static const Vtx mario_left_forearm_shared_dl_vertex[] = {
-    {{{    -2,     19,     16}, 0, {     0,      0}, {0xdb, 0x61, 0x48, 0x00}}},
-    {{{    47,     14,     13}, 0, {     0,      0}, {0x44, 0x44, 0x51, 0x00}}},
-    {{{    47,     16,    -19}, 0, {     0,      0}, {0x45, 0x61, 0xd6, 0x00}}},
-    {{{    -3,    -17,     26}, 0, {     0,      0}, {0xd7, 0xdb, 0x71, 0x00}}},
-    {{{    46,    -17,     22}, 0, {     0,      0}, {0x41, 0xc7, 0x5c, 0x00}}},
-    {{{    -3,    -38,     -4}, 0, {     0,      0}, {0xd4, 0x89, 0xfe, 0x00}}},
-    {{{    45,    -34,     -4}, 0, {     0,      0}, {0x3f, 0x95, 0xe8, 0x00}}},
-    {{{    -3,    -14,    -34}, 0, {     0,      0}, {0xd7, 0xde, 0x8e, 0x00}}},
-    {{{    46,    -14,    -30}, 0, {     0,      0}, {0x42, 0xf4, 0x95, 0x00}}},
-    {{{    -2,     21,    -21}, 0, {     0,      0}, {0xdb, 0x63, 0xbb, 0x00}}},
-    {{{   -14,     13,    -15}, 0, {     0,      0}, {0x93, 0x2c, 0xd3, 0x00}}},
-    {{{   -14,     11,     10}, 0, {     0,      0}, {0x93, 0x3b, 0x19, 0x00}}},
-    {{{   -15,    -11,    -24}, 0, {     0,      0}, {0x9a, 0xde, 0xbe, 0x00}}},
-    {{{   -15,    -27,     -4}, 0, {     0,      0}, {0x8b, 0xd2, 0x0a, 0x00}}},
-    {{{   -15,    -13,     17}, 0, {     0,      0}, {0x9b, 0xfb, 0x4c, 0x00}}},
-    {{{    58,     -7,     -3}, 0, {     0,      0}, {0x7e, 0xfc, 0x00, 0x00}}},
-};
-
-// 0x0400D2F8 - 0x0400D3E8
-const Gfx mario_left_forearm_shared_dl[] = {
-    gsSPVertex(mario_left_forearm_shared_dl_vertex, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
-    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
-    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
-    gsSP2Triangles( 8, 15,  6, 0x0,  6, 15,  4, 0x0),
-    gsSP2Triangles( 4, 15,  1, 0x0,  1, 15,  2, 0x0),
-    gsSP2Triangles( 2, 15,  8, 0x0,  0, 14,  3, 0x0),
-    gsSP2Triangles( 3, 13,  5, 0x0,  5, 12,  7, 0x0),
-    gsSP2Triangles( 7, 10,  9, 0x0,  9, 11,  0, 0x0),
-    gsSP2Triangles( 7,  9,  8, 0x0,  5,  7,  6, 0x0),
-    gsSP2Triangles( 3,  5,  4, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 9,  0,  2, 0x0, 12, 13, 10, 0x0),
-    gsSP2Triangles(13, 11, 10, 0x0, 13, 14, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400D3E8
-static const Vtx mario_left_hand_closed_shared_dl_vertex_group1[] = {
-    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
-    {{{    17,     -1,     27}, 0, {     0,      0}, {0x00, 0xfd, 0x7f, 0x00}}},
-    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
-    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
-    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
-    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
-    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
-    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
-    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
-    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
-    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
-    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
-    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
-    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
-    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
-    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
-};
-
-// 0x0400D4E8
-static const Vtx mario_left_hand_closed_shared_dl_vertex_group2[] = {
-    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
-    {{{    57,     55,    -37}, 0, {     0,      0}, {0x22, 0x54, 0xa9, 0x00}}},
-    {{{    99,     40,    -16}, 0, {     0,      0}, {0x6c, 0x3c, 0xe5, 0x00}}},
-    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
-    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
-    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
-    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
-    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
-    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
-    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
-    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
-    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
-    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
-    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
-};
-
-// 0x0400D5C8
-static const Vtx mario_left_hand_closed_shared_dl_vertex_group3[] = {
-    {{{    27,    -58,      6}, 0, {     0,      0}, {0xa3, 0xad, 0x12, 0x00}}},
-    {{{   -14,    -14,     -4}, 0, {     0,      0}, {0x8c, 0xcd, 0x02, 0x00}}},
-    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
-    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
-    {{{   -18,     45,      8}, 0, {     0,      0}, {0x84, 0xf3, 0x13, 0x00}}},
-    {{{     5,     -6,     36}, 0, {     0,      0}, {0x99, 0xd2, 0x38, 0x00}}},
-    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
-    {{{    27,    -58,      6}, 0, {     0,      0}, {0x73, 0xd5, 0x1d, 0x00}}},
-    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
-    {{{   -18,     45,      8}, 0, {     0,      0}, {0x2d, 0x71, 0x21, 0x00}}},
-    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
-    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
-    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
-    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
-    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
-};
-
-// 0x0400D6B8
-static const Vtx mario_left_hand_closed_shared_dl_vertex_group4[] = {
-    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
-    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
-    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
-    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
-    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
-    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
-    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
-    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
-    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
-    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
-};
-
-// 0x0400D758 - 0x0400D8F0
-const Gfx mario_left_hand_closed_shared_dl[] = {
-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  1,  0, 0x0,  2,  1,  7, 0x0),
-    gsSP2Triangles( 7,  1,  6, 0x0,  6,  4,  8, 0x0),
-    gsSP2Triangles( 8,  4,  3, 0x0,  9,  3,  2, 0x0),
-    gsSP2Triangles( 0, 10, 11, 0x0, 12, 10,  0, 0x0),
-    gsSP1Triangle(13, 14, 15, 0x0),
-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group2, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 5,  1,  3, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 9, 10,  3, 0x0,  1,  0,  9, 0x0),
-    gsSP2Triangles( 9,  3,  1, 0x0,  5,  2,  1, 0x0),
-    gsSP2Triangles( 0,  2,  7, 0x0,  7,  2,  8, 0x0),
-    gsSP2Triangles( 8,  2, 11, 0x0, 11,  2,  5, 0x0),
-    gsSP2Triangles( 9,  7,  6, 0x0,  6,  8, 12, 0x0),
-    gsSP2Triangles(12,  8, 13, 0x0, 13,  5,  4, 0x0),
-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
-    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  2, 0x0),
-    gsSP2Triangles( 8,  2,  3, 0x0,  3,  9, 10, 0x0),
-    gsSP2Triangles(10,  9, 11, 0x0, 11,  7,  6, 0x0),
-    gsSP2Triangles(10, 12, 13, 0x0,  6, 14, 12, 0x0),
-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group4, 10, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSP2Triangles( 1,  5,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
-    gsSP1Triangle( 7,  1,  8, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400D8F0 - 0x0400D910
-const Gfx mario_left_hand_closed[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_left_hand_closed_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400D910
-static const Vtx mario_right_arm_shared_dl_vertex_group1[] = {
-    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
-    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
-    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
-    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
-    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
-    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
-    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
-    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
-    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
-    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
-    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
-    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
-    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
-    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
-};
-
-// 0x0400DA10
-static const Vtx mario_right_arm_shared_dl_vertex_group2[] = {
-    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
-    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
-    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
-    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
-    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
-    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
-    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
-    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
-    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
-    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
-    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
-    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
-    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
-    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
-};
-
-// 0x0400DB10
-static const Vtx mario_right_arm_shared_dl_vertex_group3[] = {
-    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
-    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
-    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
-    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
-    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
-    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
-    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
-    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
-    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
-    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
-    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
-    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
-    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
-    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
-};
-
-// 0x0400DC10
-static const Vtx mario_right_arm_shared_dl_vertex_group4[] = {
-    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
-    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
-    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
-    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
-    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
-    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
-    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
-};
-
-// 0x0400DCA0 - 0x0400DDE8
-const Gfx mario_right_arm_shared_dl[] = {
-    gsSPVertex(mario_right_arm_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
-    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
-    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
-    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
-    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
-    gsSPVertex(mario_right_arm_shared_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  4,  5, 0x0,  3,  6,  4, 0x0),
-    gsSP2Triangles( 1,  6,  3, 0x0,  0,  7,  1, 0x0),
-    gsSP2Triangles( 8,  7,  0, 0x0,  5,  4,  8, 0x0),
-    gsSP2Triangles( 9, 10, 11, 0x0, 12,  9, 13, 0x0),
-    gsSP1Triangle(14, 12, 15, 0x0),
-    gsSPVertex(mario_right_arm_shared_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  5,  2, 0x0),
-    gsSP2Triangles( 8,  7,  9, 0x0, 10,  8, 11, 0x0),
-    gsSP2Triangles( 6, 10, 12, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_right_arm_shared_dl_vertex_group4, 9, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
-    gsSP1Triangle( 5,  8,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400DDE8 - 0x0400DE08
-const Gfx mario_right_arm[] = {
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_right_arm_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400DE08
-static const Vtx mario_right_forearm_shared_dl_vertex[] = {
-    {{{    47,    -15,    -19}, 0, {     0,      0}, {0x41, 0xcf, 0x9f, 0x00}}},
-    {{{    -3,    -39,      6}, 0, {     0,      0}, {0xd4, 0x8a, 0xf8, 0x00}}},
-    {{{    -2,    -15,    -23}, 0, {     0,      0}, {0xd7, 0xe5, 0x8c, 0x00}}},
-    {{{    46,    -36,      6}, 0, {     0,      0}, {0x3f, 0x94, 0x0f, 0x00}}},
-    {{{    -2,    -18,     38}, 0, {     0,      0}, {0xd6, 0xd5, 0x6f, 0x00}}},
-    {{{    47,    -17,     34}, 0, {     0,      0}, {0x42, 0xec, 0x6a, 0x00}}},
-    {{{    -1,     18,     28}, 0, {     0,      0}, {0xdb, 0x5d, 0x4d, 0x00}}},
-    {{{    48,     13,     25}, 0, {     0,      0}, {0x45, 0x5d, 0x32, 0x00}}},
-    {{{    -1,     20,     -9}, 0, {     0,      0}, {0xdb, 0x67, 0xc1, 0x00}}},
-    {{{    48,     15,     -7}, 0, {     0,      0}, {0x45, 0x4c, 0xb6, 0x00}}},
-    {{{   -14,    -28,      6}, 0, {     0,      0}, {0x90, 0xc9, 0xef, 0x00}}},
-    {{{   -14,    -12,    -13}, 0, {     0,      0}, {0x91, 0x01, 0xc3, 0x00}}},
-    {{{   -13,     12,     -4}, 0, {     0,      0}, {0x9e, 0x4b, 0xe7, 0x00}}},
-    {{{   -13,     10,     21}, 0, {     0,      0}, {0x8d, 0x22, 0x28, 0x00}}},
-    {{{   -14,    -14,     28}, 0, {     0,      0}, {0x9a, 0xd8, 0x3f, 0x00}}},
-    {{{    59,     -8,      7}, 0, {     0,      0}, {0x7f, 0xfd, 0x00, 0x00}}},
-};
-
-// 0x0400DF08 - 0x0400DFF8
-const Gfx mario_right_forearm_shared_dl[] = {
-    gsSPVertex(mario_right_forearm_shared_dl_vertex, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
-    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
-    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
-    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
-    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
-    gsSP2Triangles( 3, 15,  5, 0x0,  5, 15,  7, 0x0),
-    gsSP2Triangles( 7, 15,  9, 0x0, 14, 10,  1, 0x0),
-    gsSP2Triangles(13, 14,  4, 0x0, 12, 13,  6, 0x0),
-    gsSP2Triangles(11, 12,  8, 0x0, 10, 11,  2, 0x0),
-    gsSP2Triangles( 9,  0,  2, 0x0,  7,  9,  8, 0x0),
-    gsSP2Triangles( 5,  7,  6, 0x0,  3,  5,  4, 0x0),
-    gsSP2Triangles( 0,  3,  1, 0x0, 11, 13, 12, 0x0),
-    gsSP2Triangles(11, 10, 13, 0x0, 10, 14, 13, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400DFF8
-static const Vtx mario_right_hand_closed_dl_vertex_group1[] = {
-    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
-    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
-    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
-    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
-    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
-    {{{    24,    -57,     -4}, 0, {     0,      0}, {0x73, 0xd4, 0xe6, 0x00}}},
-    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x30, 0x72, 0xe5, 0x00}}},
-    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
-    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
-    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
-    {{{    24,    -57,     -4}, 0, {     0,      0}, {0xa2, 0xaf, 0xe7, 0x00}}},
-    {{{   -16,    -12,      6}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0x00}}},
-    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x9b, 0xd5, 0xc2, 0x00}}},
-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x85, 0xf5, 0xe7, 0x00}}},
-    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
-};
-
-// 0x0400E0F8
-static const Vtx mario_right_hand_closed_dl_vertex_group2[] = {
-    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
-    {{{   104,    -26,      1}, 0, {     0,      0}, {0x68, 0xc5, 0xd7, 0x00}}},
-    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
-    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
-    {{{    96,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x51, 0x00}}},
-    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
-    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
-    {{{    97,     39,     24}, 0, {     0,      0}, {0x6b, 0x3a, 0x21, 0x00}}},
-    {{{    86,     30,    -33}, 0, {     0,      0}, {0x4f, 0x22, 0xa4, 0x00}}},
-    {{{    86,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x61, 0x00}}},
-    {{{    54,     54,     44}, 0, {     0,      0}, {0x20, 0x51, 0x5c, 0x00}}},
-    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
-    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
-    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
-};
-
-// 0x0400E1D8
-static const Vtx mario_right_hand_closed_dl_vertex_group3[] = {
-    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
-    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
-    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
-    {{{     1,     24,     35}, 0, {     0,      0}, {0xd2, 0x3c, 0x65, 0x00}}},
-    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
-    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
-    {{{    15,      0,    -23}, 0, {     0,      0}, {0x04, 0x01, 0x82, 0x00}}},
-    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
-    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
-    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
-    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
-    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
-    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
-    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
-    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
-};
-
-// 0x0400E2C8 - 0x0400E458
-const Gfx mario_right_hand_closed_dl[] = {
-    gsSPVertex(mario_right_hand_closed_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 2,  5,  6, 0x0,  6,  7,  4, 0x0),
-    gsSP2Triangles( 4,  7,  8, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles( 9,  5,  2, 0x0, 11, 12, 13, 0x0),
-    gsSP2Triangles(13, 12, 14, 0x0, 14, 12,  8, 0x0),
-    gsSP2Triangles( 8, 12,  9, 0x0,  9, 12, 11, 0x0),
-    gsSP1Triangle( 3, 15,  0, 0x0),
-    gsSPVertex(mario_right_hand_closed_dl_vertex_group2, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 8,  7,  1, 0x0,  1,  7,  4, 0x0),
-    gsSP2Triangles( 4,  7,  9, 0x0, 10,  7,  6, 0x0),
-    gsSP2Triangles( 9, 10,  5, 0x0, 10, 11,  5, 0x0),
-    gsSP2Triangles(11, 12,  5, 0x0,  1,  4,  3, 0x0),
-    gsSP2Triangles(11, 10,  6, 0x0,  6, 13, 11, 0x0),
-    gsSP2Triangles( 7, 10,  9, 0x0,  4,  9,  5, 0x0),
-    gsSP2Triangles( 0,  8,  1, 0x0,  6,  8,  0, 0x0),
-    gsSPVertex(mario_right_hand_closed_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 7,  6,  0, 0x0,  8,  6,  5, 0x0),
-    gsSP2Triangles( 9,  3,  1, 0x0,  0,  6,  8, 0x0),
-    gsSP2Triangles(10, 11,  1, 0x0, 11,  9,  1, 0x0),
-    gsSP2Triangles(11, 12,  9, 0x0,  1,  0, 10, 0x0),
-    gsSP2Triangles(13,  5,  3, 0x0,  3,  9, 14, 0x0),
-    gsSP1Triangle(14, 13,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E458 - 0x0400E478
-const Gfx mario_right_hand_closed[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_right_hand_closed_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E478 - 0x0400E4A8
-const Gfx mario_metal_right_hand_closed[] = {
-    gsSPDisplayList(mario_right_hand_closed_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E4A8
-static const Vtx mario_left_thigh_dl_vertex_group1[] = {
-    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
-    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
-    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
-    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
-    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
-    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
-    {{{   116,     10,      8}, 0, {     0,      0}, {0x7e, 0x09, 0x01, 0x00}}},
-    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
-    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
-    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
-    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
-    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
-    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
-    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
-    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
-};
-
-// 0x0400E5A8
-static const Vtx mario_left_thigh_dl_vertex_group2[] = {
-    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
-    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
-    {{{    21,    -54,      8}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0x00}}},
-    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
-    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
-    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
-    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
-    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
-    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
-    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
-    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
-    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
-    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
-    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
-    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
-};
-
-// 0x0400E6A8 - 0x0400E7B0
-const Gfx mario_left_thigh_dl[] = {
-    gsSPVertex(mario_left_thigh_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  7,  9, 0x0),
-    gsSP2Triangles( 9,  7, 10, 0x0, 10,  7, 11, 0x0),
-    gsSP2Triangles(11,  7,  6, 0x0, 12,  3, 13, 0x0),
-    gsSP2Triangles(13,  4, 14, 0x0, 14,  4, 15, 0x0),
-    gsSPVertex(mario_left_thigh_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 4,  5,  1, 0x0,  0,  2,  6, 0x0),
-    gsSP2Triangles( 7,  0,  8, 0x0,  9,  7, 10, 0x0),
-    gsSP2Triangles( 3,  9, 10, 0x0,  2,  3,  6, 0x0),
-    gsSP2Triangles( 3, 11,  6, 0x0, 10, 11,  3, 0x0),
-    gsSP2Triangles( 7,  8, 10, 0x0,  0, 12,  8, 0x0),
-    gsSP2Triangles( 6, 12,  0, 0x0,  1, 13,  3, 0x0),
-    gsSP2Triangles( 0,  4,  1, 0x0, 14,  4,  0, 0x0),
-    gsSP2Triangles( 9, 15, 14, 0x0,  3, 13, 15, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E7B0 - 0x0400E7E0
-const Gfx mario_left_thigh[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_left_thigh_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E7E0 - 0x0400E858
-const Gfx mario_metal_left_thigh[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_left_thigh_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E858
-static const Vtx mario_left_leg_shared_dl_vertex[] = {
-    {{{     4,    -37,      9}, 0, {     0,      0}, {0xc1, 0x93, 0x00, 0x00}}},
-    {{{    64,    -46,      9}, 0, {     0,      0}, {0x4b, 0x9a, 0x01, 0x00}}},
-    {{{    65,    -11,     54}, 0, {     0,      0}, {0x2d, 0xdb, 0x70, 0x00}}},
-    {{{     8,     44,     33}, 0, {     0,      0}, {0xcc, 0x5e, 0x43, 0x00}}},
-    {{{    68,     45,     37}, 0, {     0,      0}, {0x52, 0x4b, 0x3c, 0x00}}},
-    {{{    69,     45,    -18}, 0, {     0,      0}, {0x42, 0x61, 0xd1, 0x00}}},
-    {{{     9,     44,    -16}, 0, {     0,      0}, {0xc4, 0x4d, 0xaf, 0x00}}},
-    {{{    66,    -11,    -36}, 0, {     0,      0}, {0x2e, 0xda, 0x91, 0x00}}},
-    {{{     6,     -6,    -31}, 0, {     0,      0}, {0xb4, 0xe5, 0x9f, 0x00}}},
-    {{{     6,     -6,     49}, 0, {     0,      0}, {0xb3, 0xe7, 0x60, 0x00}}},
-    {{{   -14,      8,      8}, 0, {     0,      0}, {0x82, 0x06, 0xff, 0x00}}},
-    {{{    81,      3,      9}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-};
-
-// 0x0400E918 - 0x0400E9C8
-const Gfx mario_left_leg_shared_dl[] = {
-    gsSPVertex(mario_left_leg_shared_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
-    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
-    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
-    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
-    gsSP2Triangles( 3, 10,  9, 0x0,  5, 11,  7, 0x0),
-    gsSP2Triangles( 7, 11,  1, 0x0,  1, 11,  2, 0x0),
-    gsSP2Triangles( 2, 11,  4, 0x0,  4, 11,  5, 0x0),
-    gsSP2Triangles( 9, 10,  0, 0x0,  0, 10,  8, 0x0),
-    gsSP2Triangles( 8, 10,  6, 0x0,  6, 10,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400E9C8
-static const Vtx mario_left_foot_shared_dl_vertex_group1[] = {
-    {{{   110,      9,     35}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   110,      8,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    76,     20,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    78,     21,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -12,     53,    -32}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -11,     54,     53}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -41,     65,     26}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
-    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
-    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
-    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
-    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
-    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
-    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
-    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
-};
-
-// 0x0400EAC8
-static const Vtx mario_left_foot_shared_dl_vertex_group2[] = {
-    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
-    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
-    {{{   110,      8,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
-    {{{    80,    -31,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
-    {{{   110,      9,     35}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
-    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
-    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
-    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
-    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
-    {{{   -41,     65,     26}, 0, {     0,      0}, {0x90, 0x17, 0x35, 0x00}}},
-    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x93, 0x16, 0xc4, 0x00}}},
-    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
-    {{{   -54,     15,      8}, 0, {     0,      0}, {0x88, 0xd8, 0xfd, 0x00}}},
-    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
-    {{{    27,    -35,     11}, 0, {     0,      0}, {0xdb, 0x87, 0xfc, 0x00}}},
-};
-
-// 0x0400EBB8 - 0x0400ECA0
-const Gfx mario_left_foot_shared_dl[] = {
-    gsSPVertex(mario_left_foot_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
-    gsSP2Triangles( 5,  4,  6, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
-    gsSP2Triangles(14,  8, 10, 0x0, 11, 13, 15, 0x0),
-    gsSPVertex(mario_left_foot_shared_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
-    gsSP2Triangles( 2,  3,  0, 0x0,  4,  5,  6, 0x0),
-    gsSP2Triangles( 6,  3,  4, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
-    gsSP2Triangles(12,  9, 10, 0x0,  9, 12,  7, 0x0),
-    gsSP2Triangles(14,  0,  3, 0x0, 11,  0, 14, 0x0),
-    gsSP2Triangles( 3,  6, 14, 0x0, 14,  6,  7, 0x0),
-    gsSP2Triangles(14,  7, 12, 0x0, 12, 11, 14, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400ECA0 - 0x0400ECC0
-const Gfx mario_left_foot[] = {
-    gsSPLight(&mario_brown1_lights_group.l, 1),
-    gsSPLight(&mario_brown1_lights_group.a, 2),
-    gsSPDisplayList(mario_left_foot_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400ECC0
-static const Vtx mario_right_thigh_shared_dl_vertex_group1[] = {
-    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
-    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
-    {{{    22,    -54,     -9}, 0, {     0,      0}, {0xf2, 0x82, 0xfd, 0x00}}},
-    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
-    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
-    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
-    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
-    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
-    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
-    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
-    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
-    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
-    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
-    {{{   116,     11,     -9}, 0, {     0,      0}, {0x7e, 0x0b, 0xfe, 0x00}}},
-    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
-};
-
-// 0x0400EDC0
-static const Vtx mario_right_thigh_shared_dl_vertex_group2[] = {
-    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
-    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{     0,    -14,     31}, 0, {     0,      0}, {0xa0, 0xdf, 0x4b, 0x00}}},
-    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
-    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
-    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
-    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
-    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
-    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
-    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
-    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
-    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
-    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
-    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
-    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
-};
-
-// 0x0400EEB0 - 0x0400EFB8
-const Gfx mario_right_thigh_shared_dl[] = {
-    gsSPVertex(mario_right_thigh_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 3,  5,  4, 0x0,  6,  7,  5, 0x0),
-    gsSP2Triangles( 0,  2,  7, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles( 1,  8,  2, 0x0,  2,  8,  7, 0x0),
-    gsSP2Triangles( 7, 11,  5, 0x0,  5, 11,  4, 0x0),
-    gsSP2Triangles( 4, 12,  1, 0x0, 13, 14,  0, 0x0),
-    gsSP2Triangles( 0, 14, 15, 0x0, 15, 14,  3, 0x0),
-    gsSP2Triangles( 3, 14,  6, 0x0,  6, 14, 13, 0x0),
-    gsSP2Triangles(10,  9, 11, 0x0, 11,  9, 12, 0x0),
-    gsSPVertex(mario_right_thigh_shared_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 0,  2,  4, 0x0,  5,  0,  6, 0x0),
-    gsSP2Triangles( 7,  8,  5, 0x0,  3,  8,  7, 0x0),
-    gsSP2Triangles( 4,  2,  3, 0x0,  7,  9, 10, 0x0),
-    gsSP2Triangles(11,  9,  7, 0x0, 12, 11, 13, 0x0),
-    gsSP2Triangles( 4, 14, 12, 0x0, 10, 14,  4, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400EFB8 - 0x0400EFD8
-const Gfx mario_right_thigh[] = {
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_right_thigh_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400EFD8
-static const Vtx mario_right_leg_shared_dl_vertex_group1[] = {
-    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
-    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
-    {{{    69,     45,     18}, 0, {     0,      0}, {0xfc, 0x22, 0x7a, 0x00}}},
-    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
-    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
-    {{{    69,     46,    -37}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
-    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
-    {{{    69,     46,    -37}, 0, {     0,      0}, {0xf7, 0x27, 0x88, 0x00}}},
-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
-    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
-    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
-    {{{   -13,     10,     -9}, 0, {     0,      0}, {0x82, 0x08, 0x02, 0x00}}},
-    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
-};
-
-// 0x0400F0D8
-static const Vtx mario_right_leg_shared_dl_vertex_group2[] = {
-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0x75, 0xee, 0xd5, 0x00}}},
-    {{{    83,      4,    -10}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    63,    -45,    -12}, 0, {     0,      0}, {0x75, 0xd1, 0xfd, 0x00}}},
-    {{{    66,    -11,     34}, 0, {     0,      0}, {0x77, 0xec, 0x26, 0x00}}},
-    {{{    69,     45,     18}, 0, {     0,      0}, {0x7a, 0x18, 0x17, 0x00}}},
-    {{{    69,     46,    -37}, 0, {     0,      0}, {0x79, 0x19, 0xe6, 0x00}}},
-    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
-    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
-    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
-    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
-    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
-    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
-};
-
-// 0x0400F1D8 - 0x0400F290
-const Gfx mario_right_leg_shared_dl[] = {
-    gsSPVertex(mario_right_leg_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  8, 0x0),
-    gsSP2Triangles(11, 12,  2, 0x0, 13, 14,  2, 0x0),
-    gsSP2Triangles( 2, 14, 15, 0x0, 15, 14,  8, 0x0),
-    gsSP2Triangles( 8, 14,  5, 0x0,  5, 14, 13, 0x0),
-    gsSPVertex(mario_right_leg_shared_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
-    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 9,  7, 10, 0x0, 10, 11, 12, 0x0),
-    gsSP2Triangles(11, 13, 14, 0x0, 15, 13,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400F290
-static const Vtx mario_right_foot_dl_vertex_group1[] = {
-    {{{    27,    -35,    -11}, 0, {     0,      0}, {0xdc, 0x87, 0x06, 0x00}}},
-    {{{   -36,     11,     19}, 0, {     0,      0}, {0xb5, 0xd3, 0x5b, 0x00}}},
-    {{{   -54,     14,    -10}, 0, {     0,      0}, {0x89, 0xd6, 0x03, 0x00}}},
-    {{{   -34,     11,    -46}, 0, {     0,      0}, {0xb4, 0xd0, 0xa8, 0x00}}},
-    {{{    43,    -18,    -55}, 0, {     0,      0}, {0x0a, 0xb2, 0x9d, 0x00}}},
-    {{{    80,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
-    {{{    44,    -11,     32}, 0, {     0,      0}, {0x01, 0xb8, 0x68, 0x00}}},
-    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x90, 0x14, 0xc9, 0x00}}},
-    {{{   -40,     63,      5}, 0, {     0,      0}, {0x92, 0x15, 0x3b, 0x00}}},
-    {{{   -14,     54,     29}, 0, {     0,      0}, {0xd5, 0xfe, 0x77, 0x00}}},
-    {{{   -11,     53,    -56}, 0, {     0,      0}, {0xda, 0xfe, 0x87, 0x00}}},
-    {{{   110,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
-    {{{    78,     22,    -61}, 0, {     0,      0}, {0x17, 0xd9, 0x8a, 0x00}}},
-    {{{   109,     11,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
-    {{{    75,     23,     40}, 0, {     0,      0}, {0x0b, 0xda, 0x78, 0x00}}},
-};
-
-// 0x0400F380
-static const Vtx mario_right_foot_dl_vertex_group2[] = {
-    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -40,     63,      5}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -11,     53,    -56}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -14,     54,     29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{    78,     22,    -61}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{    75,     23,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   110,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   109,     11,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-};
-
-// 0x0400F400 - 0x0400F4E8
-const Gfx mario_right_foot_dl[] = {
-    gsSPVertex(mario_right_foot_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 3,  4,  0, 0x0,  0,  4,  5, 0x0),
-    gsSP2Triangles( 0,  6,  1, 0x0,  5,  6,  0, 0x0),
-    gsSP2Triangles( 3,  2,  7, 0x0,  8,  7,  2, 0x0),
-    gsSP2Triangles( 1,  9,  8, 0x0,  2,  1,  8, 0x0),
-    gsSP2Triangles( 7, 10,  3, 0x0, 11,  5,  4, 0x0),
-    gsSP2Triangles( 4, 12, 11, 0x0,  6,  5, 13, 0x0),
-    gsSP2Triangles(11, 13,  5, 0x0, 13, 14,  6, 0x0),
-    gsSP2Triangles(14,  9,  6, 0x0, 10,  4,  3, 0x0),
-    gsSP2Triangles( 9,  1,  6, 0x0, 10, 12,  4, 0x0),
-    gsSPVertex(mario_right_foot_dl_vertex_group2, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP2Triangles( 3,  4,  2, 0x0,  3,  5,  4, 0x0),
-    gsSP2Triangles( 5,  6,  4, 0x0,  5,  7,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400F4E8 - 0x0400F528
-const Gfx mario_right_foot[] = {
-    gsSPLight(&mario_brown1_lights_group.l, 1),
-    gsSPLight(&mario_brown1_lights_group.a, 2),
-    gsSPDisplayList(mario_right_foot_dl),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsDPSetEnvColor(255, 255, 255, 255),
-    gsDPSetAlphaCompare(G_AC_NONE),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400F528 - 0x0400F568
-const Gfx mario_metal_right_foot[] = {
-    gsSPDisplayList(mario_right_foot_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPSetEnvColor(255, 255, 255, 255),
-    gsDPSetAlphaCompare(G_AC_NONE),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400F568
-static const Vtx mario_yellow_button_dl_vertex[] = {
-    {{{     9,     89,     41}, 0, {   180,    962}, {0x14, 0x78, 0x23, 0xff}}},
-    {{{     3,     77,     62}, 0, {   682,    966}, {0x04, 0x6a, 0x44, 0xff}}},
-    {{{    47,     75,     35}, 0, {    34,    106}, {0x39, 0x6a, 0x26, 0xff}}},
-    {{{    28,     85,     30}, 0, {   -60,    572}, {0x2c, 0x76, 0x08, 0xff}}},
-    {{{    17,     66,     76}, 0, {   966,    590}, {0x19, 0x58, 0x57, 0xff}}},
-    {{{    32,     62,     74}, 0, {   902,    252}, {0x29, 0x53, 0x56, 0xff}}},
-    {{{    48,     64,     59}, 0, {   548,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
-    {{{     9,     89,    -40}, 0, {   776,    920}, {0x10, 0x7b, 0xe7, 0xff}}},
-    {{{    28,     85,    -29}, 0, {   990,    512}, {0x2d, 0x75, 0xf2, 0xff}}},
-    {{{    47,     75,    -34}, 0, {   850,     72}, {0x3e, 0x6a, 0xe2, 0xff}}},
-    {{{     3,     77,    -61}, 0, {   264,    972}, {0x03, 0x6a, 0xbb, 0xff}}},
-    {{{    48,     64,    -58}, 0, {   312,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
-    {{{    32,     62,    -73}, 0, {   -24,    310}, {0x29, 0x52, 0xa9, 0xff}}},
-    {{{    17,     66,    -75}, 0, {   -58,    642}, {0x17, 0x58, 0xa8, 0xff}}},
-};
-
-// 0x0400F648
-static const Vtx mario_tshirt_shared_dl_vertex_group1[] = {
-    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
-    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
-    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
-    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
-    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
-    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
-    {{{    46,    -34,    -83}, 0, {     0,      0}, {0x24, 0xc8, 0x95, 0xff}}},
-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
-    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
-    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
-    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
-    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
-};
-
-// 0x0400F748
-static const Vtx mario_tshirt_shared_dl_vertex_group2[] = {
-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
-    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
-    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
-    {{{    47,      3,     89}, 0, {     0,      0}, {0x30, 0x08, 0x75, 0xff}}},
-    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
-    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
-    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
-    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
-    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
-    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
-};
-
-// 0x0400F828
-static const Vtx mario_tshirt_shared_dl_vertex_group3[] = {
-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
-    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
-    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
-    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
-};
-
-// 0x0400F878
-static const Vtx mario_pants_overalls_shared_dl_vertex_group1[] = {
-    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
-    {{{    28,     85,     30}, 0, {     0,      0}, {0x2c, 0x76, 0x08, 0xff}}},
-    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
-    {{{    28,     85,    -29}, 0, {     0,      0}, {0x2d, 0x75, 0xf2, 0xff}}},
-    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
-    {{{     9,     89,    -40}, 0, {     0,      0}, {0x10, 0x7b, 0xe7, 0xff}}},
-    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
-    {{{   -15,     87,    -35}, 0, {     0,      0}, {0xea, 0x76, 0xda, 0xff}}},
-    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
-    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
-    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
-    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
-    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
-    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
-};
-
-// 0x0400F968
-static const Vtx mario_pants_overalls_shared_dl_vertex_group2[] = {
-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
-    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
-    {{{    48,     64,    -58}, 0, {     0,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
-    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
-    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
-    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
-    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
-    {{{    48,     64,     59}, 0, {     0,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
-    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
-    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
-    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
-    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
-    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
-    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
-    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
-};
-
-// 0x0400FA68
-static const Vtx mario_pants_overalls_shared_dl_vertex_group3[] = {
-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
-    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
-    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
-    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
-    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
-    {{{   -27,    -25,    -86}, 0, {     0,      0}, {0xcb, 0xd5, 0x96, 0xff}}},
-    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
-    {{{   -29,    -58,    -59}, 0, {     0,      0}, {0xc9, 0x9a, 0xcf, 0xff}}},
-    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
-    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
-    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
-    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
-};
-
-// 0x0400FB68
-static const Vtx mario_pants_overalls_shared_dl_vertex_group4[] = {
-    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
-    {{{   -29,    -58,     59}, 0, {     0,      0}, {0xc8, 0x99, 0x30, 0xff}}},
-    {{{   -27,    -25,     87}, 0, {     0,      0}, {0xcb, 0xd3, 0x69, 0xff}}},
-    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
-    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
-    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
-    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
-    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
-    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
-    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
-    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
-    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
-    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
-};
-
-// 0x0400FC68
-static const Vtx mario_pants_overalls_shared_dl_vertex_group5[] = {
-    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
-    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
-    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
-    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
-    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
-    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
-    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
-    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
-    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
-    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
-    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
-    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
-};
-
-// 0x0400FD48
-static const Vtx mario_pants_overalls_shared_dl_vertex_group6[] = {
-    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
-    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
-    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
-    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
-    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
-    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
-    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
-    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
-    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
-};
-
-// 0x0400FE38
-static const Vtx mario_pants_overalls_shared_dl_vertex_group7[] = {
-    {{{    17,     66,    -75}, 0, {     0,      0}, {0x17, 0x58, 0xa8, 0xff}}},
-    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
-    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
-    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
-    {{{    17,     66,     76}, 0, {     0,      0}, {0x19, 0x58, 0x57, 0xff}}},
-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
-    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
-    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
-    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
-    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
-    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
-    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
-    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
-};
-
-// 0x0400FF28 - 0x0400FF88
-const Gfx mario_yellow_button_dl[] = {
-    gsSPVertex(mario_yellow_button_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 1,  4,  2, 0x0,  5,  6,  2, 0x0),
-    gsSP2Triangles( 4,  5,  2, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles(10,  7,  9, 0x0,  9, 11, 12, 0x0),
-    gsSP2Triangles(12, 13,  9, 0x0, 13, 10,  9, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0400FF88 - 0x04010260
-const Gfx mario_pants_overalls_shared_dl[] = {
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 4,  1,  5, 0x0,  1,  3,  5, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
-    gsSP2Triangles( 7,  5,  8, 0x0,  9,  6,  7, 0x0),
-    gsSP2Triangles( 7,  8, 10, 0x0, 10, 11,  7, 0x0),
-    gsSP2Triangles( 9,  7, 11, 0x0, 12,  6, 13, 0x0),
-    gsSP2Triangles( 9, 13,  6, 0x0,  6, 12, 14, 0x0),
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
-    gsSP2Triangles( 7, 10, 11, 0x0, 11,  8,  7, 0x0),
-    gsSP2Triangles(12,  8, 11, 0x0, 13,  0,  2, 0x0),
-    gsSP2Triangles( 2,  1, 14, 0x0,  2, 15, 13, 0x0),
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 3,  6,  7, 0x0,  3,  8,  6, 0x0),
-    gsSP2Triangles( 5,  9,  3, 0x0,  8,  3,  9, 0x0),
-    gsSP2Triangles( 6,  8, 10, 0x0, 11, 10,  8, 0x0),
-    gsSP2Triangles( 9, 11,  8, 0x0,  6, 12,  7, 0x0),
-    gsSP2Triangles(12,  6, 10, 0x0,  7, 12, 13, 0x0),
-    gsSP2Triangles(14,  5, 15, 0x0, 14,  9,  5, 0x0),
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 1,  4,  3, 0x0,  5,  4,  6, 0x0),
-    gsSP2Triangles( 4,  5,  3, 0x0,  2,  3,  7, 0x0),
-    gsSP2Triangles( 7,  3,  5, 0x0,  8,  2,  7, 0x0),
-    gsSP2Triangles( 2,  8,  0, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles(12, 11, 10, 0x0, 11,  7, 13, 0x0),
-    gsSP1Triangle(14, 15, 11, 0x0),
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group5, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  4, 0x0),
-    gsSP2Triangles( 2,  5,  0, 0x0,  6,  0,  7, 0x0),
-    gsSP2Triangles( 4,  3,  8, 0x0,  9,  7,  4, 0x0),
-    gsSP2Triangles( 7, 10, 11, 0x0, 11,  6,  7, 0x0),
-    gsSP2Triangles( 9, 12, 13, 0x0, 10,  9, 13, 0x0),
-    gsSP1Triangle( 7,  9, 10, 0x0),
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group6, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9,  8,  7, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 12, 11, 13, 0x0),
-    gsSP2Triangles(14, 12, 13, 0x0, 11, 10,  9, 0x0),
-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group7, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles(10,  7,  9, 0x0,  9,  8,  5, 0x0),
-    gsSP2Triangles( 5,  8,  6, 0x0, 11,  1,  0, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0,  6, 14,  4, 0x0),
-    gsSP1Triangle(11,  0, 12, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04010260 - 0x04010348
-const Gfx mario_tshirt_shared_dl[] = {
-    gsSPVertex(mario_tshirt_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  3,  2, 0x0,  4,  5,  3, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  6,  9,  7, 0x0),
-    gsSP2Triangles( 6,  8, 10, 0x0, 11,  8, 12, 0x0),
-    gsSP2Triangles(12,  8,  7, 0x0,  8, 11, 10, 0x0),
-    gsSP1Triangle(13, 14, 15, 0x0),
-    gsSPVertex(mario_tshirt_shared_dl_vertex_group2, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
-    gsSP2Triangles( 6,  2,  3, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 7,  9, 10, 0x0, 11, 10,  9, 0x0),
-    gsSP2Triangles(12,  3,  4, 0x0, 13,  3, 12, 0x0),
-    gsSP1Triangle( 6,  3, 13, 0x0),
-    gsSPVertex(mario_tshirt_shared_dl_vertex_group3, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP1Triangle( 1,  4,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04010348 - 0x04010370
-const Gfx mario_torso_dl[] = {
-    gsSPDisplayList(mario_pants_overalls_shared_dl),
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_tshirt_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04010370 - 0x040103F0
-const Gfx mario_torso[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_yellow_button_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_torso_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040103F0 - 0x04010410
-const Gfx mario_metal_torso_shared_dl[] = {
-    gsSPDisplayList(mario_yellow_button_dl),
-    gsSPDisplayList(mario_pants_overalls_shared_dl),
-    gsSPDisplayList(mario_tshirt_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04010410
-static const Vtx mario_m_logo_dl_vertex[] = {
-    {{{   195,     93,     32}, 0, {   744,    732}, {0x51, 0x54, 0x30, 0xff}}},
-    {{{   153,     33,     95}, 0, {  1250,   1066}, {0x04, 0x46, 0x69, 0xff}}},
-    {{{   252,     62,     70}, 0, {  1032,    152}, {0x39, 0x4a, 0x55, 0xff}}},
-    {{{   272,     85,      0}, 0, {   472,    -16}, {0x5f, 0x54, 0x00, 0xff}}},
-    {{{   252,     62,    -69}, 0, {   -78,    158}, {0x39, 0x4a, 0xab, 0xff}}},
-    {{{   195,     93,    -31}, 0, {   232,    736}, {0x51, 0x54, 0xcf, 0xff}}},
-    {{{   153,     33,    -94}, 0, {  -258,   1076}, {0x03, 0x46, 0x97, 0xff}}},
-};
-
-// 0x04010480
-static const Vtx mario_eyes_cap_on_dl_vertex[] = {
-    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
-    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
-    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{   175,     91,    -38}, 0, {   106,    130}, {0xc6, 0x6d, 0xe7, 0xff}}},
-    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
-    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
-    {{{   175,     91,     39}, 0, {   842,    112}, {0xc6, 0x6d, 0x19, 0xff}}},
-    {{{   153,     33,    -94}, 0, {  -404,    342}, {0x03, 0x46, 0x97, 0xff}}},
-    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
-    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
-    {{{   153,     33,     95}, 0, {  1362,    296}, {0x04, 0x46, 0x69, 0xff}}},
-};
-
-// 0x04010540
-static const Vtx mario_hair_sideburn_cap_on_dl_vertex[] = {
-    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xed, 0x24, 0x88, 0xff}}},
-    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
-    {{{   153,     33,    -94}, 0, {    90,    -58}, {0x03, 0x46, 0x97, 0xff}}},
-    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
-    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
-    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
-    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
-    {{{   120,    -11,    111}, 0, {   922,    122}, {0xed, 0x24, 0x78, 0xff}}},
-    {{{   153,     33,     95}, 0, {    22,    -68}, {0x04, 0x46, 0x69, 0xff}}},
-};
-
-// 0x04010600
-static const Vtx mario_mustache_cap_on_dl_vertex_group1[] = {
-    {{{    77,    108,     34}, 0, {   342,    368}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{    92,     88,     84}, 0, {   898,    -18}, {0x23, 0x59, 0x53, 0xff}}},
-    {{{    97,    103,     25}, 0, {   224,    146}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{    48,     94,     76}, 0, {   888,    564}, {0xd7, 0x60, 0x47, 0xff}}},
-    {{{    52,    111,     31}, 0, {   354,    690}, {0xa8, 0x33, 0x4b, 0xff}}},
-    {{{    27,    100,     30}, 0, {   442,    982}, {0xb1, 0x60, 0x16, 0xff}}},
-    {{{    41,    109,      0}, 0, {    70,    924}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{    44,     44,     97}, 0, {  1296,    438}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{     3,     54,     52}, 0, {   892,   1090}, {0x95, 0x1d, 0x3c, 0xff}}},
-    {{{    52,    111,    -30}, 0, {   340,    684}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
-    {{{    27,    100,    -29}, 0, {   394,    998}, {0xb1, 0x60, 0xea, 0xff}}},
-    {{{     3,     54,    -51}, 0, {   806,   1162}, {0x95, 0x1d, 0xc4, 0xff}}},
-    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
-    {{{    41,    109,      0}, 0, {    50,    900}, {0x95, 0x44, 0x00, 0xff}}},
-};
-
-// 0x04010700
-static const Vtx mario_mustache_cap_on_dl_vertex_group2[] = {
-    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
-    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
-    {{{    92,     88,    -83}, 0, {   922,     -4}, {0x23, 0x59, 0xad, 0xff}}},
-    {{{    97,    103,    -24}, 0, {   274,    100}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
-};
-
-// 0x04010750
-static const Vtx mario_face_cap_dl_vertex_group1[] = {
-    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
-    {{{   122,   -139,    -48}, 0, {     0,      0}, {0x28, 0x94, 0xcd, 0xff}}},
-    {{{   131,    -56,   -123}, 0, {     0,      0}, {0xde, 0xd4, 0x8f, 0xff}}},
-    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
-    {{{    77,   -138,    -50}, 0, {     0,      0}, {0xbc, 0x9e, 0xd8, 0xff}}},
-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
-    {{{   122,   -139,     49}, 0, {     0,      0}, {0x2d, 0x8f, 0x22, 0xff}}},
-    {{{    77,   -138,     51}, 0, {     0,      0}, {0xc1, 0xa4, 0x3c, 0xff}}},
-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
-    {{{   131,    -56,    124}, 0, {     0,      0}, {0xdf, 0xd3, 0x71, 0xff}}},
-    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
-    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
-};
-
-// 0x04010850
-static const Vtx mario_face_cap_dl_vertex_group2[] = {
-    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
-    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
-    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
-    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
-    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
-    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
-    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
-    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
-    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
-    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
-    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
-    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
-};
-
-// 0x04010940
-static const Vtx mario_face_cap_dl_vertex_group3[] = {
-    {{{   195,     93,     32}, 0, {     0,      0}, {0x51, 0x54, 0x30, 0xff}}},
-    {{{   173,    132,     66}, 0, {     0,      0}, {0xda, 0x5a, 0x50, 0xff}}},
-    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
-    {{{   175,     91,     39}, 0, {     0,      0}, {0xc6, 0x6d, 0x19, 0xff}}},
-    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
-    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
-    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
-    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
-    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
-    {{{   272,     85,      0}, 0, {     0,      0}, {0x5f, 0x54, 0x00, 0xff}}},
-    {{{   182,    155,      0}, 0, {     0,      0}, {0xed, 0x7d, 0x00, 0xff}}},
-    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
-    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
-    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
-};
-
-// 0x04010A30
-static const Vtx mario_face_part_cap_on_dl_vertex_group1[] = {
-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
-    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
-    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
-    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
-    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
-};
-
-// 0x04010B20
-static const Vtx mario_face_part_cap_on_dl_vertex_group2[] = {
-    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
-    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
-    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
-    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-};
-
-// 0x04010C20
-static const Vtx mario_face_part_cap_on_dl_vertex_group3[] = {
-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
-    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
-};
-
-// 0x04010D10
-static const Vtx mario_face_part_cap_on_dl_vertex_group4[] = {
-    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
-    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
-    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
-    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
-    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
-};
-
-// 0x04010E10
-static const Vtx mario_face_part_cap_on_dl_vertex_group5[] = {
-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
-    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
-    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
-    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
-    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
-};
-
-// 0x04010F00
-static const Vtx mario_face_part_cap_on_dl_vertex_group6[] = {
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
-    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
-    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
-    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
-    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
-};
-
-// 0x04011000
-static const Vtx mario_face_part_cap_on_dl_vertex_group7[] = {
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
-};
-
-// 0x040110D0
-static const Vtx mario_face_back_hair_cap_on_dl_vertex_group1[] = {
-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
-    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
-    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
-    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
-    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
-    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
-    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-};
-
-// 0x040111D0
-static const Vtx mario_face_back_hair_cap_on_dl_vertex_group2[] = {
-    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
-    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
-    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
-    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
-};
-
-// 0x040112B0 - 0x040112E8
-const Gfx mario_m_logo_dl[] = {
-    gsSPVertex(mario_m_logo_dl_vertex, 7, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 2,  3,  0, 0x0,  3,  5,  0, 0x0),
-    gsSP1Triangle( 4,  6,  5, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040112E8 - 0x04011350
-const Gfx mario_eyes_cap_on_dl[] = {
-    gsSPVertex(mario_eyes_cap_on_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 3,  0,  4, 0x0,  6,  3,  5, 0x0),
-    gsSP2Triangles( 3,  1,  0, 0x0,  4,  0,  7, 0x0),
-    gsSP2Triangles( 5,  4,  8, 0x0,  2,  9, 10, 0x0),
-    gsSP2Triangles(10,  7,  2, 0x0, 11,  7, 10, 0x0),
-    gsSP1Triangle( 7,  0,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011350 - 0x040113A0
-const Gfx mario_hair_sideburn_cap_on_dl[] = {
-    gsSPVertex(mario_hair_sideburn_cap_on_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 4,  5,  1, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
-    gsSP2Triangles( 9, 10,  6, 0x0, 11,  6, 10, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040113A0 - 0x04011438
-const Gfx mario_mustache_cap_on_dl[] = {
-    gsSPVertex(mario_mustache_cap_on_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
-    gsSP2Triangles( 0,  4,  3, 0x0,  5,  3,  4, 0x0),
-    gsSP2Triangles( 5,  4,  6, 0x0,  7,  3,  8, 0x0),
-    gsSP2Triangles( 8,  3,  5, 0x0,  3,  7,  1, 0x0),
-    gsSP2Triangles( 9, 10, 11, 0x0, 12, 10, 13, 0x0),
-    gsSP2Triangles(11, 10, 12, 0x0, 10,  9, 14, 0x0),
-    gsSP1Triangle(15,  9, 11, 0x0),
-    gsSPVertex(mario_mustache_cap_on_dl_vertex_group2, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP1Triangle( 2,  4,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011438 - 0x040116F8
-const Gfx mario_face_part_cap_on_dl[] = {
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  4,  2, 0x0,  1,  5,  3, 0x0),
-    gsSP2Triangles( 6,  7,  3, 0x0,  7,  4,  3, 0x0),
-    gsSP2Triangles( 6,  3,  5, 0x0,  4,  7,  8, 0x0),
-    gsSP2Triangles( 9,  4,  8, 0x0, 10,  6,  5, 0x0),
-    gsSP2Triangles(10,  5, 11, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  5,  6,  8, 0x0),
-    gsSP2Triangles( 3,  8,  7, 0x0,  9,  3,  7, 0x0),
-    gsSP2Triangles( 3,  9,  4, 0x0, 10, 11, 12, 0x0),
-    gsSP2Triangles( 0, 10,  1, 0x0, 10,  0, 11, 0x0),
-    gsSP2Triangles(11,  0,  2, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  3,  0,  7, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0, 11,  9,  8, 0x0),
-    gsSP2Triangles(12, 13,  8, 0x0,  8, 13, 11, 0x0),
-    gsSP1Triangle( 9, 11, 14, 0x0),
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  2, 0x0),
-    gsSP2Triangles( 5,  2,  4, 0x0,  2,  6,  3, 0x0),
-    gsSP2Triangles( 3,  6,  7, 0x0,  8,  9,  3, 0x0),
-    gsSP2Triangles( 9,  4,  3, 0x0,  7, 10,  3, 0x0),
-    gsSP2Triangles( 3, 10,  8, 0x0, 11,  4,  9, 0x0),
-    gsSP2Triangles(12, 11,  9, 0x0, 13,  9,  8, 0x0),
-    gsSP2Triangles( 9, 13, 12, 0x0,  4, 11,  5, 0x0),
-    gsSP1Triangle(14, 15, 11, 0x0),
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group5, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 1,  5,  6, 0x0,  1,  3,  5, 0x0),
-    gsSP2Triangles( 2,  1,  6, 0x0,  2,  6,  7, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  6,  5, 11, 0x0),
-    gsSP2Triangles(12, 13,  8, 0x0, 10, 12,  8, 0x0),
-    gsSP1Triangle(14,  8, 13, 0x0),
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group6, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  6,  5,  8, 0x0),
-    gsSP2Triangles( 5,  7,  3, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 6, 12,  7, 0x0, 13, 10,  9, 0x0),
-    gsSP2Triangles(14, 13,  9, 0x0, 15, 10, 13, 0x0),
-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group7, 13, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 1,  5,  3, 0x0,  2,  1,  4, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  7,  6,  8, 0x0),
-    gsSP2Triangles( 7,  9,  3, 0x0,  5,  7,  3, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 12,  6, 10, 0x0),
-    gsSP1Triangle(12,  8,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040116F8 - 0x04011870
-const Gfx mario_face_cap_dl[] = {
-    gsSPVertex(mario_face_cap_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
-    gsSP2Triangles( 4,  2,  5, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 2,  1,  6, 0x0,  6,  7,  2, 0x0),
-    gsSP2Triangles( 5,  2,  7, 0x0,  6,  1,  8, 0x0),
-    gsSP2Triangles( 8,  1,  0, 0x0,  6,  8,  9, 0x0),
-    gsSP2Triangles(10,  7,  6, 0x0,  9, 10,  6, 0x0),
-    gsSP2Triangles(11, 10,  9, 0x0,  9,  8, 11, 0x0),
-    gsSP2Triangles(11,  8, 12, 0x0,  0, 12,  8, 0x0),
-    gsSP2Triangles(13, 10, 11, 0x0, 11, 12, 14, 0x0),
-    gsSP2Triangles(15, 11, 14, 0x0, 13, 11, 15, 0x0),
-    gsSPVertex(mario_face_cap_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSP2Triangles( 4,  5,  0, 0x0,  0,  6,  1, 0x0),
-    gsSP2Triangles( 7,  1,  8, 0x0,  8,  1,  6, 0x0),
-    gsSP2Triangles( 9, 10, 11, 0x0,  9, 12, 10, 0x0),
-    gsSP2Triangles(12,  9, 13, 0x0, 13,  9, 14, 0x0),
-    gsSPVertex(mario_face_cap_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
-    gsSP2Triangles( 8,  9,  5, 0x0,  0, 10,  1, 0x0),
-    gsSP2Triangles( 1, 10,  3, 0x0, 11, 10,  0, 0x0),
-    gsSP2Triangles(12,  3, 10, 0x0, 12, 10, 13, 0x0),
-    gsSP2Triangles(13, 10, 11, 0x0,  5,  9,  7, 0x0),
-    gsSP1Triangle( 7,  9, 14, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011870 - 0x04011960
-const Gfx mario_face_back_hair_cap_on_dl[] = {
-    gsSPVertex(mario_face_back_hair_cap_on_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  5,  8,  6, 0x0),
-    gsSP2Triangles( 5,  4,  8, 0x0,  7,  3,  5, 0x0),
-    gsSP2Triangles( 0,  2,  6, 0x0,  6,  9,  7, 0x0),
-    gsSP2Triangles( 0,  6,  8, 0x0,  3,  7, 10, 0x0),
-    gsSP2Triangles( 1, 11, 12, 0x0, 12, 13, 14, 0x0),
-    gsSP2Triangles(11, 13, 12, 0x0,  1, 12,  2, 0x0),
-    gsSP2Triangles(14,  2, 12, 0x0, 15, 14, 13, 0x0),
-    gsSPVertex(mario_face_back_hair_cap_on_dl_vertex_group2, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  3,  2, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0,  9, 10,  7, 0x0),
-    gsSP2Triangles( 2,  1, 11, 0x0,  2, 11,  7, 0x0),
-    gsSP2Triangles( 9, 12, 13, 0x0, 10,  9, 13, 0x0),
-    gsSP1Triangle( 8, 12,  9, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011960 - 0x040119A0
-const Gfx mario_face_cap_on_dl[] = {
-    gsSPDisplayList(mario_face_part_cap_on_dl),
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_face_cap_dl),
-    gsSPLight(&mario_brown2_lights_group.l, 1),
-    gsSPLight(&mario_brown2_lights_group.a, 2),
-    gsSPDisplayList(mario_face_back_hair_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040119A0 - 0x04011A90
-const Gfx mario_cap_on_eyes_front[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011A90 - 0x04011B80
-const Gfx mario_cap_on_eyes_half_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011B80 - 0x04011C70
-const Gfx mario_cap_on_eyes_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011C70 - 0x04011D60
-const Gfx mario_cap_on_eyes_right[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011D60 - 0x04011E50
-const Gfx mario_cap_on_eyes_left[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011E50 - 0x04011F40
-const Gfx mario_cap_on_eyes_up[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04011F40 - 0x04012030
-const Gfx mario_cap_on_eyes_down[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04012030 - 0x04012120
-const Gfx mario_cap_on_eyes_dead[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04012120 - 0x04012160
-const Gfx mario_metal_cap_on_shared_dl[] = {
-    gsSPDisplayList(mario_m_logo_dl),
-    gsSPDisplayList(mario_eyes_cap_on_dl),
-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
-    gsSPDisplayList(mario_mustache_cap_on_dl),
-    gsSPDisplayList(mario_face_part_cap_on_dl),
-    gsSPDisplayList(mario_face_cap_dl),
-    gsSPDisplayList(mario_face_back_hair_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// Unreferenced light group
-UNUSED static const Lights1 mario_lights_unused1 = gdSPDefLights1(
-    0x3f, 0x30, 0x1e,
-    0xfe, 0xc1, 0x79, 0x28, 0x28, 0x28
-);
-
-// Unreferenced light group
-UNUSED static const Lights1 mario_lights_unused2 = gdSPDefLights1(
-    0x1c, 0x01, 0x00,
-    0x73, 0x06, 0x00, 0x28, 0x28, 0x28
-);
-
-// 0x04012190
-static const Vtx mario_eyes_cap_off_dl_vertex[] = {
-    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
-    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
-    {{{   153,     33,     95}, 0, {  1362,    296}, {0x05, 0x38, 0x71, 0xff}}},
-    {{{   175,     91,     39}, 0, {   842,    112}, {0x01, 0x75, 0x2f, 0xff}}},
-    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
-    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
-    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{   175,     91,    -38}, 0, {   106,    130}, {0xf5, 0x73, 0xcc, 0xff}}},
-    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
-    {{{   153,     33,    -94}, 0, {  -404,    342}, {0xfe, 0x36, 0x8e, 0xff}}},
-    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
-};
-
-// 0x04012250
-static const Vtx mario_hair_sideburn_cap_off_dl_vertex[] = {
-    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
-    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
-    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
-    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{   153,     33,     95}, 0, {    22,    -68}, {0x05, 0x38, 0x71, 0xff}}},
-    {{{   120,    -11,    111}, 0, {   922,    122}, {0xff, 0x13, 0x7d, 0xff}}},
-    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
-    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xff, 0x13, 0x83, 0xff}}},
-    {{{   153,     33,    -94}, 0, {    90,    -58}, {0xfe, 0x36, 0x8e, 0xff}}},
-};
-
-// 0x04012310
-static const Vtx mario_mustache_cap_off_dl_vertex_group1[] = {
-    {{{    92,     88,    -83}, 0, {   992,    -10}, {0x23, 0x59, 0xad, 0xff}}},
-    {{{    77,    108,    -33}, 0, {   360,    296}, {0x0e, 0x16, 0x84, 0xff}}},
-    {{{    97,    103,    -24}, 0, {   298,     20}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{    48,     94,    -75}, 0, {   844,    640}, {0xd7, 0x60, 0xb9, 0xff}}},
-    {{{    44,     44,    -96}, 0, {  1272,    592}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    52,    111,    -30}, 0, {   294,    656}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    92,     88,     84}, 0, {   948,     -8}, {0x23, 0x59, 0x53, 0xff}}},
-    {{{    77,    108,     34}, 0, {   330,    316}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{    48,     94,     76}, 0, {   848,    630}, {0xd7, 0x60, 0x47, 0xff}}},
-    {{{    97,    103,     25}, 0, {   248,     50}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{    52,    111,     31}, 0, {   292,    670}, {0xa8, 0x33, 0x4b, 0xff}}},
-    {{{    44,     44,     97}, 0, {  1276,    566}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{     3,     54,     52}, 0, {   768,   1210}, {0x95, 0x1d, 0x3c, 0xff}}},
-    {{{    27,    100,     30}, 0, {   336,   1006}, {0xb1, 0x60, 0x16, 0xff}}},
-    {{{     3,     54,    -51}, 0, {   720,   1228}, {0x95, 0x1d, 0xc4, 0xff}}},
-    {{{    41,    109,      0}, 0, {   -30,    876}, {0x95, 0x44, 0x00, 0xff}}},
-};
-
-// 0x04012410
-static const Vtx mario_mustache_cap_off_dl_vertex_group2[] = {
-    {{{    41,    109,      0}, 0, {   -38,    852}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{    52,    111,    -30}, 0, {   294,    656}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    27,    100,    -29}, 0, {   310,   1002}, {0xb1, 0x60, 0xea, 0xff}}},
-    {{{    48,     94,    -75}, 0, {   844,    640}, {0xd7, 0x60, 0xb9, 0xff}}},
-    {{{     3,     54,    -51}, 0, {   720,   1228}, {0x95, 0x1d, 0xc4, 0xff}}},
-};
-
-// 0x04012460
-static const Vtx mario_face_part_cap_off_dl_vertex_group1[] = {
-    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
-    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
-    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
-    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
-    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
-    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
-};
-
-// 0x04012550
-static const Vtx mario_face_part_cap_off_dl_vertex_group2[] = {
-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
-    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
-    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
-    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
-    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
-    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
-};
-
-// 0x04012650
-static const Vtx mario_face_part_cap_off_dl_vertex_group3[] = {
-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
-    {{{   153,     33,     95}, 0, {     0,      0}, {0x05, 0x38, 0x71, 0xff}}},
-    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
-    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
-};
-
-// 0x04012740
-static const Vtx mario_face_part_cap_off_dl_vertex_group4[] = {
-    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
-    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
-    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
-    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
-    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
-    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
-    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
-};
-
-// 0x04012830
-static const Vtx mario_face_part_cap_off_dl_vertex_group5[] = {
-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
-};
-
-// 0x04012930
-static const Vtx mario_face_part_cap_off_dl_vertex_group6[] = {
-    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
-    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
-    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
-};
-
-// 0x04012A30
-static const Vtx mario_face_part_cap_off_dl_vertex_group7[] = {
-    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
-    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
-};
-
-// 0x04012B30
-static const Vtx mario_face_part_cap_off_dl_vertex_group8[] = {
-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
-};
-
-// 0x04012BC0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group1[] = {
-    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
-    {{{   200,     70,    -97}, 0, {     0,      0}, {0x07, 0x48, 0x99, 0xff}}},
-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
-    {{{   153,     33,     95}, 0, {     0,      0}, {0x05, 0x38, 0x71, 0xff}}},
-    {{{   200,     75,     84}, 0, {     0,      0}, {0x10, 0x52, 0x5f, 0xff}}},
-    {{{   151,     72,     70}, 0, {     0,      0}, {0xe4, 0x5c, 0x51, 0xff}}},
-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
-    {{{   175,     91,     39}, 0, {     0,      0}, {0x01, 0x75, 0x2f, 0xff}}},
-    {{{   209,     86,     60}, 0, {     0,      0}, {0x38, 0x60, 0x3c, 0xff}}},
-    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xf5, 0x73, 0xcc, 0xff}}},
-    {{{   151,     72,    -68}, 0, {     0,      0}, {0xd6, 0x5b, 0xb3, 0xff}}},
-    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
-    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
-    {{{   227,    -14,    -58}, 0, {     0,      0}, {0x72, 0xf1, 0xcc, 0xff}}},
-};
-
-// 0x04012CC0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group2[] = {
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
-    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
-    {{{   227,    -14,     59}, 0, {     0,      0}, {0x72, 0xec, 0x32, 0xff}}},
-    {{{   241,    -34,      0}, 0, {     0,      0}, {0x7a, 0xe0, 0x00, 0xff}}},
-    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
-    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
-    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
-    {{{   189,   -102,    -71}, 0, {     0,      0}, {0x50, 0xb9, 0xbd, 0xff}}},
-    {{{   227,    -14,    -58}, 0, {     0,      0}, {0x72, 0xf1, 0xcc, 0xff}}},
-    {{{   200,   -117,      0}, 0, {     0,      0}, {0x3f, 0x93, 0x00, 0xff}}},
-    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
-    {{{   248,    104,    -43}, 0, {     0,      0}, {0x76, 0x2c, 0xf3, 0xff}}},
-    {{{   231,     81,     33}, 0, {     0,      0}, {0x71, 0x27, 0x2a, 0xff}}},
-};
-
-// 0x04012DB0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group3[] = {
-    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
-    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
-    {{{   232,     69,    -34}, 0, {     0,      0}, {0x72, 0xe4, 0xd1, 0xff}}},
-    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xf5, 0x73, 0xcc, 0xff}}},
-    {{{   201,    125,    -13}, 0, {     0,      0}, {0xe4, 0x7b, 0xfb, 0xff}}},
-    {{{   160,     96,      0}, 0, {     0,      0}, {0xb7, 0x67, 0xfe, 0xff}}},
-    {{{   189,   -102,    -71}, 0, {     0,      0}, {0x50, 0xb9, 0xbd, 0xff}}},
-    {{{   116,   -124,    -67}, 0, {     0,      0}, {0xfc, 0x8f, 0xc8, 0xff}}},
-    {{{   145,    -84,   -104}, 0, {     0,      0}, {0xef, 0xcf, 0x8d, 0xff}}},
-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
-    {{{   200,   -117,      0}, 0, {     0,      0}, {0x3f, 0x93, 0x00, 0xff}}},
-    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
-    {{{   116,   -126,     68}, 0, {     0,      0}, {0xfb, 0x8f, 0x38, 0xff}}},
-    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
-    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
-};
-
-// 0x04012EB0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group4[] = {
-    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
-    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
-    {{{   201,    125,    -13}, 0, {     0,      0}, {0xe4, 0x7b, 0xfb, 0xff}}},
-    {{{   209,     86,     60}, 0, {     0,      0}, {0x38, 0x60, 0x3c, 0xff}}},
-    {{{   248,    104,    -43}, 0, {     0,      0}, {0x76, 0x2c, 0xf3, 0xff}}},
-    {{{   231,     81,     33}, 0, {     0,      0}, {0x71, 0x27, 0x2a, 0xff}}},
-    {{{   232,     69,    -34}, 0, {     0,      0}, {0x72, 0xe4, 0xd1, 0xff}}},
-    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
-    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
-    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
-    {{{   175,     91,     39}, 0, {     0,      0}, {0x01, 0x75, 0x2f, 0xff}}},
-    {{{   160,     96,      0}, 0, {     0,      0}, {0xb7, 0x67, 0xfe, 0xff}}},
-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
-    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
-};
-
-// 0x04012FB0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group5[] = {
-    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
-    {{{   116,   -124,    -67}, 0, {     0,      0}, {0xfc, 0x8f, 0xc8, 0xff}}},
-    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
-    {{{   145,    -84,   -104}, 0, {     0,      0}, {0xef, 0xcf, 0x8d, 0xff}}},
-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
-    {{{   116,   -126,     68}, 0, {     0,      0}, {0xfb, 0x8f, 0x38, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
-};
-
-// 0x040130B0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group6[] = {
-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
-    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
-    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
-    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
-};
-
-// 0x040131B0
-static const Vtx mario_face_hair_cap_off_dl_vertex_group7[] = {
-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
-    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
-    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
-    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
-    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
-    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
-    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
-};
-
-// 0x04013280
-static const Vtx mario_face_part_cap_off_dl_vertex_group9[] = {
-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
-    {{{    48,     94,     76}, 0, {     0,      0}, {0xd7, 0x60, 0x47, 0xff}}},
-    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
-};
-
-// 0x040132B0 - 0x04013318
-const Gfx mario_eyes_cap_off_dl[] = {
-    gsSPVertex(mario_eyes_cap_off_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 4,  6,  7, 0x0,  8,  6,  4, 0x0),
-    gsSP2Triangles( 5,  4,  7, 0x0,  7,  9,  5, 0x0),
-    gsSP2Triangles( 2,  8, 10, 0x0,  1,  6,  8, 0x0),
-    gsSP2Triangles( 1,  8,  2, 0x0,  6, 11,  7, 0x0),
-    gsSP1Triangle( 1, 11,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013318 - 0x040133A8
-const Gfx mario_mustache_cap_off_dl[] = {
-    gsSPVertex(mario_mustache_cap_off_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 0,  4,  3, 0x0,  3,  5,  1, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  7,  6,  9, 0x0),
-    gsSP2Triangles( 7, 10,  8, 0x0,  8, 11,  6, 0x0),
-    gsSP2Triangles(12,  8, 13, 0x0, 13,  8, 10, 0x0),
-    gsSP2Triangles(14,  3,  4, 0x0, 13, 10, 15, 0x0),
-    gsSPVertex(mario_mustache_cap_off_dl_vertex_group2, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP1Triangle( 2,  3,  4, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040133A8 - 0x040133F8
-const Gfx mario_hair_sideburn_cap_off_dl[] = {
-    gsSPVertex(mario_hair_sideburn_cap_off_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 4,  2,  5, 0x0,  1,  5,  2, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
-    gsSP2Triangles( 9,  8, 10, 0x0, 10,  8, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040133F8 - 0x040136D0
-const Gfx mario_face_part_cap_off_dl[] = {
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  3,  5, 0x0,  3,  6,  7, 0x0),
-    gsSP2Triangles( 4,  8,  2, 0x0,  8,  4,  9, 0x0),
-    gsSP2Triangles( 2,  1,  4, 0x0,  6,  5, 10, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0, 14, 13, 12, 0x0),
-    gsSP1Triangle(13, 14,  0, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9,  8,  7, 0x0),
-    gsSP2Triangles(10,  1, 11, 0x0,  1, 12, 11, 0x0),
-    gsSP2Triangles(12,  1,  0, 0x0, 13, 11, 14, 0x0),
-    gsSP2Triangles(12, 14, 11, 0x0, 11, 13, 15, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 3,  6,  4, 0x0,  3,  5,  7, 0x0),
-    gsSP2Triangles( 8,  7,  5, 0x0,  4,  8,  5, 0x0),
-    gsSP2Triangles( 9, 10, 11, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group4, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP2Triangles( 4,  1,  0, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 8,  3,  9, 0x0, 10, 11, 12, 0x0),
-    gsSP2Triangles(13, 11, 10, 0x0, 11, 13, 14, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group5, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  5, 0x0,  8,  7,  6, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  8,  6,  9, 0x0),
-    gsSP2Triangles( 9, 11, 10, 0x0,  9, 12, 11, 0x0),
-    gsSP2Triangles( 0, 13,  1, 0x0, 13, 14,  1, 0x0),
-    gsSP1Triangle( 1, 14, 15, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group6, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  2, 0x0),
-    gsSP2Triangles( 2,  4,  0, 0x0,  1,  0,  5, 0x0),
-    gsSP2Triangles( 1,  6,  7, 0x0,  1,  5,  6, 0x0),
-    gsSP2Triangles( 7,  8,  1, 0x0,  3,  9,  4, 0x0),
-    gsSP2Triangles( 9,  3, 10, 0x0,  4, 11,  0, 0x0),
-    gsSP2Triangles(11,  4, 12, 0x0,  4,  9, 12, 0x0),
-    gsSP2Triangles(10, 13, 14, 0x0,  0, 11, 15, 0x0),
-    gsSP2Triangles( 5,  0, 15, 0x0, 14,  9, 10, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group7, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
-    gsSP2Triangles( 8,  5,  4, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 2, 12,  0, 0x0, 13,  4,  6, 0x0),
-    gsSP2Triangles( 6, 14, 15, 0x0,  6,  7, 14, 0x0),
-    gsSP1Triangle(13,  6, 15, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group8, 9, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  6,  5, 0x0),
-    gsSP1Triangle( 8,  5,  4, 0x0),
-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group9, 3, 0),
-    gsSP1Triangle( 0,  1,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040136D0 - 0x040139C0
-const Gfx mario_face_hair_cap_off_dl[] = {
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 3,  6,  7, 0x0,  3,  7,  4, 0x0),
-    gsSP2Triangles( 8,  4,  9, 0x0,  7, 10,  4, 0x0),
-    gsSP2Triangles( 4, 10,  9, 0x0,  8,  5,  4, 0x0),
-    gsSP2Triangles(11,  1, 12, 0x0,  1,  0, 12, 0x0),
-    gsSP2Triangles( 1, 13,  2, 0x0,  1, 11, 14, 0x0),
-    gsSP2Triangles(13,  1, 14, 0x0, 15,  2, 13, 0x0),
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 4,  3,  6, 0x0,  3,  7,  6, 0x0),
-    gsSP2Triangles( 8,  7,  3, 0x0,  5,  8,  3, 0x0),
-    gsSP2Triangles( 9, 10,  4, 0x0, 11,  4,  6, 0x0),
-    gsSP2Triangles(11,  9,  4, 0x0, 10,  5,  4, 0x0),
-    gsSP2Triangles(10, 12,  5, 0x0,  5, 13, 14, 0x0),
-    gsSP2Triangles( 8,  5, 14, 0x0,  9,  2, 10, 0x0),
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 1,  4,  5, 0x0,  4,  6,  5, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0, 10,  7,  9, 0x0),
-    gsSP2Triangles( 8,  7, 11, 0x0, 11, 12, 13, 0x0),
-    gsSP2Triangles(14, 11, 13, 0x0, 14,  8, 11, 0x0),
-    gsSP1Triangle(15, 13, 12, 0x0),
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 4,  6,  5, 0x0,  7,  8,  5, 0x0),
-    gsSP2Triangles( 8,  3,  5, 0x0,  9,  7,  5, 0x0),
-    gsSP2Triangles(10,  6,  4, 0x0,  4,  3, 11, 0x0),
-    gsSP2Triangles( 3, 12, 11, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group5, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  4,  3, 0x0,  7,  6,  8, 0x0),
-    gsSP2Triangles( 9,  6,  3, 0x0,  6,  9,  8, 0x0),
-    gsSP2Triangles(10, 11,  0, 0x0, 12,  0,  2, 0x0),
-    gsSP2Triangles(10,  0, 12, 0x0, 10,  5, 11, 0x0),
-    gsSP2Triangles(13, 14, 15, 0x0, 13,  3, 10, 0x0),
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group6, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 5,  0,  2, 0x0,  5,  4,  0, 0x0),
-    gsSP2Triangles( 3,  6,  7, 0x0,  8,  9,  7, 0x0),
-    gsSP2Triangles( 6, 10,  7, 0x0,  8,  7, 10, 0x0),
-    gsSP2Triangles( 3, 11, 12, 0x0, 13, 14,  3, 0x0),
-    gsSP2Triangles(12,  6,  3, 0x0,  6, 15, 10, 0x0),
-    gsSP1Triangle(12, 15,  6, 0x0),
-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group7, 13, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  4,  7, 0x0),
-    gsSP2Triangles( 6,  5,  8, 0x0,  9,  8,  5, 0x0),
-    gsSP2Triangles( 5,  7,  9, 0x0, 10, 11, 12, 0x0),
-    gsSP2Triangles(11, 10,  3, 0x0, 12,  2, 10, 0x0),
-    gsSP2Triangles( 2,  1, 10, 0x0, 10,  1,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040139C0 - 0x040139E8
-const Gfx mario_face_cap_off_dl[] = {
-    gsSPDisplayList(mario_face_part_cap_off_dl),
-    gsSPLight(&mario_brown2_lights_group.l, 1),
-    gsSPLight(&mario_brown2_lights_group.a, 2),
-    gsSPDisplayList(mario_face_hair_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040139E8 - 0x04013AB8
-const Gfx mario_cap_off_eyes_front[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013AB8 - 0x04013B88
-const Gfx mario_cap_off_eyes_half_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013B88 - 0x04013C58
-const Gfx mario_cap_off_eyes_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013C58 - 0x04013D28
-const Gfx mario_cap_off_eyes_right[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013D28 - 0x04013DF8
-const Gfx mario_cap_off_eyes_left[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013DF8 - 0x04013EC8
-const Gfx mario_cap_off_eyes_up[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013EC8 - 0x04013F98
-const Gfx mario_cap_off_eyes_down[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04013F98 - 0x04014068
-const Gfx mario_cap_off_eyes_dead[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014068 - 0x04014098
-const Gfx mario_metal_cap_off_shared_dl[] = {
-    gsSPDisplayList(mario_eyes_cap_off_dl),
-    gsSPDisplayList(mario_mustache_cap_off_dl),
-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
-    gsSPDisplayList(mario_face_part_cap_off_dl),
-    gsSPDisplayList(mario_face_hair_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014098
-static const Vtx mario_medium_poly_butt_dl_vertex_group1[] = {
-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
-    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
-    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
-    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
-    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
-    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
-    {{{    -5,    -45,    -97}, 0, {     0,      0}, {0xc7, 0xdd, 0x95, 0x00}}},
-    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
-    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
-};
-
-// 0x04014198
-static const Vtx mario_medium_poly_butt_dl_vertex_group2[] = {
-    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
-    {{{   -32,     43,     22}, 0, {     0,      0}, {0x8c, 0x2c, 0x18, 0x00}}},
-    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
-    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
-    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
-    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
-    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
-    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
-    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
-};
-
-// 0x04014298
-static const Vtx mario_medium_poly_butt_dl_vertex_group3[] = {
-    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
-    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
-    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
-    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
-    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
-    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
-    {{{    -5,    -45,    -97}, 0, {     0,      0}, {0xc7, 0xdd, 0x95, 0x00}}},
-    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
-    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
-};
-
-// 0x04014398
-static const Vtx mario_medium_poly_butt_dl_vertex_group4[] = {
-    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
-    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
-    {{{   -32,     43,     22}, 0, {     0,      0}, {0x8c, 0x2c, 0x18, 0x00}}},
-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
-    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
-    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
-    {{{    85,     -5,      0}, 0, {     0,      0}, {0x7f, 0xfe, 0x00, 0x00}}},
-    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
-    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
-    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
-};
-
-// 0x04014498
-static const Vtx mario_medium_poly_butt_dl_vertex_group5[] = {
-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
-    {{{    85,     -5,      0}, 0, {     0,      0}, {0x7f, 0xfe, 0x00, 0x00}}},
-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
-};
-
-// 0x040144D8 - 0x04014638
-const Gfx mario_medium_poly_butt_dl[] = {
-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles(12, 13, 14, 0x0, 12, 15,  6, 0x0),
-    gsSP1Triangle( 3, 10,  7, 0x0),
-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 0,  2,  6, 0x0,  7,  5,  4, 0x0),
-    gsSP2Triangles( 7,  8,  6, 0x0,  9, 10,  8, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0,  2,  1,  5, 0x0),
-    gsSP1Triangle(14, 15,  0, 0x0),
-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  3,  7, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
-    gsSP2Triangles(11, 10, 14, 0x0,  0, 12, 15, 0x0),
-    gsSP2Triangles(14,  9,  6, 0x0,  2, 13, 12, 0x0),
-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 9, 12, 13, 0x0, 13, 12, 14, 0x0),
-    gsSP2Triangles(14, 12,  8, 0x0,  8, 12, 15, 0x0),
-    gsSP2Triangles(15, 12,  1, 0x0,  1, 12,  2, 0x0),
-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group5, 4, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014638 - 0x04014668
-const Gfx mario_medium_poly_butt[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_butt_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014668 - 0x040146E0
-const Gfx mario_metal_medium_poly_butt[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_butt_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040146E0
-static const Vtx mario_medium_poly_left_arm_shared_dl_vertex[] = {
-    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x08, 0x84, 0x18, 0x00}}},
-    {{{    60,    -27,    -18}, 0, {     0,      0}, {0x3d, 0xc5, 0xa3, 0x00}}},
-    {{{    60,    -18,     26}, 0, {     0,      0}, {0x5c, 0xbe, 0x36, 0x00}}},
-    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x07, 0xf5, 0x82, 0x00}}},
-    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x07, 0xf5, 0x82, 0x00}}},
-    {{{    59,     16,    -22}, 0, {     0,      0}, {0x5b, 0x4f, 0xda, 0x00}}},
-    {{{    -7,     20,     18}, 0, {     0,      0}, {0x0c, 0x73, 0x32, 0x00}}},
-    {{{    59,     14,     14}, 0, {     0,      0}, {0x38, 0x4b, 0x55, 0x00}}},
-    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x0b, 0x2a, 0x77, 0x00}}},
-    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x0a, 0x7e, 0x04, 0x00}}},
-    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x08, 0x84, 0x18, 0x00}}},
-    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -7,     20,     18}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-};
-
-// 0x040147D0 - 0x04014840
-const Gfx mario_medium_poly_left_arm_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_left_arm_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 4,  5,  1, 0x0,  6,  7,  5, 0x0),
-    gsSP2Triangles( 8,  2,  7, 0x0,  6,  8,  7, 0x0),
-    gsSP2Triangles( 9,  6,  5, 0x0, 10,  0,  2, 0x0),
-    gsSP2Triangles( 5,  2,  1, 0x0, 11, 12, 13, 0x0),
-    gsSP2Triangles(13, 14, 11, 0x0,  5,  7,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014840 - 0x04014860
-const Gfx mario_medium_poly_left_arm[] = {
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_left_arm_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014860
-static const Vtx mario_medium_poly_left_forearm_shared_dl_vertex[] = {
-    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x05, 0x84, 0x19, 0x00}}},
-    {{{    53,    -26,    -17}, 0, {     0,      0}, {0x59, 0xd0, 0xb5, 0x00}}},
-    {{{    53,    -17,     24}, 0, {     0,      0}, {0x3d, 0xab, 0x47, 0x00}}},
-    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x04, 0xf3, 0x82, 0x00}}},
-    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x04, 0xf4, 0x82, 0x00}}},
-    {{{    53,     13,    -21}, 0, {     0,      0}, {0x3b, 0x64, 0xce, 0x00}}},
-    {{{    -9,     15,     15}, 0, {     0,      0}, {0x07, 0x75, 0x30, 0x00}}},
-    {{{    53,     13,     12}, 0, {     0,      0}, {0x52, 0x41, 0x47, 0x00}}},
-    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x07, 0x2c, 0x76, 0x00}}},
-    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x06, 0x7e, 0x02, 0x00}}},
-    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x05, 0x84, 0x1a, 0x00}}},
-    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -9,     15,     15}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-};
-
-// 0x04014950 - 0x040149C0
-const Gfx mario_medium_poly_left_forearm_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_left_forearm_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 4,  5,  1, 0x0,  6,  7,  5, 0x0),
-    gsSP2Triangles( 8,  2,  7, 0x0,  6,  8,  7, 0x0),
-    gsSP2Triangles( 9,  6,  5, 0x0, 10,  0,  2, 0x0),
-    gsSP2Triangles( 1,  7,  2, 0x0,  1,  5,  7, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040149C0
-static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group1[] = {
-    {{{    31,     10,     40}, 0, {     0,      0}, {0xd8, 0xed, 0x76, 0x00}}},
-    {{{    12,      1,     26}, 0, {     0,      0}, {0xf1, 0xf7, 0x7d, 0x00}}},
-    {{{    27,    -32,     -3}, 0, {     0,      0}, {0x06, 0x82, 0x0b, 0x00}}},
-    {{{    11,      2,    -28}, 0, {     0,      0}, {0xca, 0xf6, 0x8e, 0x00}}},
-    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
-    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
-    {{{    -2,     36,     -2}, 0, {     0,      0}, {0xb0, 0x61, 0x03, 0x00}}},
-    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
-    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x1c, 0x0e, 0x86, 0x00}}},
-    {{{    81,     32,     40}, 0, {     0,      0}, {0x48, 0x1f, 0x63, 0x00}}},
-    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
-    {{{   102,    -23,      6}, 0, {     0,      0}, {0x64, 0xc4, 0x31, 0x00}}},
-    {{{    95,     43,    -12}, 0, {     0,      0}, {0x6e, 0x36, 0xe0, 0x00}}},
-    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
-    {{{    84,    -10,    -41}, 0, {     0,      0}, {0x39, 0xe2, 0x93, 0x00}}},
-    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
-};
-
-// 0x04014AC0
-static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group2[] = {
-    {{{    31,     10,     40}, 0, {     0,      0}, {0xd8, 0xed, 0x76, 0x00}}},
-    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
-    {{{     7,     62,     10}, 0, {     0,      0}, {0xa7, 0x5a, 0x00, 0x00}}},
-    {{{    27,    -32,     -3}, 0, {     0,      0}, {0x06, 0x82, 0x0b, 0x00}}},
-    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x37, 0xd5, 0x97, 0x00}}},
-    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x1c, 0x0e, 0x86, 0x00}}},
-    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x05, 0x48, 0x98, 0x00}}},
-    {{{    -2,     36,     -2}, 0, {     0,      0}, {0xb0, 0x61, 0x03, 0x00}}},
-    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x11, 0x50, 0x60, 0x00}}},
-    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
-    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x49, 0xd5, 0x5e, 0x00}}},
-    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
-    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
-    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
-    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
-};
-
-// 0x04014BB0
-static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group3[] = {
-    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
-    {{{    95,     43,    -12}, 0, {     0,      0}, {0x6e, 0x36, 0xe0, 0x00}}},
-    {{{    84,    -10,    -41}, 0, {     0,      0}, {0x39, 0xe2, 0x93, 0x00}}},
-    {{{     7,     62,     10}, 0, {     0,      0}, {0xa7, 0x5a, 0x00, 0x00}}},
-    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
-    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
-    {{{   102,    -23,      6}, 0, {     0,      0}, {0x64, 0xc4, 0x31, 0x00}}},
-    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
-    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
-    {{{    11,      2,    -28}, 0, {     0,      0}, {0xca, 0xf6, 0x8e, 0x00}}},
-    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
-    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
-    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
-    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
-};
-
-// 0x04014C90 - 0x04014DC0
-const Gfx mario_medium_poly_left_hand_closed_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
-    gsSP2Triangles( 5,  3,  6, 0x0,  6,  1,  0, 0x0),
-    gsSP2Triangles( 2,  1,  7, 0x0,  7,  1,  6, 0x0),
-    gsSP2Triangles( 6,  3,  8, 0x0,  3,  2,  8, 0x0),
-    gsSP2Triangles( 0,  9, 10, 0x0, 11,  9,  0, 0x0),
-    gsSP2Triangles(10, 12, 13, 0x0, 14, 12, 11, 0x0),
-    gsSP2Triangles(11, 12,  9, 0x0,  9, 12, 10, 0x0),
-    gsSP1Triangle(15, 11,  0, 0x0),
-    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 9, 10,  3, 0x0,  7,  0,  2, 0x0),
-    gsSP2Triangles( 7,  2, 11, 0x0,  3, 12, 13, 0x0),
-    gsSP2Triangles( 3, 13,  0, 0x0, 11,  2, 14, 0x0),
-    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group3, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSP2Triangles( 5,  2,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 7,  2,  8, 0x0,  7,  0,  2, 0x0),
-    gsSP2Triangles( 5,  8,  2, 0x0, 10, 11, 12, 0x0),
-    gsSP1Triangle(10, 13, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014DC0 - 0x04014DE0
-const Gfx mario_medium_poly_left_hand_closed[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_left_hand_closed_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014DE0
-static const Vtx mario_medium_poly_right_arm_shared_dl_vertex[] = {
-    {{{    60,    -28,     22}, 0, {     0,      0}, {0x3b, 0xc7, 0x60, 0x00}}},
-    {{{    60,    -19,    -19}, 0, {     0,      0}, {0x5a, 0xbc, 0xc7, 0x00}}},
-    {{{    60,     14,     24}, 0, {     0,      0}, {0x5b, 0x4f, 0x26, 0x00}}},
-    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x04, 0x84, 0xe6, 0x00}}},
-    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x04, 0x84, 0xe6, 0x00}}},
-    {{{    -8,     21,    -15}, 0, {     0,      0}, {0x11, 0x73, 0xce, 0x00}}},
-    {{{    -8,     22,     27}, 0, {     0,      0}, {0x0e, 0x7e, 0xfd, 0x00}}},
-    {{{    60,     13,     -9}, 0, {     0,      0}, {0x3c, 0x46, 0xaa, 0x00}}},
-    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x0e, 0x23, 0x88, 0x00}}},
-    {{{    -8,     22,     27}, 0, {     0,      0}, {0x03, 0xfa, 0x7e, 0x00}}},
-    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x03, 0xfa, 0x7e, 0x00}}},
-    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -8,     22,     27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{    -8,     21,    -15}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-};
-
-// 0x04014ED0 - 0x04014F40
-const Gfx mario_medium_poly_right_arm_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_right_arm_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 2,  5,  6, 0x0,  7,  8,  5, 0x0),
-    gsSP2Triangles( 7,  1,  8, 0x0,  2,  7,  5, 0x0),
-    gsSP2Triangles( 0,  2,  9, 0x0,  0,  9, 10, 0x0),
-    gsSP2Triangles( 1,  0,  3, 0x0, 11, 12, 13, 0x0),
-    gsSP2Triangles(13, 14, 11, 0x0,  1,  7,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014F40 - 0x04014F60
-const Gfx mario_medium_poly_right_arm[] = {
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_right_arm_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04014F60
-static const Vtx mario_medium_poly_right_forearm_shared_dl_vertex[] = {
-    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
-    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
-    {{{    -4,     17,     26}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
-    {{{    52,     13,    -10}, 0, {     0,      0}, {0x51, 0x40, 0xb7, 0x00}}},
-    {{{    53,     13,     22}, 0, {     0,      0}, {0x3d, 0x63, 0x31, 0x00}}},
-    {{{    53,    -26,     19}, 0, {     0,      0}, {0x5b, 0xd0, 0x49, 0x00}}},
-    {{{    52,    -17,    -21}, 0, {     0,      0}, {0x3a, 0xac, 0xb6, 0x00}}},
-    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x04, 0x85, 0xe4, 0x00}}},
-    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x03, 0x85, 0xe3, 0x00}}},
-    {{{    -5,     17,    -12}, 0, {     0,      0}, {0x09, 0x75, 0xd1, 0x00}}},
-    {{{    -4,     17,     26}, 0, {     0,      0}, {0x08, 0x7e, 0x00, 0x00}}},
-    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x06, 0x2a, 0x89, 0x00}}},
-    {{{    -4,     17,     26}, 0, {     0,      0}, {0x06, 0xf5, 0x7e, 0x00}}},
-    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x06, 0xf4, 0x7e, 0x00}}},
-    {{{    -5,     17,    -12}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
-};
-
-// 0x04015050 - 0x040150C0
-const Gfx mario_medium_poly_right_forearm_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_right_forearm_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  3,  5, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 4,  9, 10, 0x0,  3, 11,  9, 0x0),
-    gsSP2Triangles( 3,  6, 11, 0x0,  4,  3,  9, 0x0),
-    gsSP2Triangles( 5,  4, 12, 0x0,  5, 12, 13, 0x0),
-    gsSP2Triangles( 6,  5,  7, 0x0,  2, 14,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040150C0
-static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group1[] = {
-    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
-    {{{   -26,     40,      0}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
-    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
-    {{{    14,    -51,      7}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
-    {{{    81,     -8,     49}, 0, {     0,      0}, {0x36, 0xe6, 0x6f, 0x00}}},
-    {{{    42,    -20,     54}, 0, {     0,      0}, {0xd9, 0xbb, 0x62, 0x00}}},
-    {{{    54,    -42,     -4}, 0, {     0,      0}, {0x04, 0x82, 0xf6, 0x00}}},
-    {{{    52,     59,     37}, 0, {     0,      0}, {0xff, 0x55, 0x5e, 0x00}}},
-    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
-    {{{    10,      3,     33}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0x00}}},
-    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
-    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
-    {{{     7,     62,    -11}, 0, {     0,      0}, {0xa7, 0x5a, 0xf9, 0x00}}},
-    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
-    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
-    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
-};
-
-// 0x040151C0
-static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group2[] = {
-    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
-    {{{     7,     62,    -11}, 0, {     0,      0}, {0xa7, 0x5a, 0xf9, 0x00}}},
-    {{{    -3,     37,      3}, 0, {     0,      0}, {0xb0, 0x62, 0xf7, 0x00}}},
-    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
-    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
-    {{{    14,    -51,      7}, 0, {     0,      0}, {0x4f, 0xd0, 0xaa, 0x00}}},
-    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x37, 0x10, 0x8f, 0x00}}},
-    {{{   -26,     40,      0}, 0, {     0,      0}, {0x15, 0x51, 0xa1, 0x00}}},
-    {{{   -26,     40,      0}, 0, {     0,      0}, {0x02, 0x4f, 0x62, 0x00}}},
-    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x19, 0x13, 0x7a, 0x00}}},
-    {{{    14,    -51,      7}, 0, {     0,      0}, {0x36, 0xd7, 0x6b, 0x00}}},
-    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
-    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
-    {{{    54,    -42,     -4}, 0, {     0,      0}, {0x04, 0x82, 0xf6, 0x00}}},
-    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
-    {{{    83,     30,    -39}, 0, {     0,      0}, {0x4e, 0x1c, 0xa1, 0x00}}},
-};
-
-// 0x040152C0
-static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group3[] = {
-    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
-    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
-    {{{    81,     -8,     49}, 0, {     0,      0}, {0x36, 0xe6, 0x6f, 0x00}}},
-    {{{    52,     59,     37}, 0, {     0,      0}, {0xff, 0x55, 0x5e, 0x00}}},
-    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
-    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
-    {{{    83,     30,    -39}, 0, {     0,      0}, {0x4e, 0x1c, 0xa1, 0x00}}},
-    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x19, 0x13, 0x7a, 0x00}}},
-    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
-    {{{    10,      3,     33}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0x00}}},
-    {{{    -3,     37,      3}, 0, {     0,      0}, {0xb0, 0x62, 0xf7, 0x00}}},
-    {{{    13,      0,    -26}, 0, {     0,      0}, {0xf5, 0xf2, 0x83, 0x00}}},
-    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x37, 0x10, 0x8f, 0x00}}},
-    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
-    {{{    42,    -20,     54}, 0, {     0,      0}, {0xd9, 0xbb, 0x62, 0x00}}},
-};
-
-// 0x040153B0 - 0x040154E0
-const Gfx mario_medium_poly_right_hand_closed_dl[] = {
-    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  7,  8, 0x0),
-    gsSP2Triangles( 5,  4,  8, 0x0,  9,  5,  8, 0x0),
-    gsSP2Triangles(10,  4,  6, 0x0,  7, 11, 12, 0x0),
-    gsSP2Triangles( 4, 13,  7, 0x0,  7, 12,  8, 0x0),
-    gsSP2Triangles(14,  6, 15, 0x0,  6,  5, 15, 0x0),
-    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  7,  2, 0x0),
-    gsSP2Triangles( 2,  8,  9, 0x0,  9, 10,  4, 0x0),
-    gsSP2Triangles( 1, 11,  3, 0x0,  3, 12, 13, 0x0),
-    gsSP2Triangles(11, 14, 15, 0x0, 15, 14, 12, 0x0),
-    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
-    gsSP2Triangles( 5,  6,  0, 0x0,  4,  6,  5, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0,  7,  9, 10, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 12, 11,  8, 0x0),
-    gsSP2Triangles( 5, 11, 10, 0x0, 10,  9, 13, 0x0),
-    gsSP2Triangles(14,  9,  8, 0x0,  8, 11,  5, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040154E0 - 0x04015500
-const Gfx mario_medium_poly_right_hand_closed[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_right_hand_closed_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015500 - 0x04015530
-const Gfx mario_metal_medium_poly_right_hand_closed[] = {
-    gsSPDisplayList(mario_medium_poly_right_hand_closed_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015530
-static const Vtx mario_medium_poly_left_thigh_dl_vertex[] = {
-    {{{    18,    -12,     58}, 0, {     0,      0}, {0x13, 0xdd, 0x78, 0x00}}},
-    {{{    22,    -52,      8}, 0, {     0,      0}, {0x1c, 0x85, 0x01, 0x00}}},
-    {{{    99,    -35,      8}, 0, {     0,      0}, {0x3e, 0x92, 0x01, 0x00}}},
-    {{{    14,     51,     38}, 0, {     0,      0}, {0x08, 0x75, 0x30, 0x00}}},
-    {{{    92,     47,     33}, 0, {     0,      0}, {0x36, 0x4b, 0x56, 0x00}}},
-    {{{    14,     50,    -23}, 0, {     0,      0}, {0x0a, 0x65, 0xb5, 0x00}}},
-    {{{    92,     47,    -16}, 0, {     0,      0}, {0x47, 0x55, 0xc5, 0x00}}},
-    {{{    19,    -13,    -42}, 0, {     0,      0}, {0x15, 0xdb, 0x89, 0x00}}},
-    {{{    96,     -3,    -31}, 0, {     0,      0}, {0x68, 0xf1, 0xba, 0x00}}},
-    {{{    96,     -3,     48}, 0, {     0,      0}, {0x71, 0xf8, 0x38, 0x00}}},
-    {{{    19,    -13,    -42}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    22,    -52,      8}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    18,    -12,     58}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    14,     51,     38}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    14,     50,    -23}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-};
-
-// 0x04015620 - 0x040156B0
-const Gfx mario_medium_poly_left_thigh_dl[] = {
-    gsSPVertex(mario_medium_poly_left_thigh_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 5,  3,  6, 0x0,  7,  5,  6, 0x0),
-    gsSP2Triangles( 1,  7,  2, 0x0,  7,  8,  2, 0x0),
-    gsSP2Triangles( 6,  8,  7, 0x0,  3,  4,  6, 0x0),
-    gsSP2Triangles( 0,  9,  4, 0x0,  2,  9,  0, 0x0),
-    gsSP2Triangles( 9,  2,  8, 0x0, 10, 11, 12, 0x0),
-    gsSP2Triangles(12, 13, 10, 0x0, 13, 14, 10, 0x0),
-    gsSP2Triangles( 8,  6,  9, 0x0,  6,  4,  9, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040156B0 - 0x040156E0
-const Gfx mario_medium_poly_left_thigh[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_left_thigh_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040156E0 - 0x04015758
-const Gfx mario_metal_medium_poly_left_thigh[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_left_thigh_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015758
-static const Vtx mario_medium_poly_left_leg_shared_dl_vertex[] = {
-    {{{     5,    -35,      9}, 0, {     0,      0}, {0xca, 0x8e, 0x00, 0x00}}},
-    {{{    65,    -44,     10}, 0, {     0,      0}, {0xee, 0x83, 0x01, 0x00}}},
-    {{{    66,     -9,     54}, 0, {     0,      0}, {0xf2, 0xdc, 0x78, 0x00}}},
-    {{{     9,     46,     33}, 0, {     0,      0}, {0xd5, 0x61, 0x45, 0x00}}},
-    {{{    69,     47,     37}, 0, {     0,      0}, {0xf9, 0x66, 0x4b, 0x00}}},
-    {{{    70,     47,    -18}, 0, {     0,      0}, {0xfb, 0x74, 0xcf, 0x00}}},
-    {{{    10,     46,    -16}, 0, {     0,      0}, {0xaf, 0x40, 0xb7, 0x00}}},
-    {{{    67,     -9,    -36}, 0, {     0,      0}, {0xf4, 0xda, 0x88, 0x00}}},
-    {{{     7,     -4,    -31}, 0, {     0,      0}, {0x9b, 0xee, 0xb6, 0x00}}},
-    {{{     7,     -4,     49}, 0, {     0,      0}, {0x8f, 0xf5, 0x37, 0x00}}},
-    {{{    66,     -9,     54}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    65,    -44,     10}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    67,     -9,    -36}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    70,     47,    -18}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    69,     47,     37}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-};
-
-// 0x04015848 - 0x040158D8
-const Gfx mario_medium_poly_left_leg_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_left_leg_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
-    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
-    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
-    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0,  8,  0,  9, 0x0),
-    gsSP2Triangles( 9,  6,  8, 0x0,  9,  3,  6, 0x0),
-    gsSP2Triangles(12, 13, 10, 0x0, 13, 14, 10, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040158D8
-static const Vtx mario_medium_poly_left_foot_shared_dl_vertex_group1[] = {
-    {{{   108,     10,     36}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   108,      9,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    75,     21,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    76,     22,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -14,     55,    -27}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -13,     55,     49}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -41,     65,      9}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    41,    -18,     54}, 0, {     0,      0}, {0x04, 0xb4, 0x65, 0x00}}},
-    {{{    76,     22,     61}, 0, {     0,      0}, {0x12, 0xdd, 0x78, 0x00}}},
-    {{{   -13,     55,     49}, 0, {     0,      0}, {0xce, 0x07, 0x74, 0x00}}},
-    {{{    42,    -11,    -33}, 0, {     0,      0}, {0xff, 0xb8, 0x98, 0x00}}},
-    {{{   -37,     12,    -16}, 0, {     0,      0}, {0xa1, 0xcf, 0xbd, 0x00}}},
-    {{{   -14,     55,    -27}, 0, {     0,      0}, {0xcc, 0x02, 0x8d, 0x00}}},
-    {{{   -36,     13,     39}, 0, {     0,      0}, {0xa0, 0xd0, 0x42, 0x00}}},
-    {{{    75,     21,    -41}, 0, {     0,      0}, {0x09, 0xda, 0x88, 0x00}}},
-    {{{   108,      9,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
-};
-
-// 0x040159D8
-static const Vtx mario_medium_poly_left_foot_shared_dl_vertex_group2[] = {
-    {{{    78,    -30,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
-    {{{   108,      9,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
-    {{{   108,     10,     36}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
-    {{{    42,    -11,    -33}, 0, {     0,      0}, {0xff, 0xb8, 0x98, 0x00}}},
-    {{{    76,     22,     61}, 0, {     0,      0}, {0x12, 0xdd, 0x78, 0x00}}},
-    {{{    41,    -18,     54}, 0, {     0,      0}, {0x04, 0xb4, 0x65, 0x00}}},
-    {{{   -36,     13,     39}, 0, {     0,      0}, {0xa0, 0xd0, 0x42, 0x00}}},
-    {{{   -13,     55,     49}, 0, {     0,      0}, {0xce, 0x07, 0x74, 0x00}}},
-    {{{   -41,     65,      9}, 0, {     0,      0}, {0x83, 0x15, 0x00, 0x00}}},
-    {{{   -14,     55,    -27}, 0, {     0,      0}, {0xcc, 0x02, 0x8d, 0x00}}},
-    {{{   -37,     12,    -16}, 0, {     0,      0}, {0xa1, 0xcf, 0xbd, 0x00}}},
-    {{{    25,    -34,     11}, 0, {     0,      0}, {0xdd, 0x87, 0xfb, 0x00}}},
-};
-
-// 0x04015A98 - 0x04015B60
-const Gfx mario_medium_poly_left_foot_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_left_foot_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
-    gsSP2Triangles( 6,  5,  4, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 13,  7,  9, 0x0),
-    gsSP2Triangles(10, 12, 14, 0x0, 10, 14, 15, 0x0),
-    gsSPVertex(mario_medium_poly_left_foot_shared_dl_vertex_group2, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
-    gsSP2Triangles( 2,  4,  5, 0x0,  5,  0,  2, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles(11,  3,  0, 0x0, 10,  3, 11, 0x0),
-    gsSP2Triangles( 0,  5, 11, 0x0, 11,  5,  6, 0x0),
-    gsSP2Triangles(11,  6, 10, 0x0,  6,  8, 10, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015B60 - 0x04015B80
-const Gfx mario_medium_poly_left_foot[] = {
-    gsSPLight(&mario_brown1_lights_group.l, 1),
-    gsSPLight(&mario_brown1_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_left_foot_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015B80
-static const Vtx mario_medium_poly_right_thigh_shared_dl_vertex[] = {
-    {{{    18,    -11,    -58}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    23,    -52,     -9}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    20,    -14,     41}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    97,     -3,     30}, 0, {     0,      0}, {0x69, 0xf1, 0x45, 0x00}}},
-    {{{    99,    -33,    -10}, 0, {     0,      0}, {0x40, 0x93, 0xfc, 0x00}}},
-    {{{    95,     -1,    -49}, 0, {     0,      0}, {0x71, 0xfb, 0xc7, 0x00}}},
-    {{{    18,    -11,    -58}, 0, {     0,      0}, {0x12, 0xe0, 0x87, 0x00}}},
-    {{{    91,     49,    -33}, 0, {     0,      0}, {0x34, 0x4e, 0xab, 0x00}}},
-    {{{    92,     48,     16}, 0, {     0,      0}, {0x47, 0x55, 0x3d, 0x00}}},
-    {{{    13,     52,    -37}, 0, {     0,      0}, {0x06, 0x76, 0xd3, 0x00}}},
-    {{{    20,    -14,     41}, 0, {     0,      0}, {0x16, 0xd9, 0x76, 0x00}}},
-    {{{    23,    -52,     -9}, 0, {     0,      0}, {0x1d, 0x85, 0xfd, 0x00}}},
-    {{{    14,     50,     24}, 0, {     0,      0}, {0x0a, 0x63, 0x4d, 0x00}}},
-    {{{    13,     52,    -37}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    14,     50,     24}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-};
-
-// 0x04015C70 - 0x04015D00
-const Gfx mario_medium_poly_right_thigh_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_right_thigh_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  5,  4, 0x0,  7,  5,  6, 0x0),
-    gsSP2Triangles( 8,  7,  9, 0x0, 10,  3,  8, 0x0),
-    gsSP2Triangles( 4,  3, 10, 0x0,  4, 10, 11, 0x0),
-    gsSP2Triangles( 8, 12, 10, 0x0,  8,  9, 12, 0x0),
-    gsSP2Triangles( 7,  6,  9, 0x0,  4, 11,  6, 0x0),
-    gsSP2Triangles( 5,  8,  3, 0x0,  5,  7,  8, 0x0),
-    gsSP2Triangles( 2, 13,  0, 0x0,  2, 14, 13, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015D00 - 0x04015D20
-const Gfx mario_medium_poly_right_thigh[] = {
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_right_thigh_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015D20
-static const Vtx mario_medium_poly_right_leg_shared_dl_vertex[] = {
-    {{{     6,     -1,    -50}, 0, {     0,      0}, {0x8e, 0xf7, 0xca, 0x00}}},
-    {{{     5,    -34,    -11}, 0, {     0,      0}, {0xc9, 0x8e, 0xfe, 0x00}}},
-    {{{     7,     -4,     30}, 0, {     0,      0}, {0x9b, 0xed, 0x4a, 0x00}}},
-    {{{    67,     -9,     34}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    64,    -43,    -12}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    66,     -7,    -56}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    66,     -7,    -56}, 0, {     0,      0}, {0xf1, 0xde, 0x87, 0x00}}},
-    {{{    10,     48,    -33}, 0, {     0,      0}, {0xd6, 0x63, 0xbe, 0x00}}},
-    {{{    10,     46,     16}, 0, {     0,      0}, {0xb1, 0x3f, 0x4b, 0x00}}},
-    {{{    71,     47,     18}, 0, {     0,      0}, {0xfd, 0x73, 0x33, 0x00}}},
-    {{{    67,     -9,     34}, 0, {     0,      0}, {0xf4, 0xd8, 0x77, 0x00}}},
-    {{{    64,    -43,    -12}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
-    {{{    70,     49,    -37}, 0, {     0,      0}, {0xfa, 0x67, 0xb8, 0x00}}},
-    {{{    71,     47,     18}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    70,     49,    -37}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-};
-
-// 0x04015E10 - 0x04015EA0
-const Gfx mario_medium_poly_right_leg_shared_dl[] = {
-    gsSPVertex(mario_medium_poly_right_leg_shared_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 1,  0,  6, 0x0,  6,  0,  7, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0,  8,  2, 10, 0x0),
-    gsSP2Triangles(10,  2,  1, 0x0, 11, 10,  1, 0x0),
-    gsSP2Triangles(10,  9,  8, 0x0,  9, 12,  7, 0x0),
-    gsSP2Triangles(12,  6,  7, 0x0,  6, 11,  1, 0x0),
-    gsSP2Triangles( 5, 13,  3, 0x0,  5, 14, 13, 0x0),
-    gsSP2Triangles( 2,  8,  0, 0x0,  8,  7,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04015EA0
-static const Vtx mario_medium_poly_right_foot_dl_vertex_group1[] = {
-    {{{   -38,     12,     14}, 0, {     0,      0}, {0xa1, 0xcf, 0x43, 0x00}}},
-    {{{   -43,     65,    -12}, 0, {     0,      0}, {0x83, 0x13, 0xff, 0x00}}},
-    {{{   -36,     12,    -41}, 0, {     0,      0}, {0xa1, 0xce, 0xbe, 0x00}}},
-    {{{    25,    -34,    -11}, 0, {     0,      0}, {0xdf, 0x86, 0x07, 0x00}}},
-    {{{    41,    -18,    -55}, 0, {     0,      0}, {0x07, 0xb3, 0x9c, 0x00}}},
-    {{{    79,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
-    {{{    42,    -10,     32}, 0, {     0,      0}, {0xff, 0xba, 0x69, 0x00}}},
-    {{{   -15,     55,     24}, 0, {     0,      0}, {0xcb, 0x04, 0x73, 0x00}}},
-    {{{   -14,     54,    -51}, 0, {     0,      0}, {0xcf, 0x04, 0x8c, 0x00}}},
-    {{{   108,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
-    {{{    76,     23,    -62}, 0, {     0,      0}, {0x14, 0xdb, 0x89, 0x00}}},
-    {{{   107,     12,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
-    {{{    74,     24,     40}, 0, {     0,      0}, {0x08, 0xdc, 0x79, 0x00}}},
-    {{{   -15,     55,     24}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -14,     54,    -51}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -43,     65,    -12}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-};
-
-// 0x04015FA0
-static const Vtx mario_medium_poly_right_foot_dl_vertex_group2[] = {
-    {{{   -15,     55,     24}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{    76,     23,    -62}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -14,     54,    -51}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{    74,     24,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   108,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   107,     12,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-};
-
-// 0x04016000 - 0x040160C8
-const Gfx mario_medium_poly_right_foot_dl[] = {
-    gsSPVertex(mario_medium_poly_right_foot_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 2,  4,  3, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 3,  6,  0, 0x0,  5,  6,  3, 0x0),
-    gsSP2Triangles( 0,  7,  1, 0x0,  1,  8,  2, 0x0),
-    gsSP2Triangles( 9,  5,  4, 0x0,  4, 10,  9, 0x0),
-    gsSP2Triangles( 6,  5, 11, 0x0,  9, 11,  5, 0x0),
-    gsSP2Triangles(11, 12,  6, 0x0, 12,  7,  6, 0x0),
-    gsSP2Triangles( 8,  4,  2, 0x0,  7,  0,  6, 0x0),
-    gsSP2Triangles( 8, 10,  4, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_medium_poly_right_foot_dl_vertex_group2, 6, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 3,  4,  1, 0x0,  3,  5,  4, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040160C8 - 0x04016108
-const Gfx mario_medium_poly_right_foot[] = {
-    gsSPLight(&mario_brown1_lights_group.l, 1),
-    gsSPLight(&mario_brown1_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_right_foot_dl),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsDPSetEnvColor(255, 255, 255, 255),
-    gsDPSetAlphaCompare(G_AC_NONE),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016108 - 0x04016148
-const Gfx mario_metal_medium_poly_right_foot[] = {
-    gsSPDisplayList(mario_medium_poly_right_foot_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPSetEnvColor(255, 255, 255, 255),
-    gsDPSetAlphaCompare(G_AC_NONE),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016148
-static const Vtx mario_seg4_vertex_04016148[] = {
-    {{{    75,     24,    -60}, 0, {   -74,   -930}, {0x60, 0x27, 0xb8, 0xff}}},
-    {{{    36,     47,    -76}, 0, {  -174,    168}, {0x2e, 0x36, 0x98, 0xff}}},
-    {{{    44,     78,    -35}, 0, {   988,     92}, {0x45, 0x65, 0xe2, 0xff}}},
-    {{{   -26,     49,    -87}, 0, {  -538,   1590}, {0xc4, 0x29, 0x99, 0xff}}},
-    {{{     1,     87,    -53}, 0, {   638,   1164}, {0x0e, 0x74, 0xd1, 0xff}}},
-    {{{     1,     87,     54}, 0, {  2522,    702}, {0x11, 0x74, 0x2f, 0xff}}},
-    {{{     1,     87,     54}, 0, {   272,   1122}, {0x11, 0x74, 0x2f, 0xff}}},
-    {{{    44,     78,     37}, 0, {   -92,    108}, {0x47, 0x5f, 0x2a, 0xff}}},
-    {{{    44,     78,    -35}, 0, { -1398,   -128}, {0x45, 0x65, 0xe2, 0xff}}},
-    {{{   -26,     49,     88}, 0, {  1514,   1490}, {0xc4, 0x29, 0x67, 0xff}}},
-    {{{    36,     47,     77}, 0, {  1110,    130}, {0x2f, 0x37, 0x68, 0xff}}},
-    {{{    75,     24,     60}, 0, {   968,   -926}, {0x62, 0x27, 0x46, 0xff}}},
-};
-
-// 0x04016208
-static const Vtx mario_seg4_vertex_04016208[] = {
-    {{{    82,     37,     28}, 0, {     0,      0}, {0x71, 0x36, 0x0e, 0xff}}},
-    {{{    82,     37,    -28}, 0, {     0,      0}, {0x71, 0x35, 0xea, 0xff}}},
-    {{{    44,     78,    -35}, 0, {     0,      0}, {0x45, 0x65, 0xe2, 0xff}}},
-    {{{    44,     78,     37}, 0, {     0,      0}, {0x47, 0x5f, 0x2a, 0xff}}},
-    {{{    95,    -39,    -25}, 0, {     0,      0}, {0x79, 0xe6, 0xe8, 0xff}}},
-    {{{    95,    -39,     25}, 0, {     0,      0}, {0x75, 0xdb, 0x1d, 0xff}}},
-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
-    {{{    56,     -4,     79}, 0, {     0,      0}, {0x39, 0x04, 0x71, 0xff}}},
-    {{{    75,     24,     60}, 0, {     0,      0}, {0x62, 0x27, 0x46, 0xff}}},
-    {{{    36,     47,     77}, 0, {     0,      0}, {0x2f, 0x37, 0x68, 0xff}}},
-    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
-    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
-    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
-    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
-    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
-    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
-};
-
-// 0x04016308
-static const Vtx mario_seg4_vertex_04016308[] = {
-    {{{    36,     47,    -76}, 0, {     0,      0}, {0x2e, 0x36, 0x98, 0xff}}},
-    {{{    75,     24,    -60}, 0, {     0,      0}, {0x60, 0x27, 0xb8, 0xff}}},
-    {{{    56,     -4,    -77}, 0, {     0,      0}, {0x38, 0x04, 0x8f, 0xff}}},
-    {{{     9,      0,    -93}, 0, {     0,      0}, {0x0e, 0x03, 0x82, 0xff}}},
-    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
-    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
-    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
-    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
-};
-
-// 0x04016398
-static const Vtx mario_seg4_vertex_04016398[] = {
-    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
-    {{{    95,    -39,    -25}, 0, {     0,      0}, {0x79, 0xe6, 0xe8, 0xff}}},
-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
-    {{{    75,     24,    -60}, 0, {     0,      0}, {0x60, 0x27, 0xb8, 0xff}}},
-    {{{    82,     37,    -28}, 0, {     0,      0}, {0x71, 0x35, 0xea, 0xff}}},
-    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
-    {{{    44,     78,    -35}, 0, {     0,      0}, {0x45, 0x65, 0xe2, 0xff}}},
-    {{{    75,     24,     60}, 0, {     0,      0}, {0x62, 0x27, 0x46, 0xff}}},
-    {{{    82,     37,     28}, 0, {     0,      0}, {0x71, 0x36, 0x0e, 0xff}}},
-    {{{    44,     78,     37}, 0, {     0,      0}, {0x47, 0x5f, 0x2a, 0xff}}},
-    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
-    {{{    95,    -39,     25}, 0, {     0,      0}, {0x75, 0xdb, 0x1d, 0xff}}},
-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
-    {{{     1,     87,    -53}, 0, {     0,      0}, {0x0e, 0x74, 0xd1, 0xff}}},
-    {{{   -30,     88,     42}, 0, {     0,      0}, {0xd3, 0x72, 0x1f, 0xff}}},
-    {{{     1,     87,     54}, 0, {     0,      0}, {0x11, 0x74, 0x2f, 0xff}}},
-};
-
-// 0x04016498
-static const Vtx mario_seg4_vertex_04016498[] = {
-    {{{     1,     87,    -53}, 0, {     0,      0}, {0x0e, 0x74, 0xd1, 0xff}}},
-    {{{   -30,     88,    -41}, 0, {     0,      0}, {0xc7, 0x6a, 0xda, 0xff}}},
-    {{{   -30,     88,     42}, 0, {     0,      0}, {0xd3, 0x72, 0x1f, 0xff}}},
-    {{{   -26,     49,    -87}, 0, {     0,      0}, {0xc4, 0x29, 0x99, 0xff}}},
-    {{{   -71,     56,      0}, 0, {     0,      0}, {0x89, 0x2b, 0x00, 0xff}}},
-    {{{   -26,     49,     88}, 0, {     0,      0}, {0xc4, 0x29, 0x67, 0xff}}},
-    {{{     1,     87,     54}, 0, {     0,      0}, {0x11, 0x74, 0x2f, 0xff}}},
-    {{{   -59,    -44,      0}, 0, {     0,      0}, {0x88, 0xd8, 0x00, 0xff}}},
-    {{{   -26,    -72,    -38}, 0, {     0,      0}, {0xda, 0x8b, 0xe5, 0xff}}},
-    {{{   -26,    -72,     39}, 0, {     0,      0}, {0xda, 0x8b, 0x1b, 0xff}}},
-    {{{   -26,    -41,     85}, 0, {     0,      0}, {0xcc, 0xc2, 0x61, 0xff}}},
-    {{{   -26,    -41,    -84}, 0, {     0,      0}, {0xcc, 0xc2, 0x9f, 0xff}}},
-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
-    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
-    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
-};
-
-// 0x04016598
-static const Vtx mario_seg4_vertex_04016598[] = {
-    {{{   -26,     49,     88}, 0, {     0,      0}, {0xc4, 0x29, 0x67, 0xff}}},
-    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
-    {{{    36,     47,     77}, 0, {     0,      0}, {0x2f, 0x37, 0x68, 0xff}}},
-    {{{     9,      0,    -93}, 0, {     0,      0}, {0x0e, 0x03, 0x82, 0xff}}},
-    {{{   -26,     49,    -87}, 0, {     0,      0}, {0xc4, 0x29, 0x99, 0xff}}},
-    {{{    36,     47,    -76}, 0, {     0,      0}, {0x2e, 0x36, 0x98, 0xff}}},
-    {{{   -26,    -41,    -84}, 0, {     0,      0}, {0xcc, 0xc2, 0x9f, 0xff}}},
-    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
-    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
-    {{{   -26,    -72,    -38}, 0, {     0,      0}, {0xda, 0x8b, 0xe5, 0xff}}},
-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
-    {{{   -26,    -72,     39}, 0, {     0,      0}, {0xda, 0x8b, 0x1b, 0xff}}},
-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
-};
-
-// 0x04016668 - 0x040166B8
-const Gfx mario_medium_poly_yellow_button_dl[] = {
-    gsSPVertex(mario_seg4_vertex_04016148, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 2,  1,  4, 0x0,  4,  5,  2, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  6, 0x0),
-    gsSP2Triangles( 6, 10,  7, 0x0,  7, 10, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040166B8 - 0x04016800
-const Gfx mario_medium_poly_pants_overalls_shared_dl[] = {
-    gsSPVertex(mario_seg4_vertex_04016398, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
-    gsSP2Triangles( 3,  4,  1, 0x0,  2,  5,  0, 0x0),
-    gsSP2Triangles( 4,  3,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 7, 10, 11, 0x0,  8,  7, 11, 0x0),
-    gsSP2Triangles(11, 10,  2, 0x0, 10, 12,  2, 0x0),
-    gsSP1Triangle(13, 14, 15, 0x0),
-    gsSPVertex(mario_seg4_vertex_04016498, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 4,  2,  1, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 5,  2,  4, 0x0,  6,  2,  5, 0x0),
-    gsSP2Triangles( 4,  3,  7, 0x0,  8,  9,  7, 0x0),
-    gsSP2Triangles( 5,  4,  7, 0x0,  9, 10,  7, 0x0),
-    gsSP2Triangles(11,  8,  7, 0x0,  3, 11,  7, 0x0),
-    gsSP2Triangles( 7, 10,  5, 0x0, 10,  9, 12, 0x0),
-    gsSP2Triangles(10, 13, 14, 0x0, 12, 13, 10, 0x0),
-    gsSP2Triangles( 5, 10, 14, 0x0,  9,  8, 15, 0x0),
-    gsSPVertex(mario_seg4_vertex_04016598, 13, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  4,  3, 0x0,  6,  3,  7, 0x0),
-    gsSP2Triangles( 8,  9,  6, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 9,  8, 10, 0x0, 11, 10, 12, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016800 - 0x040168A0
-const Gfx mario_medium_poly_tshirt_shared_dl[] = {
-    gsSPVertex(mario_seg4_vertex_04016208, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 1,  0,  4, 0x0,  0,  5,  4, 0x0),
-    gsSP2Triangles( 6,  4,  5, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 9, 10,  7, 0x0,  7, 10, 11, 0x0),
-    gsSP2Triangles( 7, 12,  8, 0x0, 11, 12,  7, 0x0),
-    gsSP1Triangle(13, 14, 15, 0x0),
-    gsSPVertex(mario_seg4_vertex_04016308, 9, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 1,  4,  2, 0x0,  2,  4,  5, 0x0),
-    gsSP2Triangles( 5,  3,  2, 0x0,  6,  7,  8, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040168A0 - 0x040168C8
-const Gfx mario_medium_poly_torso_dl[] = {
-    gsSPDisplayList(mario_medium_poly_pants_overalls_shared_dl),
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_medium_poly_tshirt_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040168C8 - 0x04016948
-const Gfx mario_medium_poly_torso[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_medium_poly_yellow_button_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_medium_poly_torso_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016948 - 0x04016968
-const Gfx mario_metal_medium_poly_torso[] = {
-    gsSPDisplayList(mario_medium_poly_yellow_button_dl),
-    gsSPDisplayList(mario_medium_poly_pants_overalls_shared_dl),
-    gsSPDisplayList(mario_medium_poly_tshirt_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016968
-static const Vtx mario_low_poly_butt_dl_vertex[] = {
-    {{{   -37,    -37,      0}, 0, {     0,      0}, {0x82, 0xf5, 0x00, 0x00}}},
-    {{{    -2,     52,     92}, 0, {     0,      0}, {0xb1, 0x3c, 0x4e, 0x00}}},
-    {{{   -35,     55,      0}, 0, {     0,      0}, {0x97, 0x45, 0x00, 0x00}}},
-    {{{    -7,    -86,     85}, 0, {     0,      0}, {0xbf, 0xc4, 0x5a, 0x00}}},
-    {{{    49,     46,     96}, 0, {     0,      0}, {0x4b, 0x1d, 0x61, 0x00}}},
-    {{{    -7,    -86,    -85}, 0, {     0,      0}, {0xcf, 0xaa, 0xb2, 0x00}}},
-    {{{    -2,     52,    -92}, 0, {     0,      0}, {0xb0, 0x3b, 0xb2, 0x00}}},
-    {{{    48,     44,    -98}, 0, {     0,      0}, {0x29, 0x22, 0x8e, 0x00}}},
-    {{{    46,    -71,    -89}, 0, {     0,      0}, {0x73, 0xd9, 0xdd, 0x00}}},
-    {{{    46,    -71,     89}, 0, {     0,      0}, {0x44, 0xa1, 0x2f, 0x00}}},
-    {{{    49,     96,      0}, 0, {     0,      0}, {0x2b, 0x77, 0x00, 0x00}}},
-};
-
-// 0x04016A18 - 0x04016AB8
-const Gfx mario_low_poly_butt_dl[] = {
-    gsSPVertex(mario_low_poly_butt_dl_vertex, 11, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  0,  2,  6, 0x0),
-    gsSP2Triangles( 6,  5,  0, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 7,  8,  5, 0x0,  3,  9,  4, 0x0),
-    gsSP2Triangles( 8,  7, 10, 0x0,  4,  9,  8, 0x0),
-    gsSP2Triangles( 5,  9,  3, 0x0,  3,  0,  5, 0x0),
-    gsSP2Triangles( 5,  8,  9, 0x0, 10,  7,  6, 0x0),
-    gsSP2Triangles(10,  4,  8, 0x0,  2,  1, 10, 0x0),
-    gsSP2Triangles( 6,  2, 10, 0x0,  1,  4, 10, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016AB8 - 0x04016AE8
-const Gfx mario_low_poly_butt[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_butt_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016AE8 - 0x04016B60
-const Gfx mario_metal_low_poly_butt[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_butt_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016B60
-static const Vtx mario_low_poly_left_arm_shared_dl_vertex[] = {
-    {{{    -6,     28,     10}, 0, {     0,      0}, {0x09, 0x65, 0xb5, 0x00}}},
-    {{{    72,     21,      8}, 0, {     0,      0}, {0x44, 0x4d, 0x48, 0x00}}},
-    {{{    71,    -11,    -34}, 0, {     0,      0}, {0x3f, 0x57, 0xbe, 0x00}}},
-    {{{    -8,    -30,     31}, 0, {     0,      0}, {0x09, 0x26, 0x78, 0x00}}},
-    {{{    71,    -30,     23}, 0, {     0,      0}, {0x5e, 0x15, 0x51, 0x00}}},
-    {{{    -6,     28,     10}, 0, {     0,      0}, {0x07, 0x29, 0x77, 0x00}}},
-    {{{    -8,     -7,    -41}, 0, {     0,      0}, {0x0b, 0x67, 0xb8, 0x00}}},
-    {{{    -8,    -30,     31}, 0, {     0,      0}, {0xa4, 0xad, 0xe5, 0x00}}},
-    {{{    -6,     28,     10}, 0, {     0,      0}, {0x81, 0x02, 0x00, 0x00}}},
-    {{{    -8,     -7,    -41}, 0, {     0,      0}, {0xa4, 0xad, 0xe5, 0x00}}},
-    {{{    71,    -11,    -34}, 0, {     0,      0}, {0xfd, 0x88, 0xd9, 0x00}}},
-    {{{    71,    -30,     23}, 0, {     0,      0}, {0xfd, 0x88, 0xd9, 0x00}}},
-};
-
-// 0x04016C20 - 0x04016C70
-const Gfx mario_low_poly_left_arm_shared_dl[] = {
-    gsSPVertex(mario_low_poly_left_arm_shared_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  3,  1, 0x0,  6,  0,  2, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0,  2,  1,  4, 0x0),
-    gsSP2Triangles( 7,  9, 10, 0x0,  7, 10, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016C70 - 0x04016C90
-const Gfx mario_low_poly_left_arm[] = {
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_left_arm_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016C90
-static const Vtx mario_low_poly_left_forearm_shared_dl_vertex[] = {
-    {{{    -5,     20,      6}, 0, {     0,      0}, {0x05, 0x62, 0xb0, 0x00}}},
-    {{{    67,     16,      5}, 0, {     0,      0}, {0x43, 0x4b, 0x4c, 0x00}}},
-    {{{    67,    -14,    -31}, 0, {     0,      0}, {0x3c, 0x55, 0xba, 0x00}}},
-    {{{    -5,    -30,     21}, 0, {     0,      0}, {0x05, 0x20, 0x7a, 0x00}}},
-    {{{    67,    -30,     17}, 0, {     0,      0}, {0x5c, 0x14, 0x54, 0x00}}},
-    {{{    -5,     20,      6}, 0, {     0,      0}, {0x04, 0x22, 0x7a, 0x00}}},
-    {{{    -5,    -12,    -35}, 0, {     0,      0}, {0x07, 0x63, 0xb2, 0x00}}},
-    {{{    -5,    -30,     21}, 0, {     0,      0}, {0xa5, 0xad, 0xe5, 0x00}}},
-    {{{    -5,     20,      6}, 0, {     0,      0}, {0x81, 0x01, 0x00, 0x00}}},
-    {{{    -5,    -12,    -35}, 0, {     0,      0}, {0xa5, 0xad, 0xe5, 0x00}}},
-    {{{    67,    -30,     17}, 0, {     0,      0}, {0xfe, 0x88, 0xd9, 0x00}}},
-    {{{    67,    -14,    -31}, 0, {     0,      0}, {0xfe, 0x88, 0xd9, 0x00}}},
-};
-
-// 0x04016D50 - 0x04016DA0
-const Gfx mario_low_poly_left_forearm_shared_dl[] = {
-    gsSPVertex(mario_low_poly_left_forearm_shared_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  3,  1, 0x0,  6,  0,  2, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0,  2,  1,  4, 0x0),
-    gsSP2Triangles(10,  7,  9, 0x0, 10,  9, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016DA0
-static const Vtx mario_low_poly_left_hand_closed_shared_dl_vertex[] = {
-    {{{    -6,     34,    -25}, 0, {     0,      0}, {0xa0, 0x13, 0xb0, 0x00}}},
-    {{{    -9,     39,     24}, 0, {     0,      0}, {0xb3, 0x43, 0x4a, 0x00}}},
-    {{{    91,     80,    -34}, 0, {     0,      0}, {0x13, 0x7c, 0xee, 0x00}}},
-    {{{    90,     35,     33}, 0, {     0,      0}, {0x41, 0x14, 0x6b, 0x00}}},
-    {{{    20,    -34,     21}, 0, {     0,      0}, {0xd4, 0x9a, 0x3c, 0x00}}},
-    {{{   122,      4,    -45}, 0, {     0,      0}, {0x63, 0xbb, 0x25, 0x00}}},
-    {{{   122,      4,    -45}, 0, {     0,      0}, {0xf2, 0x15, 0x84, 0x00}}},
-    {{{    20,    -31,    -44}, 0, {     0,      0}, {0xcb, 0xae, 0xb1, 0x00}}},
-};
-
-// 0x04016E20 - 0x04016E80
-const Gfx mario_low_poly_left_hand_closed_shared_dl[] = {
-    gsSPVertex(mario_low_poly_left_hand_closed_shared_dl_vertex, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP2Triangles( 4,  5,  3, 0x0,  0,  6,  7, 0x0),
-    gsSP2Triangles( 0,  2,  6, 0x0,  4,  7,  5, 0x0),
-    gsSP2Triangles( 3,  1,  4, 0x0,  2,  3,  5, 0x0),
-    gsSP2Triangles( 0,  7,  4, 0x0,  4,  1,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016E80 - 0x04016EA0
-const Gfx mario_low_poly_left_hand_closed[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_left_hand_closed_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016EA0
-static const Vtx mario_low_poly_right_arm_shared_dl_vertex[] = {
-    {{{    65,     30,     23}, 0, {     0,      0}, {0x5e, 0xeb, 0x51, 0x00}}},
-    {{{    66,    -21,      8}, 0, {     0,      0}, {0x45, 0xb3, 0x49, 0x00}}},
-    {{{    65,     11,    -34}, 0, {     0,      0}, {0x40, 0xa9, 0xbf, 0x00}}},
-    {{{   -10,      7,    -41}, 0, {     0,      0}, {0xa4, 0x52, 0xe5, 0x00}}},
-    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x81, 0xfe, 0x00, 0x00}}},
-    {{{   -10,     30,     30}, 0, {     0,      0}, {0xa4, 0x52, 0xe5, 0x00}}},
-    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x09, 0x9a, 0xb6, 0x00}}},
-    {{{   -10,      7,    -41}, 0, {     0,      0}, {0x0c, 0x99, 0xb8, 0x00}}},
-    {{{   -10,     30,     30}, 0, {     0,      0}, {0x0a, 0xdb, 0x78, 0x00}}},
-    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x07, 0xd8, 0x78, 0x00}}},
-    {{{    65,     30,     23}, 0, {     0,      0}, {0xfc, 0x78, 0xd9, 0x00}}},
-    {{{    65,     11,    -34}, 0, {     0,      0}, {0xfc, 0x78, 0xd9, 0x00}}},
-};
-
-// 0x04016F60 - 0x04016FB0
-const Gfx mario_low_poly_right_arm_shared_dl[] = {
-    gsSPVertex(mario_low_poly_right_arm_shared_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 2,  6,  7, 0x0,  1,  8,  9, 0x0),
-    gsSP2Triangles( 1,  0,  8, 0x0,  2,  1,  6, 0x0),
-    gsSP2Triangles( 5, 10, 11, 0x0,  5, 11,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016FB0 - 0x04016FD0
-const Gfx mario_low_poly_right_arm[] = {
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_right_arm_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04016FD0
-static const Vtx mario_low_poly_right_forearm_shared_dl_vertex[] = {
-    {{{   -13,     12,    -35}, 0, {     0,      0}, {0xa5, 0x53, 0xe5, 0x00}}},
-    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
-    {{{   -13,     30,     21}, 0, {     0,      0}, {0xa5, 0x53, 0xe5, 0x00}}},
-    {{{    54,     14,    -31}, 0, {     0,      0}, {0x3d, 0xaa, 0xba, 0x00}}},
-    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x05, 0x9e, 0xb1, 0x00}}},
-    {{{   -13,     12,    -35}, 0, {     0,      0}, {0x07, 0x9c, 0xb3, 0x00}}},
-    {{{    55,    -16,      5}, 0, {     0,      0}, {0x43, 0xb5, 0x4c, 0x00}}},
-    {{{   -13,     30,     21}, 0, {     0,      0}, {0x05, 0xe0, 0x7a, 0x00}}},
-    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x04, 0xde, 0x7a, 0x00}}},
-    {{{    54,     30,     17}, 0, {     0,      0}, {0x5c, 0xed, 0x54, 0x00}}},
-    {{{    54,     30,     17}, 0, {     0,      0}, {0xfe, 0x78, 0xd8, 0x00}}},
-    {{{    54,     14,    -31}, 0, {     0,      0}, {0xfe, 0x78, 0xd8, 0x00}}},
-};
-
-// 0x04017090 - 0x040170E0
-const Gfx mario_low_poly_right_forearm_shared_dl[] = {
-    gsSPVertex(mario_low_poly_right_forearm_shared_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  6,  9,  7, 0x0),
-    gsSP2Triangles( 3,  6,  4, 0x0,  2, 10, 11, 0x0),
-    gsSP2Triangles( 2, 11,  0, 0x0,  9,  6,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040170E0
-static const Vtx mario_low_poly_right_hand_closed_dl_vertex[] = {
-    {{{    85,    -38,    -32}, 0, {     0,      0}, {0x3d, 0xe3, 0x96, 0x00}}},
-    {{{   -15,    -35,    -22}, 0, {     0,      0}, {0x99, 0xdc, 0xc1, 0x00}}},
-    {{{    17,     37,    -22}, 0, {     0,      0}, {0xfe, 0x69, 0xb9, 0x00}}},
-    {{{   116,    -10,     36}, 0, {     0,      0}, {0x66, 0x47, 0x16, 0x00}}},
-    {{{    82,    -85,     44}, 0, {     0,      0}, {0x13, 0x8a, 0xd8, 0x00}}},
-    {{{   -15,    -35,     43}, 0, {     0,      0}, {0x9d, 0xec, 0x4c, 0x00}}},
-    {{{    82,    -85,     44}, 0, {     0,      0}, {0x02, 0x15, 0x7d, 0x00}}},
-    {{{    14,     30,     26}, 0, {     0,      0}, {0xca, 0x50, 0x51, 0x00}}},
-};
-
-// 0x04017160 - 0x040171C0
-const Gfx mario_low_poly_right_hand_closed_dl[] = {
-    gsSPVertex(mario_low_poly_right_hand_closed_dl_vertex, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  0,  3, 0x0,  4,  5,  1, 0x0),
-    gsSP2Triangles( 6,  3,  7, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 0,  4,  1, 0x0,  3,  2,  7, 0x0),
-    gsSP2Triangles( 1,  5,  7, 0x0,  7,  2,  1, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040171C0 - 0x040171E0
-const Gfx mario_low_poly_right_hand_closed[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_right_hand_closed_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040171E0 - 0x04017210
-const Gfx mario_metal_low_poly_right_hand_closed[] = {
-    gsSPDisplayList(mario_low_poly_right_hand_closed_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017210
-static const Vtx mario_low_poly_left_thigh_dl_vertex[] = {
-    {{{    10,     51,     45}, 0, {     0,      0}, {0x08, 0x73, 0x34, 0x00}}},
-    {{{    17,    -44,     58}, 0, {     0,      0}, {0x0a, 0x11, 0x7d, 0x00}}},
-    {{{    94,     48,     38}, 0, {     0,      0}, {0x38, 0x40, 0x5d, 0x00}}},
-    {{{    11,     51,    -27}, 0, {     0,      0}, {0x0b, 0x5e, 0xad, 0x00}}},
-    {{{    95,     48,    -19}, 0, {     0,      0}, {0x4a, 0x4f, 0xbf, 0x00}}},
-    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x0c, 0x0f, 0x83, 0x00}}},
-    {{{   101,    -28,    -28}, 0, {     0,      0}, {0x5b, 0xca, 0xbc, 0x00}}},
-    {{{   100,    -28,     48}, 0, {     0,      0}, {0x63, 0xbd, 0x29, 0x00}}},
-    {{{    17,    -44,     58}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    10,     51,     45}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    11,     51,    -27}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
-    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x18, 0x84, 0x01, 0x00}}},
-    {{{    17,    -44,     58}, 0, {     0,      0}, {0x18, 0x84, 0x01, 0x00}}},
-};
-
-// 0x040172F0 - 0x04017360
-const Gfx mario_low_poly_left_thigh_dl[] = {
-    gsSPVertex(mario_low_poly_left_thigh_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 5,  3,  4, 0x0,  4,  6,  5, 0x0),
-    gsSP2Triangles( 0,  2,  4, 0x0,  1,  7,  2, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
-    gsSP2Triangles( 6,  4,  7, 0x0,  4,  2,  7, 0x0),
-    gsSP2Triangles(12,  7, 13, 0x0, 12,  6,  7, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017360 - 0x04017390
-const Gfx mario_low_poly_left_thigh[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_left_thigh_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017390 - 0x04017408
-const Gfx mario_metal_low_poly_left_thigh[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_left_thigh_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017408
-static const Vtx mario_low_poly_left_leg_shared_dl_vertex[] = {
-    {{{     7,     47,     38}, 0, {     0,      0}, {0xcf, 0x59, 0x4b, 0x00}}},
-    {{{    70,    -39,     53}, 0, {     0,      0}, {0xf8, 0x10, 0x7d, 0x00}}},
-    {{{    75,     52,     42}, 0, {     0,      0}, {0xf4, 0x5e, 0x53, 0x00}}},
-    {{{    75,     52,    -23}, 0, {     0,      0}, {0xf5, 0x72, 0xca, 0x00}}},
-    {{{     7,     47,    -20}, 0, {     0,      0}, {0xab, 0x34, 0xb2, 0x00}}},
-    {{{    71,    -39,    -34}, 0, {     0,      0}, {0xfa, 0x0f, 0x83, 0x00}}},
-    {{{     3,    -29,    -29}, 0, {     0,      0}, {0xbb, 0xa4, 0xcd, 0x00}}},
-    {{{     2,    -29,     48}, 0, {     0,      0}, {0x92, 0xdb, 0x31, 0x00}}},
-    {{{    71,    -39,    -34}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    75,     52,    -23}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    70,    -39,     53}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    75,     52,     42}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
-    {{{    71,    -39,    -34}, 0, {     0,      0}, {0xed, 0x83, 0x00, 0x00}}},
-    {{{    70,    -39,     53}, 0, {     0,      0}, {0xed, 0x83, 0x00, 0x00}}},
-};
-
-// 0x040174E8 - 0x04017558
-const Gfx mario_low_poly_left_leg_shared_dl[] = {
-    gsSPVertex(mario_low_poly_left_leg_shared_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  4, 0x0),
-    gsSP2Triangles( 3,  4,  0, 0x0,  0,  7,  1, 0x0),
-    gsSP2Triangles( 7,  4,  6, 0x0,  7,  0,  4, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
-    gsSP2Triangles( 6, 12, 13, 0x0, 13,  7,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017558
-static const Vtx mario_low_poly_left_foot_shared_dl_vertex[] = {
-    {{{   110,     11,     56}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   109,     10,    -33}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -50,     69,    -36}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{   -49,     70,     63}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
-    {{{    74,    -39,     51}, 0, {     0,      0}, {0x13, 0xb0, 0x60, 0x00}}},
-    {{{   110,     11,     56}, 0, {     0,      0}, {0x5b, 0xbb, 0x36, 0x00}}},
-    {{{   -49,     70,     63}, 0, {     0,      0}, {0x00, 0xf4, 0x7e, 0x00}}},
-    {{{    73,    -40,    -25}, 0, {     0,      0}, {0x18, 0x96, 0xc0, 0x00}}},
-    {{{   -56,     20,    -30}, 0, {     0,      0}, {0xa4, 0xc5, 0xc2, 0x00}}},
-    {{{   -50,     69,    -36}, 0, {     0,      0}, {0xfe, 0xf0, 0x83, 0x00}}},
-    {{{   -54,     20,     58}, 0, {     0,      0}, {0x99, 0xc2, 0x26, 0x00}}},
-    {{{   109,     10,    -33}, 0, {     0,      0}, {0x44, 0xc2, 0xaa, 0x00}}},
-    {{{   -50,     69,    -36}, 0, {     0,      0}, {0x82, 0x0e, 0x01, 0x00}}},
-    {{{   -49,     70,     63}, 0, {     0,      0}, {0x82, 0x0e, 0x01, 0x00}}},
-};
-
-// 0x04017638 - 0x040176A8
-const Gfx mario_low_poly_left_foot_shared_dl[] = {
-    gsSPVertex(mario_low_poly_left_foot_shared_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles(10,  4,  6, 0x0,  7,  9, 11, 0x0),
-    gsSP2Triangles(12, 10, 13, 0x0,  7, 10,  8, 0x0),
-    gsSP2Triangles( 7, 11,  5, 0x0,  5,  4,  7, 0x0),
-    gsSP2Triangles( 7,  4, 10, 0x0, 12,  8, 10, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040176A8 - 0x040176C8
-const Gfx mario_low_poly_left_foot[] = {
-    gsSPLight(&mario_brown1_lights_group.l, 1),
-    gsSPLight(&mario_brown1_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_left_foot_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040176C8
-static const Vtx mario_low_poly_right_thigh_shared_dl_vertex[] = {
-    {{{   102,    -25,    -48}, 0, {     0,      0}, {0x64, 0xbf, 0xd5, 0x00}}},
-    {{{   103,    -27,     25}, 0, {     0,      0}, {0x5c, 0xc9, 0x42, 0x00}}},
-    {{{    25,    -45,     35}, 0, {     0,      0}, {0x1b, 0x85, 0xfd, 0x00}}},
-    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x1b, 0x85, 0xfd, 0x00}}},
-    {{{    95,     50,    -36}, 0, {     0,      0}, {0x37, 0x42, 0xa3, 0x00}}},
-    {{{    96,     49,     18}, 0, {     0,      0}, {0x4a, 0x4e, 0x41, 0x00}}},
-    {{{    25,    -45,     35}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    17,     51,     27}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    15,     53,    -42}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
-    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x09, 0x13, 0x83, 0x00}}},
-    {{{    15,     53,    -42}, 0, {     0,      0}, {0x07, 0x74, 0xce, 0x00}}},
-    {{{    25,    -45,     35}, 0, {     0,      0}, {0x0d, 0x0c, 0x7d, 0x00}}},
-    {{{    17,     51,     27}, 0, {     0,      0}, {0x0b, 0x5c, 0x55, 0x00}}},
-};
-
-// 0x040177A8 - 0x04017818
-const Gfx mario_low_poly_right_thigh_shared_dl[] = {
-    gsSPVertex(mario_low_poly_right_thigh_shared_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 0,  4,  5, 0x0,  0,  5,  1, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  6,  8,  9, 0x0),
-    gsSP2Triangles( 4,  0, 10, 0x0,  5,  4, 11, 0x0),
-    gsSP2Triangles(12,  1,  5, 0x0,  5, 13, 12, 0x0),
-    gsSP2Triangles( 5, 11, 13, 0x0,  4, 10, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017818 - 0x04017838
-const Gfx mario_low_poly_right_thigh[] = {
-    gsSPLight(&mario_blue_lights_group.l, 1),
-    gsSPLight(&mario_blue_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_right_thigh_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017838
-static const Vtx mario_low_poly_right_leg_shared_dl_vertex[] = {
-    {{{     2,    -29,     27}, 0, {     0,      0}, {0xba, 0xa3, 0x31, 0x00}}},
-    {{{     1,    -26,    -50}, 0, {     0,      0}, {0x91, 0xdd, 0xcf, 0x00}}},
-    {{{    68,    -37,    -56}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
-    {{{    70,    -40,     30}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
-    {{{    68,    -37,    -56}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    74,     54,    -43}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    75,     52,     21}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{    70,    -40,     30}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
-    {{{     6,     47,     19}, 0, {     0,      0}, {0xad, 0x33, 0x50, 0x00}}},
-    {{{     6,     49,    -38}, 0, {     0,      0}, {0xcf, 0x5b, 0xb7, 0x00}}},
-    {{{    68,    -37,    -56}, 0, {     0,      0}, {0xf8, 0x13, 0x83, 0x00}}},
-    {{{    75,     52,     21}, 0, {     0,      0}, {0xf7, 0x71, 0x38, 0x00}}},
-    {{{    70,    -40,     30}, 0, {     0,      0}, {0xfb, 0x0c, 0x7e, 0x00}}},
-    {{{    74,     54,    -43}, 0, {     0,      0}, {0xf4, 0x60, 0xaf, 0x00}}},
-};
-
-// 0x04017918 - 0x04017988
-const Gfx mario_low_poly_right_leg_shared_dl[] = {
-    gsSPVertex(mario_low_poly_right_leg_shared_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
-    gsSP2Triangles( 8,  9,  1, 0x0,  0,  8,  1, 0x0),
-    gsSP2Triangles(10,  1,  9, 0x0,  9,  8, 11, 0x0),
-    gsSP2Triangles( 8,  0, 12, 0x0, 12, 11,  8, 0x0),
-    gsSP2Triangles(11, 13,  9, 0x0, 13, 10,  9, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017988
-static const Vtx mario_low_poly_right_foot_dl_vertex[] = {
-    {{{   -55,     19,    -59}, 0, {     0,      0}, {0x9a, 0xc0, 0xda, 0x00}}},
-    {{{   -57,     20,     28}, 0, {     0,      0}, {0xa4, 0xc5, 0x3e, 0x00}}},
-    {{{   -52,     69,     34}, 0, {     0,      0}, {0x82, 0x0c, 0xfd, 0x00}}},
-    {{{    73,    -38,    -50}, 0, {     0,      0}, {0x15, 0xae, 0xa2, 0x00}}},
-    {{{    71,    -37,     25}, 0, {     0,      0}, {0x19, 0x98, 0x42, 0x00}}},
-    {{{   108,     12,    -55}, 0, {     0,      0}, {0x5c, 0xbc, 0xcc, 0x00}}},
-    {{{   106,     13,     33}, 0, {     0,      0}, {0x44, 0xc5, 0x58, 0x00}}},
-    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x82, 0x0c, 0xfd, 0x00}}},
-    {{{   -52,     69,     34}, 0, {     0,      0}, {0xfd, 0xf2, 0x7e, 0x00}}},
-    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x02, 0xf2, 0x82, 0x00}}},
-    {{{   -52,     69,     34}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   108,     12,    -55}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-    {{{   106,     13,     33}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
-};
-
-// 0x04017A68 - 0x04017AD8
-const Gfx mario_low_poly_right_foot_dl[] = {
-    gsSPVertex(mario_low_poly_right_foot_dl_vertex, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  4, 0x0),
-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  4, 0x0),
-    gsSP2Triangles( 1,  0,  4, 0x0,  7,  0,  2, 0x0),
-    gsSP2Triangles( 6,  8,  4, 0x0,  9,  3,  0, 0x0),
-    gsSP2Triangles( 8,  1,  4, 0x0,  9,  5,  3, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017AD8 - 0x04017B18
-const Gfx mario_low_poly_right_foot[] = {
-    gsSPLight(&mario_brown1_lights_group.l, 1),
-    gsSPLight(&mario_brown1_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_right_foot_dl),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsDPSetEnvColor(255, 255, 255, 255),
-    gsDPSetAlphaCompare(G_AC_NONE),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017B18 - 0x04017B58
-const Gfx mario_metal_low_poly_right_foot[] = {
-    gsSPDisplayList(mario_low_poly_right_foot_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPSetEnvColor(255, 255, 255, 255),
-    gsDPSetAlphaCompare(G_AC_NONE),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017B58
-static const Vtx mario_seg4_vertex_04017B58[] = {
-    {{{   -28,     41,    -88}, 0, {  -396,   1646}, {0xb7, 0x31, 0xa5, 0xff}}},
-    {{{     0,     98,      0}, 0, {  1968,    722}, {0xf0, 0x7d, 0x00, 0xff}}},
-    {{{    35,     64,    -82}, 0, {  -390,    132}, {0x29, 0x4b, 0xa3, 0xff}}},
-    {{{    39,     90,      0}, 0, {  1698,   -280}, {0x4a, 0x67, 0x00, 0xff}}},
-    {{{   -28,     41,     89}, 0, {  1610,   1512}, {0xd1, 0x37, 0x67, 0xff}}},
-    {{{    35,     64,     83}, 0, {  1070,    -68}, {0x29, 0x4b, 0x5d, 0xff}}},
-    {{{     0,     98,      0}, 0, { -1064,    968}, {0xf0, 0x7d, 0x00, 0xff}}},
-    {{{    39,     90,      0}, 0, { -1146,   -124}, {0x4a, 0x67, 0x00, 0xff}}},
-};
-
-// 0x04017BD8
-static const Vtx mario_seg4_vertex_04017BD8[] = {
-    {{{   -28,    -71,     81}, 0, {     0,      0}, {0x9a, 0xbd, 0x20, 0xff}}},
-    {{{   -28,     41,    -88}, 0, {     0,      0}, {0xb7, 0x31, 0xa5, 0xff}}},
-    {{{   -28,    -71,    -80}, 0, {     0,      0}, {0xb7, 0xb5, 0xba, 0xff}}},
-    {{{    39,    -79,    -73}, 0, {     0,      0}, {0x27, 0xb3, 0xa4, 0xff}}},
-    {{{   -28,     41,     89}, 0, {     0,      0}, {0xd1, 0x37, 0x67, 0xff}}},
-    {{{   -28,     89,      0}, 0, {     0,      0}, {0x97, 0x46, 0x00, 0xff}}},
-    {{{    39,    -79,     74}, 0, {     0,      0}, {0x37, 0xba, 0x59, 0xff}}},
-    {{{    35,     64,     83}, 0, {     0,      0}, {0x29, 0x4b, 0x5d, 0xff}}},
-    {{{     0,     98,      0}, 0, {     0,      0}, {0xf0, 0x7d, 0x00, 0xff}}},
-    {{{    35,     64,    -82}, 0, {     0,      0}, {0x29, 0x4b, 0xa3, 0xff}}},
-    {{{    89,    -45,    -42}, 0, {     0,      0}, {0x70, 0xd0, 0xdf, 0xff}}},
-    {{{    89,    -45,     43}, 0, {     0,      0}, {0x75, 0xe4, 0x28, 0xff}}},
-    {{{    74,     26,    -59}, 0, {     0,      0}, {0x61, 0x25, 0xb9, 0xff}}},
-    {{{    39,     90,      0}, 0, {     0,      0}, {0x4a, 0x67, 0x00, 0xff}}},
-    {{{    74,     26,     60}, 0, {     0,      0}, {0x61, 0x25, 0x47, 0xff}}},
-};
-
-// 0x04017CC8
-static const Vtx mario_seg4_vertex_04017CC8[] = {
-    {{{    74,     26,     60}, 0, {     0,      0}, {0x61, 0x25, 0x47, 0xff}}},
-    {{{    87,     42,      0}, 0, {     0,      0}, {0x76, 0x2d, 0x00, 0xff}}},
-    {{{    39,     90,      0}, 0, {     0,      0}, {0x4a, 0x67, 0x00, 0xff}}},
-    {{{    39,    -79,    -73}, 0, {     0,      0}, {0x27, 0xb3, 0xa4, 0xff}}},
-    {{{    35,     64,    -82}, 0, {     0,      0}, {0x29, 0x4b, 0xa3, 0xff}}},
-    {{{    74,     26,    -59}, 0, {     0,      0}, {0x61, 0x25, 0xb9, 0xff}}},
-    {{{    89,    -45,    -42}, 0, {     0,      0}, {0x70, 0xd0, 0xdf, 0xff}}},
-    {{{    39,    -79,     74}, 0, {     0,      0}, {0x37, 0xba, 0x59, 0xff}}},
-    {{{    89,    -45,     43}, 0, {     0,      0}, {0x75, 0xe4, 0x28, 0xff}}},
-    {{{    35,     64,     83}, 0, {     0,      0}, {0x29, 0x4b, 0x5d, 0xff}}},
-};
-
-// 0x04017D68 - 0x04017D98
-const Gfx mario_low_poly_yellow_button_dl[] = {
-    gsSPVertex(mario_seg4_vertex_04017B58, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017D98 - 0x04017E20
-const Gfx mario_low_poly_pants_overalls_shared_dl[] = {
-    gsSPVertex(mario_seg4_vertex_04017BD8, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 0,  4,  5, 0x0,  3,  6,  0, 0x0),
-    gsSP2Triangles( 4,  0,  6, 0x0,  0,  5,  1, 0x0),
-    gsSP2Triangles( 7,  4,  6, 0x0,  5,  4,  8, 0x0),
-    gsSP2Triangles( 8,  1,  5, 0x0,  3,  1,  9, 0x0),
-    gsSP2Triangles( 3,  2,  1, 0x0,  6,  3, 10, 0x0),
-    gsSP2Triangles(10, 11,  6, 0x0, 12,  9, 13, 0x0),
-    gsSP1Triangle(13,  7, 14, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017E20 - 0x04017E78
-const Gfx mario_low_poly_tshirt_shared_dl[] = {
-    gsSPVertex(mario_seg4_vertex_04017CC8, 10, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 5,  6,  3, 0x0,  2,  1,  5, 0x0),
-    gsSP2Triangles( 6,  5,  1, 0x0,  7,  8,  0, 0x0),
-    gsSP2Triangles( 7,  0,  9, 0x0,  8,  6,  1, 0x0),
-    gsSP1Triangle( 1,  0,  8, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017E78 - 0x04017EA0
-const Gfx mario_low_poly_torso_dl[] = {
-    gsSPDisplayList(mario_low_poly_pants_overalls_shared_dl),
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_tshirt_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017EA0 - 0x04017F20
-const Gfx mario_low_poly_torso[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_yellow_button_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_torso_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017F20 - 0x04017F40
-const Gfx mario_metal_low_poly_torso[] = {
-    gsSPDisplayList(mario_low_poly_yellow_button_dl),
-    gsSPDisplayList(mario_low_poly_pants_overalls_shared_dl),
-    gsSPDisplayList(mario_low_poly_tshirt_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04017F40
-static const Vtx mario_low_poly_mario_m_logo_dl_vertex[] = {
-    {{{   272,     48,     53}, 0, {   904,      0}, {0x42, 0x51, 0x47, 0xff}}},
-    {{{   174,     79,     -9}, 0, {   452,    816}, {0x51, 0x61, 0xfa, 0xff}}},
-    {{{   146,     27,     92}, 0, {  1238,    962}, {0x03, 0x3a, 0x70, 0xff}}},
-    {{{   272,     48,    -52}, 0, {    -2,      0}, {0x62, 0x27, 0xba, 0xff}}},
-    {{{   146,     27,    -91}, 0, {  -334,    962}, {0x03, 0x39, 0x8f, 0xff}}},
-};
-
-// 0x04017F90
-static const Vtx mario_low_poly_eyes_cap_on_dl_vertex[] = {
-    {{{   146,     27,     92}, 0, {  1316,    212}, {0x03, 0x3a, 0x70, 0xff}}},
-    {{{   168,     79,      0}, 0, {   458,     68}, {0xd9, 0x78, 0x00, 0xff}}},
-    {{{    88,    101,     33}, 0, {   762,    990}, {0x38, 0x55, 0x4b, 0xff}}},
-    {{{    88,    101,    -32}, 0, {   154,    990}, {0x1e, 0x5d, 0xb1, 0xff}}},
-    {{{   146,     27,    -91}, 0, {  -398,    212}, {0x03, 0x39, 0x8f, 0xff}}},
-};
-
-// 0x04017FE0
-static const Vtx mario_low_poly_mustache_cap_on_dl_vertex[] = {
-    {{{    88,    101,    -32}, 0, {   398,    214}, {0x1e, 0x5d, 0xb1, 0xff}}},
-    {{{   146,     27,    -91}, 0, {  1408,   -550}, {0x03, 0x39, 0x8f, 0xff}}},
-    {{{    34,     39,    -98}, 0, {  1306,    732}, {0xcd, 0x40, 0xa0, 0xff}}},
-    {{{    44,    113,      0}, 0, {    10,    800}, {0x9c, 0x4d, 0x00, 0xff}}},
-    {{{    -5,     58,      0}, 0, {   300,   1456}, {0x88, 0x28, 0x00, 0xff}}},
-    {{{    88,    101,     33}, 0, {   294,    258}, {0x38, 0x55, 0x4b, 0xff}}},
-    {{{    44,    113,      0}, 0, {    34,    840}, {0x9c, 0x4d, 0x00, 0xff}}},
-    {{{    34,     39,     99}, 0, {  1314,    634}, {0xcd, 0x40, 0x60, 0xff}}},
-    {{{   146,     27,     92}, 0, {  1132,   -556}, {0x03, 0x3a, 0x70, 0xff}}},
-    {{{    -5,     58,      0}, 0, {   470,   1412}, {0x88, 0x28, 0x00, 0xff}}},
-};
-
-// 0x04018080
-static const Vtx mario_low_poly_face_cap_dl_vertex[] = {
-    {{{   272,     48,    -52}, 0, {     0,      0}, {0x62, 0x27, 0xba, 0xff}}},
-    {{{   272,     48,     53}, 0, {     0,      0}, {0x42, 0x51, 0x47, 0xff}}},
-    {{{   149,    -87,    138}, 0, {     0,      0}, {0x43, 0xb6, 0x4d, 0xff}}},
-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
-    {{{   149,    -87,   -137}, 0, {     0,      0}, {0x33, 0xc2, 0x9f, 0xff}}},
-    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
-    {{{    58,   -114,     81}, 0, {     0,      0}, {0xba, 0xad, 0x40, 0xff}}},
-    {{{    98,   -165,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
-    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xbc, 0xb8, 0xb2, 0xff}}},
-    {{{   168,     79,      0}, 0, {     0,      0}, {0xd9, 0x78, 0x00, 0xff}}},
-    {{{   175,    154,      0}, 0, {     0,      0}, {0xe1, 0x6c, 0xc6, 0xff}}},
-    {{{   174,     79,     -9}, 0, {     0,      0}, {0x51, 0x61, 0xfa, 0xff}}},
-};
-
-// 0x04018140
-static const Vtx mario_low_poly_face_part_cap_on_dl_vertex[] = {
-    {{{    94,    146,     33}, 0, {     0,      0}, {0xff, 0x44, 0x6b, 0xff}}},
-    {{{    50,    153,      0}, 0, {     0,      0}, {0xad, 0x5f, 0x00, 0xff}}},
-    {{{    44,    113,      0}, 0, {     0,      0}, {0x9c, 0x4d, 0x00, 0xff}}},
-    {{{    88,    101,     33}, 0, {     0,      0}, {0x38, 0x55, 0x4b, 0xff}}},
-    {{{    94,    146,    -32}, 0, {     0,      0}, {0x3b, 0x35, 0x9e, 0xff}}},
-    {{{    88,    101,    -32}, 0, {     0,      0}, {0x1e, 0x5d, 0xb1, 0xff}}},
-    {{{    34,     39,     99}, 0, {     0,      0}, {0xcd, 0x40, 0x60, 0xff}}},
-    {{{    -5,     58,      0}, 0, {     0,      0}, {0x88, 0x28, 0x00, 0xff}}},
-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
-    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
-    {{{    34,     39,    -98}, 0, {     0,      0}, {0xcd, 0x40, 0xa0, 0xff}}},
-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
-};
-
-// 0x04018210
-static const Vtx mario_low_poly_face_back_hair_cap_on_dl_vertex[] = {
-    {{{    58,   -114,     81}, 0, {     0,      0}, {0xba, 0xad, 0x40, 0xff}}},
-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
-    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xbc, 0xb8, 0xb2, 0xff}}},
-    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
-};
-
-// 0x04018270 - 0x04018298
-const Gfx mario_low_poly_mario_m_logo_dl[] = {
-    gsSPVertex(mario_low_poly_mario_m_logo_dl_vertex, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP1Triangle( 3,  1,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018298 - 0x040182C0
-const Gfx mario_low_poly_eyes_cap_on_dl[] = {
-    gsSPVertex(mario_low_poly_eyes_cap_on_dl_vertex, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
-    gsSP1Triangle( 3,  2,  1, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040182C0 - 0x04018300
-const Gfx mario_low_poly_mustache_cap_on_dl[] = {
-    gsSPVertex(mario_low_poly_mustache_cap_on_dl_vertex, 10, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 7,  8,  5, 0x0,  6,  9,  7, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018300 - 0x04018370
-const Gfx mario_low_poly_face_part_cap_on_dl[] = {
-    gsSPVertex(mario_low_poly_face_part_cap_on_dl_vertex, 13, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 2,  1,  4, 0x0,  2,  4,  5, 0x0),
-    gsSP2Triangles( 4,  1,  0, 0x0,  4,  0,  3, 0x0),
-    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 9,  6,  8, 0x0,  8,  7, 10, 0x0),
-    gsSP2Triangles(10,  7, 11, 0x0, 10, 11, 12, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018370 - 0x040183F0
-const Gfx mario_low_poly_face_cap_dl[] = {
-    gsSPVertex(mario_low_poly_face_cap_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
-    gsSP2Triangles( 4,  0,  2, 0x0,  2,  1,  5, 0x0),
-    gsSP2Triangles( 6,  2,  5, 0x0,  6,  7,  2, 0x0),
-    gsSP2Triangles( 7,  4,  2, 0x0,  3,  4,  8, 0x0),
-    gsSP2Triangles( 4,  7,  8, 0x0,  9, 10,  3, 0x0),
-    gsSP2Triangles(10, 11,  3, 0x0,  8,  7,  6, 0x0),
-    gsSP2Triangles(10,  5, 11, 0x0, 10,  9,  5, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x040183F0 - 0x04018420
-const Gfx mario_low_poly_face_back_hair_cap_on_dl[] = {
-    gsSPVertex(mario_low_poly_face_back_hair_cap_on_dl_vertex, 6, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  1,  0, 0x0,  3,  2,  5, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018420 - 0x04018460
-const Gfx mario_low_poly_face_cap_on_dl[] = {
-    gsSPDisplayList(mario_low_poly_face_part_cap_on_dl),
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_face_cap_dl),
-    gsSPLight(&mario_brown2_lights_group.l, 1),
-    gsSPLight(&mario_brown2_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_face_back_hair_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018460 - 0x04018530
-const Gfx mario_low_poly_cap_on_eyes_front[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018530 - 0x04018600
-const Gfx mario_low_poly_cap_on_eyes_half_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018600 - 0x040186D0
-const Gfx mario_low_poly_cap_on_eyes_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040186D0 - 0x040187A0
-const Gfx mario_low_poly_cap_on_eyes_right[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040187A0 - 0x04018870
-const Gfx mario_low_poly_cap_on_eyes_left[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018870 - 0x04018940
-const Gfx mario_low_poly_cap_on_eyes_up[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018940 - 0x04018A10
-const Gfx mario_low_poly_cap_on_eyes_down[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018A10 - 0x04018AE0
-const Gfx mario_low_poly_cap_on_eyes_dead[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018AE0 - 0x04018B18
-const Gfx mario_metal_low_poly_cap_on[] = {
-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
-    gsSPDisplayList(mario_low_poly_face_part_cap_on_dl),
-    gsSPDisplayList(mario_low_poly_face_cap_dl),
-    gsSPDisplayList(mario_low_poly_face_back_hair_cap_on_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018B18
-static const Vtx mario_low_poly_mario_eyes_cap_off_dl_vertex[] = {
-    {{{   146,     27,     92}, 0, {  1316,    212}, {0x16, 0x25, 0x77, 0xff}}},
-    {{{   168,     79,      0}, 0, {   458,     68}, {0x27, 0x78, 0x00, 0xff}}},
-    {{{    88,    101,     33}, 0, {   762,    990}, {0x38, 0x55, 0x4b, 0xff}}},
-    {{{    88,    101,    -32}, 0, {   154,    990}, {0x1e, 0x5d, 0xb1, 0xff}}},
-    {{{   146,     27,    -91}, 0, {  -398,    212}, {0x14, 0x26, 0x89, 0xff}}},
-};
-
-// 0x04018B68
-static const Vtx mario_low_poly_mustache_cap_off_dl_vertex[] = {
-    {{{    34,     39,    -98}, 0, {  1306,    732}, {0xcd, 0x40, 0xa0, 0xff}}},
-    {{{    44,    113,      0}, 0, {    10,    800}, {0x9c, 0x4d, 0x00, 0xff}}},
-    {{{    88,    101,    -32}, 0, {   398,    214}, {0x1e, 0x5d, 0xb1, 0xff}}},
-    {{{    -5,     58,      0}, 0, {   300,   1456}, {0x88, 0x28, 0x00, 0xff}}},
-    {{{   146,     27,    -91}, 0, {  1408,   -550}, {0x14, 0x26, 0x89, 0xff}}},
-    {{{    88,    101,     33}, 0, {   294,    258}, {0x38, 0x55, 0x4b, 0xff}}},
-    {{{    44,    113,      0}, 0, {    34,    840}, {0x9c, 0x4d, 0x00, 0xff}}},
-    {{{    34,     39,     99}, 0, {  1314,    634}, {0xcd, 0x40, 0x60, 0xff}}},
-    {{{    -5,     58,      0}, 0, {   470,   1412}, {0x88, 0x28, 0x00, 0xff}}},
-    {{{   146,     27,     92}, 0, {  1132,   -556}, {0x16, 0x25, 0x77, 0xff}}},
-};
-
-// 0x04018C08
-static const Vtx mario_low_poly_face_part_cap_off_dl_vertex[] = {
-    {{{    44,    113,      0}, 0, {     0,      0}, {0x9c, 0x4d, 0x00, 0xff}}},
-    {{{    94,    146,    -32}, 0, {     0,      0}, {0x3b, 0x35, 0x9e, 0xff}}},
-    {{{    88,    101,    -32}, 0, {     0,      0}, {0x1e, 0x5d, 0xb1, 0xff}}},
-    {{{    50,    153,      0}, 0, {     0,      0}, {0xad, 0x5f, 0x00, 0xff}}},
-    {{{    88,    101,     33}, 0, {     0,      0}, {0x38, 0x55, 0x4b, 0xff}}},
-    {{{    94,    146,     33}, 0, {     0,      0}, {0xff, 0x44, 0x6b, 0xff}}},
-    {{{   146,     27,     92}, 0, {     0,      0}, {0x16, 0x25, 0x77, 0xff}}},
-    {{{    34,     39,     99}, 0, {     0,      0}, {0xcd, 0x40, 0x60, 0xff}}},
-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
-    {{{    -5,     58,      0}, 0, {     0,      0}, {0x88, 0x28, 0x00, 0xff}}},
-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
-    {{{    34,     39,    -98}, 0, {     0,      0}, {0xcd, 0x40, 0xa0, 0xff}}},
-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x14, 0x26, 0x89, 0xff}}},
-};
-
-// 0x04018CD8
-static const Vtx mario_low_poly_face_hair_cap_off_dl_vertex[] = {
-    {{{    58,   -114,     81}, 0, {     0,      0}, {0xd3, 0x9b, 0x3d, 0xff}}},
-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
-    {{{   146,     27,     92}, 0, {     0,      0}, {0x16, 0x25, 0x77, 0xff}}},
-    {{{   167,   -121,     77}, 0, {     0,      0}, {0x3c, 0xad, 0x4a, 0xff}}},
-    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xd8, 0xa3, 0xb5, 0xff}}},
-    {{{    90,   -136,      0}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0xff}}},
-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x14, 0x26, 0x89, 0xff}}},
-    {{{   167,   -121,    -81}, 0, {     0,      0}, {0x3a, 0xad, 0xb5, 0xff}}},
-    {{{   218,     48,    -52}, 0, {     0,      0}, {0x5f, 0x3b, 0xc6, 0xff}}},
-    {{{   168,     79,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
-    {{{   192,    -28,    -80}, 0, {     0,      0}, {0x55, 0xf7, 0xa3, 0xff}}},
-    {{{   223,    -38,     -1}, 0, {     0,      0}, {0x7b, 0xe2, 0x00, 0xff}}},
-    {{{   218,     48,     53}, 0, {     0,      0}, {0x60, 0x39, 0x3a, 0xff}}},
-    {{{   192,    -28,     78}, 0, {     0,      0}, {0x56, 0xf4, 0x5c, 0xff}}},
-};
-
-// 0x04018DC8 - 0x04018DF0
-const Gfx mario_low_poly_mario_eyes_cap_off_dl[] = {
-    gsSPVertex(mario_low_poly_mario_eyes_cap_off_dl_vertex, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
-    gsSP1Triangle( 3,  2,  1, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018DF0 - 0x04018E30
-const Gfx mario_low_poly_mustache_cap_off_dl[] = {
-    gsSPVertex(mario_low_poly_mustache_cap_off_dl_vertex, 10, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 2,  4,  0, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 6,  8,  7, 0x0,  7,  9,  5, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018E30 - 0x04018EA0
-const Gfx mario_low_poly_face_part_cap_off_dl[] = {
-    gsSPVertex(mario_low_poly_face_part_cap_off_dl_vertex, 13, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 4,  5,  0, 0x0,  5,  3,  0, 0x0),
-    gsSP2Triangles( 1,  3,  5, 0x0,  2,  1,  4, 0x0),
-    gsSP2Triangles( 1,  5,  4, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 7,  9,  8, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles(10,  9, 11, 0x0, 10, 11, 12, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018EA0 - 0x04018F68
-const Gfx mario_low_poly_face_hair_cap_off_dl[] = {
-    gsSPVertex(mario_low_poly_face_hair_cap_off_dl_vertex, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 0,  4,  3, 0x0,  0,  2,  5, 0x0),
-    gsSP2Triangles( 5,  6,  0, 0x0,  0,  6,  4, 0x0),
-    gsSP2Triangles( 5,  2,  7, 0x0,  7,  8,  5, 0x0),
-    gsSP2Triangles( 8,  6,  5, 0x0,  9,  7, 10, 0x0),
-    gsSP2Triangles( 7,  9, 11, 0x0,  7, 11,  8, 0x0),
-    gsSP2Triangles( 6,  8,  4, 0x0,  8, 11, 12, 0x0),
-    gsSP2Triangles( 4,  8, 12, 0x0, 11,  9, 12, 0x0),
-    gsSP2Triangles(13, 14, 12, 0x0, 14,  4, 12, 0x0),
-    gsSP2Triangles( 4, 14,  3, 0x0, 13, 10,  3, 0x0),
-    gsSP2Triangles(14, 13,  3, 0x0,  9, 10, 13, 0x0),
-    gsSP1Triangle( 9, 13, 12, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018F68 - 0x04018F90
-const Gfx mario_low_poly_face_cap_off_dl[] = {
-    gsSPDisplayList(mario_low_poly_face_part_cap_off_dl),
-    gsSPLight(&mario_brown2_lights_group.l, 1),
-    gsSPLight(&mario_brown2_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_face_hair_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04018F90 - 0x04019040
-const Gfx mario_low_poly_cap_off_eyes_front[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019040 - 0x040190F0
-const Gfx mario_low_poly_cap_off_eyes_half_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040190F0 - 0x040191A0
-const Gfx mario_low_poly_cap_off_eyes_closed[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040191A0 - 0x04019250
-const Gfx mario_low_poly_cap_off_eyes_right[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019250 - 0x04019300
-const Gfx mario_low_poly_cap_off_eyes_left[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019300 - 0x040193B0
-const Gfx mario_low_poly_cap_off_eyes_up[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x040193B0 - 0x04019460
-const Gfx mario_low_poly_cap_off_eyes_down[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019460 - 0x04019510
-const Gfx mario_low_poly_cap_off_eyes_dead[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_beige_lights_group.l, 1),
-    gsSPLight(&mario_beige_lights_group.a, 2),
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019510 - 0x04019538
-const Gfx mario_metal_low_poly_cap_off[] = {
-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
-    gsSPDisplayList(mario_low_poly_face_part_cap_off_dl),
-    gsSPDisplayList(mario_low_poly_face_hair_cap_off_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019538
-static const Vtx mario_left_hand_open_shared_dl_vertex_group1[] = {
-    {{{   121,     73,    -21}, 0, {     0,      0}, {0x47, 0x60, 0x2b, 0x00}}},
-    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
-    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
-    {{{   141,     34,     -7}, 0, {     0,      0}, {0x77, 0x0c, 0x29, 0x00}}},
-    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
-    {{{   119,     70,    -42}, 0, {     0,      0}, {0x3d, 0x44, 0xa9, 0x00}}},
-    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
-    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
-    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
-    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
-    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
-};
-
-// 0x04019618
-static const Vtx mario_left_hand_open_shared_dl_vertex_group2[] = {
-    {{{    -3,     35,     -9}, 0, {     0,      0}, {0xcd, 0x72, 0x13, 0x00}}},
-    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
-    {{{     1,    -33,    -23}, 0, {     0,      0}, {0x9c, 0xbb, 0xe0, 0x00}}},
-    {{{     6,    -38,      7}, 0, {     0,      0}, {0xae, 0xab, 0x2b, 0x00}}},
-    {{{    -6,     -3,     17}, 0, {     0,      0}, {0x90, 0xda, 0x2d, 0x00}}},
-    {{{     2,      3,     26}, 0, {     0,      0}, {0xf5, 0x17, 0x7c, 0x00}}},
-    {{{    20,    -46,     12}, 0, {     0,      0}, {0x26, 0x9e, 0x45, 0x00}}},
-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
-    {{{   -17,     40,     -8}, 0, {     0,      0}, {0xbc, 0x68, 0x16, 0x00}}},
-    {{{   -10,     14,    -43}, 0, {     0,      0}, {0xd3, 0x19, 0x8d, 0x00}}},
-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
-    {{{    13,    -39,    -31}, 0, {     0,      0}, {0x18, 0x9a, 0xba, 0x00}}},
-    {{{   -20,     22,     -7}, 0, {     0,      0}, {0x83, 0x06, 0x14, 0x00}}},
-    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
-};
-
-// 0x04019718
-static const Vtx mario_left_hand_open_shared_dl_vertex_group3[] = {
-    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
-    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
-    {{{    89,    -47,    -37}, 0, {     0,      0}, {0x56, 0xaa, 0xdf, 0x00}}},
-    {{{    76,    -18,    -48}, 0, {     0,      0}, {0x27, 0x0a, 0x88, 0x00}}},
-    {{{    89,     -6,    -27}, 0, {     0,      0}, {0x5c, 0xf5, 0xab, 0x00}}},
-    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
-    {{{    26,     41,    -41}, 0, {     0,      0}, {0x05, 0x34, 0x8d, 0x00}}},
-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
-    {{{   141,     34,     -7}, 0, {     0,      0}, {0x77, 0x0c, 0x29, 0x00}}},
-    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
-    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
-    {{{    69,     10,    -36}, 0, {     0,      0}, {0x35, 0x1c, 0x91, 0x00}}},
-    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
-    {{{   121,     73,    -21}, 0, {     0,      0}, {0x47, 0x60, 0x2b, 0x00}}},
-    {{{   119,     70,    -42}, 0, {     0,      0}, {0x3d, 0x44, 0xa9, 0x00}}},
-};
-
-// 0x04019818
-static const Vtx mario_left_hand_open_shared_dl_vertex_group4[] = {
-    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
-    {{{    26,     41,    -41}, 0, {     0,      0}, {0x05, 0x34, 0x8d, 0x00}}},
-    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
-    {{{    69,     10,    -36}, 0, {     0,      0}, {0x35, 0x1c, 0x91, 0x00}}},
-    {{{    89,    -47,    -37}, 0, {     0,      0}, {0x56, 0xaa, 0xdf, 0x00}}},
-    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
-    {{{    76,    -18,    -48}, 0, {     0,      0}, {0x27, 0x0a, 0x88, 0x00}}},
-    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
-    {{{    89,     -6,    -27}, 0, {     0,      0}, {0x5c, 0xf5, 0xab, 0x00}}},
-    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
-    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
-    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
-    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
-    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
-};
-
-// 0x04019918
-static const Vtx mario_left_hand_open_shared_dl_vertex_group5[] = {
-    {{{     6,    -38,      7}, 0, {     0,      0}, {0xae, 0xab, 0x2b, 0x00}}},
-    {{{     1,    -33,    -23}, 0, {     0,      0}, {0x9c, 0xbb, 0xe0, 0x00}}},
-    {{{    13,    -39,    -31}, 0, {     0,      0}, {0x18, 0x9a, 0xba, 0x00}}},
-    {{{   -15,      4,    -32}, 0, {     0,      0}, {0x89, 0xdd, 0xe7, 0x00}}},
-    {{{   -10,     14,    -43}, 0, {     0,      0}, {0xd3, 0x19, 0x8d, 0x00}}},
-    {{{   -20,     22,     -7}, 0, {     0,      0}, {0x83, 0x06, 0x14, 0x00}}},
-    {{{    -6,     -3,     17}, 0, {     0,      0}, {0x90, 0xda, 0x2d, 0x00}}},
-    {{{     2,      3,     26}, 0, {     0,      0}, {0xf5, 0x17, 0x7c, 0x00}}},
-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
-    {{{     1,     15,    -37}, 0, {     0,      0}, {0xd2, 0x09, 0x8b, 0x00}}},
-    {{{    -3,     35,     -9}, 0, {     0,      0}, {0xcd, 0x72, 0x13, 0x00}}},
-    {{{    11,      5,     17}, 0, {     0,      0}, {0xff, 0x1b, 0x7c, 0x00}}},
-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
-    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
-};
-
-// 0x04019A18
-static const Vtx mario_left_hand_open_shared_dl_vertex_group6[] = {
-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
-    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
-    {{{    11,      5,     17}, 0, {     0,      0}, {0xff, 0x1b, 0x7c, 0x00}}},
-};
-
-// 0x04019A68 - 0x04019CA0
-const Gfx mario_left_hand_open_shared_dl[] = {
-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group1, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  3,  7, 0x0),
-    gsSP2Triangles( 1,  0,  5, 0x0,  5,  4,  1, 0x0),
-    gsSP2Triangles( 5,  3,  6, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles( 8, 11,  9, 0x0, 12, 13, 11, 0x0),
-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 0, 10,  7, 0x0, 11, 10,  0, 0x0),
-    gsSP2Triangles(12, 13, 11, 0x0,  9,  8, 13, 0x0),
-    gsSP2Triangles( 7,  5,  8, 0x0, 10, 14,  7, 0x0),
-    gsSP2Triangles(11, 14, 10, 0x0, 13,  4, 11, 0x0),
-    gsSP2Triangles( 8,  5, 13, 0x0,  3, 15,  1, 0x0),
-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 4,  5,  3, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 1,  9, 10, 0x0,  5, 11,  1, 0x0),
-    gsSP2Triangles(12, 13,  5, 0x0, 14,  9, 15, 0x0),
-    gsSP1Triangle( 4,  7, 12, 0x0),
-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  7,  0,  2, 0x0),
-    gsSP2Triangles( 8,  6,  5, 0x0,  5,  9, 10, 0x0),
-    gsSP2Triangles(11,  3,  2, 0x0,  2, 12, 11, 0x0),
-    gsSP2Triangles( 3, 13,  9, 0x0,  6,  0,  7, 0x0),
-    gsSP2Triangles( 7,  4,  9, 0x0, 10, 14, 15, 0x0),
-    gsSP1Triangle(15, 14, 11, 0x0),
-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group5, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 7,  6,  0, 0x0,  2,  8,  9, 0x0),
-    gsSP2Triangles( 4, 10,  8, 0x0, 11, 10,  4, 0x0),
-    gsSP2Triangles( 7, 12, 11, 0x0,  9, 12,  7, 0x0),
-    gsSP2Triangles( 6,  3,  1, 0x0,  6,  5,  3, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0, 14, 10, 11, 0x0),
-    gsSP2Triangles( 8, 10, 15, 0x0, 10, 14, 15, 0x0),
-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group6, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019CA0 - 0x04019CC0
-const Gfx mario_left_hand_open[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_left_hand_open_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x04019CC0
-static const Vtx mario_right_hand_open_dl_vertex_group1[] = {
-    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
-    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
-    {{{   125,     71,      9}, 0, {     0,      0}, {0x47, 0x5a, 0xcb, 0x00}}},
-    {{{   143,     31,     -1}, 0, {     0,      0}, {0x75, 0x06, 0xd2, 0x00}}},
-    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
-    {{{   124,     69,     30}, 0, {     0,      0}, {0x44, 0x49, 0x4d, 0x00}}},
-    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
-    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
-    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
-    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
-    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
-};
-
-// 0x04019DA0
-static const Vtx mario_right_hand_open_dl_vertex_group2[] = {
-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
-    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
-    {{{     3,     36,      6}, 0, {     0,      0}, {0xce, 0x71, 0xe6, 0x00}}},
-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
-    {{{     0,     -4,    -15}, 0, {     0,      0}, {0x8d, 0xda, 0xdc, 0x00}}},
-    {{{    11,    -38,     -3}, 0, {     0,      0}, {0xa9, 0xaa, 0xe0, 0x00}}},
-    {{{     7,    -30,     26}, 0, {     0,      0}, {0x9b, 0xc0, 0x29, 0x00}}},
-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
-    {{{    25,    -46,     -9}, 0, {     0,      0}, {0x21, 0x97, 0xc1, 0x00}}},
-    {{{     7,      1,    -26}, 0, {     0,      0}, {0xee, 0x0d, 0x84, 0x00}}},
-    {{{    -9,     41,      5}, 0, {     0,      0}, {0xbc, 0x66, 0xe5, 0x00}}},
-    {{{    -1,     18,     42}, 0, {     0,      0}, {0xd9, 0x23, 0x73, 0x00}}},
-    {{{    19,    -36,     33}, 0, {     0,      0}, {0x1a, 0xa0, 0x4d, 0x00}}},
-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
-    {{{   -12,     23,      6}, 0, {     0,      0}, {0x83, 0x07, 0xf1, 0x00}}},
-    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
-};
-
-// 0x04019EA0
-static const Vtx mario_right_hand_open_dl_vertex_group3[] = {
-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
-    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
-    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
-    {{{    93,    -45,     36}, 0, {     0,      0}, {0x57, 0xac, 0x23, 0x00}}},
-    {{{    93,     -5,     22}, 0, {     0,      0}, {0x61, 0xfa, 0x50, 0x00}}},
-    {{{    81,    -15,     45}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
-    {{{    34,     43,     36}, 0, {     0,      0}, {0x0c, 0x3d, 0x6e, 0x00}}},
-    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
-    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
-    {{{   143,     31,     -1}, 0, {     0,      0}, {0x75, 0x06, 0xd2, 0x00}}},
-    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
-    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
-    {{{    75,     11,     32}, 0, {     0,      0}, {0x3c, 0x23, 0x69, 0x00}}},
-    {{{   124,     69,     30}, 0, {     0,      0}, {0x44, 0x49, 0x4d, 0x00}}},
-    {{{   125,     71,      9}, 0, {     0,      0}, {0x47, 0x5a, 0xcb, 0x00}}},
-};
-
-// 0x04019FA0
-static const Vtx mario_right_hand_open_dl_vertex_group4[] = {
-    {{{    34,     43,     36}, 0, {     0,      0}, {0x0c, 0x3d, 0x6e, 0x00}}},
-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
-    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
-    {{{    75,     11,     32}, 0, {     0,      0}, {0x3c, 0x23, 0x69, 0x00}}},
-    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
-    {{{    81,    -15,     45}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
-    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
-    {{{    93,    -45,     36}, 0, {     0,      0}, {0x57, 0xac, 0x23, 0x00}}},
-    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
-    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
-    {{{    93,     -5,     22}, 0, {     0,      0}, {0x61, 0xfa, 0x50, 0x00}}},
-    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
-    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
-    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
-    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
-};
-
-// 0x0401A0A0
-static const Vtx mario_right_hand_open_dl_vertex_group5[] = {
-    {{{    19,    -36,     33}, 0, {     0,      0}, {0x1a, 0xa0, 0x4d, 0x00}}},
-    {{{     7,    -30,     26}, 0, {     0,      0}, {0x9b, 0xc0, 0x29, 0x00}}},
-    {{{    11,    -38,     -3}, 0, {     0,      0}, {0xa9, 0xaa, 0xe0, 0x00}}},
-    {{{    -1,     18,     42}, 0, {     0,      0}, {0xd9, 0x23, 0x73, 0x00}}},
-    {{{    -7,      7,     32}, 0, {     0,      0}, {0x8a, 0xe2, 0x20, 0x00}}},
-    {{{   -12,     23,      6}, 0, {     0,      0}, {0x83, 0x07, 0xf1, 0x00}}},
-    {{{     7,      1,    -26}, 0, {     0,      0}, {0xee, 0x0d, 0x84, 0x00}}},
-    {{{     0,     -4,    -15}, 0, {     0,      0}, {0x8d, 0xda, 0xdc, 0x00}}},
-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
-    {{{     9,     18,     35}, 0, {     0,      0}, {0xd8, 0x13, 0x76, 0x00}}},
-    {{{     3,     36,      6}, 0, {     0,      0}, {0xce, 0x71, 0xe6, 0x00}}},
-    {{{    16,      4,    -17}, 0, {     0,      0}, {0xf9, 0x11, 0x83, 0x00}}},
-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
-    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
-};
-
-// 0x0401A1A0
-static const Vtx mario_right_hand_open_dl_vertex_group6[] = {
-    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
-    {{{    16,      4,    -17}, 0, {     0,      0}, {0xf9, 0x11, 0x83, 0x00}}},
-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
-};
-
-// 0x0401A1F0 - 0x0401A428
-const Gfx mario_right_hand_open_dl[] = {
-    gsSPVertex(mario_right_hand_open_dl_vertex_group1, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  3,  4, 0x0),
-    gsSP2Triangles( 5,  2,  1, 0x0,  1,  6,  5, 0x0),
-    gsSP2Triangles( 4,  3,  5, 0x0,  8,  9, 10, 0x0),
-    gsSP2Triangles( 9, 11, 10, 0x0, 11, 12, 13, 0x0),
-    gsSPVertex(mario_right_hand_open_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 9, 10,  2, 0x0,  2, 10, 11, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0, 12,  8,  7, 0x0),
-    gsSP2Triangles( 8,  5,  9, 0x0,  9, 14, 10, 0x0),
-    gsSP2Triangles(10, 14, 11, 0x0, 11,  6, 12, 0x0),
-    gsSP2Triangles(12,  5,  8, 0x0,  1, 15,  3, 0x0),
-    gsSPVertex(mario_right_hand_open_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 9, 10,  1, 0x0,  1, 11,  4, 0x0),
-    gsSP2Triangles( 4, 12, 13, 0x0, 14, 10, 15, 0x0),
-    gsSP1Triangle(13,  7,  5, 0x0),
-    gsSPVertex(mario_right_hand_open_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  0,  2,  5, 0x0),
-    gsSP2Triangles( 7,  6,  8, 0x0,  9, 10,  7, 0x0),
-    gsSP2Triangles( 0,  4, 11, 0x0, 11, 12,  0, 0x0),
-    gsSP2Triangles(10, 13,  4, 0x0,  5,  2,  6, 0x0),
-    gsSP2Triangles(10,  3,  5, 0x0, 14, 15,  9, 0x0),
-    gsSP1Triangle(11, 15, 14, 0x0),
-    gsSPVertex(mario_right_hand_open_dl_vertex_group5, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
-    gsSP2Triangles( 2,  7,  6, 0x0,  8,  9,  0, 0x0),
-    gsSP2Triangles( 9, 10,  3, 0x0,  3, 10, 11, 0x0),
-    gsSP2Triangles(11, 12,  6, 0x0,  6, 12,  8, 0x0),
-    gsSP2Triangles( 1,  4,  7, 0x0,  4,  5,  7, 0x0),
-    gsSP2Triangles(13, 12, 11, 0x0, 11, 10, 14, 0x0),
-    gsSP2Triangles(15, 10,  9, 0x0, 15, 14, 10, 0x0),
-    gsSPVertex(mario_right_hand_open_dl_vertex_group6, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401A428 - 0x0401A448
-const Gfx mario_right_hand_open[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_right_hand_open_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401A448 - 0x0401A478
-const Gfx mario_metal_right_hand_open[] = {
-    gsSPDisplayList(mario_right_hand_open_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401A478
-static const Vtx mario_right_hand_cap_m_logo_dl_vertex[] = {
-    {{{   131,     47,     -1}, 0, {  1104,    228}, {0xd7, 0x60, 0xb8, 0xff}}},
-    {{{   107,    -19,    -33}, 0, {   474,     32}, {0xd1, 0x0e, 0x8c, 0xff}}},
-    {{{    78,     11,     40}, 0, {   772,    818}, {0xd0, 0x3e, 0x9d, 0xff}}},
-    {{{    70,    -52,     35}, 0, {   196,    800}, {0xc5, 0xde, 0x96, 0xff}}},
-    {{{   114,    -92,    -11}, 0, {  -148,    188}, {0xc4, 0xb8, 0xac, 0xff}}},
-};
-
-// 0x0401A4C8
-static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group1[] = {
-    {{{     1,     24,     35}, 0, {     0,      0}, {0xd4, 0x3c, 0x66, 0xff}}},
-    {{{    29,      7,     48}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0xff}}},
-    {{{    29,     62,     34}, 0, {     0,      0}, {0xcd, 0x4c, 0x57, 0xff}}},
-    {{{    11,     60,     -3}, 0, {     0,      0}, {0xab, 0x59, 0xe6, 0xff}}},
-    {{{    56,     11,     65}, 0, {     0,      0}, {0xfc, 0x1b, 0x7b, 0xff}}},
-    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
-    {{{    58,     81,      0}, 0, {     0,      0}, {0x13, 0x7a, 0xe8, 0xff}}},
-    {{{    -2,     41,      0}, 0, {     0,      0}, {0xee, 0x71, 0xca, 0xff}}},
-    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
-    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
-    {{{    23,    -25,     35}, 0, {     0,      0}, {0x04, 0xc2, 0x6e, 0xff}}},
-    {{{    75,    -32,     65}, 0, {     0,      0}, {0x08, 0xae, 0x60, 0xff}}},
-    {{{    16,      1,    -22}, 0, {     0,      0}, {0x04, 0x00, 0x82, 0xff}}},
-    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0xad, 0x54, 0xd3, 0xff}}},
-};
-
-// 0x0401A5B8
-static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group2[] = {
-    {{{   103,    -25,      1}, 0, {     0,      0}, {0x67, 0xc4, 0xd6, 0xff}}},
-    {{{    95,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x52, 0xff}}},
-    {{{    75,    -32,     65}, 0, {     0,      0}, {0x08, 0xae, 0x60, 0xff}}},
-    {{{    31,    -39,      0}, 0, {     0,      0}, {0x42, 0xa3, 0xca, 0xff}}},
-    {{{    23,    -25,     35}, 0, {     0,      0}, {0x04, 0xc2, 0x6e, 0xff}}},
-    {{{    13,    -37,     41}, 0, {     0,      0}, {0x12, 0xb1, 0x61, 0xff}}},
-    {{{    55,    -43,     -3}, 0, {     0,      0}, {0x00, 0x86, 0xe0, 0xff}}},
-    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
-    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
-    {{{    16,      1,    -22}, 0, {     0,      0}, {0x04, 0x00, 0x82, 0xff}}},
-    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
-    {{{    24,    -55,     -4}, 0, {     0,      0}, {0x04, 0x8b, 0xd1, 0xff}}},
-    {{{    56,     11,     65}, 0, {     0,      0}, {0xfc, 0x1b, 0x7b, 0xff}}},
-    {{{   -15,    -12,      7}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0xff}}},
-    {{{    85,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x62, 0xff}}},
-    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
-};
-
-// 0x0401A6B8
-static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group3[] = {
-    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
-    {{{    85,     30,    -32}, 0, {     0,      0}, {0x4f, 0x21, 0xa3, 0xff}}},
-    {{{   103,    -25,      1}, 0, {     0,      0}, {0x67, 0xc4, 0xd6, 0xff}}},
-    {{{    58,     81,      0}, 0, {     0,      0}, {0x13, 0x7a, 0xe8, 0xff}}},
-    {{{    24,    -55,     -4}, 0, {     0,      0}, {0x04, 0x8b, 0xd1, 0xff}}},
-    {{{   -15,    -12,      7}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0xff}}},
-    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0xad, 0x54, 0xd3, 0xff}}},
-    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
-    {{{    13,    -37,     41}, 0, {     0,      0}, {0x12, 0xb1, 0x61, 0xff}}},
-    {{{    96,     39,     24}, 0, {     0,      0}, {0x6b, 0x39, 0x21, 0xff}}},
-    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
-    {{{    95,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x52, 0xff}}},
-    {{{    85,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x62, 0xff}}},
-};
-
-// 0x0401A798
-static const Vtx mario_right_hand_cap_top_dl_vertex_group1[] = {
-    {{{    29,    -82,     43}, 0, {     0,      0}, {0x95, 0xbd, 0x00, 0xff}}},
-    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
-    {{{   106,   -124,     90}, 0, {     0,      0}, {0x9d, 0xb2, 0x09, 0xff}}},
-    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
-    {{{   151,   -168,     67}, 0, {     0,      0}, {0xf4, 0x87, 0xdc, 0xff}}},
-    {{{   137,   -137,    134}, 0, {     0,      0}, {0x9f, 0xdf, 0x49, 0xff}}},
-    {{{   114,    -92,    -11}, 0, {     0,      0}, {0xc4, 0xb8, 0xac, 0xff}}},
-    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
-    {{{   182,    -72,     -8}, 0, {     0,      0}, {0x4d, 0xd9, 0xa4, 0xff}}},
-    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
-    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
-    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
-    {{{   183,    100,     86}, 0, {     0,      0}, {0x11, 0x7c, 0xed, 0xff}}},
-    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
-};
-
-// 0x0401A888
-static const Vtx mario_right_hand_cap_top_dl_vertex_group2[] = {
-    {{{    78,     11,     40}, 0, {     0,      0}, {0xd0, 0x3e, 0x9d, 0xff}}},
-    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
-    {{{   131,     47,     -1}, 0, {     0,      0}, {0xd7, 0x60, 0xb8, 0xff}}},
-    {{{    45,     49,     53}, 0, {     0,      0}, {0xa8, 0x5a, 0x0a, 0xff}}},
-    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
-    {{{   183,    100,     86}, 0, {     0,      0}, {0x11, 0x7c, 0xed, 0xff}}},
-    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
-    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
-    {{{    18,    -13,     33}, 0, {     0,      0}, {0x84, 0x10, 0xed, 0xff}}},
-    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
-    {{{   192,     11,     -2}, 0, {     0,      0}, {0x4b, 0x29, 0xa3, 0xff}}},
-    {{{   107,    -19,    -33}, 0, {     0,      0}, {0xd1, 0x0e, 0x8c, 0xff}}},
-    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
-    {{{   246,     29,    128}, 0, {     0,      0}, {0x72, 0x20, 0xd4, 0xff}}},
-    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
-};
-
-// 0x0401A988
-static const Vtx mario_right_hand_cap_top_dl_vertex_group3[] = {
-    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
-    {{{    18,    -13,     33}, 0, {     0,      0}, {0x84, 0x10, 0xed, 0xff}}},
-    {{{    29,    -82,     43}, 0, {     0,      0}, {0x95, 0xbd, 0x00, 0xff}}},
-    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
-    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
-    {{{   114,    -92,    -11}, 0, {     0,      0}, {0xc4, 0xb8, 0xac, 0xff}}},
-    {{{   107,    -19,    -33}, 0, {     0,      0}, {0xd1, 0x0e, 0x8c, 0xff}}},
-    {{{   182,    -72,     -8}, 0, {     0,      0}, {0x4d, 0xd9, 0xa4, 0xff}}},
-    {{{   192,     11,     -2}, 0, {     0,      0}, {0x4b, 0x29, 0xa3, 0xff}}},
-    {{{   246,     29,    128}, 0, {     0,      0}, {0x72, 0x20, 0xd4, 0xff}}},
-    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
-    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
-    {{{   273,   -105,    188}, 0, {     0,      0}, {0x5f, 0xbf, 0x34, 0xff}}},
-    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
-    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
-};
-
-// 0x0401AA88
-static const Vtx mario_right_hand_cap_top_dl_vertex_group4[] = {
-    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
-    {{{   273,   -105,    188}, 0, {     0,      0}, {0x5f, 0xbf, 0x34, 0xff}}},
-    {{{   216,   -104,    220}, 0, {     0,      0}, {0xe5, 0xcc, 0x70, 0xff}}},
-    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
-    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
-    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
-    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
-};
-
-// 0x0401AB08
-static const Vtx mario_right_hand_cap_bottom_dl_vertex[] = {
-    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
-    {{{   106,   -124,     90}, 0, {     0,      0}, {0x9d, 0xb2, 0x09, 0xff}}},
-    {{{   137,   -137,    134}, 0, {     0,      0}, {0x9f, 0xdf, 0x49, 0xff}}},
-    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
-    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
-    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
-    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
-    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
-    {{{   216,   -104,    220}, 0, {     0,      0}, {0xe5, 0xcc, 0x70, 0xff}}},
-    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
-};
-
-// 0x0401ABA8 - 0x0401ABD0
-const Gfx mario_right_hand_cap_m_logo_dl[] = {
-    gsSPVertex(mario_right_hand_cap_m_logo_dl_vertex, 5, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
-    gsSP1Triangle( 1,  4,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401ABD0 - 0x0401AD40
-const Gfx mario_right_hand_cap_top_dl[] = {
-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 2,  4,  5, 0x0,  6,  2,  1, 0x0),
-    gsSP2Triangles( 2,  6,  4, 0x0,  7,  4,  8, 0x0),
-    gsSP2Triangles( 8,  4,  6, 0x0,  4,  9,  5, 0x0),
-    gsSP2Triangles( 4,  7,  9, 0x0,  5,  9, 10, 0x0),
-    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 11, 0x0),
-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 0,  3,  1, 0x0,  5,  2,  1, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  0,  9,  3, 0x0),
-    gsSP2Triangles(10,  9,  0, 0x0, 11, 12,  2, 0x0),
-    gsSP2Triangles( 2,  5, 11, 0x0,  3,  9,  4, 0x0),
-    gsSP2Triangles(13, 14, 15, 0x0, 11,  5, 14, 0x0),
-    gsSP1Triangle( 7, 14,  5, 0x0),
-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group3, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 0,  4,  1, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 7,  8,  9, 0x0,  7,  6,  8, 0x0),
-    gsSP2Triangles(10,  7,  9, 0x0, 11, 12,  9, 0x0),
-    gsSP2Triangles(10, 13, 14, 0x0, 12, 13, 10, 0x0),
-    gsSP1Triangle(13, 12, 15, 0x0),
-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group4, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
-    gsSP2Triangles( 3,  4,  5, 0x0,  3,  5,  6, 0x0),
-    gsSP1Triangle( 7,  0,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401AD40 - 0x0401AED0
-const Gfx mario_right_hand_cap_hand_position_dl[] = {
-    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group1, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 2,  1,  4, 0x0,  2,  5,  6, 0x0),
-    gsSP2Triangles( 6,  3,  2, 0x0,  5,  2,  4, 0x0),
-    gsSP2Triangles( 3,  7,  0, 0x0,  3,  6,  8, 0x0),
-    gsSP2Triangles( 3,  8,  7, 0x0,  9,  0,  7, 0x0),
-    gsSP2Triangles(10,  0,  9, 0x0,  1,  0, 10, 0x0),
-    gsSP2Triangles(11,  1, 10, 0x0, 11,  4,  1, 0x0),
-    gsSP2Triangles( 7, 12, 13, 0x0,  8, 12,  7, 0x0),
-    gsSP2Triangles(13, 14,  7, 0x0,  7, 14,  9, 0x0),
-    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group2, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 4,  3,  6, 0x0,  6,  2,  4, 0x0),
-    gsSP2Triangles( 7,  5,  4, 0x0,  8,  9,  3, 0x0),
-    gsSP2Triangles( 3,  9, 10, 0x0, 10,  6,  3, 0x0),
-    gsSP2Triangles( 5, 11,  3, 0x0,  3, 11,  8, 0x0),
-    gsSP2Triangles(10,  0,  6, 0x0,  6,  0,  2, 0x0),
-    gsSP2Triangles( 2,  1, 12, 0x0,  5, 13, 11, 0x0),
-    gsSP2Triangles( 1, 14, 12, 0x0, 14, 15, 12, 0x0),
-    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group3, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
-    gsSP2Triangles( 7,  5,  8, 0x0,  8,  5,  9, 0x0),
-    gsSP2Triangles( 3, 10,  1, 0x0, 11, 10,  3, 0x0),
-    gsSP2Triangles( 1, 10,  2, 0x0,  2, 10, 12, 0x0),
-    gsSP2Triangles(12, 10, 13, 0x0, 10, 11, 13, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401AED0 - 0x0401AF20
-const Gfx mario_right_hand_cap_bottom_dl[] = {
-    gsSPVertex(mario_right_hand_cap_bottom_dl_vertex, 10, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 4,  3,  2, 0x0,  5,  4,  2, 0x0),
-    gsSP2Triangles( 6,  5,  2, 0x0,  6,  2,  7, 0x0),
-    gsSP2Triangles( 8,  9,  6, 0x0,  6,  7,  8, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401AF20 - 0x0401AF60
-const Gfx mario_right_hand_cap_dl[] = {
-    gsSPDisplayList(mario_right_hand_cap_top_dl),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_right_hand_cap_hand_position_dl),
-    gsSPLight(&mario_brown2_lights_group.l, 1),
-    gsSPLight(&mario_brown2_lights_group.a, 2),
-    gsSPDisplayList(mario_right_hand_cap_bottom_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401AF60
-static const Vtx mario_right_hand_cap_wings_half_1_dl_vertex[] = {
-    {{{   368,    146,      7}, 0, {   990,      0}, {0xbe, 0x65, 0xda, 0xff}}},
-    {{{   166,     37,     68}, 0, {     0,   2012}, {0xbe, 0x65, 0xda, 0xff}}},
-    {{{   212,     96,    143}, 0, {   990,   2012}, {0xbe, 0x65, 0xda, 0xff}}},
-    {{{   368,    146,      7}, 0, {   990,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   322,     87,    -67}, 0, {     0,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   166,     37,     68}, 0, {     0,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   178,   -177,    128}, 0, {   990,   2012}, {0xa8, 0xb4, 0xcf, 0xff}}},
-    {{{   149,   -100,     60}, 0, {     0,   2012}, {0xa8, 0xb4, 0xcf, 0xff}}},
-    {{{   319,   -248,    -14}, 0, {   990,      0}, {0xa8, 0xb4, 0xcf, 0xff}}},
-    {{{   290,   -171,    -81}, 0, {     0,      0}, {0xa8, 0xb4, 0xcf, 0xff}}},
-};
-
-// 0x0401B000
-static const Vtx mario_right_hand_cap_wings_half_2_dl_vertex[] = {
-    {{{   414,    206,     82}, 0, {   990,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   212,     96,    143}, 0, {     0,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   258,    156,    218}, 0, {   990,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   368,    146,      7}, 0, {     0,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
-    {{{   178,   -177,    128}, 0, {     0,   2012}, {0xa8, 0xb3, 0xcf, 0xff}}},
-    {{{   319,   -248,    -14}, 0, {     0,      0}, {0xa8, 0xb3, 0xcf, 0xff}}},
-    {{{   349,   -325,     53}, 0, {   990,      0}, {0xa8, 0xb3, 0xcf, 0xff}}},
-    {{{   207,   -253,    195}, 0, {   990,   2012}, {0xa8, 0xb3, 0xcf, 0xff}}},
-};
-
-// 0x0401B080 - 0x0401B0B0
-const Gfx mario_right_hand_cap_wings_half_1_dl[] = {
-    gsSPVertex(mario_right_hand_cap_wings_half_1_dl_vertex, 10, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  7,  9,  8, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B0B0 - 0x0401B0E0
-const Gfx mario_right_hand_cap_wings_half_2_dl[] = {
-    gsSPVertex(mario_right_hand_cap_wings_half_2_dl_vertex, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  4,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B0E0 - 0x0401B138
-const Gfx mario_right_hand_cap_wings_intial_dl[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_MODULATERGBFADEA, G_CC_MODULATERGBFADEA),
-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B138 - 0x0401B158
-const Gfx mario_right_hand_cap_wings_end_dl[] = {
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B158 - 0x0401B1D8
-const Gfx mario_right_hand_cap[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_right_hand_cap_m_logo_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPDisplayList(mario_right_hand_cap_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B1D8 - 0x0401B230
-const Gfx mario_right_hand_cap_wings[] = {
-    gsSPDisplayList(mario_right_hand_cap_wings_intial_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_right_hand_cap_wings_half_1_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_right_hand_cap_wings_half_2_dl),
-    gsSPDisplayList(mario_right_hand_cap_wings_end_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B230 - 0x0401B278
-const Gfx mario_metal_right_hand_cap_shared_dl[] = {
-    gsSPDisplayList(mario_right_hand_cap_m_logo_dl),
-    gsSPDisplayList(mario_right_hand_cap_top_dl),
-    gsSPDisplayList(mario_right_hand_cap_hand_position_dl),
-    gsSPDisplayList(mario_right_hand_cap_bottom_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B278 - 0x0401B2D0
-const Gfx mario_metal_right_hand_cap_shared_dl_wings[] = {
-    gsSPDisplayList(mario_right_hand_cap_wings_intial_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_right_hand_cap_wings_half_1_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_right_hand_cap_wings_half_2_dl),
-    gsSPDisplayList(mario_right_hand_cap_wings_end_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401B2D0
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group1[] = {
-    {{{   -21,      9,     33}, 0, {     0,      0}, {0x8a, 0xe1, 0x1f, 0x00}}},
-    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0x00}}},
-    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0x00}}},
-    {{{     0,    -35,     32}, 0, {     0,      0}, {0x9d, 0xba, 0x22, 0xff}}},
-    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
-    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0xff}}},
-    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
-    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
-    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
-    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0xff}}},
-    {{{    46,     49,     45}, 0, {     0,      0}, {0xf8, 0x44, 0x6a, 0xff}}},
-    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0xff}}},
-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0xff}}},
-    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xbc, 0x55, 0x40, 0xff}}},
-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
-};
-
-// 0x0401B3D0
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group2[] = {
-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xdd, 0xba, 0x9d, 0x00}}},
-    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xeb, 0x89, 0x24, 0xff}}},
-    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0xff}}},
-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xbc, 0x55, 0x40, 0xff}}},
-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xd0, 0x30, 0x96, 0xff}}},
-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xb3, 0x18, 0x9f, 0xff}}},
-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0xc4, 0xb9, 0xab, 0xff}}},
-    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
-    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0xff}}},
-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0xad, 0xda, 0xa9, 0xff}}},
-};
-
-// 0x0401B4B0
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group3[] = {
-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x31, 0x4d, 0xa8, 0xff}}},
-    {{{    -4,     38,      0}, 0, {     0,      0}, {0x31, 0x4d, 0xa8, 0x00}}},
-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0x00}}},
-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0xff}}},
-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x86, 0x10, 0xe4, 0xff}}},
-    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0xff}}},
-    {{{   -21,      9,     33}, 0, {     0,      0}, {0x8a, 0xe1, 0x1f, 0xff}}},
-    {{{   -15,     23,     43}, 0, {     0,      0}, {0xd6, 0x31, 0x6c, 0xff}}},
-    {{{     0,    -35,     32}, 0, {     0,      0}, {0x9d, 0xba, 0x22, 0xff}}},
-    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
-    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0xce, 0x92, 0x24, 0xff}}},
-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xd0, 0x30, 0x96, 0xff}}},
-    {{{    56,     80,      1}, 0, {     0,      0}, {0xfe, 0x41, 0x94, 0xff}}},
-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
-};
-
-// 0x0401B5A0
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group4[] = {
-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
-    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0x00}}},
-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
-    {{{    56,     80,      1}, 0, {     0,      0}, {0xfe, 0x41, 0x94, 0xff}}},
-    {{{    84,     60,     -7}, 0, {     0,      0}, {0xfb, 0x44, 0x96, 0xff}}},
-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
-    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
-    {{{    98,     10,     29}, 0, {     0,      0}, {0x0a, 0x7a, 0x21, 0xff}}},
-    {{{   153,      7,     24}, 0, {     0,      0}, {0x0c, 0x7a, 0x1e, 0xff}}},
-    {{{    46,     49,     45}, 0, {     0,      0}, {0xf8, 0x44, 0x6a, 0xff}}},
-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
-    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0xbe, 0xe5, 0x98, 0xff}}},
-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xb3, 0x18, 0x9f, 0xff}}},
-};
-
-// 0x0401B6A0
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group5[] = {
-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
-    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0x00}}},
-    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0x00}}},
-    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
-    {{{    23,    -29,     36}, 0, {     0,      0}, {0xe3, 0x8b, 0x25, 0xff}}},
-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xeb, 0x89, 0x24, 0xff}}},
-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xdd, 0xba, 0x9d, 0xff}}},
-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0xbe, 0xe5, 0x98, 0xff}}},
-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x7a, 0x08, 0x21, 0xff}}},
-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x79, 0x01, 0x25, 0xff}}},
-    {{{   153,      7,     24}, 0, {     0,      0}, {0x7a, 0x08, 0x21, 0xff}}},
-    {{{   155,    -15,     21}, 0, {     0,      0}, {0x79, 0x06, 0x23, 0xff}}},
-    {{{    84,     60,     -7}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
-    {{{    84,     48,     24}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
-    {{{   126,     84,     -3}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
-};
-
-// 0x0401B7A0
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group6[] = {
-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
-    {{{   126,     84,     -3}, 0, {     0,      0}, {0x5f, 0x47, 0x2a, 0x00}}},
-    {{{   123,     72,     21}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0x00}}},
-    {{{   126,     84,     -3}, 0, {     0,      0}, {0xfd, 0x37, 0x8e, 0xff}}},
-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
-    {{{    84,     60,     -7}, 0, {     0,      0}, {0xfb, 0x44, 0x96, 0xff}}},
-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x15, 0x2a, 0x8b, 0xff}}},
-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x0a, 0x7d, 0x0d, 0xff}}},
-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x06, 0x7e, 0xff, 0xff}}},
-    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x26, 0x1e, 0x8b, 0xff}}},
-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x18, 0xf9, 0x84, 0xff}}},
-    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
-    {{{    84,     60,     -7}, 0, {     0,      0}, {0x4d, 0x5d, 0x24, 0xff}}},
-};
-
-// 0x0401B890
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group7[] = {
-    {{{   139,     53,     25}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
-    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0x00}}},
-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x57, 0xa6, 0xf0, 0x00}}},
-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
-    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0xff}}},
-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
-    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x1c, 0x85, 0x00, 0xff}}},
-    {{{   155,    -15,     21}, 0, {     0,      0}, {0x19, 0x85, 0xf1, 0xff}}},
-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x10, 0x83, 0x00, 0xff}}},
-    {{{   101,    -29,     15}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
-    {{{   153,      7,     24}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
-    {{{    98,     10,     29}, 0, {     0,      0}, {0x07, 0xd6, 0x77, 0xff}}},
-};
-
-// 0x0401B980
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group8[] = {
-    {{{   139,     53,     25}, 0, {     0,      0}, {0xfc, 0x13, 0x7d, 0xff}}},
-    {{{   123,     72,     21}, 0, {     0,      0}, {0xfc, 0x15, 0x7d, 0x00}}},
-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0x00}}},
-    {{{    98,     10,     29}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
-    {{{   101,    -29,     15}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
-    {{{   155,    -15,     21}, 0, {     0,      0}, {0xf5, 0xef, 0x7d, 0xff}}},
-    {{{   153,      7,     24}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
-    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x57, 0xa6, 0xf0, 0xff}}},
-    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0xff}}},
-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x51, 0xa6, 0xdd, 0xff}}},
-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x18, 0xf9, 0x84, 0xff}}},
-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
-};
-
-// 0x0401BA70
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group9[] = {
-    {{{    84,     48,     24}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
-    {{{   123,     72,     21}, 0, {     0,      0}, {0xc3, 0x66, 0x29, 0x00}}},
-    {{{   126,     84,     -3}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0x00}}},
-    {{{   139,     53,     25}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
-    {{{    98,     10,     29}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
-    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0xff}}},
-    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
-    {{{   153,      7,     24}, 0, {     0,      0}, {0x0c, 0x7a, 0x1e, 0xff}}},
-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x0a, 0x7d, 0x0d, 0xff}}},
-    {{{   123,     72,     21}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
-    {{{   139,     53,     25}, 0, {     0,      0}, {0x5a, 0x52, 0x21, 0xff}}},
-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0x68, 0xc7, 0x2c, 0xff}}},
-    {{{    32,    -43,      0}, 0, {     0,      0}, {0x68, 0xc7, 0x2c, 0xff}}},
-    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
-    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
-};
-
-// 0x0401BB70
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group10[] = {
-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0xff}}},
-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0x00}}},
-    {{{    32,    -43,      0}, 0, {     0,      0}, {0x52, 0xee, 0xa2, 0x00}}},
-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0x52, 0xee, 0xa2, 0xff}}},
-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0xad, 0xda, 0xa9, 0xff}}},
-    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0xff}}},
-    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0xff}}},
-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x86, 0x10, 0xe4, 0xff}}},
-    {{{   -15,     23,     43}, 0, {     0,      0}, {0xd6, 0x31, 0x6c, 0xff}}},
-    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0xff}}},
-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x1a, 0x72, 0x2f, 0xff}}},
-    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
-    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
-};
-
-// 0x0401BC50
-static const Vtx mario_right_hand_peace_shared_dl_vertex_group11[] = {
-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x1c, 0x85, 0x00, 0x00}}},
-};
-
-// 0x0401BC80 - 0x0401BF30
-const Gfx mario_right_hand_peace_shared_dl[] = {
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
-    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
-    gsSP2Triangles( 8,  7,  9, 0x0,  7,  6, 10, 0x0),
-    gsSP2Triangles( 7, 10,  9, 0x0, 11,  8,  9, 0x0),
-    gsSP2Triangles( 7, 12,  5, 0x0, 10, 13, 14, 0x0),
-    gsSP2Triangles( 6, 15, 10, 0x0, 10, 14,  9, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group2, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 5,  6,  7, 0x0,  8,  0,  9, 0x0),
-    gsSP2Triangles(10, 11, 12, 0x0, 10, 12, 13, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
-    gsSP2Triangles( 7,  6,  8, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 9,  8, 10, 0x0,  9, 10, 11, 0x0),
-    gsSP1Triangle(12, 13, 14, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group4, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 2, 12, 13, 0x0,  3,  5, 12, 0x0),
-    gsSP1Triangle(12, 14, 15, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group5, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles( 9, 11, 12, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group6, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 4,  3,  6, 0x0,  7,  8,  9, 0x0),
-    gsSP2Triangles( 4, 10, 11, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group7, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
-    gsSP2Triangles(10,  9, 11, 0x0, 12, 13, 14, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group8, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  3,  2,  7, 0x0),
-    gsSP2Triangles( 8,  3,  7, 0x0,  9, 10, 11, 0x0),
-    gsSP1Triangle(12, 13, 14, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group9, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles(12, 13, 14, 0x0, 12, 14, 15, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group10, 14, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
-    gsSP2Triangles( 8,  9, 10, 0x0,  8, 10, 11, 0x0),
-    gsSP2Triangles(12, 13,  9, 0x0, 12,  9,  8, 0x0),
-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group11, 3, 0),
-    gsSP1Triangle( 0,  1,  2, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401BF30 - 0x0401BF50
-const Gfx mario_right_hand_peace[] = {
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_right_hand_peace_shared_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401BF50
-static const Vtx mario_cap_unused_m_logo_dl_vertex[] = {
-    {{{    33,     35,    118}, 0, {   728,    758}, {0x30, 0x26, 0x6e, 0xff}}},
-    {{{    96,     22,     45}, 0, {  1240,    876}, {0x48, 0xa4, 0x31, 0xff}}},
-    {{{    71,    101,    113}, 0, {  1028,    148}, {0x55, 0x16, 0x5b, 0xff}}},
-    {{{     0,    110,    143}, 0, {   460,     68}, {0x00, 0x34, 0x73, 0xff}}},
-    {{{   -31,     35,    118}, 0, {   206,    762}, {0xd0, 0x26, 0x6f, 0xff}}},
-    {{{   -70,    101,    113}, 0, {  -106,    158}, {0xab, 0x16, 0x5b, 0xff}}},
-    {{{   -95,     22,     46}, 0, {  -302,    890}, {0xa8, 0xb9, 0x38, 0xff}}},
-};
-
-// 0x0401BFC0
-static const Vtx mario_cap_unused_base_top_dl_vertex_group1[] = {
-    {{{   -66,      2,    139}, 0, {     0,      0}, {0xb0, 0xbb, 0x45, 0xff}}},
-    {{{     0,      0,    163}, 0, {     0,      0}, {0x00, 0xba, 0x69, 0xff}}},
-    {{{   -31,     35,    118}, 0, {     0,      0}, {0xd0, 0x26, 0x6f, 0xff}}},
-    {{{   -32,     17,    109}, 0, {     0,      0}, {0x00, 0x83, 0xf0, 0xff}}},
-    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
-    {{{   -95,     22,     46}, 0, {     0,      0}, {0xa8, 0xb9, 0x38, 0xff}}},
-    {{{  -101,     10,     -7}, 0, {     0,      0}, {0xd8, 0x89, 0x11, 0xff}}},
-    {{{   -70,    101,    113}, 0, {     0,      0}, {0xab, 0x16, 0x5b, 0xff}}},
-    {{{  -135,     70,     23}, 0, {     0,      0}, {0x84, 0x15, 0x10, 0xff}}},
-    {{{  -125,     38,    -45}, 0, {     0,      0}, {0x8d, 0xec, 0xd1, 0xff}}},
-    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
-    {{{   -41,    144,     64}, 0, {     0,      0}, {0xdc, 0x79, 0x00, 0xff}}},
-    {{{   -76,     84,    -60}, 0, {     0,      0}, {0xd5, 0x6e, 0xd3, 0xff}}},
-    {{{   136,     70,     22}, 0, {     0,      0}, {0x7b, 0x16, 0x10, 0xff}}},
-    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
-    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
-};
-
-// 0x0401C0C0
-static const Vtx mario_cap_unused_base_top_dl_vertex_group2[] = {
-    {{{    42,    144,     64}, 0, {     0,      0}, {0x2b, 0x76, 0x0d, 0xff}}},
-    {{{   136,     70,     22}, 0, {     0,      0}, {0x7b, 0x16, 0x10, 0xff}}},
-    {{{    76,     84,    -60}, 0, {     0,      0}, {0x2a, 0x6c, 0xcf, 0xff}}},
-    {{{   103,     10,     -6}, 0, {     0,      0}, {0x42, 0x96, 0x12, 0xff}}},
-    {{{   126,     38,    -46}, 0, {     0,      0}, {0x73, 0xec, 0xd0, 0xff}}},
-    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
-    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
-    {{{    67,      2,    139}, 0, {     0,      0}, {0x50, 0xba, 0x44, 0xff}}},
-    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
-    {{{    33,     35,    118}, 0, {     0,      0}, {0x30, 0x26, 0x6e, 0xff}}},
-    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
-    {{{     0,      0,    163}, 0, {     0,      0}, {0x00, 0xba, 0x69, 0xff}}},
-    {{{   -31,     35,    118}, 0, {     0,      0}, {0xd0, 0x26, 0x6f, 0xff}}},
-    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
-    {{{    49,     62,   -139}, 0, {     0,      0}, {0x32, 0x49, 0xa6, 0xff}}},
-};
-
-// 0x0401C1B0
-static const Vtx mario_cap_unused_base_top_dl_vertex_group3[] = {
-    {{{   -76,     84,    -60}, 0, {     0,      0}, {0xd5, 0x6e, 0xd3, 0xff}}},
-    {{{   -41,    144,     64}, 0, {     0,      0}, {0xdc, 0x79, 0x00, 0xff}}},
-    {{{    76,     84,    -60}, 0, {     0,      0}, {0x2a, 0x6c, 0xcf, 0xff}}},
-    {{{     0,    110,    143}, 0, {     0,      0}, {0x00, 0x34, 0x73, 0xff}}},
-    {{{    42,    144,     64}, 0, {     0,      0}, {0x2b, 0x76, 0x0d, 0xff}}},
-    {{{   -70,    101,    113}, 0, {     0,      0}, {0xab, 0x16, 0x5b, 0xff}}},
-    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
-    {{{    49,     62,   -139}, 0, {     0,      0}, {0x32, 0x49, 0xa6, 0xff}}},
-    {{{   126,     38,    -46}, 0, {     0,      0}, {0x73, 0xec, 0xd0, 0xff}}},
-    {{{   -52,      0,   -118}, 0, {     0,      0}, {0xd2, 0x9d, 0xc1, 0xff}}},
-    {{{   -49,     62,   -138}, 0, {     0,      0}, {0xce, 0x1a, 0x8f, 0xff}}},
-    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
-    {{{  -125,     38,    -45}, 0, {     0,      0}, {0x8d, 0xec, 0xd1, 0xff}}},
-    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
-    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
-};
-
-// 0x0401C2A0
-static const Vtx mario_cap_unused_base_bottom_dl_vertex[] = {
-    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
-    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
-    {{{   -52,      0,   -118}, 0, {     0,      0}, {0xd2, 0x9d, 0xc1, 0xff}}},
-    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
-    {{{   -32,     17,    109}, 0, {     0,      0}, {0x00, 0x83, 0xf0, 0xff}}},
-    {{{  -101,     10,     -7}, 0, {     0,      0}, {0xd8, 0x89, 0x11, 0xff}}},
-    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
-    {{{   103,     10,     -6}, 0, {     0,      0}, {0x42, 0x96, 0x12, 0xff}}},
-    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
-};
-
-// 0x0401C330 - 0x0401C368
-const Gfx mario_cap_unused_m_logo_dl[] = {
-    gsSPVertex(mario_cap_unused_m_logo_dl_vertex, 7, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
-    gsSP2Triangles( 3,  5,  4, 0x0,  2,  3,  0, 0x0),
-    gsSP1Triangle( 5,  6,  4, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C368 - 0x0401C4C8
-const Gfx mario_cap_unused_base_top_dl[] = {
-    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group1, 16, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 3,  1,  0, 0x0,  3,  5,  6, 0x0),
-    gsSP2Triangles( 3,  0,  5, 0x0,  5,  7,  8, 0x0),
-    gsSP2Triangles( 5,  8,  6, 0x0,  0,  2,  5, 0x0),
-    gsSP2Triangles( 6,  9, 10, 0x0,  8,  9,  6, 0x0),
-    gsSP2Triangles(11,  8,  7, 0x0,  8, 12,  9, 0x0),
-    gsSP2Triangles(12,  8, 11, 0x0, 13, 14, 15, 0x0),
-    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group2, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
-    gsSP2Triangles( 4,  2,  1, 0x0,  5,  1,  0, 0x0),
-    gsSP2Triangles( 1,  6,  3, 0x0,  6,  7,  8, 0x0),
-    gsSP2Triangles( 9,  7,  6, 0x0, 10,  4,  3, 0x0),
-    gsSP2Triangles( 9, 11,  7, 0x0,  7, 11,  8, 0x0),
-    gsSP2Triangles(12, 11,  9, 0x0, 13, 14,  4, 0x0),
-    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group3, 15, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
-    gsSP2Triangles( 5,  3,  1, 0x0,  1,  4,  2, 0x0),
-    gsSP2Triangles( 4,  3,  6, 0x0,  0,  2,  7, 0x0),
-    gsSP2Triangles( 8,  7,  2, 0x0,  9, 10, 11, 0x0),
-    gsSP2Triangles(12, 10,  9, 0x0,  7, 10,  0, 0x0),
-    gsSP2Triangles(10,  7, 11, 0x0,  0, 10, 12, 0x0),
-    gsSP2Triangles(11,  8, 13, 0x0, 14, 12,  9, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C4C8 - 0x0401C510
-const Gfx mario_cap_unused_base_bottom_dl[] = {
-    gsSPVertex(mario_cap_unused_base_bottom_dl_vertex, 9, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  3,  5, 0x0,  7,  6,  5, 0x0),
-    gsSP2Triangles( 0,  7,  5, 0x0,  0,  5,  1, 0x0),
-    gsSP1Triangle( 2,  8,  0, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C510 - 0x0401C538
-const Gfx mario_cap_unused_base_dl[] = {
-    gsSPDisplayList(mario_cap_unused_base_top_dl),
-    gsSPLight(&mario_brown2_lights_group.l, 1),
-    gsSPLight(&mario_brown2_lights_group.a, 2),
-    gsSPDisplayList(mario_cap_unused_base_bottom_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C538
-static const Vtx mario_wings_half_1_unused_dl_vertex[] = {
-    {{{   199,    247,    -55}, 0, {   990,      0}, {0x59, 0xed, 0x58, 0xff}}},
-    {{{   131,    274,     20}, 0, {     0,      0}, {0x59, 0xed, 0x58, 0xff}}},
-    {{{    69,     71,     38}, 0, {     0,   2012}, {0x59, 0xed, 0x58, 0xff}}},
-    {{{   199,    247,    -55}, 0, {   990,      0}, {0x58, 0xee, 0x58, 0xff}}},
-    {{{    69,     71,     38}, 0, {     0,   2012}, {0x58, 0xee, 0x58, 0xff}}},
-    {{{   138,     44,    -37}, 0, {   990,   2012}, {0x58, 0xee, 0x58, 0xff}}},
-    {{{  -137,     44,    -37}, 0, {   990,   2012}, {0xa8, 0xee, 0x58, 0xff}}},
-    {{{   -68,     71,     38}, 0, {     0,   2012}, {0xa8, 0xee, 0x58, 0xff}}},
-    {{{  -198,    247,    -55}, 0, {   990,      0}, {0xa8, 0xee, 0x58, 0xff}}},
-    {{{   -68,     71,     38}, 0, {     0,   2012}, {0xa7, 0xed, 0x58, 0xff}}},
-    {{{  -130,    274,     20}, 0, {     0,      0}, {0xa7, 0xed, 0x58, 0xff}}},
-    {{{  -198,    247,    -55}, 0, {   990,      0}, {0xa7, 0xed, 0x58, 0xff}}},
-};
-
-// 0x0401C5F8
-static const Vtx mario_wings_half_2_unused_dl_vertex[] = {
-    {{{   268,    219,   -132}, 0, {   990,      0}, {0x59, 0xed, 0x57, 0xff}}},
-    {{{   199,    247,    -55}, 0, {     0,      0}, {0x59, 0xed, 0x57, 0xff}}},
-    {{{   138,     44,    -37}, 0, {     0,   2012}, {0x59, 0xed, 0x57, 0xff}}},
-    {{{   207,     16,   -114}, 0, {   990,   2012}, {0x59, 0xed, 0x57, 0xff}}},
-    {{{  -206,     16,   -114}, 0, {   990,   2012}, {0xa7, 0xed, 0x57, 0xff}}},
-    {{{  -137,     44,    -37}, 0, {     0,   2012}, {0xa7, 0xed, 0x57, 0xff}}},
-    {{{  -267,    219,   -132}, 0, {   990,      0}, {0xa7, 0xed, 0x57, 0xff}}},
-    {{{  -198,    247,    -55}, 0, {     0,      0}, {0xa7, 0xed, 0x57, 0xff}}},
-};
-
-// 0x0401C678 - 0x0401C6A8
-const Gfx mario_wings_half_1_unused_dl[] = {
-    gsSPVertex(mario_wings_half_1_unused_dl_vertex, 12, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C6A8 - 0x0401C6D8
-const Gfx mario_wings_half_2_unused_dl[] = {
-    gsSPVertex(mario_wings_half_2_unused_dl_vertex, 8, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C6D8 - 0x0401C730
-const Gfx mario_cap_wings_unused_intial_dl[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_MODULATERGBA, G_CC_MODULATERGBA),
-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C730 - 0x0401C758
-const Gfx mario_cap_wings_unused_end_dl[] = {
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C758 - 0x0401C7E8 # Unreferenced, possibly a early duplicate of the cap object used in segment 03
-const Gfx mario_cap_unused_dl[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_BLENDRGBA, G_CC_BLENDRGBA),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPLight(&mario_red_lights_group.l, 1),
-    gsSPLight(&mario_red_lights_group.a, 2),
-    gsSPDisplayList(mario_cap_unused_m_logo_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPDisplayList(mario_cap_unused_base_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C7E8 - 0x0401C890 # Unreferenced, possibly an early duplicate of the cap object used in segment 03
-const Gfx mario_metal_cap_unused_dl[] = {
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsSPDisplayList(mario_cap_unused_m_logo_dl),
-    gsSPDisplayList(mario_cap_unused_base_top_dl),
-    gsSPDisplayList(mario_cap_unused_base_bottom_dl),
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C890 - 0x0401C8E8 # Unreferenced, unused like the duplicated cap, same case
-const Gfx mario_cap_wings_unused[] = {
-    gsSPDisplayList(mario_cap_wings_unused_intial_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_1_unused_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_2_unused_dl),
-    gsSPDisplayList(mario_cap_wings_unused_end_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C8E8 - 0x0401C940 # Unreferenced, unused like the duplicated cap, same case
-const Gfx mario_metal_cap_wings_unused[] = {
-    gsSPDisplayList(mario_cap_wings_unused_intial_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_1_unused_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_2_unused_dl),
-    gsSPDisplayList(mario_cap_wings_unused_end_dl),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C940
-static const Vtx mario_wings_half_1_dl_vertex[] = {
-    {{{  -105,    212,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
-    {{{  -105,      0,      0}, 0, {     0,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
-    {{{     0,      0,      0}, 0, {   990,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
-    {{{     0,    212,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
-};
-
-// 0x0401C980
-static const Vtx mario_wings_half_2_dl_vertex[] = {
-    {{{     0,      0,      0}, 0, {     0,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
-    {{{   106,    212,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
-    {{{     0,    212,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
-    {{{   106,      0,      0}, 0, {   990,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
-};
-
-// 0x0401C9C0 - 0x0401C9E0
-const Gfx mario_wings_half_1_dl[] = {
-    gsSPVertex(mario_wings_half_1_dl_vertex, 4, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401C9E0 - 0x0401CA00
-const Gfx mario_wings_half_2_dl[] = {
-    gsSPVertex(mario_wings_half_2_dl_vertex, 4, 0),
-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401CA00 - 0x0401CAB8
-const Gfx mario_cap_wings[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_1_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_2_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401CAB8 - 0x0401CB70
-const Gfx mario_cap_wings_transparent[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_DECALFADEA, G_CC_DECALFADEA),
-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_1_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_2_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401CB70 - 0x0401CC28
-const Gfx mario_metal_cap_wings[] = {
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsSPLight(&mario_white_lights_group.l, 1),
-    gsSPLight(&mario_white_lights_group.a, 2),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_1_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_2_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsSPEndDisplayList(),
-};
-
-// 0x0401CC28 - 0x0401CD20
-const Gfx mario_metal_cap_wings_transparent[] = {
-    gsDPPipeSync(),
-    gsSPClearGeometryMode(G_TEXTURE_GEN),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPSetCombineMode(G_CC_DECALFADEA, G_CC_DECALFADEA),
-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
-    gsDPTileSync(),
-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_1_dl),
-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
-    gsDPLoadSync(),
-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
-    gsSPDisplayList(mario_wings_half_2_dl),
-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
-    gsDPPipeSync(),
-    gsSPSetGeometryMode(G_TEXTURE_GEN | G_CULL_BACK | G_SHADING_SMOOTH),
-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
-    gsSPEndDisplayList(),
+Gfx mario_material_revert_render_settings[] = {
+	gsDPPipeSync(),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPClearGeometryMode(G_TEXTURE_GEN),
+    //gsSPClearGeometryMode(G_POINT_LIGHTING),
+    gsSPNumLights(NUMLIGHTS_1),
+	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 0),
+	gsDPSetEnvColor(255, 255, 255, 255),
+	gsDPSetAlphaCompare(G_AC_NONE),
+	gsSPEndDisplayList(),
 };
diff --git a/data/behavior_data.c b/data/behavior_data.c
index 9d11492..8a6a828 100644
--- a/data/behavior_data.c
+++ b/data/behavior_data.c
@@ -4848,8 +4848,9 @@ const BehaviorScript bhvControllablePlatformSub[] = {
 
 const BehaviorScript bhvBreakableBoxSmall[] = {
     BEGIN(OBJ_LIST_DESTRUCTIVE),
-    OR_INT(oFlags, (OBJ_FLAG_HOLDABLE | OBJ_FLAG_COMPUTE_DIST_TO_MARIO | OBJ_FLAG_SET_FACE_YAW_TO_MOVE_YAW | OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE)),
+    OR_INT(oFlags, (OBJ_FLAG_HOLDABLE | OBJ_FLAG_COMPUTE_DIST_TO_MARIO | OBJ_FLAG_SET_FACE_YAW_TO_MOVE_YAW | OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE | OBJ_FLAG_EMIT_LIGHT)),
     DROP_TO_FLOOR(),
+    SET_FLOAT(oGraphYOffset, 25),
     SET_HOME(),
     CALL_NATIVE(bhv_breakable_box_small_init),
     BEGIN_LOOP(),
diff --git a/enhancements/lighting.patch b/enhancements/lighting.patch
new file mode 100644
index 0000000..7def63c
--- /dev/null
+++ b/enhancements/lighting.patch
@@ -0,0 +1,19386 @@
+diff --git a/Makefile b/Makefile
+index ae68f64..6b2ed37 100644
+--- a/Makefile
++++ b/Makefile
+@@ -43,7 +43,7 @@ ifeq      ($(VERSION),jp)
+ else ifeq ($(VERSION),us)
+   DEFINES   += VERSION_US=1
+   OPT_FLAGS := -g
+-  GRUCODE   ?= f3d_old
++  GRUCODE   ?= f3dzex
+   VERSION_JP_US  ?= true
+ else ifeq ($(VERSION),eu)
+   DEFINES   += VERSION_EU=1
+@@ -124,7 +124,7 @@ endif
+ # COMPARE - whether to verify the SHA-1 hash of the ROM after building
+ #   1 - verifies the SHA-1 hash of the selected version of the game
+ #   0 - does not verify the hash
+-COMPARE ?= 1
++COMPARE ?= 0
+ $(eval $(call validate-option,COMPARE,0 1))
+ 
+ TARGET_STRING := sm64.$(VERSION).$(GRUCODE)
+diff --git a/README.md b/README.md
+index 4cd8159..b8d2468 100644
+--- a/README.md
++++ b/README.md
+@@ -1,193 +1,3 @@
+-# Super Mario 64
++# Super Mario 64 Lighting Engine
+ 
+-- This repo contains a full decompilation of Super Mario 64 (J), (U), (E), and (SH).
+-- Naming and documentation of the source code and data structures are in progress.
+-
+-It builds the following ROMs:
+-
+-* sm64.jp.z64 `sha1: 8a20a5c83d6ceb0f0506cfc9fa20d8f438cafe51`
+-* sm64.us.z64 `sha1: 9bef1128717f958171a4afac3ed78ee2bb4e86ce`
+-* sm64.eu.z64 `sha1: 4ac5721683d0e0b6bbb561b58a71740845dceea9`
+-* sm64.sh.z64 `sha1: 3f319ae697533a255a1003d09202379d78d5a2e0`
+-
+-This repo does not include all assets necessary for compiling the ROMs.
+-A prior copy of the game is required to extract the assets.
+-
+-## Quick Start (for Ubuntu)
+-
+-1. Install prerequisites: `sudo apt install -y build-essential git binutils-mips-linux-gnu python3`
+-2. Clone the repo from within Linux: `git clone https://github.com/n64decomp/sm64.git`
+-3. Place a Super Mario 64 ROM called `baserom.<VERSION>.z64` into the project folder for asset extraction, where `VERSION` can be `us`, `jp`, or `eu`.
+-4. Run `make` to build. Qualify the version through `make VERSION=<VERSION>`. Add `-j4` to improve build speed (hardware dependent).
+-
+-Ensure the repo path length does not exceed 255 characters. Long path names result in build errors.
+-
+-## Installation
+-
+-### Windows
+-
+-Install WSL and a distro of your choice following
+-[Windows Subsystem for Linux Installation Guide for Windows 10.](https://docs.microsoft.com/en-us/windows/wsl/install-win10)
+-We recommend either Debian or Ubuntu 18.04 Linux distributions under WSL.
+-Note: WSL1 does not currently support Ubuntu 20.04.
+-
+-Next, clone the SM64 repo from within the Linux shell:
+-`git clone https://github.com/n64decomp/sm64.git`
+-
+-Then continue following the directions in the [Linux](#linux) installation section below.
+-
+-### Linux
+-
+-There are 3 steps to set up a working build.
+-
+-#### Step 1: Install dependencies
+-
+-The build system has the following package requirements:
+- * binutils-mips
+- * capstone
+- * pkgconf
+- * python3 >= 3.6
+-
+-Dependency installation instructions for common Linux distros are provided below:
+-
+-##### Debian / Ubuntu
+-To install build dependencies:
+-```
+-sudo apt install -y binutils-mips-linux-gnu build-essential git libcapstone-dev pkgconf python3
+-```
+-
+-##### Arch Linux
+-To install build dependencies:
+-```
+-sudo pacman -S base-devel capstone python
+-```
+-Install the following AUR packages:
+-* [mips64-elf-binutils](https://aur.archlinux.org/packages/mips64-elf-binutils) (AUR)
+-
+-
+-##### Other Linux distributions
+-
+-Most modern Linux distributions should have equivalent packages to the other two listed above.
+-You may have to use a different version of GNU binutils. Listed below are fully compatible binutils
+-distributions with support in the makefile, and examples of distros that offer them:
+-
+-* `mips64-elf-` (Arch AUR)
+-* `mips-linux-gnu-` (Ubuntu and other Debian-based distros)
+-* `mips64-linux-gnu-` (RHEL/CentOS/Fedora)
+-
+-You may also use [Docker](#docker-installation) to handle installing an image with minimal dependencies.
+-
+-#### Step 2: Copy baserom(s) for asset extraction
+-
+-For each version (jp/us/eu) for which you want to build a ROM, put an existing ROM at
+-`./baserom.<VERSION>.z64` for asset extraction.
+-
+-##### Step 3: Build the ROM
+-
+-Run `make` to build the ROM (defaults to `VERSION=us`).
+-Other examples:
+-```
+-make VERSION=jp -j4       # build (J) version instead with 4 jobs
+-make VERSION=eu COMPARE=0 # build (EU) version but do not compare ROM hashes
+-```
+-
+-Resulting artifacts can be found in the `build` directory.
+-
+-The full list of configurable variables are listed below, with the default being the first listed:
+-
+-* ``VERSION``: ``us``, ``jp``, ``eu``, ``sh`` (WIP)
+-* ``GRUCODE``: ``f3d_old``, ``f3d_new``, ``f3dex``, ``f3dex2``, ``f3dzex``
+-* ``COMPARE``: ``1`` (compare ROM hash), ``0`` (do not compare ROM hash)
+-* ``NON_MATCHING``: Use functionally equivalent C implementations for non-matchings (Currently there aren't any non-matchings, but this will apply to Shindou and iQue). Also will avoid instances of undefined behavior.
+-* ``CROSS``: Cross-compiler tool prefix (Example: ``mips64-elf-``).
+-
+-### macOS
+-
+-With macOS, you may either use Homebrew or [Docker](#docker-installation).
+-
+-#### Homebrew
+-
+-#### Step 1: Install dependencies
+-Install [Homebrew](https://brew.sh) and the following dependencies:
+-```
+-brew update
+-brew install capstone coreutils gcc make pkg-config tehzz/n64-dev/mips64-elf-binutils
+-```
+-
+-#### Step 2: Copy baserom(s) for asset extraction
+-
+-For each version (jp/us/eu) for which you want to build a ROM, put an existing ROM at
+-`./baserom.<VERSION>.z64` for asset extraction.
+-
+-##### Step 3: Build the ROM
+-
+-Use Homebrew's GNU make because the version included with macOS is too old.
+-
+-```
+-gmake VERSION=jp -j4       # build (J) version instead with 4 jobs
+-```
+-
+-### Docker Installation
+-
+-#### Create Docker image
+-
+-After installing and starting Docker, create the docker image. This only needs to be done once.
+-```
+-docker build -t sm64 .
+-```
+-
+-#### Build
+-
+-To build, mount the local filesystem into the Docker container and build the ROM with `docker run sm64 make`.
+-
+-##### macOS example for (U):
+-```
+-docker run --rm --mount type=bind,source="$(pwd)",destination=/sm64 sm64 make VERSION=us -j4
+-```
+-
+-##### Linux example for (U):
+-For a Linux host, Docker needs to be instructed which user should own the output files:
+-```
+-docker run --rm --mount type=bind,source="$(pwd)",destination=/sm64 --user $UID:$GID sm64 make VERSION=us -j4
+-```
+-
+-Resulting artifacts can be found in the `build` directory.
+-
+-## Project Structure
+-	
+-	sm64
+-	├── actors: object behaviors, geo layout, and display lists
+-	├── asm: handwritten assembly code, rom header
+-	│   └── non_matchings: asm for non-matching sections
+-	├── assets: animation and demo data
+-	│   ├── anims: animation data
+-	│   └── demos: demo data
+-	├── bin: C files for ordering display lists and textures
+-	├── build: output directory
+-	├── data: behavior scripts, misc. data
+-	├── doxygen: documentation infrastructure
+-	├── enhancements: example source modifications
+-	├── include: header files
+-	├── levels: level scripts, geo layout, and display lists
+-	├── lib: SDK library code
+-	├── rsp: audio and Fast3D RSP assembly code
+-	├── sound: sequences, sound samples, and sound banks
+-	├── src: C source code for game
+-	│   ├── audio: audio code
+-	│   ├── buffers: stacks, heaps, and task buffers
+-	│   ├── engine: script processing engines and utils
+-	│   ├── game: behaviors and rest of game source
+-	│   ├── goddard: Mario intro screen
+-	│   └── menu: title screen and file, act, and debug level selection menus
+-	├── text: dialog, level names, act names
+-	├── textures: skybox and generic texture data
+-	└── tools: build tools
+-
+-## Contributing
+-
+-Pull requests are welcome. For major changes, please open an issue first to
+-discuss what you would like to change.
+-
+-Run `clang-format` on your code to ensure it meets the project's coding standards.
+-
+-Official Discord: [discord.gg/DuYH3Fh](https://discord.gg/DuYH3Fh)
++- This repo contains a WIP lighting engine for SM64. It supports directional lights and point lights, the latter being able to use either dynamic directional lights or real point lights if using F3DZEX.
+diff --git a/actors/goomba/model.inc.c b/actors/goomba/model.inc.c
+index f45d391..9dcb942 100644
+--- a/actors/goomba/model.inc.c
++++ b/actors/goomba/model.inc.c
+@@ -173,8 +173,10 @@ static const Vtx goomba_seg8_vertex_0801B238[] = {
+ 
+ // 0x0801B2E8 - 0x0801B560
+ const Gfx goomba_seg8_dl_0801B2E8[] = {
+-    gsSPLight(&goomba_seg8_lights_0801AD30.l, 1),
+-    gsSPLight(&goomba_seg8_lights_0801AD30.a, 2),
++    // gsSPLight(&goomba_seg8_lights_0801AD30.l, 1),
++    // gsSPLight(&goomba_seg8_lights_0801AD30.a, 2),
++    gsDPPipeSync(),
++    gsDPSetEnvColor(0xFF, 0xFF, 0xFF, 0xFF),
+     gsSPVertex(goomba_seg8_vertex_0801AD48, 15, 0),
+     gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+     gsSP2Triangles( 6,  5,  4, 0x0,  5,  7,  3, 0x0),
+@@ -238,7 +240,7 @@ const Gfx goomba_seg8_dl_0801B5A0[] = {
+     gsSPDisplayList(goomba_seg8_dl_0801B2E8),
+     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+     gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
++    gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE),
+     gsSPEndDisplayList(),
+ };
+ 
+@@ -262,10 +264,10 @@ const Gfx goomba_seg8_dl_0801B5F0[] = {
+ 
+ // 0x0801B618
+ static const Vtx goomba_seg8_vertex_0801B618[] = {
+-    {{{    18,     18,      0}, 0, {   990,      0}, {0xff, 0xff, 0xff, 0xff}}},
+-    {{{   -18,     18,      0}, 0, {     0,      0}, {0xff, 0xff, 0xff, 0xff}}},
+-    {{{   -18,    -18,      0}, 0, {     0,    990}, {0xff, 0xff, 0xff, 0xff}}},
+-    {{{    18,    -18,      0}, 0, {   990,    990}, {0xff, 0xff, 0xff, 0xff}}},
++    {{{    18,     18,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
++    {{{   -18,     18,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
++    {{{   -18,    -18,      0}, 0, {     0,    990}, {0x00, 0x00, 0x7f, 0xff}}},
++    {{{    18,    -18,      0}, 0, {   990,    990}, {0x00, 0x00, 0x7f, 0xff}}},
+ };
+ 
+ // 0x0801B658 - 0x0801B690
+@@ -281,8 +283,8 @@ const Gfx goomba_seg8_dl_0801B658[] = {
+ // 0x0801B690 - 0x0801B700
+ const Gfx goomba_seg8_dl_0801B690[] = {
+     gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+-    gsSPClearGeometryMode(G_LIGHTING),
++    gsDPSetCombineMode(G_CC_MODULATEIDECALA, G_CC_MODULATEIDECALA),
++    // gsSPClearGeometryMode(G_LIGHTING),
+     gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+     gsDPTileSync(),
+@@ -291,7 +293,7 @@ const Gfx goomba_seg8_dl_0801B690[] = {
+     gsSPDisplayList(goomba_seg8_dl_0801B658),
+     gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+     gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
++    gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, SHADE),
+     gsSPSetGeometryMode(G_LIGHTING),
+     gsSPEndDisplayList(),
+ };
+@@ -772,8 +774,10 @@ static const Vtx goomba_seg8_vertex_0801CDF0[] = {
+ 
+ // 0x0801CE20 - 0x0801CF78
+ const Gfx goomba_seg8_dl_0801CE20[] = {
+-    gsSPLight(&goomba_seg8_lights_080194D0.l, 1),
+-    gsSPLight(&goomba_seg8_lights_080194D0.a, 2),
++    // gsSPLight(&goomba_seg8_lights_080194D0.l, 1),
++    // gsSPLight(&goomba_seg8_lights_080194D0.a, 2),
++    gsDPPipeSync(),
++    gsDPSetEnvColor(0x54, 0x2e, 0x10, 0xFF),
+     gsSPVertex(goomba_seg8_vertex_0801B700, 16, 0),
+     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+     gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+@@ -801,8 +805,10 @@ const Gfx goomba_seg8_dl_0801CE20[] = {
+ 
+ // 0x0801CF78 - 0x0801D0D0
+ const Gfx goomba_seg8_dl_0801CF78[] = {
+-    gsSPLight(&goomba_seg8_lights_080194E8.l, 1),
+-    gsSPLight(&goomba_seg8_lights_080194E8.a, 2),
++    // gsSPLight(&goomba_seg8_lights_080194E8.l, 1),
++    // gsSPLight(&goomba_seg8_lights_080194E8.a, 2),
++    gsDPPipeSync(),
++    gsDPSetEnvColor(0x61, 0x34, 0x13, 0xFF),
+     gsSPVertex(goomba_seg8_vertex_0801BA50, 15, 0),
+     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+     gsSP2Triangles( 1,  4,  5, 0x0,  1,  5,  2, 0x0),
+@@ -830,8 +836,10 @@ const Gfx goomba_seg8_dl_0801CF78[] = {
+ 
+ // 0x0801D0D0 - 0x0801D360
+ const Gfx goomba_seg8_dl_0801D0D0[] = {
+-    gsSPLight(&goomba_seg8_lights_08019500.l, 1),
+-    gsSPLight(&goomba_seg8_lights_08019500.a, 2),
++    // gsSPLight(&goomba_seg8_lights_08019500.l, 1),
++    // gsSPLight(&goomba_seg8_lights_08019500.a, 2),
++    gsDPPipeSync(),
++    gsDPSetEnvColor(0x77, 0x42, 0x20, 0xFF),
+     gsSPVertex(goomba_seg8_vertex_0801BDC0, 16, 0),
+     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+     gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+@@ -882,8 +890,10 @@ const Gfx goomba_seg8_dl_0801D0D0[] = {
+ 
+ // 0x0801D360 - 0x0801D760
+ const Gfx goomba_seg8_dl_0801D360[] = {
+-    gsSPLight(&goomba_seg8_lights_08019518.l, 1),
+-    gsSPLight(&goomba_seg8_lights_08019518.a, 2),
++    // gsSPLight(&goomba_seg8_lights_08019518.l, 1),
++    // gsSPLight(&goomba_seg8_lights_08019518.a, 2),
++    gsDPPipeSync(),
++    gsDPSetEnvColor(0xde, 0xb4, 0x4e, 0xFF),
+     gsSPVertex(goomba_seg8_vertex_0801C620, 16, 0),
+     gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+     gsSP2Triangles( 4,  5,  1, 0x0,  4,  1,  0, 0x0),
+@@ -957,6 +967,6 @@ const Gfx goomba_seg8_dl_0801D360[] = {
+ 
+ // 0x0801D760 - 0x0801D770
+ const Gfx goomba_seg8_dl_0801D760[] = {
+-    gsSPNumLights(NUMLIGHTS_1),
++    // gsSPNumLights(NUMLIGHTS_1),
+     gsSPEndDisplayList(),
+ };
+diff --git a/actors/group0.c b/actors/group0.c
+index f852e6c..3b4a6d2 100644
+--- a/actors/group0.c
++++ b/actors/group0.c
+@@ -25,3 +25,5 @@
+ #include "white_particle_small/model.inc.c"
+ 
+ #include "sparkle_animation/model.inc.c"
++
++#include "lantern/model.inc.c"
+\ No newline at end of file
+diff --git a/actors/group0.h b/actors/group0.h
+index 44f8b05..66c4dd3 100644
+--- a/actors/group0.h
++++ b/actors/group0.h
+@@ -342,4 +342,8 @@ extern const Gfx white_particle_small_dl_end[];
+ extern const Gfx white_particle_small_dl[];
+ extern const Gfx white_particle_small_unused_dl[];
+ 
++#include "mario/geo_header.h"
++
++#include "lantern/geo_header.h"
++
+ #endif
+diff --git a/actors/group0_geo.c b/actors/group0_geo.c
+index bddefae..0ecad78 100644
+--- a/actors/group0_geo.c
++++ b/actors/group0_geo.c
+@@ -16,3 +16,5 @@
+ #include "water_splash/geo.inc.c"
+ #include "sparkle_animation/geo.inc.c"
+ #include "mario/geo.inc.c"
++
++#include "lantern/geo.inc.c"
+\ No newline at end of file
+diff --git a/actors/lantern/geo.inc.c b/actors/lantern/geo.inc.c
+new file mode 100644
+index 0000000..8de236e
+--- /dev/null
++++ b/actors/lantern/geo.inc.c
+@@ -0,0 +1,13 @@
++#include "src/game/envfx_snow.h"
++
++const GeoLayout lantern_geo[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, lantern_Lantern_mesh),
++		GEO_BILLBOARD_WITH_PARAMS_AND_DL(LAYER_TRANSPARENT, 0, 0, 0, lantern_Flame_mesh),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, lantern_Glass_mesh),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, lantern_material_revert_render_settings),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, lantern_material_revert_render_settings),
++	GEO_CLOSE_NODE(),
++	GEO_END(),
++};
+diff --git a/actors/lantern/geo_header.h b/actors/lantern/geo_header.h
+new file mode 100644
+index 0000000..acbc328
+--- /dev/null
++++ b/actors/lantern/geo_header.h
+@@ -0,0 +1,19 @@
++extern const GeoLayout lantern_geo[];
++extern Vtx lantern_Lantern_mesh_vtx_0[20];
++extern Gfx lantern_Lantern_mesh_tri_0[];
++extern Vtx lantern_Lantern_mesh_vtx_1[6];
++extern Gfx lantern_Lantern_mesh_tri_1[];
++extern Vtx lantern_Lantern_mesh_vtx_2[18];
++extern Gfx lantern_Lantern_mesh_tri_2[];
++extern Vtx lantern_Lantern_mesh_vtx_3[16];
++extern Gfx lantern_Lantern_mesh_tri_3[];
++extern Vtx lantern_Flame_mesh_vtx_0[3];
++extern Gfx lantern_Flame_mesh_tri_0[];
++extern Vtx lantern_Glass_mesh_vtx_0[13];
++extern Gfx lantern_Glass_mesh_tri_0[];
++
++extern Gfx lantern_Lantern_mesh[];
++extern Gfx lantern_Flame_mesh[];
++extern Gfx lantern_Glass_mesh[];
++extern Gfx lantern_material_revert_render_settings[];
++
+diff --git a/actors/lantern/model.inc.c b/actors/lantern/model.inc.c
+new file mode 100644
+index 0000000..7415b9c
+--- /dev/null
++++ b/actors/lantern/model.inc.c
+@@ -0,0 +1,359 @@
++Gfx lantern_sm64lanternfire_i8_aligner[] = {gsSPEndDisplayList()};
++u8 lantern_sm64lanternfire_i8[] = {
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x2, 0x6, 0x2, 0x4, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x4, 0x18, 0xC, 0x8, 0x7, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x8, 
++	0x19, 0x2F, 0x3B, 0xE, 0xB, 0x5, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xC, 0x3, 0x23, 0x43, 0x2E, 
++	0x4D, 0x33, 0x10, 0x15, 0x4, 0x1, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x1E, 0x11, 0x31, 0x67, 0x5F, 0x5F, 0x4E, 
++	0x1D, 0x33, 0x18, 0x2, 0x0, 0x0, 0x0, 0x1, 0xD, 
++	0xF, 0x36, 0x50, 0x72, 0x72, 0x64, 0x5B, 0x55, 0x5B, 
++	0x18, 0x5, 0x1, 0x0, 0x0, 0x2, 0x21, 0x2A, 0x5C, 
++	0x7E, 0x7D, 0x8C, 0x7F, 0x65, 0x62, 0x44, 0x3B, 0x18, 
++	0x4, 0x0, 0x0, 0x13, 0x39, 0x38, 0x70, 0x87, 0x8C, 
++	0x9F, 0x9C, 0x85, 0x96, 0x6A, 0x4A, 0x2F, 0x3, 0x0, 
++	0x0, 0x20, 0x44, 0x5C, 0xA4, 0xA4, 0x99, 0xB3, 0xBE, 
++	0xC3, 0x7E, 0xA6, 0x92, 0x3F, 0x4, 0x0, 0x0, 0x3, 
++	0x6E, 0x98, 0xB3, 0xD7, 0xAD, 0xBD, 0xCA, 0xE5, 0xCE, 
++	0xAD, 0x8A, 0x68, 0xA, 0x0, 0x0, 0x1A, 0x7A, 0x9B, 
++	0xE1, 0xE3, 0xDD, 0xE0, 0xED, 0xF5, 0xE7, 0xD1, 0xD2, 
++	0x83, 0x12, 0x0, 0x0, 0xE, 0x73, 0xC0, 0xF4, 0xF2, 
++	0xFD, 0xFA, 0xFB, 0xFB, 0xF1, 0xD5, 0xAE, 0x87, 0x6, 
++	0x0, 0x0, 0x2, 0x31, 0x92, 0xD9, 0xF5, 0xFF, 0xFF, 
++	0xFE, 0xFB, 0xE0, 0xB6, 0xA9, 0x2A, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x21, 0x4C, 0x72, 0x99, 0x9F, 0xA1, 0x8B, 
++	0x66, 0x4F, 0x16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 
++};
++
++Vtx lantern_Lantern_mesh_vtx_cull[8] = {
++	{{{-61, -75, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-61, -75, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-61, 58, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-61, 58, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{61, -75, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{61, -75, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{61, 58, 26},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{61, 58, -42},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++};
++
++Vtx lantern_Lantern_mesh_vtx_0[20] = {
++	{{{36, -75, 21},0, {-16, 1008},{0x0, 0x71, 0x3A, 0xFF}}},
++	{{{0, -10, 0},0, {-16, 1008},{0x0, 0x71, 0x3A, 0xFF}}},
++	{{{-36, -75, 21},0, {-16, 1008},{0x0, 0x71, 0x3A, 0xFF}}},
++	{{{0, -75, -42},0, {-16, 1008},{0x32, 0x71, 0xE3, 0xFF}}},
++	{{{0, -10, 0},0, {-16, 1008},{0x32, 0x71, 0xE3, 0xFF}}},
++	{{{36, -75, 21},0, {-16, 1008},{0x32, 0x71, 0xE3, 0xFF}}},
++	{{{-36, -75, 21},0, {-16, 1008},{0xCE, 0x71, 0xE3, 0xFF}}},
++	{{{0, -10, 0},0, {-16, 1008},{0xCE, 0x71, 0xE3, 0xFF}}},
++	{{{0, -75, -42},0, {-16, 1008},{0xCE, 0x71, 0xE3, 0xFF}}},
++	{{{-31, -24, 18},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{31, -24, 18},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{0, -24, -36},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{0, -73, 0},0, {832, 832},{0x73, 0x36, 0x0, 0xFF}}},
++	{{{-40, 11, -12},0, {160, 832},{0x7A, 0xDD, 0x0, 0xFF}}},
++	{{{-40, 11, 12},0, {160, 832},{0x7A, 0xDD, 0x0, 0xFF}}},
++	{{{0, 37, 10},0, {160, 160},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{0, 37, -10},0, {160, 160},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{40, 11, 12},0, {832, 160},{0x86, 0xDD, 0x0, 0xFF}}},
++	{{{40, 11, -12},0, {832, 160},{0x86, 0xDD, 0x0, 0xFF}}},
++	{{{0, -73, 0},0, {832, 832},{0x8D, 0x36, 0x0, 0xFF}}},
++};
++
++Gfx lantern_Lantern_mesh_tri_0[] = {
++	gsSPVertex(lantern_Lantern_mesh_vtx_0 + 0, 20, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
++	gsSP2Triangles(6, 7, 8, 0, 9, 10, 11, 0),
++	gsSP2Triangles(12, 13, 14, 0, 13, 15, 14, 0),
++	gsSP2Triangles(13, 16, 15, 0, 16, 17, 15, 0),
++	gsSP2Triangles(16, 18, 17, 0, 18, 19, 17, 0),
++	gsSPEndDisplayList(),
++};Vtx lantern_Lantern_mesh_vtx_1[6] = {
++	{{{0, -75, -42},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-36, -75, 21},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{36, -75, 21},0, {-16, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-7, -44, 26},0, {-16, 1008},{0x0, 0xBF, 0x93, 0xFF}}},
++	{{{0, -33, 19},0, {-16, 1008},{0x0, 0xBF, 0x93, 0xFF}}},
++	{{{7, -44, 26},0, {-16, 1008},{0x0, 0xBF, 0x93, 0xFF}}},
++};
++
++Gfx lantern_Lantern_mesh_tri_1[] = {
++	gsSPVertex(lantern_Lantern_mesh_vtx_1 + 0, 6, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
++	gsSPEndDisplayList(),
++};Vtx lantern_Lantern_mesh_vtx_2[18] = {
++	{{{0, -73, 0},0, {-16, 1008},{0x0, 0x73, 0xCA, 0xFF}}},
++	{{{-31, -24, 18},0, {-16, 1008},{0x0, 0x73, 0xCA, 0xFF}}},
++	{{{31, -24, 18},0, {-16, 1008},{0x0, 0x73, 0xCA, 0xFF}}},
++	{{{0, -73, 0},0, {-16, 1008},{0x99, 0x2C, 0x3C, 0xFF}}},
++	{{{31, -24, 18},0, {-16, 1008},{0x99, 0x2C, 0x3C, 0xFF}}},
++	{{{0, -24, -36},0, {-16, 1008},{0x99, 0x2C, 0x3C, 0xFF}}},
++	{{{0, -73, 0},0, {-16, 1008},{0x67, 0x2C, 0x3C, 0xFF}}},
++	{{{0, -24, -36},0, {-16, 1008},{0x67, 0x2C, 0x3C, 0xFF}}},
++	{{{-31, -24, 18},0, {-16, 1008},{0x67, 0x2C, 0x3C, 0xFF}}},
++	{{{-7, -44, 26},0, {-16, 1008},{0x0, 0x54, 0xA1, 0xFF}}},
++	{{{7, -44, 26},0, {-16, 1008},{0x0, 0x54, 0xA1, 0xFF}}},
++	{{{0, -73, 0},0, {-16, 1008},{0x0, 0x54, 0xA1, 0xFF}}},
++	{{{7, -44, 26},0, {-16, 1008},{0x98, 0xE0, 0x41, 0xFF}}},
++	{{{0, -33, 19},0, {-16, 1008},{0x98, 0xE0, 0x41, 0xFF}}},
++	{{{0, -73, 0},0, {-16, 1008},{0x98, 0xE0, 0x41, 0xFF}}},
++	{{{0, -33, 19},0, {-16, 1008},{0x68, 0xE0, 0x41, 0xFF}}},
++	{{{-7, -44, 26},0, {-16, 1008},{0x68, 0xE0, 0x41, 0xFF}}},
++	{{{0, -73, 0},0, {-16, 1008},{0x68, 0xE0, 0x41, 0xFF}}},
++};
++
++Gfx lantern_Lantern_mesh_tri_2[] = {
++	gsSPVertex(lantern_Lantern_mesh_vtx_2 + 0, 18, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
++	gsSP2Triangles(6, 7, 8, 0, 9, 10, 11, 0),
++	gsSP2Triangles(12, 13, 14, 0, 15, 16, 17, 0),
++	gsSPEndDisplayList(),
++};Vtx lantern_Lantern_mesh_vtx_3[16] = {
++	{{{0, -73, 0},0, {1008, 1008},{0x3B, 0x2B, 0x68, 0xFF}}},
++	{{{-40, 11, -12},0, {160, 832},{0x39, 0xF3, 0x71, 0xFF}}},
++	{{{-61, 11, 0},0, {-16, 1008},{0x39, 0xF7, 0x71, 0xFF}}},
++	{{{0, 58, 0},0, {-16, -16},{0x0, 0xBD, 0x6C, 0xFF}}},
++	{{{0, 37, -10},0, {160, 160},{0x0, 0xBD, 0x6C, 0xFF}}},
++	{{{61, 11, 0},0, {1008, -16},{0xC7, 0xF7, 0x71, 0xFF}}},
++	{{{40, 11, -12},0, {832, 160},{0xC7, 0xF3, 0x71, 0xFF}}},
++	{{{0, -73, 0},0, {832, 832},{0xC5, 0x2B, 0x68, 0xFF}}},
++	{{{0, -73, 0},0, {832, 832},{0x3B, 0x2B, 0x98, 0xFF}}},
++	{{{-61, 11, 0},0, {-16, 1008},{0x39, 0xF6, 0x8F, 0xFF}}},
++	{{{-40, 11, 12},0, {160, 832},{0x39, 0xF3, 0x8F, 0xFF}}},
++	{{{0, 58, 0},0, {-16, -16},{0x0, 0xBD, 0x94, 0xFF}}},
++	{{{0, 37, 10},0, {160, 160},{0x0, 0xBD, 0x94, 0xFF}}},
++	{{{61, 11, 0},0, {1008, -16},{0xC7, 0xF6, 0x8F, 0xFF}}},
++	{{{40, 11, 12},0, {832, 160},{0xC7, 0xF3, 0x8F, 0xFF}}},
++	{{{0, -73, 0},0, {1008, 1008},{0xC5, 0x2B, 0x98, 0xFF}}},
++};
++
++Gfx lantern_Lantern_mesh_tri_3[] = {
++	gsSPVertex(lantern_Lantern_mesh_vtx_3 + 0, 16, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
++	gsSP2Triangles(1, 4, 3, 0, 4, 5, 3, 0),
++	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
++	gsSP2Triangles(8, 9, 10, 0, 10, 9, 11, 0),
++	gsSP2Triangles(10, 11, 12, 0, 12, 11, 13, 0),
++	gsSP2Triangles(12, 13, 14, 0, 14, 13, 15, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx lantern_Flame_mesh_vtx_cull[8] = {
++	{{{-24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{24, -16, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{24, 46, 0},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++};
++
++Vtx lantern_Flame_mesh_vtx_0[3] = {
++	{{{-24, -16, 0},0, {-172, 495},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{24, -16, 0},0, {639, 495},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{0, 46, 0},0, {238, -104},{0x0, 0x0, 0x7F, 0xFF}}},
++};
++
++Gfx lantern_Flame_mesh_tri_0[] = {
++	gsSPVertex(lantern_Flame_mesh_vtx_0 + 0, 3, 0),
++	gsSP1Triangle(0, 1, 2, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx lantern_Glass_mesh_vtx_cull[8] = {
++	{{{-25, -35, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-25, -35, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-25, 44, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{-25, 44, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{25, -35, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{25, -35, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{25, 44, 25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++	{{{25, 44, -25},0, {-16, -16},{0x0, 0x0, 0x0, 0xFF}}},
++};
++
++Vtx lantern_Glass_mesh_vtx_0[13] = {
++	{{{-25, -5, 25},0, {453, 1008},{0x59, 0xC, 0xA7, 0xFF}}},
++	{{{-25, -5, -25},0, {453, 752},{0x59, 0xC, 0x59, 0xFF}}},
++	{{{0, 44, 0},0, {624, 752},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{0, -35, 0},0, {368, 1008},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{25, -5, -25},0, {453, 496},{0xA7, 0xC, 0x59, 0xFF}}},
++	{{{0, 44, 0},0, {624, 496},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{0, -35, 0},0, {368, 752},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{25, -5, 25},0, {453, 240},{0xA7, 0xC, 0xA7, 0xFF}}},
++	{{{0, 44, 0},0, {624, 240},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{0, -35, 0},0, {368, 496},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-25, -5, 25},0, {453, -16},{0x59, 0xC, 0xA7, 0xFF}}},
++	{{{0, 44, 0},0, {624, -16},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{0, -35, 0},0, {368, 240},{0x0, 0x7F, 0x0, 0xFF}}},
++};
++
++Gfx lantern_Glass_mesh_tri_0[] = {
++	gsSPVertex(lantern_Glass_mesh_vtx_0 + 0, 13, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(1, 4, 5, 0, 6, 4, 1, 0),
++	gsSP2Triangles(4, 7, 8, 0, 9, 7, 4, 0),
++	gsSP2Triangles(7, 10, 11, 0, 12, 10, 7, 0),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_lantern_base_f3d[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(112, 43, 44, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_lantern_black_f3d[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPSetGeometryMode(G_CULL_FRONT),
++	gsSPClearGeometryMode(G_CULL_BACK),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(47, 47, 47, 255),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_lantern_black_f3d[] = {
++	gsDPPipeSync(),
++	gsSPClearGeometryMode(G_CULL_FRONT),
++	gsSPSetGeometryMode(G_CULL_BACK),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_lantern_grey_f3d[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPSetGeometryMode(G_CULL_FRONT),
++	gsSPClearGeometryMode(G_CULL_BACK),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(175, 175, 175, 255),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_lantern_grey_f3d[] = {
++	gsDPPipeSync(),
++	gsSPClearGeometryMode(G_CULL_FRONT),
++	gsSPSetGeometryMode(G_CULL_BACK),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_lantern_base_f3d_reverse[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1, SHADE, 0, ENVIRONMENT, 0, 0, 0, 0, 1),
++	gsSPSetGeometryMode(G_CULL_FRONT),
++	gsSPClearGeometryMode(G_CULL_BACK),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(112, 43, 44, 255),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_lantern_base_f3d_reverse[] = {
++	gsDPPipeSync(),
++	gsSPClearGeometryMode(G_CULL_FRONT),
++	gsSPSetGeometryMode(G_CULL_BACK),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_lantern_flame_f3d[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_I, G_IM_SIZ_8b, 16, lantern_sm64lanternfire_i8),
++	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_8b, 2, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 60, 60),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_8b, 2, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0, G_TX_CLAMP | G_TX_NOMIRROR, 4, 0),
++	gsDPSetTileSize(0, 0, 0, 60, 60),
++	gsDPSetEnvColor(188, 148, 78, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_lantern_glass_f3d[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPSetGeometryMode(G_CULL_FRONT),
++	gsSPClearGeometryMode(G_CULL_BACK),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(154, 154, 154, 47),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_lantern_glass_f3d[] = {
++	gsDPPipeSync(),
++	gsSPClearGeometryMode(G_CULL_FRONT),
++	gsSPSetGeometryMode(G_CULL_BACK),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx lantern_Lantern_mesh[] = {
++	gsSPClearGeometryMode(G_LIGHTING),
++	gsSPVertex(lantern_Lantern_mesh_vtx_cull + 0, 8, 0),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPCullDisplayList(0, 7),
++	gsSPDisplayList(mat_lantern_base_f3d),
++	gsSPDisplayList(lantern_Lantern_mesh_tri_0),
++	gsSPDisplayList(mat_lantern_black_f3d),
++	gsSPDisplayList(lantern_Lantern_mesh_tri_1),
++	gsSPDisplayList(mat_revert_lantern_black_f3d),
++	gsSPDisplayList(mat_lantern_grey_f3d),
++	gsSPDisplayList(lantern_Lantern_mesh_tri_2),
++	gsSPDisplayList(mat_revert_lantern_grey_f3d),
++	gsSPDisplayList(mat_lantern_base_f3d_reverse),
++	gsSPDisplayList(lantern_Lantern_mesh_tri_3),
++	gsSPDisplayList(mat_revert_lantern_base_f3d_reverse),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx lantern_Flame_mesh[] = {
++	gsSPClearGeometryMode(G_LIGHTING),
++	gsSPVertex(lantern_Flame_mesh_vtx_cull + 0, 8, 0),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPCullDisplayList(0, 7),
++	gsSPDisplayList(mat_lantern_flame_f3d),
++	gsSPDisplayList(lantern_Flame_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx lantern_Glass_mesh[] = {
++	gsSPClearGeometryMode(G_LIGHTING),
++	gsSPVertex(lantern_Glass_mesh_vtx_cull + 0, 8, 0),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPCullDisplayList(0, 7),
++	gsSPDisplayList(mat_lantern_glass_f3d),
++	gsSPDisplayList(lantern_Glass_mesh_tri_0),
++	gsSPDisplayList(mat_revert_lantern_glass_f3d),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx lantern_material_revert_render_settings[] = {
++	gsDPPipeSync(),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPClearGeometryMode(G_TEXTURE_GEN),
++	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 0),
++	gsDPSetEnvColor(255, 255, 255, 255),
++	gsDPSetAlphaCompare(G_AC_NONE),
++	gsSPEndDisplayList(),
++};
+diff --git a/actors/lantern/texscroll.inc.c b/actors/lantern/texscroll.inc.c
+new file mode 100644
+index 0000000..ee245bc
+--- /dev/null
++++ b/actors/lantern/texscroll.inc.c
+@@ -0,0 +1,3 @@
++void scroll_actor_geo_lantern() {
++	
++}
+diff --git a/actors/lantern/texscroll.inc.h b/actors/lantern/texscroll.inc.h
+new file mode 100644
+index 0000000..c330d86
+--- /dev/null
++++ b/actors/lantern/texscroll.inc.h
+@@ -0,0 +1,3 @@
++
++extern void scroll_actor_geo_lantern();
++
+diff --git a/actors/mario/geo.inc.c b/actors/mario/geo.inc.c
+index 736d31f..bfa4df6 100644
+--- a/actors/mario/geo.inc.c
++++ b/actors/mario/geo.inc.c
+@@ -1,1825 +1,1013 @@
+-// Normal Mario Geo
+-
+-// 0x170002E0
+-const GeoLayout mario_geo_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_right), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_left), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_up), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_down), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_right), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_left), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_up), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_down), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // left
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // right
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x1700041C
+-const GeoLayout mario_geo_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_left_hand_closed),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000494
+-const GeoLayout mario_geo_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// The body loads all the parts with some shared dls to apply the solid color of the dl that has it, the same rule applies to the medium and low poly geos
+-
+-// 0x1700053C
+-const GeoLayout mario_geo_body[] = {
+-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_butt), // starts sharing solid color with mario_torso (blue)
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_geo_face_and_wings), // stops sharing because faces has its own dl
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_arm), // starts sharing solid color with mario_left_forearm (red)
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_geo_left_hand), // stops sharing because hand has its solid color (white)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_geo_right_hand), // stops sharing because hand has its solid color (white)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_left_foot), // stops sharing because foot has its solid color (brown)
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_right_foot), // stops sharing because foot has its solid color (brown)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x170006F8
+-const GeoLayout mario_geo_medium_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_left_hand_closed),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000770
+-const GeoLayout mario_geo_medium_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000818
+-const GeoLayout mario_geo_medium_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_butt), // starts sharing solid color with mario_torso (blue)
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_medium_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_geo_face_and_wings), // stops sharing because faces has its own dl - medium poly mario uses high poly face
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_arm), // starts sharing solid color with mario_left_forearm (red)
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_geo_medium_poly_left_hand), // stops sharing because hand has its solid color (white)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_geo_medium_poly_right_hand), // stops sharing because hand has its solid color (white)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_medium_poly_left_foot), // stops sharing because foot has its solid color (brown)
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_right_foot), // stops sharing because foot has its solid color (brown)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x170009D4
+-const GeoLayout mario_geo_low_poly_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_right), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_left), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_up), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_down), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_right), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_left), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_up), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_down), // unused
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // left
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // right
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000B10
+-const GeoLayout mario_geo_low_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_left_hand_closed),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000B88
+-const GeoLayout mario_geo_low_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000C30
+-const GeoLayout mario_geo_low_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_butt), // starts sharing solid color with mario_torso (blue)
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_low_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_geo_low_poly_face_and_wings), // stops sharing because faces has its own dl
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_arm), // starts sharing solid color with mario_left_forearm (red)
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_geo_low_poly_left_hand), // stops sharing because hand has its solid color (white)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_geo_low_poly_right_hand), // stops sharing because hand has its solid color (white)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_low_poly_left_foot), // stops sharing because foot has its solid color (brown)
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_right_foot), // stops sharing because foot has its solid color (brown)
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Vanish Mario Geo
+-
+-// 0x17000DEC
+-const GeoLayout mario_vanish_geo_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_right), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_left), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_up), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_down), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_right), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_left), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_up), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_down), // unused
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17000F28
+-const GeoLayout mario_vanish_geo_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_left_hand_closed),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
++#include "src/game/envfx_snow.h"
++
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_armature_002_switch_option_002[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++		GEO_OPEN_NODE(),
++			GEO_NODE_START(),
++			GEO_OPEN_NODE(),
++				GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh),
++			GEO_CLOSE_NODE(),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_right_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_left_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh),
++		GEO_OPEN_NODE(),
++			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_left_hand_peace_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_left_hand_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_left_hand_wing_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh),
++		GEO_OPEN_NODE(),
++			GEO_DISPLAY_LIST(LAYER_ALPHA, mario_006_switch_option_left_hand_wing_cap_wings_mesh),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++		GEO_OPEN_NODE(),
++			GEO_NODE_START(),
++			GEO_OPEN_NODE(),
++				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh),
++			GEO_CLOSE_NODE(),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6),
++			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh),
++		GEO_OPEN_NODE(),
++			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh),
++		GEO_OPEN_NODE(),
++			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_006_switch_option_left_hand_wing_cap_wings_mesh),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_1___eye_half_1),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_face_7___eye_X_3),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt1[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
++		GEO_OPEN_NODE(),
++			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_mesh),
++			GEO_OPEN_NODE(),
++				GEO_ASM(0, geo_move_mario_part_from_parent),
++				GEO_ASM(0, geo_mario_tilt_torso),
++				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_000_offset_001_mesh),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ASM(0, geo_mario_head_rotation),
++							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++							GEO_OPEN_NODE(),
++								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
++								GEO_OPEN_NODE(),
++									GEO_NODE_START(),
++									GEO_OPEN_NODE(),
++										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++										GEO_OPEN_NODE(),
++											GEO_NODE_START(),
++											GEO_OPEN_NODE(),
++												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh),
++											GEO_CLOSE_NODE(),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6),
++											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7),
++										GEO_CLOSE_NODE(),
++									GEO_CLOSE_NODE(),
++									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002),
++								GEO_CLOSE_NODE(),
++								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
++								GEO_OPEN_NODE(),
++									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
++									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++									GEO_OPEN_NODE(),
++										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_001_mesh),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
++								GEO_OPEN_NODE(),
++									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
++									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++									GEO_OPEN_NODE(),
++										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_002_mesh),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_003_mesh),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_004_mesh),
++								GEO_OPEN_NODE(),
++									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
++									GEO_OPEN_NODE(),
++										GEO_NODE_START(),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++											GEO_OPEN_NODE(),
++												GEO_ASM(1, geo_mario_hand_foot_scaler),
++												GEO_SCALE(LAYER_FORCE, 65536),
++												GEO_OPEN_NODE(),
++													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_003_mesh),
++												GEO_CLOSE_NODE(),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_006_mesh),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_007_mesh),
++								GEO_OPEN_NODE(),
++									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
++									GEO_OPEN_NODE(),
++										GEO_NODE_START(),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++											GEO_OPEN_NODE(),
++												GEO_ASM(0, geo_mario_hand_foot_scaler),
++												GEO_SCALE(LAYER_FORCE, 65536),
++												GEO_OPEN_NODE(),
++													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_004_mesh),
++												GEO_CLOSE_NODE(),
++												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_009_mesh),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_010_mesh),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_000_offset_011_mesh),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_012_mesh),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_013_mesh),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
++							GEO_OPEN_NODE(),
++								GEO_ASM(2, geo_mario_hand_foot_scaler),
++								GEO_SCALE(LAYER_FORCE, 65536),
++								GEO_OPEN_NODE(),
++									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_005_mesh),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++		GEO_OPEN_NODE(),
++			GEO_NODE_START(),
++			GEO_OPEN_NODE(),
++				GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0),
++		GEO_OPEN_NODE(),
++			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0),
++		GEO_OPEN_NODE(),
++			GEO_DISPLAY_LIST(LAYER_ALPHA, mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt2[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
++		GEO_OPEN_NODE(),
++			GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_mesh_mat_override_metal_0),
++			GEO_OPEN_NODE(),
++				GEO_ASM(0, geo_move_mario_part_from_parent),
++				GEO_ASM(0, geo_mario_tilt_torso),
++				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_000_offset_001_mesh_mat_override_metal_0),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ASM(0, geo_mario_head_rotation),
++							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++							GEO_OPEN_NODE(),
++								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
++								GEO_OPEN_NODE(),
++									GEO_NODE_START(),
++									GEO_OPEN_NODE(),
++										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++										GEO_OPEN_NODE(),
++											GEO_NODE_START(),
++											GEO_OPEN_NODE(),
++												GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_metal_0),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++									GEO_CLOSE_NODE(),
++									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002),
++								GEO_CLOSE_NODE(),
++								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
++								GEO_OPEN_NODE(),
++									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
++									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++									GEO_OPEN_NODE(),
++										GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_001_mesh_mat_override_metal_0),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
++								GEO_OPEN_NODE(),
++									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
++									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++									GEO_OPEN_NODE(),
++										GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_002_mesh_mat_override_metal_0),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_003_mesh_mat_override_metal_0),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_004_mesh_mat_override_metal_0),
++								GEO_OPEN_NODE(),
++									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
++									GEO_OPEN_NODE(),
++										GEO_NODE_START(),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++											GEO_OPEN_NODE(),
++												GEO_ASM(1, geo_mario_hand_foot_scaler),
++												GEO_SCALE(LAYER_FORCE, 65536),
++												GEO_OPEN_NODE(),
++													GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_003_mesh_mat_override_metal_0),
++												GEO_CLOSE_NODE(),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_006_mesh_mat_override_metal_0),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_007_mesh_mat_override_metal_0),
++								GEO_OPEN_NODE(),
++									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
++									GEO_OPEN_NODE(),
++										GEO_NODE_START(),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++											GEO_OPEN_NODE(),
++												GEO_ASM(0, geo_mario_hand_foot_scaler),
++												GEO_SCALE(LAYER_FORCE, 65536),
++												GEO_OPEN_NODE(),
++													GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_004_mesh_mat_override_metal_0),
++												GEO_CLOSE_NODE(),
++												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_009_mesh_mat_override_metal_0),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_010_mesh_mat_override_metal_0),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_000_offset_011_mesh_mat_override_metal_0),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_012_mesh_mat_override_metal_0),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_013_mesh_mat_override_metal_0),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
++							GEO_OPEN_NODE(),
++								GEO_ASM(2, geo_mario_hand_foot_scaler),
++								GEO_SCALE(LAYER_FORCE, 65536),
++								GEO_OPEN_NODE(),
++									GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_005_mesh_mat_override_metal_0),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++		GEO_OPEN_NODE(),
++			GEO_NODE_START(),
++			GEO_OPEN_NODE(),
++				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0),
++		GEO_OPEN_NODE(),
++			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0),
++		GEO_OPEN_NODE(),
++			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt3[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
++		GEO_OPEN_NODE(),
++			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_mesh_mat_override_metal_0),
++			GEO_OPEN_NODE(),
++				GEO_ASM(0, geo_move_mario_part_from_parent),
++				GEO_ASM(0, geo_mario_tilt_torso),
++				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_000_offset_001_mesh_mat_override_metal_0),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ASM(0, geo_mario_head_rotation),
++							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++							GEO_OPEN_NODE(),
++								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
++								GEO_OPEN_NODE(),
++									GEO_NODE_START(),
++									GEO_OPEN_NODE(),
++										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++										GEO_OPEN_NODE(),
++											GEO_NODE_START(),
++											GEO_OPEN_NODE(),
++												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_mat_override_metal_0),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++									GEO_CLOSE_NODE(),
++									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002),
++								GEO_CLOSE_NODE(),
++								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
++								GEO_OPEN_NODE(),
++									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
++									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++									GEO_OPEN_NODE(),
++										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_001_mesh_mat_override_metal_0),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
++								GEO_OPEN_NODE(),
++									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
++									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++									GEO_OPEN_NODE(),
++										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_002_mesh_mat_override_metal_0),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_003_mesh_mat_override_metal_0),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_004_mesh_mat_override_metal_0),
++								GEO_OPEN_NODE(),
++									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
++									GEO_OPEN_NODE(),
++										GEO_NODE_START(),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++											GEO_OPEN_NODE(),
++												GEO_ASM(1, geo_mario_hand_foot_scaler),
++												GEO_SCALE(LAYER_FORCE, 65536),
++												GEO_OPEN_NODE(),
++													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_003_mesh_mat_override_metal_0),
++												GEO_CLOSE_NODE(),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_006_mesh_mat_override_metal_0),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_007_mesh_mat_override_metal_0),
++								GEO_OPEN_NODE(),
++									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
++									GEO_OPEN_NODE(),
++										GEO_NODE_START(),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++											GEO_OPEN_NODE(),
++												GEO_ASM(0, geo_mario_hand_foot_scaler),
++												GEO_SCALE(LAYER_FORCE, 65536),
++												GEO_OPEN_NODE(),
++													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_004_mesh_mat_override_metal_0),
++												GEO_CLOSE_NODE(),
++												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature),
++										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_009_mesh_mat_override_metal_0),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_010_mesh_mat_override_metal_0),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_000_offset_011_mesh_mat_override_metal_0),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
++				GEO_OPEN_NODE(),
++					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_012_mesh_mat_override_metal_0),
++					GEO_OPEN_NODE(),
++						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_013_mesh_mat_override_metal_0),
++						GEO_OPEN_NODE(),
++							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
++							GEO_OPEN_NODE(),
++								GEO_ASM(2, geo_mario_hand_foot_scaler),
++								GEO_SCALE(LAYER_FORCE, 65536),
++								GEO_OPEN_NODE(),
++									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_005_mesh_mat_override_metal_0),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_1___eye_half_1),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_mat_override_face_7___eye_X_3),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
+ };
+-
+-// 0x17000FA0
+-const GeoLayout mario_vanish_geo_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Same rule body as Normal Mario
+-
+-// 0x17001048
+-const GeoLayout mario_vanish_geo_body[] = {
+-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_vanish_geo_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_arm),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_vanish_geo_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_arm),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_vanish_geo_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_left_foot),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001204
+-const GeoLayout mario_vanish_geo_medium_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_left_hand_closed),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x1700127C
+-const GeoLayout mario_vanish_geo_medium_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001324
+-const GeoLayout mario_vanish_geo_medium_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_medium_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_vanish_geo_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_arm),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_vanish_geo_medium_poly_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_arm),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_vanish_geo_medium_poly_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_medium_poly_left_foot),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x170014E0
+-const GeoLayout mario_vanish_geo_low_poly_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_right),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_left),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_up),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_down),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_front),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_half_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_closed),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_right),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_left),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_up),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_down),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_dead),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x1700161C
+-const GeoLayout mario_vanish_geo_low_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_left_hand_closed),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001694
+-const GeoLayout mario_vanish_geo_low_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x1700173C
+-const GeoLayout mario_vanish_geo_low_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_low_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_vanish_geo_low_poly_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_arm),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_vanish_geo_low_poly_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_arm),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_vanish_geo_low_poly_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_low_poly_left_foot),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Metal Mario Geo
+-
+-// 0x170018F8
+-const GeoLayout mario_metal_geo_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_cap_on_shared_dl),
+-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_cap_off_shared_dl),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings), // left
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings), // right
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x170019A4
+-const GeoLayout mario_metal_geo_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_left_hand_closed_shared_dl),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001A1C
+-const GeoLayout mario_metal_geo_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// A difference from Normal Mario is that the dls after the butt and left thigh shares the metal texture of it, same rule applies to the medium and low poly geos
+-
+-// 0x17001AC4
+-const GeoLayout mario_metal_geo_body[] = {
+-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_butt), // starts sharing metal texture with the dls below
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_torso_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_metal_geo_face_and_wings), // unlike normal mario geo, these dls still share the metal texture
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_geo_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_geo_right_hand), // stop sharing because the wing metal cap of it
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_left_thigh), // starts sharing metal texture with the dls below
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_left_foot_shared_dl),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_thigh_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001C80
+-const GeoLayout mario_metal_geo_medium_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_left_hand_closed_shared_dl),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001CF8
+-const GeoLayout mario_metal_geo_medium_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_medium_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001DA0
+-const GeoLayout mario_metal_geo_medium_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_medium_poly_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_medium_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_metal_geo_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_geo_medium_poly_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_geo_medium_poly_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_medium_poly_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_medium_poly_left_foot_shared_dl),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_thigh_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_medium_poly_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17001F5C
+-const GeoLayout mario_metal_geo_low_poly_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_cap_on),
+-         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_cap_off),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002008
+-const GeoLayout mario_metal_geo_low_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_left_hand_closed_shared_dl),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002080
+-const GeoLayout mario_metal_geo_low_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002128
+-const GeoLayout mario_metal_geo_low_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_low_poly_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_low_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_metal_geo_low_poly_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_geo_low_poly_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_geo_low_poly_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_low_poly_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_low_poly_left_foot_shared_dl),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_thigh_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Metal Vanish Mario Geo
+-
+-// 0x170022E4
+-const GeoLayout mario_metal_vanish_geo_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_on_shared_dl),
+-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_off_shared_dl),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002390
+-const GeoLayout mario_metal_vanish_geo_left_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_left_hand_closed_shared_dl),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002408
+-const GeoLayout mario_metal_vanish_geo_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Same rules as Metal Mario
+-
+-// 0x170024B0
+-const GeoLayout mario_metal_vanish_geo_body[] = {
+-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_torso_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_metal_vanish_geo_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_vanish_geo_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_vanish_geo_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_left_foot_shared_dl),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_thigh_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x1700266C
+-const GeoLayout mario_metal_vanish_geo_medium_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_left_hand_closed_shared_dl),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x170026E4
+-const GeoLayout mario_metal_vanish_geo_medium_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_medium_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x1700278C
+-const GeoLayout mario_metal_vanish_geo_medium_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_medium_poly_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_medium_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_metal_vanish_geo_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-                        GEO_OPEN_NODE(),
+-                           GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_right_hand),
+-                        GEO_CLOSE_NODE(),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_medium_poly_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_medium_poly_left_foot_shared_dl),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_thigh_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_medium_poly_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002958
+-const GeoLayout mario_metal_vanish_geo_low_poly_face_and_wings[] = {
+-   GEO_ASM(0, geo_mario_head_rotation),
+-   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-   GEO_OPEN_NODE(),
+-      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_cap_on),
+-         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_cap_off),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002A04
+-const GeoLayout mario_metal_vanish_geo_low_poly_left_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(1, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_left_hand_closed_shared_dl),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002A7C
+-const GeoLayout mario_metal_vanish_geo_low_poly_right_hand[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mario_hand_foot_scaler),
+-         GEO_SCALE(0x00, 65536),
+-         GEO_OPEN_NODE(),
+-            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_right_hand_closed),
+-         GEO_CLOSE_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
+-      GEO_OPEN_NODE(),
+-         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+-      GEO_CLOSE_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+-      GEO_OPEN_NODE(),
+-         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002B24
+-const GeoLayout mario_metal_vanish_geo_low_poly_body[] = {
+-   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+-   GEO_OPEN_NODE(),
+-      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_low_poly_butt),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_move_mario_part_from_parent),
+-         GEO_ASM(0, geo_mario_tilt_torso),
+-         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_low_poly_torso),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_face_and_wings),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_left_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_arm_shared_dl),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+-                     GEO_OPEN_NODE(),
+-                        GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_right_hand),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_low_poly_left_thigh),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_low_poly_left_foot_shared_dl),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+-         GEO_OPEN_NODE(),
+-            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_thigh_shared_dl),
+-            GEO_OPEN_NODE(),
+-               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+-               GEO_OPEN_NODE(),
+-                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+-                  GEO_OPEN_NODE(),
+-                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+-                     GEO_SCALE(0x00, 65536),
+-                     GEO_OPEN_NODE(),
+-                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_right_foot),
+-                     GEO_CLOSE_NODE(),
+-                  GEO_CLOSE_NODE(),
+-               GEO_CLOSE_NODE(),
+-            GEO_CLOSE_NODE(),
+-         GEO_CLOSE_NODE(),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// High Poly
+-
+-// 0x17002CE0
+-const GeoLayout mario_geo_load_body[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+-   GEO_OPEN_NODE(),
+-      GEO_BRANCH(1, mario_geo_body),
+-      GEO_BRANCH(1, mario_vanish_geo_body),
+-      GEO_BRANCH(1, mario_metal_geo_body),
+-      GEO_BRANCH(1, mario_metal_vanish_geo_body),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Medium Poly
+-
+-// 0x17002D14
+-const GeoLayout mario_geo_load_medium_poly_body[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+-   GEO_OPEN_NODE(),
+-      GEO_BRANCH(1, mario_geo_medium_poly_body),
+-      GEO_BRANCH(1, mario_vanish_geo_medium_poly_body),
+-      GEO_BRANCH(1, mario_metal_geo_medium_poly_body),
+-      GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_body),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// Low Poly
+-
+-// 0x17002D48
+-const GeoLayout mario_geo_load_low_poly_body[] = {
+-   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+-   GEO_OPEN_NODE(),
+-      GEO_BRANCH(1, mario_geo_low_poly_body),
+-      GEO_BRANCH(1, mario_vanish_geo_low_poly_body),
+-      GEO_BRANCH(1, mario_metal_geo_low_poly_body),
+-      GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_body),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// 0x17002D7C
+-const GeoLayout mario_geo_render_body[] = {
+-   GEO_NODE_START(),
+-   GEO_OPEN_NODE(),
+-      GEO_RENDER_RANGE(-2048, 600),
+-      GEO_OPEN_NODE(),
+-         GEO_BRANCH(1, mario_geo_load_body),
+-      GEO_CLOSE_NODE(),
+-      GEO_RENDER_RANGE(600, 1600),
+-      GEO_OPEN_NODE(),
+-         GEO_BRANCH(1, mario_geo_load_medium_poly_body),
+-      GEO_CLOSE_NODE(),
+-      GEO_RENDER_RANGE(1600, 32767),
+-      GEO_OPEN_NODE(),
+-         GEO_BRANCH(1, mario_geo_load_low_poly_body),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_RETURN(),
+-};
+-
+-// This last geo is used to load all of Mario Geo in the Level Scripts
+-
+-// 0x17002DD4
+ const GeoLayout mario_geo[] = {
+-   GEO_SHADOW(SHADOW_CIRCLE_PLAYER, 0xB4, 100),
+-   GEO_OPEN_NODE(),
+-      GEO_SCALE(0x00, 16384),
+-      GEO_OPEN_NODE(),
+-         GEO_ASM(0, geo_mirror_mario_backface_culling),
+-         GEO_ASM(0, geo_mirror_mario_set_alpha),
+-         GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
+-         GEO_OPEN_NODE(),
+-            GEO_BRANCH(1, mario_geo_load_body),
+-            GEO_BRANCH(1, mario_geo_render_body),
+-         GEO_CLOSE_NODE(),
+-         GEO_ASM(1, geo_mirror_mario_backface_culling),
+-      GEO_CLOSE_NODE(),
+-   GEO_CLOSE_NODE(),
+-   GEO_END(),
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_SHADOW(1, 180, 100),
++		GEO_OPEN_NODE(),
++			GEO_SCALE(LAYER_FORCE, 16384),
++			GEO_OPEN_NODE(),
++				GEO_ASM(0, geo_mirror_mario_backface_culling),
++				GEO_ASM(0, geo_mirror_mario_set_alpha),
++				GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
++				GEO_OPEN_NODE(),
++					GEO_NODE_START(),
++					GEO_OPEN_NODE(),
++						GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
++						GEO_OPEN_NODE(),
++							GEO_NODE_START(),
++							GEO_OPEN_NODE(),
++								GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
++								GEO_OPEN_NODE(),
++									GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_mesh),
++									GEO_OPEN_NODE(),
++										GEO_ASM(0, geo_move_mario_part_from_parent),
++										GEO_ASM(0, geo_mario_tilt_torso),
++										GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_000_offset_001_mesh),
++											GEO_OPEN_NODE(),
++												GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
++												GEO_OPEN_NODE(),
++													GEO_ASM(0, geo_mario_head_rotation),
++													GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++													GEO_OPEN_NODE(),
++														GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
++														GEO_OPEN_NODE(),
++															GEO_NODE_START(),
++															GEO_OPEN_NODE(),
++																GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
++																GEO_OPEN_NODE(),
++																	GEO_NODE_START(),
++																	GEO_OPEN_NODE(),
++																		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh),
++																	GEO_CLOSE_NODE(),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6),
++																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7),
++																GEO_CLOSE_NODE(),
++															GEO_CLOSE_NODE(),
++															GEO_BRANCH(1, mario_armature_002_switch_option_002),
++														GEO_CLOSE_NODE(),
++														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
++														GEO_OPEN_NODE(),
++															GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
++															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++															GEO_OPEN_NODE(),
++																GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_001_mesh),
++															GEO_CLOSE_NODE(),
++														GEO_CLOSE_NODE(),
++														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
++														GEO_OPEN_NODE(),
++															GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
++															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
++															GEO_OPEN_NODE(),
++																GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_002_mesh),
++															GEO_CLOSE_NODE(),
++														GEO_CLOSE_NODE(),
++													GEO_CLOSE_NODE(),
++												GEO_CLOSE_NODE(),
++												GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
++												GEO_OPEN_NODE(),
++													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_003_mesh),
++													GEO_OPEN_NODE(),
++														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_004_mesh),
++														GEO_OPEN_NODE(),
++															GEO_SWITCH_CASE(1, geo_switch_mario_hand),
++															GEO_OPEN_NODE(),
++																GEO_NODE_START(),
++																GEO_OPEN_NODE(),
++																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++																	GEO_OPEN_NODE(),
++																		GEO_ASM(1, geo_mario_hand_foot_scaler),
++																		GEO_SCALE(LAYER_FORCE, 65536),
++																		GEO_OPEN_NODE(),
++																			GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_003_mesh),
++																		GEO_CLOSE_NODE(),
++																	GEO_CLOSE_NODE(),
++																GEO_CLOSE_NODE(),
++																GEO_BRANCH(1, mario_right_hand_open_armature),
++															GEO_CLOSE_NODE(),
++														GEO_CLOSE_NODE(),
++													GEO_CLOSE_NODE(),
++												GEO_CLOSE_NODE(),
++												GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
++												GEO_OPEN_NODE(),
++													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_006_mesh),
++													GEO_OPEN_NODE(),
++														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_007_mesh),
++														GEO_OPEN_NODE(),
++															GEO_SWITCH_CASE(0, geo_switch_mario_hand),
++															GEO_OPEN_NODE(),
++																GEO_NODE_START(),
++																GEO_OPEN_NODE(),
++																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
++																	GEO_OPEN_NODE(),
++																		GEO_ASM(0, geo_mario_hand_foot_scaler),
++																		GEO_SCALE(LAYER_FORCE, 65536),
++																		GEO_OPEN_NODE(),
++																			GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_004_mesh),
++																		GEO_CLOSE_NODE(),
++																		GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
++																	GEO_CLOSE_NODE(),
++																GEO_CLOSE_NODE(),
++																GEO_BRANCH(1, mario_left_hand_open_armature),
++																GEO_BRANCH(1, mario_left_hand_peace_armature),
++																GEO_BRANCH(1, mario_left_hand_cap_armature),
++																GEO_BRANCH(1, mario_left_hand_wing_cap_armature),
++															GEO_CLOSE_NODE(),
++														GEO_CLOSE_NODE(),
++													GEO_CLOSE_NODE(),
++												GEO_CLOSE_NODE(),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_009_mesh),
++											GEO_OPEN_NODE(),
++												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_010_mesh),
++												GEO_OPEN_NODE(),
++													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_000_offset_011_mesh),
++												GEO_CLOSE_NODE(),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
++										GEO_OPEN_NODE(),
++											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_012_mesh),
++											GEO_OPEN_NODE(),
++												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_013_mesh),
++												GEO_OPEN_NODE(),
++													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
++													GEO_OPEN_NODE(),
++														GEO_ASM(2, geo_mario_hand_foot_scaler),
++														GEO_SCALE(LAYER_FORCE, 65536),
++														GEO_OPEN_NODE(),
++															GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_005_mesh),
++														GEO_CLOSE_NODE(),
++													GEO_CLOSE_NODE(),
++												GEO_CLOSE_NODE(),
++											GEO_CLOSE_NODE(),
++										GEO_CLOSE_NODE(),
++									GEO_CLOSE_NODE(),
++								GEO_CLOSE_NODE(),
++							GEO_CLOSE_NODE(),
++							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1),
++							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2),
++							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3),
++						GEO_CLOSE_NODE(),
++					GEO_CLOSE_NODE(),
++				GEO_CLOSE_NODE(),
++				GEO_ASM(1, geo_mirror_mario_backface_culling),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_material_revert_render_settings),
++		GEO_DISPLAY_LIST(LAYER_ALPHA, mario_material_revert_render_settings),
++		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_material_revert_render_settings),
++	GEO_CLOSE_NODE(),
++	GEO_END(),
+ };
+diff --git a/actors/mario/geo_header.h b/actors/mario/geo_header.h
+new file mode 100644
+index 0000000..a2ab617
+--- /dev/null
++++ b/actors/mario/geo_header.h
+@@ -0,0 +1,193 @@
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[];
++extern const GeoLayout mario_armature_002_switch_option_002[];
++extern const GeoLayout mario_right_hand_open_armature[];
++extern const GeoLayout mario_left_hand_open_armature[];
++extern const GeoLayout mario_left_hand_peace_armature[];
++extern const GeoLayout mario_left_hand_cap_armature[];
++extern const GeoLayout mario_left_hand_wing_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt1[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt2[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt3[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[];
++extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[];
++extern const GeoLayout mario_geo[];
++extern Vtx mario_000_offset_mesh_vtx_0[53];
++extern Gfx mario_000_offset_mesh_tri_0[];
++extern Vtx mario_000_offset_001_mesh_vtx_0[88];
++extern Gfx mario_000_offset_001_mesh_tri_0[];
++extern Vtx mario_000_offset_001_mesh_vtx_1[23];
++extern Gfx mario_000_offset_001_mesh_tri_1[];
++extern Vtx mario_000_offset_001_mesh_vtx_2[14];
++extern Gfx mario_000_offset_001_mesh_tri_2[];
++extern Vtx mario_000_displaylist_mesh_vtx_0[10];
++extern Gfx mario_000_displaylist_mesh_tri_0[];
++extern Vtx mario_000_displaylist_mesh_vtx_1[71];
++extern Gfx mario_000_displaylist_mesh_tri_1[];
++extern Vtx mario_000_displaylist_mesh_vtx_2[24];
++extern Gfx mario_000_displaylist_mesh_tri_2[];
++extern Vtx mario_000_displaylist_mesh_vtx_3[19];
++extern Gfx mario_000_displaylist_mesh_tri_3[];
++extern Vtx mario_000_displaylist_mesh_vtx_4[12];
++extern Gfx mario_000_displaylist_mesh_tri_4[];
++extern Vtx mario_000_displaylist_mesh_vtx_5[30];
++extern Gfx mario_000_displaylist_mesh_tri_5[];
++extern Vtx mario_000_displaylist_mesh_vtx_6[7];
++extern Gfx mario_000_displaylist_mesh_tri_6[];
++extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_0[85];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_0[];
++extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_1[26];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_1[];
++extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_2[12];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_2[];
++extern Vtx mario_002_switch_option_head__no_cap__mesh_vtx_3[75];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_tri_3[];
++extern Vtx mario_000_displaylist_001_mesh_vtx_0[4];
++extern Gfx mario_000_displaylist_001_mesh_tri_0[];
++extern Vtx mario_000_displaylist_001_mesh_vtx_1[4];
++extern Gfx mario_000_displaylist_001_mesh_tri_1[];
++extern Vtx mario_000_displaylist_002_mesh_vtx_0[4];
++extern Gfx mario_000_displaylist_002_mesh_tri_0[];
++extern Vtx mario_000_displaylist_002_mesh_vtx_1[4];
++extern Gfx mario_000_displaylist_002_mesh_tri_1[];
++extern Vtx mario_000_offset_003_mesh_vtx_0[20];
++extern Gfx mario_000_offset_003_mesh_tri_0[];
++extern Vtx mario_000_offset_004_mesh_vtx_0[16];
++extern Gfx mario_000_offset_004_mesh_tri_0[];
++extern Vtx mario_000_displaylist_003_mesh_vtx_0[30];
++extern Gfx mario_000_displaylist_003_mesh_tri_0[];
++extern Vtx mario_002_switch_option_right_hand_open_mesh_vtx_0[42];
++extern Gfx mario_002_switch_option_right_hand_open_mesh_tri_0[];
++extern Vtx mario_000_offset_006_mesh_vtx_0[20];
++extern Gfx mario_000_offset_006_mesh_tri_0[];
++extern Vtx mario_000_offset_007_mesh_vtx_0[16];
++extern Gfx mario_000_offset_007_mesh_tri_0[];
++extern Vtx mario_000_displaylist_004_mesh_vtx_0[30];
++extern Gfx mario_000_displaylist_004_mesh_tri_0[];
++extern Vtx mario_002_switch_option_left_hand_open_mesh_vtx_0[42];
++extern Gfx mario_002_switch_option_left_hand_open_mesh_tri_0[];
++extern Vtx mario_004_switch_option_left_hand_peace_mesh_vtx_0[61];
++extern Gfx mario_004_switch_option_left_hand_peace_mesh_tri_0[];
++extern Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_0[47];
++extern Gfx mario_005_switch_option_left_hand_cap_mesh_tri_0[];
++extern Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_1[30];
++extern Gfx mario_005_switch_option_left_hand_cap_mesh_tri_1[];
++extern Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0[47];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_0[];
++extern Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_1[30];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_1[];
++extern Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_0[8];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0[];
++extern Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_1[8];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1[];
++extern Vtx mario_000_offset_009_mesh_vtx_0[17];
++extern Gfx mario_000_offset_009_mesh_tri_0[];
++extern Vtx mario_000_offset_010_mesh_vtx_0[12];
++extern Gfx mario_000_offset_010_mesh_tri_0[];
++extern Vtx mario_000_offset_011_mesh_vtx_0[23];
++extern Gfx mario_000_offset_011_mesh_tri_0[];
++extern Vtx mario_000_offset_012_mesh_vtx_0[17];
++extern Gfx mario_000_offset_012_mesh_tri_0[];
++extern Vtx mario_000_offset_013_mesh_vtx_0[12];
++extern Gfx mario_000_offset_013_mesh_tri_0[];
++extern Vtx mario_000_displaylist_005_mesh_vtx_0[23];
++extern Gfx mario_000_displaylist_005_mesh_tri_0[];
++
++extern Gfx mario_000_offset_mesh[];
++extern Gfx mario_000_offset_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_001_mesh[];
++extern Gfx mario_000_offset_001_mesh_mat_override_metal_0[];
++extern Gfx mario_000_displaylist_mesh[];
++extern Gfx mario_000_displaylist_mesh_mat_override_metal_0[];
++extern Gfx mario_000_displaylist_mesh_mat_override_face_1___eye_half_1[];
++extern Gfx mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2[];
++extern Gfx mario_000_displaylist_mesh_mat_override_face_7___eye_X_3[];
++extern Gfx mario_002_switch_option_head__no_cap__mesh[];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0[];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1[];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2[];
++extern Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3[];
++extern Gfx mario_000_displaylist_001_mesh[];
++extern Gfx mario_000_displaylist_001_mesh_mat_override_metal_0[];
++extern Gfx mario_000_displaylist_002_mesh[];
++extern Gfx mario_000_displaylist_002_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_003_mesh[];
++extern Gfx mario_000_offset_003_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_004_mesh[];
++extern Gfx mario_000_offset_004_mesh_mat_override_metal_0[];
++extern Gfx mario_000_displaylist_003_mesh[];
++extern Gfx mario_000_displaylist_003_mesh_mat_override_metal_0[];
++extern Gfx mario_002_switch_option_right_hand_open_mesh[];
++extern Gfx mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_006_mesh[];
++extern Gfx mario_000_offset_006_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_007_mesh[];
++extern Gfx mario_000_offset_007_mesh_mat_override_metal_0[];
++extern Gfx mario_000_displaylist_004_mesh[];
++extern Gfx mario_000_displaylist_004_mesh_mat_override_metal_0[];
++extern Gfx mario_002_switch_option_left_hand_open_mesh[];
++extern Gfx mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0[];
++extern Gfx mario_004_switch_option_left_hand_peace_mesh[];
++extern Gfx mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0[];
++extern Gfx mario_005_switch_option_left_hand_cap_mesh[];
++extern Gfx mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0[];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh[];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0[];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh[];
++extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_009_mesh[];
++extern Gfx mario_000_offset_009_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_010_mesh[];
++extern Gfx mario_000_offset_010_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_011_mesh[];
++extern Gfx mario_000_offset_011_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_012_mesh[];
++extern Gfx mario_000_offset_012_mesh_mat_override_metal_0[];
++extern Gfx mario_000_offset_013_mesh[];
++extern Gfx mario_000_offset_013_mesh_mat_override_metal_0[];
++extern Gfx mario_000_displaylist_005_mesh[];
++extern Gfx mario_000_displaylist_005_mesh_mat_override_metal_0[];
++extern Gfx mario_material_revert_render_settings[];
++
+diff --git a/actors/mario/model.inc.c b/actors/mario/model.inc.c
+index 191d533..03ca48f 100644
+--- a/actors/mario/model.inc.c
++++ b/actors/mario/model.inc.c
+@@ -1,6825 +1,5845 @@
+-// Mario
++Gfx mario_metal_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_metal_rgba16[] = {
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x43, 0x8, 0x41, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x1, 0x8, 0x43, 0x8, 0x1, 0x10, 
++	0x43, 0x8, 0x43, 0x8, 0x1, 0x8, 0x1, 0x8, 0x43, 
++	0x18, 0xC5, 0x29, 0x7, 0x29, 0x9, 0x29, 0x5, 0x29, 
++	0x7, 0x20, 0xC5, 0x18, 0x85, 0x10, 0x41, 0x8, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x8, 0x43, 0x10, 0x85, 0x18, 
++	0xC5, 0x10, 0x85, 0x8, 0x41, 0x10, 0x43, 0x10, 0x43, 
++	0x10, 0x45, 0x10, 0x45, 0x8, 0x45, 0x0, 0x3, 0x8, 
++	0x45, 0x8, 0x45, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
++	0x1, 0x8, 0x83, 0x18, 0x43, 0x10, 0xC5, 0x18, 0x83, 
++	0x20, 0xC5, 0x20, 0xC3, 0x18, 0x83, 0x8, 0x1, 0x8, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x3, 
++	0x19, 0x7, 0x31, 0x4B, 0x29, 0x49, 0x29, 0x9, 0x21, 
++	0x7, 0x10, 0x45, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x41, 0x8, 
++	0x1, 0x8, 0x41, 0x18, 0x43, 0x18, 0x43, 0x8, 0x41, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x21, 0x9, 0x5A, 0xD7, 
++	0x5A, 0x53, 0x39, 0x8B, 0x20, 0x85, 0x20, 0x87, 0x10, 
++	0x41, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 
++	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 
++	0x1, 0x10, 0x1, 0x18, 0x43, 0x8, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x18, 0x1, 0x8, 0x1, 0x8, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 
++	0x20, 0x83, 0x28, 0xC7, 0x18, 0x43, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x18, 0xC7, 0x42, 0xF, 0x5A, 0x91, 
++	0x6A, 0x95, 0x51, 0xD1, 0x61, 0x91, 0x41, 0xD, 0x20, 
++	0x45, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 
++	0x1, 0x10, 0x1, 0x18, 0x3, 0x40, 0x47, 0x20, 0x1, 
++	0x0, 0x1, 0x8, 0x1, 0x8, 0x1, 0x10, 0x1, 0x8, 
++	0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 
++	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x18, 0x41, 0x28, 0xC7, 0x30, 
++	0x87, 0x18, 0x45, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x10, 0x43, 0x4A, 0x53, 0x7B, 0x19, 0x7A, 0x55, 
++	0x72, 0x15, 0x8B, 0x1F, 0x9B, 0x63, 0x93, 0x63, 0x61, 
++	0xD5, 0x38, 0x89, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 
++	0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 0x1, 0x18, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 
++	0x1, 0x8, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x1, 0x8, 0x1, 0x8, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x10, 0x41, 0x10, 0x41, 0x18, 0xC1, 
++	0x28, 0xC3, 0x10, 0x41, 0x0, 0x1, 0x10, 0x81, 0x28, 
++	0xC7, 0x31, 0x49, 0x28, 0xC5, 0x30, 0xC9, 0x10, 0x43, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x20, 0x85, 0x59, 0xD1, 0x82, 0x15, 0x8A, 0x17, 
++	0x89, 0x91, 0xAB, 0xE7, 0xBD, 0x33, 0xB4, 0x6D, 0x9B, 
++	0xE7, 0x41, 0xF, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x20, 0x85, 0x62, 0x8F, 0x49, 0xC9, 
++	0x31, 0x45, 0x28, 0xC1, 0x31, 0x3, 0x39, 0x87, 0x29, 
++	0x43, 0x39, 0x87, 0x52, 0x4B, 0x39, 0x49, 0x18, 0xC5, 
++	0x49, 0x4D, 0x30, 0xC9, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x31, 0xB, 0x71, 0x95, 0x91, 0xD1, 0xA2, 0xD1, 
++	0xAB, 0x51, 0xB3, 0x9D, 0xB4, 0x6D, 0xA4, 0x2B, 0x62, 
++	0x5B, 0x31, 0xB, 0x10, 0x3, 0x18, 0x45, 0x30, 0xCB, 
++	0x20, 0x45, 0x39, 0xD, 0x18, 0x43, 0x8, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x8, 0x41, 0x10, 0x81, 0x18, 0x81, 0x41, 0x87, 
++	0x4A, 0x9, 0x4A, 0x9, 0x52, 0x4B, 0x73, 0x11, 0x8B, 
++	0xD3, 0x7B, 0x53, 0x39, 0x45, 0x42, 0x5, 0x42, 0x5, 
++	0x18, 0x43, 0x10, 0x43, 0x41, 0xB, 0x38, 0xC7, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x38, 0xC9, 0x81, 0xD5, 0x9A, 0x19, 0xB3, 0xD7, 
++	0xC4, 0x9B, 0xAB, 0x5F, 0x9B, 0x63, 0x41, 0x4F, 0x20, 
++	0x47, 0x0, 0x1, 0x0, 0x1, 0x18, 0x45, 0x7A, 0x9F, 
++	0xB4, 0xB1, 0x8B, 0x61, 0x8B, 0x21, 0x7A, 0x9B, 0x30, 
++	0x45, 0x28, 0xC9, 0x18, 0x45, 0x8, 0x41, 0x0, 0x1, 
++	0x0, 0x1, 0x18, 0x5, 0x18, 0x89, 0x8, 0x47, 0x8, 
++	0x45, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x18, 0x81, 0x20, 0x81, 0x28, 0xC3, 
++	0x39, 0x85, 0x5A, 0x8B, 0x83, 0x93, 0x62, 0xCF, 0x52, 
++	0x4B, 0x83, 0xD1, 0x83, 0x93, 0x73, 0x11, 0x49, 0xC7, 
++	0x31, 0x85, 0x10, 0x81, 0x0, 0x1, 0x18, 0xC7, 0x61, 
++	0xCF, 0x49, 0x49, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x40, 0xC9, 0x79, 0x97, 0x91, 0xD7, 0xB3, 0xE5, 
++	0xBB, 0xE3, 0xA3, 0x23, 0x9A, 0x5F, 0x6A, 0x59, 0x51, 
++	0xD1, 0x41, 0x91, 0x28, 0xCB, 0x10, 0x1, 0x51, 0x95, 
++	0xB4, 0x6F, 0xC5, 0x75, 0xBC, 0xAB, 0xAC, 0x6B, 0x9B, 
++	0x21, 0x8A, 0x9B, 0x59, 0x91, 0x10, 0x43, 0x8, 0x1, 
++	0x0, 0x1, 0x8, 0x41, 0x10, 0x45, 0x10, 0x43, 0x8, 
++	0x43, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x41, 0x18, 0x83, 
++	0x21, 0x1, 0x49, 0xC9, 0x8B, 0x95, 0x8C, 0x15, 0x8B, 
++	0xD3, 0x83, 0x91, 0x73, 0x4F, 0x9C, 0x95, 0xA4, 0x55, 
++	0x6A, 0xCB, 0x19, 0x3, 0x8, 0x41, 0x0, 0x1, 0x0, 
++	0x1, 0x29, 0x9, 0x61, 0xCF, 0x39, 0x7, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x28, 0x87, 0x79, 0x95, 0x9A, 0x1D, 0xA2, 0xE3, 
++	0xB3, 0xA5, 0xA2, 0x61, 0x9A, 0x61, 0xAC, 0x6B, 0x94, 
++	0x6B, 0x8C, 0x69, 0x7B, 0x61, 0x6A, 0x59, 0x71, 0xD7, 
++	0x8A, 0x9D, 0xB3, 0xEB, 0xC4, 0x9D, 0xAB, 0xB, 0xA2, 
++	0xD7, 0x92, 0x5D, 0x71, 0x51, 0x38, 0x85, 0x41, 0xCB, 
++	0x31, 0x4B, 0x39, 0x8B, 0x4A, 0x51, 0x29, 0x4B, 0x10, 
++	0x43, 0x8, 0x41, 0x8, 0x41, 0x0, 0x1, 0x18, 0xC5, 
++	0x20, 0xC5, 0x18, 0xC5, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x10, 0x83, 0x10, 0x41, 0x29, 0x5, 
++	0x52, 0x49, 0x39, 0xC5, 0x39, 0x83, 0x31, 0x45, 0x52, 
++	0x9, 0x7B, 0x93, 0x94, 0x11, 0x94, 0x11, 0xAC, 0xD9, 
++	0xA4, 0x55, 0x94, 0x11, 0x4A, 0x4B, 0x8, 0x1, 0x8, 
++	0x41, 0x0, 0x1, 0x0, 0x1, 0x20, 0xC5, 0x61, 0xD3, 
++	0x18, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x8, 0x1, 0x58, 0xCD, 0x92, 0x1D, 0xB3, 0x69, 
++	0xAA, 0xDD, 0xAA, 0xCF, 0xA2, 0xDF, 0xB4, 0x6F, 0xAD, 
++	0xB5, 0xAD, 0x75, 0xAD, 0xB5, 0xB5, 0x73, 0xA3, 0x69, 
++	0x92, 0x1D, 0x9A, 0x1F, 0xBB, 0xEB, 0xC4, 0xDB, 0xBC, 
++	0x11, 0xB3, 0x9D, 0x99, 0xD7, 0x71, 0xD, 0x71, 0x4D, 
++	0x9C, 0x63, 0x73, 0x99, 0x6A, 0xD7, 0x5A, 0xD5, 0x39, 
++	0xCF, 0x8, 0x41, 0x8, 0x43, 0x10, 0x1, 0x29, 0x9, 
++	0x4A, 0x4F, 0x39, 0x8B, 0x10, 0xC3, 0x0, 0x1, 0x10, 
++	0x1, 0x18, 0x1, 0x10, 0x43, 0x39, 0xCD, 0x49, 0x89, 
++	0x18, 0x83, 0x29, 0x3, 0x19, 0x1, 0x18, 0x81, 0x10, 
++	0xC3, 0x8, 0x41, 0x18, 0xC1, 0x5A, 0x8D, 0x9C, 0x53, 
++	0xAC, 0xD9, 0xBD, 0x5F, 0xAD, 0x1B, 0x94, 0x15, 0x31, 
++	0x47, 0x30, 0xC7, 0x28, 0x45, 0x0, 0x1, 0x8, 0x1, 
++	0x39, 0x4D, 0x51, 0x4F, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x20, 0x45, 0x70, 0xCD, 0x9A, 0x61, 
++	0xA3, 0x25, 0xA2, 0x5D, 0xA2, 0x5D, 0xAB, 0xA7, 0xAD, 
++	0x35, 0xA5, 0x73, 0xA5, 0x75, 0xAD, 0x75, 0xBD, 0x73, 
++	0xAB, 0x27, 0x99, 0xD7, 0xAB, 0x15, 0xAB, 0x61, 0xBC, 
++	0x29, 0xB3, 0xA5, 0x9A, 0x1F, 0x89, 0x11, 0x81, 0x51, 
++	0x9A, 0x9D, 0x93, 0x1F, 0x6B, 0x17, 0x52, 0x51, 0x6B, 
++	0x19, 0x31, 0x8D, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 
++	0x31, 0x49, 0x39, 0x89, 0x31, 0x47, 0x10, 0x43, 0x29, 
++	0x7, 0x20, 0xC5, 0x20, 0x45, 0x0, 0x1, 0x18, 0x85, 
++	0x20, 0x85, 0x0, 0x41, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x8, 0x41, 0x20, 0x45, 0x30, 0xC5, 0x29, 0x5, 
++	0x7B, 0x51, 0x9C, 0x97, 0xAC, 0xDD, 0xA4, 0x9D, 0x94, 
++	0x57, 0x5A, 0x8D, 0x49, 0x47, 0x30, 0xC7, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x41, 0x49, 0x4F, 0x10, 0x5, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x40, 0x45, 0x79, 0xD, 
++	0x79, 0x99, 0x8A, 0x1B, 0x8A, 0x1D, 0x6A, 0x19, 0x83, 
++	0xA5, 0x94, 0xB1, 0x8C, 0xAD, 0x94, 0xF1, 0x94, 0xF1, 
++	0x94, 0x29, 0x8A, 0x1F, 0x9A, 0x1B, 0xAA, 0x99, 0x9A, 
++	0x5D, 0xAB, 0x69, 0xAB, 0x67, 0xAB, 0x25, 0x89, 0x99, 
++	0x89, 0x57, 0x9A, 0x9F, 0x71, 0x53, 0x40, 0xC9, 0x20, 
++	0x83, 0x10, 0x85, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 
++	0x10, 0x45, 0x51, 0x49, 0x7A, 0x4D, 0x7A, 0x4F, 0x69, 
++	0xD1, 0x72, 0x53, 0x93, 0x19, 0x82, 0xDB, 0x39, 0xB, 
++	0x18, 0x83, 0x20, 0xC5, 0x8, 0x43, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x8, 0x1, 0x28, 0x87, 0x38, 0xC7, 
++	0x49, 0xC5, 0x62, 0xCB, 0x93, 0xD5, 0x94, 0x59, 0x9C, 
++	0x5B, 0x94, 0x19, 0x83, 0x91, 0x73, 0xB, 0x41, 0x87, 
++	0x0, 0x41, 0x0, 0x1, 0x0, 0x1, 0x20, 0x45, 0x18, 
++	0x45, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x50, 0x87, 
++	0x81, 0x91, 0x61, 0x51, 0x20, 0x47, 0x28, 0x87, 0x10, 
++	0x45, 0x41, 0x4F, 0x41, 0xD5, 0x29, 0x91, 0x31, 0x93, 
++	0x52, 0x17, 0x31, 0xF, 0x20, 0x87, 0x49, 0xF, 0x48, 
++	0xCF, 0x61, 0x93, 0x59, 0x53, 0x7A, 0x19, 0x9A, 0xA3, 
++	0x89, 0x55, 0x78, 0xCB, 0x68, 0x87, 0x68, 0x8B, 0x60, 
++	0x8D, 0x38, 0xC7, 0x10, 0x43, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x3, 0x30, 0x47, 0x59, 0xB, 0x59, 
++	0xB, 0x59, 0xF, 0x7A, 0x17, 0x93, 0x19, 0x82, 0x99, 
++	0x28, 0xC7, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x0, 
++	0x1, 0x0, 0x41, 0x10, 0x3, 0x18, 0x45, 0x20, 0xC5, 
++	0x62, 0x4F, 0x9C, 0x57, 0xAC, 0x97, 0xAC, 0xDB, 0xBD, 
++	0x69, 0xAC, 0xDF, 0xBD, 0xA7, 0xB5, 0x21, 0xBC, 0xDB, 
++	0x94, 0x1B, 0x39, 0x7, 0x18, 0x85, 0x0, 0x3, 0x18, 
++	0x41, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x48, 0x45, 0x89, 0xD5, 0x49, 0x51, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x8, 0x3, 0x8, 0x3, 0x10, 0xC9, 
++	0x8, 0x3, 0x10, 0x3, 0x0, 0x3, 0x0, 0x1, 0x0, 
++	0x1, 0x8, 0x3, 0x0, 0x1, 0x8, 0x3, 0x38, 0xCB, 
++	0x8A, 0xE3, 0x91, 0xD9, 0x81, 0xB, 0x68, 0x87, 0x70, 
++	0x8D, 0x70, 0xCF, 0x58, 0xCF, 0x18, 0x43, 0x8, 0x3, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x28, 
++	0xC3, 0x39, 0x3, 0x28, 0xC5, 0x18, 0x43, 0x20, 0x85, 
++	0x18, 0x85, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 
++	0x45, 0x8, 0x41, 0x18, 0x45, 0x51, 0x4D, 0x9B, 0xA1, 
++	0x7B, 0x1B, 0x83, 0x19, 0xB5, 0x27, 0xC5, 0xAB, 0xC5, 
++	0xA3, 0xC5, 0xA5, 0xC5, 0xA9, 0xC5, 0xA5, 0xC5, 0x63, 
++	0xC5, 0xEB, 0x93, 0xDF, 0x7A, 0x97, 0x49, 0x4D, 0x0, 
++	0x41, 0x18, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x40, 0x3, 0x79, 0x11, 0x41, 0xD, 0x8, 
++	0x43, 0x0, 0x3, 0x0, 0x1, 0x8, 0x3, 0x20, 0x47, 
++	0x18, 0x87, 0x28, 0xC7, 0x20, 0x47, 0x10, 0x43, 0x8, 
++	0x3, 0x0, 0x3, 0x8, 0x47, 0x0, 0x43, 0x0, 0x1, 
++	0x8, 0x1, 0x28, 0xC7, 0x7A, 0x17, 0x8A, 0x5D, 0x71, 
++	0xD7, 0x59, 0xF, 0x40, 0xC9, 0x38, 0x87, 0x20, 0x87, 
++	0x10, 0x3, 0x0, 0x1, 0x18, 0x1, 0x18, 0x1, 0x10, 
++	0x85, 0x41, 0x4B, 0x39, 0x85, 0x28, 0xC5, 0x8, 0x41, 
++	0x8, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x3, 0x20, 0xC5, 0x19, 0x7, 0x39, 0x9, 0x9B, 0xA1, 
++	0xC5, 0xF5, 0xAC, 0xE9, 0xA3, 0xE3, 0xB5, 0x6F, 0xC5, 
++	0xB1, 0xCE, 0x2D, 0xCE, 0x31, 0xCE, 0x33, 0xCE, 0x2F, 
++	0xCD, 0xEB, 0xBD, 0x6B, 0x9C, 0x23, 0xA4, 0x25, 0x49, 
++	0x8F, 0x8, 0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x30, 0x7, 0x79, 0x11, 0x40, 
++	0xCB, 0x0, 0x3, 0x8, 0x45, 0x8, 0x5, 0x18, 0x45, 
++	0x30, 0xC9, 0x31, 0x8D, 0x31, 0x4B, 0x29, 0x4B, 0x28, 
++	0xCD, 0x20, 0x89, 0x8, 0x45, 0x8, 0x5, 0x8, 0x43, 
++	0x0, 0x1, 0x0, 0x1, 0x31, 0x49, 0x52, 0x4D, 0x52, 
++	0xD, 0x29, 0x7, 0x18, 0x85, 0x28, 0x85, 0x20, 0x85, 
++	0x10, 0x43, 0x10, 0x45, 0x18, 0x43, 0x20, 0x85, 0x39, 
++	0x5, 0x49, 0xCF, 0x5A, 0x51, 0x29, 0x89, 0x31, 0x49, 
++	0x10, 0x83, 0x18, 0x43, 0x8, 0x41, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x18, 0x83, 0x39, 0x8B, 0x4A, 0x11, 
++	0x8C, 0x63, 0xAD, 0x2B, 0xAD, 0x2D, 0xB5, 0xB3, 0xCE, 
++	0x37, 0xD6, 0x7B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 
++	0xD6, 0xBB, 0xCE, 0x35, 0xB5, 0x6F, 0xAC, 0x69, 0xB5, 
++	0x2F, 0x51, 0x8D, 0x10, 0x45, 0x8, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x18, 0x5, 0x79, 
++	0x97, 0x71, 0xD7, 0x10, 0x45, 0x0, 0x1, 0x0, 0x3, 
++	0x18, 0x47, 0x29, 0x4F, 0x29, 0xD, 0x19, 0xB, 0x18, 
++	0xCD, 0x29, 0x91, 0x21, 0xF, 0x29, 0x11, 0x20, 0xCB, 
++	0x8, 0x45, 0x0, 0x3, 0x10, 0x87, 0x31, 0x4F, 0x4A, 
++	0xF, 0x52, 0x91, 0x31, 0x49, 0x18, 0xC7, 0x30, 0xC7, 
++	0x31, 0x7, 0x31, 0x9, 0x21, 0xD, 0x18, 0x45, 0x10, 
++	0x83, 0x28, 0xC9, 0x62, 0xD5, 0x73, 0x19, 0x5A, 0x91, 
++	0x42, 0xB, 0x10, 0x85, 0x18, 0x83, 0x18, 0x85, 0x10, 
++	0x83, 0x10, 0x83, 0x18, 0x43, 0x28, 0x45, 0x41, 0x8D, 
++	0x7B, 0xA1, 0xAD, 0x2F, 0xBD, 0xF5, 0xCE, 0x39, 0xD6, 
++	0xBB, 0xD6, 0x7B, 0xCE, 0x7B, 0xD6, 0x7B, 0xCE, 0xBB, 
++	0xD6, 0x7B, 0xD6, 0xBB, 0xCE, 0x7B, 0xB5, 0x2F, 0xAD, 
++	0x2B, 0x7B, 0x9D, 0x28, 0xC7, 0x0, 0x1, 0x8, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x49, 0xF, 0x82, 0x5B, 0x39, 0x9, 0x0, 0x1, 
++	0x8, 0x3, 0x18, 0xCB, 0x21, 0xF, 0x29, 0x53, 0x19, 
++	0x4F, 0x10, 0x8B, 0x19, 0x51, 0x21, 0x4F, 0x29, 0x53, 
++	0x29, 0x11, 0x20, 0xCB, 0x10, 0x8B, 0x21, 0xD, 0x21, 
++	0x51, 0x21, 0xF, 0x52, 0x51, 0x4A, 0xF, 0x29, 0xB, 
++	0x31, 0x9, 0x28, 0xC7, 0x21, 0xB, 0x18, 0xC9, 0x10, 
++	0x85, 0x8, 0x1, 0x28, 0xC7, 0x62, 0x55, 0x7A, 0x93, 
++	0x51, 0xCD, 0x39, 0x49, 0x21, 0x7, 0x20, 0xC7, 0x3A, 
++	0xD, 0x29, 0x9, 0x20, 0xC7, 0x18, 0x85, 0x29, 0xB, 
++	0x6A, 0x9B, 0xAC, 0xEF, 0xC6, 0x3B, 0xCE, 0x7B, 0xC6, 
++	0x7B, 0xC6, 0x7D, 0xBE, 0x7B, 0xC6, 0x7B, 0xCE, 0x7B, 
++	0xC6, 0x7D, 0xCE, 0x7B, 0xD6, 0xBB, 0xCE, 0x79, 0xAC, 
++	0xED, 0x7C, 0x1F, 0x31, 0x49, 0x10, 0x3, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x10, 0x3, 0x41, 0xD, 0x51, 0x8D, 
++	0x29, 0x7, 0x8, 0x43, 0x10, 0x45, 0x20, 0x8D, 0x21, 
++	0x51, 0x29, 0x51, 0x21, 0xF, 0x21, 0x4D, 0x21, 0xD, 
++	0x10, 0xCB, 0x21, 0xF, 0x19, 0xF, 0x21, 0x53, 0x29, 
++	0x51, 0x29, 0x95, 0x31, 0xD7, 0x4A, 0x55, 0x39, 0xCB, 
++	0x29, 0x7, 0x21, 0x5, 0x18, 0x43, 0x18, 0xC9, 0x4A, 
++	0x55, 0x29, 0xB, 0x20, 0xC7, 0x20, 0x87, 0x69, 0x93, 
++	0x79, 0x91, 0x59, 0x91, 0x69, 0xD5, 0x51, 0x91, 0x30, 
++	0xC9, 0x41, 0x8B, 0x39, 0xCD, 0x49, 0xD1, 0x31, 0xD, 
++	0x4A, 0x57, 0x9C, 0xF1, 0xA5, 0xF9, 0xA6, 0x3B, 0xAD, 
++	0xFB, 0xA5, 0xF9, 0xAE, 0x3B, 0xAD, 0xFB, 0xB6, 0x39, 
++	0xB6, 0x3B, 0xC6, 0x7B, 0xC6, 0x7D, 0xD6, 0xBB, 0xBD, 
++	0xF5, 0x8C, 0x27, 0x4A, 0x51, 0x10, 0x43, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x43, 
++	0x20, 0x45, 0x39, 0x47, 0x42, 0xB, 0x18, 0xC9, 0x10, 
++	0x47, 0x20, 0x8B, 0x21, 0x51, 0x19, 0xF, 0x18, 0x89, 
++	0x18, 0xC9, 0x21, 0x4F, 0x31, 0x95, 0x3A, 0x17, 0x39, 
++	0xD9, 0x3A, 0x59, 0x42, 0x19, 0x42, 0x5B, 0x62, 0xDF, 
++	0x7B, 0x1D, 0x7B, 0x1D, 0x62, 0x13, 0x39, 0x4B, 0x41, 
++	0xD5, 0x42, 0x11, 0x41, 0x8D, 0x49, 0x8F, 0x59, 0x91, 
++	0x59, 0x91, 0x59, 0x91, 0x5A, 0x17, 0x83, 0x63, 0x8C, 
++	0x2D, 0x83, 0xA5, 0x7A, 0x9B, 0x72, 0x59, 0x82, 0x5F, 
++	0x6A, 0xE1, 0x7C, 0x2D, 0x7D, 0x35, 0x85, 0x35, 0x7D, 
++	0x77, 0x7D, 0x37, 0x7D, 0x35, 0x7D, 0x37, 0x85, 0x77, 
++	0x9D, 0xB9, 0xAE, 0x39, 0xBE, 0x3B, 0xC6, 0x7D, 0xCE, 
++	0x79, 0x94, 0x27, 0x39, 0xCF, 0x10, 0x43, 0x8, 0x41, 
++	0x10, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x18, 0x43, 0x31, 0x49, 0x41, 
++	0xCD, 0x29, 0x4F, 0x21, 0x11, 0x21, 0xF, 0x19, 0xF, 
++	0x21, 0x11, 0x29, 0x93, 0x5B, 0x1F, 0xA5, 0x73, 0xA5, 
++	0x73, 0xA5, 0x75, 0xAD, 0xB3, 0xB5, 0xB7, 0xB5, 0xF9, 
++	0xBE, 0x37, 0xA5, 0x33, 0xB5, 0xB5, 0xBD, 0x75, 0xA4, 
++	0xF1, 0x7B, 0xA3, 0x39, 0xCF, 0x51, 0x95, 0x82, 0xDD, 
++	0x7A, 0x9F, 0x8B, 0x25, 0x83, 0x23, 0x7B, 0xA7, 0x7C, 
++	0x71, 0x6C, 0xF3, 0x6C, 0xF5, 0x6C, 0xB1, 0x64, 0x31, 
++	0x64, 0x71, 0x5C, 0x31, 0x54, 0x71, 0x54, 0x71, 0x4C, 
++	0x31, 0x4C, 0x2F, 0x43, 0xF1, 0x4C, 0x2F, 0x54, 0x71, 
++	0x7D, 0x37, 0x8D, 0xB9, 0xA5, 0xF9, 0xB6, 0x39, 0xAC, 
++	0xF1, 0x83, 0xA1, 0x39, 0x4D, 0x10, 0x1, 0x0, 0x41, 
++	0x10, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 
++	0x41, 0x18, 0xC5, 0x39, 0x8D, 0x31, 0x8F, 0x21, 0xD, 
++	0x19, 0xD, 0x31, 0xD9, 0x29, 0x95, 0x4A, 0x5B, 0xAD, 
++	0xB5, 0xC6, 0xBD, 0xC6, 0x7D, 0xCE, 0xBB, 0xC6, 0x7D, 
++	0xCE, 0xBD, 0xC6, 0xBD, 0xCE, 0x7B, 0xBE, 0x3B, 0xC6, 
++	0x7D, 0xBD, 0xF9, 0xA4, 0xEF, 0x83, 0xE9, 0x6B, 0x65, 
++	0x84, 0xB1, 0x6C, 0xB3, 0x6C, 0xB3, 0x64, 0xF5, 0x5C, 
++	0x71, 0x54, 0x73, 0x54, 0x71, 0x43, 0xF1, 0x4C, 0x2F, 
++	0x43, 0xED, 0x3B, 0xAF, 0x3B, 0xAB, 0x33, 0x6D, 0x33, 
++	0x6B, 0x33, 0x2B, 0x2B, 0x6B, 0x3B, 0x6D, 0x44, 0x2F, 
++	0x64, 0xB3, 0x7D, 0x77, 0x95, 0xB9, 0xA5, 0xB7, 0x8C, 
++	0x27, 0x41, 0x91, 0x20, 0x87, 0x8, 0x1, 0x8, 0x1, 
++	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x10, 0x3, 0x18, 0x85, 0x29, 0x7, 
++	0x31, 0x8B, 0x41, 0xD3, 0x3A, 0x19, 0x31, 0xD5, 0x31, 
++	0x95, 0x7C, 0x29, 0xBE, 0x7B, 0xCE, 0x7B, 0xC6, 0xBD, 
++	0xCE, 0x7D, 0xCE, 0xBD, 0xC6, 0x7D, 0xCE, 0xBD, 0xBE, 
++	0x7D, 0xB6, 0x3B, 0xB6, 0x3B, 0xAD, 0xF9, 0x9D, 0xF9, 
++	0x85, 0x77, 0x7D, 0x35, 0x74, 0xF5, 0x5C, 0x73, 0x54, 
++	0x31, 0x4C, 0x2F, 0x43, 0xEF, 0x43, 0xAD, 0x3B, 0x6D, 
++	0x3B, 0xAD, 0x33, 0x2B, 0x33, 0x69, 0x3B, 0x2B, 0x33, 
++	0x2B, 0x2B, 0x29, 0x33, 0x6B, 0x33, 0xAD, 0x4B, 0xEF, 
++	0x5C, 0xB3, 0x7C, 0xF3, 0x73, 0xE7, 0x5B, 0x21, 0x4A, 
++	0x55, 0x29, 0x9, 0x18, 0x87, 0x10, 0x41, 0x8, 0x41, 
++	0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x20, 0x85, 0x31, 0x9, 0x39, 0xCF, 0x39, 
++	0x8F, 0x3A, 0xF, 0x52, 0x15, 0x9C, 0xAD, 0xBD, 0xF9, 
++	0xBD, 0xF9, 0xC6, 0x79, 0xC6, 0x7D, 0xCE, 0x7B, 0xBE, 
++	0xBD, 0xBE, 0x3B, 0xAE, 0x3B, 0xA5, 0xF9, 0x9D, 0xB9, 
++	0x8D, 0x77, 0x8D, 0x77, 0x8D, 0x77, 0x7D, 0x35, 0x6C, 
++	0xB3, 0x5C, 0x31, 0x5C, 0x31, 0x54, 0x2F, 0x4B, 0xEF, 
++	0x43, 0xAD, 0x3B, 0x6D, 0x3B, 0x29, 0x33, 0x2B, 0x33, 
++	0x6B, 0x3B, 0xAD, 0x3B, 0xAD, 0x43, 0xEF, 0x64, 0x31, 
++	0x6B, 0xEB, 0x6B, 0x23, 0x62, 0x9B, 0x39, 0x4D, 0x21, 
++	0x7, 0x10, 0x85, 0x31, 0x7, 0x21, 0x7, 0x8, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x1, 0x18, 
++	0x83, 0x29, 0x7, 0x28, 0xC7, 0x31, 0x7, 0x41, 0x8D, 
++	0x6A, 0xDB, 0x8B, 0xE5, 0xA4, 0xEF, 0xB5, 0xB5, 0xC6, 
++	0x3B, 0xBE, 0x7B, 0xBD, 0xFB, 0xB5, 0xF9, 0xA5, 0xF9, 
++	0x9D, 0xF9, 0x95, 0x77, 0x85, 0x77, 0x85, 0x37, 0x7D, 
++	0x35, 0x64, 0x73, 0x5C, 0x71, 0x54, 0x2F, 0x4B, 0xF1, 
++	0x43, 0xED, 0x3B, 0xAD, 0x43, 0xAF, 0x43, 0xAD, 0x43, 
++	0xEF, 0x4C, 0x2F, 0x54, 0x71, 0x64, 0x2F, 0x73, 0xA9, 
++	0x6A, 0x5B, 0x59, 0xD1, 0x41, 0x91, 0x41, 0xCD, 0x29, 
++	0x49, 0x18, 0x85, 0x18, 0x81, 0x8, 0x41, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x8, 0x1, 0x18, 0x85, 0x20, 0x87, 
++	0x21, 0x9, 0x20, 0xC9, 0x29, 0x9, 0x29, 0xB, 0x49, 
++	0xD1, 0x73, 0x61, 0x94, 0x6D, 0x83, 0xE5, 0x6B, 0x1D, 
++	0x6A, 0xDF, 0x73, 0x63, 0x7C, 0x2B, 0x84, 0xB3, 0x7C, 
++	0xB3, 0x6C, 0xF3, 0x6C, 0xB3, 0x5C, 0x73, 0x5C, 0x71, 
++	0x5C, 0x71, 0x5C, 0x71, 0x5C, 0x31, 0x64, 0x71, 0x64, 
++	0xB3, 0x74, 0xB3, 0x7C, 0xB1, 0x7B, 0xA7, 0x59, 0xD3, 
++	0x41, 0x4D, 0x31, 0x49, 0x21, 0x7, 0x10, 0x83, 0x20, 
++	0xC5, 0x10, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x3, 0x10, 0x85, 0x18, 0x47, 0x18, 
++	0x85, 0x18, 0x87, 0x29, 0x8D, 0x4A, 0x15, 0x42, 0x13, 
++	0x39, 0x8F, 0x31, 0x49, 0x41, 0x91, 0x5A, 0x15, 0x6A, 
++	0x57, 0x6A, 0x19, 0x72, 0x5B, 0x72, 0x5F, 0x7B, 0x1F, 
++	0x6A, 0x5D, 0x62, 0x57, 0x6A, 0x5B, 0x62, 0x9B, 0x62, 
++	0x9B, 0x7B, 0x1F, 0x72, 0xDD, 0x59, 0xD5, 0x41, 0x8D, 
++	0x39, 0x4B, 0x39, 0x8B, 0x21, 0x5, 0x10, 0x43, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x8, 0x1, 0x8, 0x1, 0x8, 0x43, 
++	0x10, 0x3, 0x18, 0x83, 0x18, 0x85, 0x20, 0xC7, 0x20, 
++	0x85, 0x10, 0x43, 0x20, 0x87, 0x41, 0x4D, 0x59, 0x91, 
++	0x62, 0x15, 0x6A, 0x13, 0x6A, 0x13, 0x62, 0x11, 0x5A, 
++	0xF, 0x52, 0xF, 0x41, 0x8F, 0x39, 0x89, 0x18, 0xC5, 
++	0x10, 0x43, 0x0, 0x43, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x8, 0x1, 0x0, 0x1, 0x0, 0x1, 0x10, 0x43, 
++	0x10, 0x43, 0x10, 0x85, 0x18, 0x85, 0x10, 0x85, 0x8, 
++	0x43, 0x8, 0x41, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 
++};
++
++Gfx mario_mario_button_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_button_rgba16[] = {
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0xF7, 0x41, 0xF7, 0x1, 0xF7, 0x1, 0xF7, 0x1, 0xF7, 
++	0x1, 0xF6, 0xC1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0xF7, 0x1, 0xF7, 0x1, 0xF7, 
++	0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x1, 0xF7, 0x41, 0xF7, 
++	0x1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x41, 0xF7, 0x1, 0xF7, 0x41, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0xF7, 0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x1, 
++	0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF7, 
++	0x41, 0xF7, 0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x41, 0xF6, 0xC1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x1, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF7, 
++	0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF7, 0x41, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF7, 0x1, 
++	0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x1, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF6, 
++	0xC1, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x41, 0xF7, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0xF6, 0xC1, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x41, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xF6, 
++	0x81, 0xF6, 0x81, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x1, 0xF7, 0x1, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0xF6, 0x1, 0xF6, 0x41, 0xF6, 0xC1, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x1, 0xF6, 0xC1, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0xF5, 0xC1, 0xF5, 0xC1, 0xF6, 0x81, 0xF7, 0x41, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF6, 0xC1, 0xF6, 
++	0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0xED, 0x41, 0xE5, 0x1, 0xF5, 0xC1, 0xF6, 
++	0xC1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF6, 0xC1, 
++	0xF6, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0xE5, 0x1, 0xDC, 0x81, 0xDD, 0x1, 
++	0xF6, 0x41, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x41, 0xF6, 
++	0x81, 0xF6, 0x81, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0xE5, 0x1, 0xDC, 0x81, 0xDC, 
++	0xC1, 0xED, 0x81, 0xF6, 0xC1, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF6, 0xC1, 
++	0xED, 0x81, 0xF6, 0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 0xC1, 0xDC, 0x81, 
++	0xD4, 0x81, 0xCC, 0x81, 0xDD, 0x41, 0xF7, 0x1, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF6, 0xC1, 0xE5, 
++	0x81, 0xDD, 0x1, 0xF6, 0x5, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xE5, 
++	0x41, 0xDC, 0x81, 0xCC, 0x41, 0xC4, 0x41, 0xDD, 0x41, 
++	0xF6, 0xC1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x1, 0xEE, 0x1, 0xDD, 0x41, 
++	0xD4, 0xC1, 0xDD, 0x41, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0xE5, 0x41, 0xE4, 0xC1, 0xD4, 0x81, 0xC4, 0x1, 0xBC, 
++	0x1, 0xCC, 0xC1, 0xE6, 0x1, 0xF7, 0x41, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 
++	0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF6, 0x81, 0xDD, 0x81, 0xCC, 0xC1, 0xCC, 
++	0x41, 0xD4, 0x81, 0xE5, 0x81, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0xED, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xD4, 0x81, 
++	0xBB, 0xC1, 0xB3, 0xC1, 0xC4, 0x41, 0xD5, 0x1, 0xEE, 
++	0x1, 0xF7, 0x1, 0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x81, 
++	0xF7, 0x81, 0xF7, 0x81, 0xF7, 0x1, 0xEE, 0x41, 0xDD, 
++	0x81, 0xD5, 0x41, 0xCC, 0xC1, 0xC4, 0x81, 0xC4, 0x41, 
++	0xCC, 0x81, 0xDC, 0xC1, 0xF6, 0x3, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0xF5, 0xC1, 0xE4, 0xC1, 0xE4, 
++	0xC1, 0xD4, 0x41, 0xBB, 0xC1, 0xB3, 0xC1, 0xB3, 0xC1, 
++	0xBC, 0x1, 0xC4, 0x81, 0xCC, 0xC1, 0xD5, 0x1, 0xD5, 
++	0x41, 0xD5, 0x1, 0xCC, 0xC1, 0xC4, 0x81, 0xBC, 0x1, 
++	0xB3, 0xC1, 0xB4, 0x1, 0xBC, 0x1, 0xC4, 0x41, 0xD4, 
++	0x81, 0xDC, 0xC1, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 0x41, 
++	0xE4, 0xC1, 0xE4, 0xC1, 0xD4, 0x81, 0xC4, 0x1, 0xBB, 
++	0xC1, 0xB3, 0x81, 0xAB, 0x81, 0xAB, 0x81, 0xB3, 0x81, 
++	0xB3, 0xC1, 0xB3, 0x81, 0xB3, 0x81, 0xB3, 0xC1, 0xB3, 
++	0xC1, 0xBC, 0x1, 0xCC, 0x41, 0xD4, 0xC1, 0xDC, 0xC1, 
++	0xE5, 0x1, 0xED, 0x41, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 
++	0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xDC, 0xC1, 
++	0xD4, 0x81, 0xCC, 0x41, 0xC4, 0x1, 0xBC, 0x1, 0xBC, 
++	0x1, 0xBC, 0x1, 0xBC, 0x1, 0xC4, 0x41, 0xCC, 0x81, 
++	0xD4, 0xC1, 0xDD, 0x1, 0xE5, 0x1, 0xED, 0x1, 0xED, 
++	0x1, 0xEC, 0xC1, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0xED, 0xC1, 0xED, 0x41, 0xE4, 0xC1, 0xE4, 
++	0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xDC, 0xC1, 0xDC, 0xC1, 
++	0xDC, 0xC1, 0xDC, 0xC1, 0xE5, 0x1, 0xE5, 0x1, 0xED, 
++	0x41, 0xED, 0x41, 0xF5, 0x41, 0xF5, 0x41, 0xED, 0x1, 
++	0xF5, 0x81, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 0xC1, 
++	0xDC, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE5, 
++	0x1, 0xED, 0x1, 0xED, 0x1, 0xED, 0x1, 0xED, 0x41, 
++	0xF5, 0x41, 0xED, 0x1, 0xED, 0x1, 0xED, 0x1, 0xF6, 
++	0x1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0xED, 0xC1, 0xE5, 0x1, 0xE5, 0x1, 0xE4, 0xC1, 
++	0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 0xC1, 0xE4, 
++	0xC1, 0xEC, 0xC1, 0xED, 0x41, 0xED, 0x41, 0xF5, 0xC1, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0xED, 
++	0xC1, 0xE5, 0x1, 0xED, 0x41, 0xED, 0x41, 0xED, 0x41, 
++	0xED, 0x41, 0xF5, 0xC1, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++	0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 0x3F, 0x0, 
++	0x3F, 0x0, 0x3F, 0x0, 0x3F, 
++};
++
++Gfx mario_mario_face_1_ci8_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_face_1_ci8[] = {
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x1, 0x2, 0x2, 0x2, 0x3, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x2, 0x2, 0x2, 0x2, 0x1, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x2, 0x2, 
++	0x2, 0x2, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x2, 
++	0x2, 0x2, 0x2, 0x2, 0x4, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x5, 0x2, 0x6, 0x0, 0x0, 0x0, 0x7, 0x2, 
++	0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x9, 0x2, 0xA, 0x0, 0x0, 0x0, 0x6, 
++	0x2, 0xA, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 
++	0xC, 0xD, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0xC, 0xC, 0xC, 
++	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0xC, 0xC, 0xC, 0xC, 0x10, 0x11, 0x12, 0x13, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x14, 0x15, 0x16, 0xC, 0xC, 0xC, 0xC, 0xC, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
++	0x17, 0x18, 0x19, 0x1A, 0x1B, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x14, 0x1A, 0x1A, 0x1C, 0x1D, 
++	0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0xC, 0xC, 0xC, 0xC, 0x1E, 0x1F, 0x1B, 0x20, 
++	0x21, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x23, 
++	0x21, 0x24, 0x1B, 0x1A, 0x12, 0x25, 0xC, 0xC, 0xC, 
++	0xC, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
++	0x26, 0x18, 0x1B, 0x27, 0x28, 0x29, 0x2A, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x2B, 0x2C, 0x2D, 0x2E, 0x1B, 
++	0x19, 0x13, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 
++	0x0, 0xC, 0xC, 0xC, 0xC, 0x1D, 0x1A, 0x1B, 0x2F, 
++	0x2, 0x2, 0x2D, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x2F, 0x2, 0x2, 0x31, 0x32, 0x1A, 0x33, 0xC, 0xC, 
++	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 
++	0xC, 0x34, 0x1A, 0x24, 0x35, 0x2, 0x2, 0x2, 0x36, 
++	0x0, 0x0, 0x0, 0x0, 0x37, 0x2, 0x2, 0x2, 0x2, 
++	0x38, 0x1B, 0x14, 0xC, 0xC, 0xC, 0xC, 0xC, 0x0, 
++	0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 0x39, 0x1A, 0x3A, 
++	0x2, 0x2, 0x3B, 0x2, 0x3C, 0x0, 0x0, 0x0, 0x0, 
++	0x3D, 0x2, 0x3E, 0x2, 0x2, 0x3F, 0x40, 0x41, 0xD, 
++	0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0xC, 0xC, 0xC, 
++	0xC, 0xC, 0x42, 0x1A, 0x43, 0x2, 0x44, 0x45, 0x46, 
++	0x47, 0x0, 0x0, 0x0, 0x0, 0x48, 0x49, 0x45, 0x4A, 
++	0x2, 0x2F, 0x40, 0x18, 0x4B, 0xC, 0xC, 0xC, 0xC, 
++	0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 0x14, 0x40, 
++	0x4C, 0x2, 0x4D, 0xC, 0x4E, 0x4F, 0x0, 0x0, 0x0, 
++	0x0, 0x50, 0x51, 0xC, 0x52, 0x2, 0x2C, 0x53, 0x18, 
++	0x26, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0xC, 0xC, 
++	0xC, 0xC, 0xC, 0x54, 0x1A, 0x43, 0x2, 0x55, 0x4E, 
++	0x4D, 0x47, 0x0, 0x0, 0x0, 0x0, 0x56, 0x57, 0x4E, 
++	0x58, 0x2, 0x2F, 0x53, 0x15, 0xF, 0xC, 0xC, 0xC, 
++	0xC, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 0x33, 
++	0x1A, 0x38, 0x2, 0x2, 0x2, 0x2, 0x59, 0x0, 0x0, 
++	0x0, 0x0, 0x5A, 0x2, 0x35, 0x2, 0x2, 0x5B, 0x40, 
++	0x41, 0xD, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 
++	0xC, 0xC, 0xC, 0xC, 0x34, 0x1A, 0x5C, 0x35, 0x2, 
++	0x2, 0x2, 0x5D, 0x0, 0x0, 0x0, 0x0, 0x5E, 0x2, 
++	0x2, 0x2, 0x2, 0x5F, 0x60, 0x61, 0xC, 0xC, 0xC, 
++	0xC, 0xC, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
++	0x62, 0x1A, 0x53, 0x2C, 0x2, 0x2, 0x2, 0x63, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x2C, 0x2, 0x2, 0x35, 0x27, 
++	0x1A, 0x64, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 
++	0x0, 0xC, 0xC, 0xC, 0xC, 0x4B, 0x18, 0x1B, 0x65, 
++	0x2, 0x2, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x66, 0x2D, 0x2, 0x4C, 0x1B, 0x1A, 0x67, 0xC, 0xC, 
++	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 
++	0xC, 0xC, 0x33, 0x1F, 0x1B, 0x68, 0x69, 0x61, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x6A, 0x6B, 0x53, 
++	0x1A, 0x11, 0xF, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0x26, 0x18, 
++	0x1C, 0x1A, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x11, 0x6C, 0x1A, 0x1C, 0x62, 0xC, 0xC, 
++	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0xC, 0xC, 0xC, 0xC, 0x6D, 0x54, 0x6E, 0x67, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x17, 0x1E, 
++	0x61, 0x62, 0xC, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 
++	0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0xC, 
++	0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xC, 0xC, 0xC, 0xC, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0xC, 0xC, 0xC, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++};
++
++Gfx mario_mario_face_1_ci8_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_face_1_ci8_pal_rgba16[] = {
++	0xF5, 0xDD, 0x10, 0x45, 0x0, 0x1, 0x8, 0x1, 0x8, 
++	0x3, 0x21, 0x9, 0x39, 0x8D, 0x29, 0x4B, 0x18, 0x87, 
++	0x10, 0x43, 0x31, 0x4D, 0x18, 0x85, 0xF7, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0x7D, 0xE7, 0x7D, 0xB6, 0xBD, 0x33, 0xFB, 
++	0x2B, 0xB9, 0xA6, 0x3D, 0x3C, 0x3B, 0x23, 0xB9, 0x8D, 
++	0xBD, 0xC6, 0xFD, 0x23, 0x79, 0x13, 0x37, 0x13, 0x39, 
++	0x1B, 0x79, 0xA, 0xF7, 0x95, 0xFD, 0x54, 0xBD, 0x12, 
++	0xF7, 0x1A, 0xF5, 0xA, 0xB5, 0x44, 0x7D, 0x7D, 0x7D, 
++	0x12, 0xF3, 0xDF, 0x7D, 0xD7, 0x3D, 0x12, 0xB3, 0x0, 
++	0x51, 0x0, 0x11, 0x12, 0x6F, 0x33, 0xB5, 0x0, 0x97, 
++	0x0, 0x9, 0xA, 0x2B, 0x0, 0xDB, 0x85, 0x7D, 0x0, 
++	0xD, 0x12, 0xF5, 0x64, 0xFD, 0x75, 0x3D, 0x0, 0x3, 
++	0x53, 0xF3, 0x8D, 0x7B, 0x9, 0xE9, 0x5C, 0xFD, 0x9, 
++	0xEB, 0x0, 0x4B, 0x2A, 0xA7, 0x64, 0x73, 0x0, 0x4D, 
++	0x1, 0x21, 0x1B, 0x39, 0x2B, 0xBB, 0x4C, 0x7B, 0x9, 
++	0xA7, 0x19, 0x9B, 0xCE, 0xBD, 0x63, 0xEF, 0x11, 0x9F, 
++	0x4B, 0xAD, 0x2A, 0x1F, 0x4B, 0x69, 0xDF, 0x3D, 0x1, 
++	0xA5, 0x53, 0xAB, 0xB6, 0x3D, 0x9, 0x5D, 0x3A, 0xE9, 
++	0x6C, 0x2F, 0x9D, 0xB9, 0x1B, 0x37, 0x4C, 0x7D, 0x11, 
++	0x59, 0x43, 0x6D, 0x21, 0xDD, 0x43, 0x27, 0x22, 0x67, 
++	0x5C, 0x33, 0x1, 0x1F, 0x12, 0xB1, 0x4B, 0xB1, 0x85, 
++	0x3B, 0x9, 0xE7, 0x13, 0x79, 0x44, 0x3B, 0x9E, 0x3D, 
++	0x7D, 0x7B, 0x6D, 0x3D, 0xA, 0x2D, 0x23, 0x33, 0xAE, 
++	0x7D, 0x12, 0x71, 0xA, 0x2F, 0x2, 0x31, 0xA, 0x6D, 
++	0xB, 0x39, 0xBE, 0xBD, 0x44, 0x7B, 
++};
++
++Gfx mario_mario_mustache_ci4_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_mustache_ci4[] = {
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x11, 0x10, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x10, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x11, 
++	0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x1, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 
++	0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 
++	0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 
++	0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x10, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x11, 0x11, 0x11, 0x0, 0x11, 0x11, 0x11, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 
++	0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++};
++
++Gfx mario_mario_mustache_ci4_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_mustache_ci4_pal_rgba16[] = {
++	0xF5, 0xDD, 0x0, 0x1, 
++};
++
++Gfx mario_mario_sideburn_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_sideburn_rgba16[] = {
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x68, 0x1, 0x70, 0x1, 0x60, 
++	0x1, 0x58, 0x1, 0x48, 0x1, 0x48, 0x1, 0x40, 0x1, 
++	0x58, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xB0, 0x1, 0x78, 0x1, 0x78, 0x1, 
++	0x70, 0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x38, 
++	0x1, 0x30, 0x1, 0x28, 0x1, 0x20, 0x1, 0x28, 0x1, 
++	0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x80, 0x1, 0x80, 0x1, 0x78, 
++	0x1, 0x70, 0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x28, 
++	0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x78, 0x1, 0x80, 0x1, 
++	0x70, 0x1, 0x60, 0x1, 0x50, 0x1, 0x48, 0x1, 0x40, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 
++	0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x90, 0x1, 0x80, 0x1, 0x78, 
++	0x1, 0x70, 0x1, 0x58, 0x1, 0x50, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x28, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xA8, 0x1, 0x78, 0x1, 0x78, 0x1, 
++	0x70, 0x1, 0x60, 0x1, 0x50, 0x1, 0x48, 0x1, 0x40, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
++	0x28, 0x1, 0x50, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xA8, 0x1, 0x78, 0x1, 0x78, 0x1, 0x70, 
++	0x1, 0x60, 0x1, 0x50, 0x1, 0x48, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x78, 0x1, 
++	0x80, 0x1, 0x80, 0x1, 0x98, 0x1, 0xF5, 0xDD, 0xA8, 
++	0x1, 0x80, 0x1, 0x78, 0x1, 0x78, 0x1, 0x70, 0x1, 
++	0x60, 0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 
++	0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x88, 0x1, 0x70, 0x1, 0x78, 
++	0x1, 0x80, 0x1, 0x80, 0x1, 0x80, 0x1, 0x78, 0x1, 
++	0x78, 0x1, 0x78, 0x1, 0x78, 0x1, 0x70, 0x1, 0x60, 
++	0x1, 0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x28, 0x1, 0x48, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x88, 0x1, 0x60, 0x1, 0x70, 0x1, 
++	0x78, 0x1, 0x80, 0x1, 0x80, 0x1, 0x80, 0x1, 0x78, 
++	0x1, 0x78, 0x1, 0x70, 0x1, 0x60, 0x1, 0x58, 0x1, 
++	0x50, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x58, 0x1, 0x58, 0x1, 0x60, 
++	0x1, 0x70, 0x1, 0x70, 0x1, 0x70, 0x1, 0x70, 0x1, 
++	0x68, 0x1, 0x60, 0x1, 0x58, 0x1, 0x50, 0x1, 0x48, 
++	0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x30, 0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x50, 0x1, 0x48, 0x1, 
++	0x50, 0x1, 0x58, 0x1, 0x58, 0x1, 0x58, 0x1, 0x58, 
++	0x1, 0x58, 0x1, 0x50, 0x1, 0x48, 0x1, 0x48, 0x1, 
++	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x20, 0x1, 0x50, 0x1, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x70, 0x1, 0x38, 
++	0x1, 0x48, 0x1, 0x48, 0x1, 0x48, 0x1, 0x48, 0x1, 
++	0x48, 0x1, 0x48, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 
++	0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x30, 0x1, 0x28, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x58, 0x1, 0x48, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 
++	0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x20, 0x1, 0x58, 0x1, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x50, 0x1, 0x70, 0x1, 0x88, 
++	0x1, 0x80, 0x1, 0x60, 0x1, 0x48, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 
++	0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x28, 0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x30, 0x1, 0x50, 0x1, 0x70, 0x1, 
++	0x78, 0x1, 0x78, 0x1, 0x60, 0x1, 0x48, 0x1, 0x40, 
++	0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 
++	0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x20, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x38, 0x1, 0x30, 0x1, 0x40, 0x1, 0x50, 
++	0x1, 0x58, 0x1, 0x58, 0x1, 0x50, 0x1, 0x40, 0x1, 
++	0x40, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 0x1, 0x38, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 
++	0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x30, 0x1, 0x28, 0x1, 0x30, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x40, 0x1, 0x40, 0x1, 0x38, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 
++	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x28, 0x1, 
++	0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x30, 0x1, 0x28, 0x1, 0x30, 
++	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x38, 0x1, 
++	0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 0x1, 0x38, 
++	0x1, 0x38, 0x1, 0x38, 0x1, 0x30, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 
++	0x1, 0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x18, 0x1, 
++	0x28, 0x1, 0x28, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 
++	0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x20, 0x1, 
++	0x30, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x30, 
++	0x1, 0x20, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 
++	0x28, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 
++	0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x1, 0x28, 0x1, 
++	0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x20, 0x1, 0x58, 
++	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x40, 0x1, 0x18, 0x1, 0x20, 0x1, 0x20, 
++	0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 
++	0x28, 0x1, 0x28, 0x1, 0x28, 0x1, 0x30, 0x1, 0x28, 
++	0x1, 0x28, 0x1, 0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x60, 0x1, 0x30, 0x1, 
++	0x18, 0x1, 0x20, 0x1, 0x20, 0x1, 0x28, 0x1, 0x28, 
++	0x1, 0x28, 0x1, 0x28, 0x1, 0x20, 0x1, 0x20, 0x1, 
++	0x20, 0x1, 0x38, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x58, 0x1, 0x48, 0x1, 0x30, 0x1, 
++	0x38, 0x1, 0x30, 0x1, 0x38, 0x1, 0x58, 0x1, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++};
++
++Gfx mario_mario_logo_rgba16_ci8_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_logo_rgba16_ci8[] = {
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x2, 0x3, 0x4, 0x1, 0x1, 0x1, 0x5, 
++	0x6, 0x7, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
++	0x0, 0x8, 0x1, 0x9, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x5, 0x0, 0x0, 0x0, 0x0, 0x1, 0xA, 
++	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0xB, 0x0, 
++	0x0, 0x0, 0x0, 0xC, 0xD, 0x0, 0x0, 0x0, 0x0, 
++	0xE, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0xF, 0x0, 
++	0x0, 0x10, 0x11, 0x0, 0x0, 0x0, 0x0, 0x12, 0x0, 
++	0x0, 0x0, 0x13, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x14, 0x1, 0x0, 
++	0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x7, 0x0, 
++	0x0, 0x0, 0x15, 0x1, 0x0, 0x0, 0x0, 0x16, 0x1, 
++	0x17, 0x0, 0x0, 0x0, 0x18, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x1, 0x1, 0x1, 0x19, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x9, 0x1A, 0x1B, 0x1, 0x1, 0x2, 0x0, 0x0, 0x0, 
++	0x0, 0x1C, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 
++	0x0, 0x0, 0x19, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x1, 0x1, 0x1, 0x1D, 0x0, 0x0, 0x0, 0x1E, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1F, 0x0, 
++	0x0, 0x0, 0x0, 0x8, 0x1, 0x1, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 
++	0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x20, 0x0, 0x0, 0x0, 0x21, 0x1, 
++	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x1, 0x1, 0x22, 0x21, 0x0, 0x0, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x0, 0x1F, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x23, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 
++	0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++};
++
++Gfx mario_mario_logo_rgba16_ci8_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_logo_rgba16_ci8_pal_rgba16[] = {
++	0xF8, 0x1, 0xFF, 0xFF, 0xFE, 0xB5, 0xFD, 0xAF, 0xEC, 
++	0xE9, 0xFD, 0xEF, 0xFD, 0x2B, 0xFD, 0x29, 0xFB, 0x9F, 
++	0xFF, 0x3B, 0xFA, 0xD7, 0xF8, 0x3, 0xEE, 0xF7, 0xF8, 
++	0x43, 0xFD, 0x6D, 0xFA, 0x97, 0xF9, 0xCF, 0xF9, 0x8F, 
++	0xFC, 0x65, 0xFB, 0x5B, 0xFB, 0xDF, 0xFE, 0x33, 0xFC, 
++	0xE7, 0xFA, 0x53, 0xF9, 0x9, 0xF8, 0x45, 0xFC, 0xA5, 
++	0xFC, 0x63, 0xFE, 0xF7, 0xFA, 0x13, 0xFB, 0xE1, 0xF9, 
++	0xD1, 0xFE, 0x75, 0xFB, 0x5D, 0xFF, 0x7B, 0xFF, 0x7F, 
++	
++};
++
++Gfx mario_mario_face_2_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_face_2_rgba16[] = {
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x10, 0x45, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x3, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0x21, 0x9, 0x0, 0x1, 0x39, 0x8D, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x29, 0x4B, 0x0, 0x1, 0x18, 
++	0x87, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x10, 0x43, 0x0, 0x1, 0x31, 0x4D, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x39, 0x8D, 0x0, 
++	0x1, 0x31, 0x4D, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x10, 0x85, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x18, 0x85, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x6B, 0x5B, 0x4A, 
++	0x53, 0x10, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x10, 0x85, 0x18, 0xC7, 0x4A, 0x53, 0x84, 0x21, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0x7B, 0xDF, 0x94, 0xA5, 0x6B, 0x5B, 0x39, 0xCF, 
++	0x18, 0xC7, 0x10, 0x85, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x2A, 0xA7, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x18, 0xC7, 0x18, 0xC7, 0x39, 
++	0xCF, 0x6B, 0x5B, 0x84, 0x21, 0x94, 0xA5, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0x4C, 0x7B, 0x13, 0x39, 0x9, 0xA7, 
++	0x0, 0x1, 0x19, 0x9B, 0xCE, 0xBD, 0x63, 0xEF, 0x11, 
++	0x9F, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x4B, 0xAD, 0x2A, 0x1F, 0xCE, 0xBD, 0x4B, 0x69, 0x0, 
++	0x1, 0x0, 0xDB, 0x1B, 0x39, 0x23, 0x79, 0xDF, 0x3D, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0x3C, 0x3B, 0x1B, 0x39, 0x1, 
++	0xA5, 0x0, 0x1, 0x53, 0xAB, 0xF7, 0xBD, 0xB6, 0x3D, 
++	0x9, 0x5D, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0x3A, 0xE9, 0x6C, 0x2F, 0xF7, 0xBD, 0x9D, 0xB9, 
++	0x0, 0x1, 0x0, 0x97, 0x1B, 0x37, 0x23, 0x79, 0xD7, 
++	0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x4C, 0x7D, 0x13, 0x39, 
++	0x9, 0xA7, 0x0, 0x1, 0x11, 0x59, 0xB6, 0x3D, 0x53, 
++	0xAB, 0x11, 0x9F, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x43, 0x6D, 0x21, 0xDD, 0xB6, 0x3D, 0x43, 
++	0x27, 0x0, 0x1, 0x0, 0xDB, 0x1B, 0x37, 0x23, 0xB9, 
++	0xE7, 0x7D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x64, 0xFD, 0x13, 
++	0x39, 0x9, 0xE9, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x22, 0x67, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x5C, 0x33, 0x0, 0x1, 0x0, 0x3, 
++	0x0, 0x1, 0x0, 0x1, 0x1, 0x1F, 0x1B, 0x39, 0x2B, 
++	0xBB, 0xEF, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x75, 0x3D, 
++	0x13, 0x39, 0x12, 0xB1, 0x0, 0x3, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x4B, 0xB1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x85, 0x3B, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x9, 0xE7, 0x13, 0x79, 
++	0x44, 0x3B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x9E, 
++	0x3D, 0x13, 0x39, 0x1B, 0x37, 0x0, 0x97, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x7D, 0x7B, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x97, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x3, 0x12, 0xB3, 0x13, 
++	0x39, 0x6D, 0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xDF, 0x3D, 0x23, 0x79, 0x1B, 0x79, 0xA, 0x2D, 0x0, 
++	0x1, 0x0, 0x1, 0x9, 0xA7, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x23, 
++	0x33, 0x0, 0x9, 0x0, 0x1, 0x1, 0xA5, 0x1B, 0x79, 
++	0x13, 0x39, 0xAE, 0x7D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0x64, 0xFD, 0x12, 0xF7, 0x1B, 0x79, 
++	0x12, 0x71, 0xA, 0x2F, 0x44, 0x3B, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x75, 0x3D, 0x2, 0x31, 0xA, 0x6D, 0x1B, 0x37, 0x13, 
++	0x39, 0x33, 0xFB, 0xE7, 0x7D, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xD7, 0x3D, 0x23, 0x79, 0xA, 
++	0xF7, 0x13, 0x39, 0x1B, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x33, 0xFB, 0xB, 0x39, 0x13, 0x39, 
++	0xA, 0xF7, 0x9E, 0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xBE, 0xBD, 
++	0x4C, 0x7D, 0x44, 0x7B, 0xAE, 0x7D, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xC6, 0xFD, 0x54, 0xBD, 0x44, 
++	0x3B, 0x9E, 0x3D, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++};
++
++Gfx mario_mario_face_3_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_face_3_rgba16[] = {
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x10, 0x45, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x8, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x10, 0x45, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x8, 0x3, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0x21, 0x9, 0x0, 0x1, 0x39, 0x8D, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x29, 0x4B, 0x0, 0x1, 0x0, 
++	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x10, 0x43, 0x0, 0x1, 0x31, 0x4D, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 
++	0x1, 0x31, 0x4D, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x10, 0x85, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x10, 0x85, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x18, 0x85, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x10, 0x45, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x0, 0x1, 0x0, 0x1, 0x29, 0x4B, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x29, 0x4B, 0x0, 0x3, 0x0, 0x3, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x3, 
++	0x0, 0x3, 0x29, 0x4B, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0x29, 0x4B, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x18, 
++	0xC7, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0x0, 0x1, 0x0, 0x1, 0x18, 0xC7, 0x18, 0xC7, 
++	0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x18, 0xC7, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x3, 0x0, 0x3, 
++	0x0, 0x3, 0x0, 0x3, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x3, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x3, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++};
++
++Gfx mario_mario_face_4_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_mario_face_4_rgba16[] = {
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 
++	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 
++	0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0x0, 0x1, 0x0, 0x1, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xE7, 0x39, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xE7, 
++	0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 
++	0x39, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 0xC6, 0x31, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 
++	0x0, 0x1, 0x6B, 0x5B, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 0x39, 
++	0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 
++	0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF7, 0xBD, 0x18, 0xC7, 0x0, 0x1, 0x39, 0xCF, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 
++	0x1, 0x0, 0x1, 0xC6, 0x31, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
++	0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0xC6, 0x31, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 
++	0x1, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF7, 0xBD, 0x52, 0x95, 0x0, 0x1, 0x0, 
++	0x1, 0xC6, 0x31, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 
++	0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x39, 
++	0xCF, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
++	0x39, 0xCF, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 
++	0x0, 0x1, 0x39, 0xCF, 0xC6, 0x31, 0x39, 0xCF, 0x0, 
++	0x1, 0x0, 0x1, 0xC6, 0x31, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 
++	0x0, 0x1, 0xAD, 0x6B, 0x39, 0xCF, 0x0, 0x1, 0x39, 
++	0xCF, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 
++	0x39, 0x18, 0xC7, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0x18, 
++	0xC7, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0xC6, 0x31, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0x52, 0x95, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0xC6, 0x31, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0x52, 0x95, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x39, 
++	0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x39, 0xCF, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 
++	0xAD, 0x6B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 
++	0x1, 0x0, 0x1, 0xAD, 0x6B, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x0, 
++	0x1, 0x39, 0xCF, 0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 0xE7, 0x39, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0x0, 0x1, 0x52, 0x95, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 0x0, 
++	0x1, 0xAD, 0x6B, 0x18, 0xC7, 0x0, 0x1, 0x39, 0xCF, 
++	0xE7, 0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0x94, 
++	0xA5, 0x0, 0x1, 0x0, 0x1, 0x18, 0xC7, 0xE7, 0x39, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 
++	0x39, 0xCF, 0xE7, 0x39, 0x52, 0x95, 0x0, 0x1, 0x0, 
++	0x1, 0x52, 0x95, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
++	0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 
++	0xE7, 0x39, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0x39, 
++	0xCF, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 0x18, 
++	0xC7, 0xE7, 0x39, 0xF7, 0xBD, 0xE7, 0x39, 0x39, 0xCF, 
++	0x0, 0x1, 0x18, 0xC7, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0x39, 0xCF, 0x0, 0x1, 0x0, 0x1, 0xC6, 
++	0x31, 0xF7, 0xBD, 0xC6, 0x31, 0x0, 0x1, 0x0, 0x1, 
++	0x0, 0x1, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0x0, 0x1, 0x0, 0x1, 
++	0x52, 0x95, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 
++	0x39, 0x39, 0xCF, 0x8, 0x43, 0xE7, 0x39, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xE7, 0x39, 0x0, 0x1, 0x0, 0x1, 0x39, 0xCF, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x39, 0xCF, 0x0, 
++	0x1, 0x0, 0x1, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 0x39, 0xE7, 
++	0x39, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xE7, 0x39, 0xE7, 0x39, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xE7, 0x39, 0xE7, 0x39, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++	0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 0xF5, 
++	0xDD, 0xF5, 0xDD, 0xF5, 0xDD, 
++};
++
++Gfx mario_wing_2_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_wing_2_rgba16[] = {
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 0x63, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x84, 0x21, 0xBD, 0xEF, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0xAD, 0x6B, 0xA5, 0x29, 0xB5, 0xAD, 0xDE, 0xF7, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 
++	0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 0xEF, 0x7B, 0xCE, 
++	0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 
++	0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 
++	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 
++	0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
++	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xF7, 0xBD, 0xEF, 0x7B, 
++	0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xD6, 
++	0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xE7, 0x39, 0xE7, 0x39, 
++	0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 
++	0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xD6, 
++	0xB5, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0xDE, 0xF7, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 
++	0xC6, 0x31, 0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xCE, 
++	0x73, 0xB5, 0xAD, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xD6, 0xB5, 
++	0xBD, 0xEF, 0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xE7, 0x39, 0xDE, 0xF7, 0xCE, 0x73, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0x94, 0xA5, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
++	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 
++	0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
++	0xF7, 0xD6, 0xB5, 0xCE, 0x73, 0xC6, 0x31, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 
++	0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
++	0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0xC6, 0x31, 0xD6, 
++	0xB5, 0xDE, 0xF7, 0xE7, 0x39, 0xD6, 0xB5, 0xCE, 0x73, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xBD, 0xEF, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xAD, 0x6B, 0xBD, 0xEF, 0xC6, 0x31, 0xDE, 0xF7, 0xE7, 
++	0x39, 0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 
++	0x7B, 0xE7, 0x39, 0xE7, 0x39, 0xE7, 0x39, 0xDE, 0xF7, 
++	0xDE, 0xF7, 0xDE, 0xF7, 0xD6, 0xB5, 0xDE, 0xF7, 0xD6, 
++	0xB5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 0x29, 
++	0xA5, 0x29, 0xA5, 0x29, 0xBD, 0xEF, 0xC6, 0x31, 0xDE, 
++	0xF7, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 
++	0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 
++	0xAD, 0xC6, 0x31, 0xDE, 0xF7, 0xE7, 0x39, 0xEF, 0x7B, 
++	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xC6, 
++	0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 
++	0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xEF, 0x7B, 0xCE, 0x73, 
++	0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 
++	0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 
++	0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 0x39, 0xEF, 0x7B, 
++	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 0x39, 0xC6, 0x31, 0xAD, 
++	0x6B, 0x84, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
++	0x31, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 0xEF, 0xC6, 0x31, 
++	0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 
++	0x73, 0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 
++	0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xE7, 0x39, 0xE7, 
++	0x39, 0xDE, 0xF7, 0xCE, 0x73, 0xBD, 0xEF, 0xAD, 0x6B, 
++	0x8C, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 
++	0xBD, 0xEF, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x94, 
++	0xA5, 0x73, 0x9D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 
++	0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 
++	0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 
++	0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0x9C, 0xE7, 
++	0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
++	0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x8C, 0x63, 
++	0x73, 0x9D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 0x29, 0x9C, 0xE7, 
++	0x94, 0xA5, 0x94, 0xA5, 0x8C, 0x63, 0x8C, 0x63, 0x84, 
++	0x21, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 0x7B, 0xDF, 
++	0x7B, 0xDF, 0x7B, 0xDF, 0x84, 0x21, 0x84, 0x21, 0x84, 
++	0x21, 0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 
++	0x8C, 0x63, 0x8C, 0x63, 0x84, 0x21, 0x7B, 0xDF, 0x6B, 
++	0x5B, 0x4A, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0xA5, 0x94, 
++	0xA5, 0x8C, 0x63, 0x84, 0x21, 0x7B, 0xDF, 0x7B, 0xDF, 
++	0x73, 0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 
++	0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 
++	0x6B, 0x5B, 0x6B, 0x5B, 0x73, 0x9D, 0x73, 0x9D, 0x73, 
++	0x9D, 0x73, 0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x5A, 0xD7, 
++	0x42, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 0x63, 
++	0x84, 0x21, 0x7B, 0xDF, 0x73, 0x9D, 0x6B, 0x5B, 0x6B, 
++	0x5B, 0x63, 0x19, 0x5A, 0xD7, 0x5A, 0xD7, 0x52, 0x95, 
++	0x52, 0x95, 0x4A, 0x53, 0x4A, 0x53, 0x4A, 0x53, 0x4A, 
++	0x53, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
++	0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x39, 0xCF, 0x31, 
++	0x8D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7B, 
++	0xDF, 0x73, 0x9D, 0x6B, 0x5B, 0x63, 0x19, 0x5A, 0xD7, 
++	0x52, 0x95, 0x42, 0x11, 0x52, 0x95, 0x4A, 0x53, 0x52, 
++	0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
++	0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x4A, 
++	0x53, 0x31, 0x8D, 0x31, 0x8D, 0x29, 0x4B, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x6B, 0x5B, 0x63, 0x19, 0x52, 0x95, 0x5A, 0xD7, 0x52, 
++	0x95, 0x5A, 0xD7, 0x63, 0x19, 0x63, 0x19, 0x5A, 0xD7, 
++	0x5A, 0xD7, 0x5A, 0xD7, 0x5A, 0xD7, 0x5A, 0xD7, 0x5A, 
++	0xD7, 0x5A, 0xD7, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
++	0x39, 0xCF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x5A, 0xD7, 0x63, 0x19, 0x5A, 0xD7, 0x5A, 0xD7, 
++	0x52, 0x95, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 0x9C, 
++	0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0xBD, 
++	0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x5A, 0xD7, 0x7B, 0xDF, 0xA5, 0x29, 0xBD, 
++	0xEF, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xEF, 0x7B, 
++	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xF7, 0xBD, 0xF7, 0xBD, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xC6, 0x31, 0xD6, 0xB5, 0xDE, 0xF7, 
++	0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 
++	0x39, 0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 
++	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 
++	0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 
++	0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xDE, 
++	0xF7, 0xE7, 0x39, 0xE7, 0x39, 0xE7, 0x39, 0xEF, 0x7B, 
++	0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xE7, 
++	0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 
++	0xC6, 0x31, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 
++	0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xD6, 0xB5, 
++	0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 
++	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 0x39, 0xE7, 0x39, 
++	0xCE, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xBD, 0xEF, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xC6, 0x31, 
++	0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
++	0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 
++	0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xC6, 
++	0x31, 0xA5, 0x29, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xAD, 0x6B, 
++	0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 
++	0x94, 0xA5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 
++	0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 
++	0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0x94, 0xA5, 0x7B, 
++	0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x8C, 0x63, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 
++	0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x94, 0xA5, 0x94, 
++	0xA5, 0x8C, 0x63, 0x84, 0x21, 0x6B, 0x5B, 0x4A, 0x53, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x6B, 0x5B, 0x73, 0x9D, 0x7B, 0xDF, 0x7B, 0xDF, 
++	0x7B, 0xDF, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 0x84, 
++	0x21, 0x7B, 0xDF, 0x7B, 0xDF, 0x7B, 0xDF, 0x73, 0x9D, 
++	0x63, 0x19, 0x52, 0x95, 0x4A, 0x53, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x7B, 0xDF, 0x6B, 0x5B, 0x5A, 0xD7, 0x52, 
++	0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 
++	0x52, 0x95, 0x4A, 0x53, 0x52, 0x95, 0x42, 0x11, 0x31, 
++	0x8D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xE7, 0x39, 0xE7, 0x39, 0xE7, 0x39, 
++	0xDE, 0xF7, 0xCE, 0x73, 0xC6, 0x31, 0xAD, 0x6B, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0x7B, 0xDF, 0x73, 0x9D, 0x63, 0x19, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 
++	0xF7, 0xDE, 0xF7, 0xDE, 0xF7, 0xE7, 0x39, 0xE7, 0x39, 
++	0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 
++	0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xD6, 
++	0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 0xB5, 
++	0xD6, 0xB5, 0xB5, 0xAD, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 
++	0xAD, 0x9C, 0xE7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA5, 0x29, 
++	0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
++	0x29, 0xA5, 0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 
++	0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 
++	0x63, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 
++	0x84, 0x21, 0x84, 0x21, 0x7B, 0xDF, 0x6B, 0x5B, 0x52, 
++	0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x6B, 0x5B, 0x6B, 0x5B, 0x63, 0x19, 0x63, 0x19, 0x5A, 
++	0xD7, 0x52, 0x95, 0x42, 0x11, 0x39, 0xCF, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 0x39, 0xCF, 
++	0x39, 0xCF, 0x39, 0xCF, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x6B, 
++	0x5B, 0x6B, 0x5B, 0x73, 0x9D, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 
++	0xC6, 0x31, 0xC6, 0x31, 0xAD, 0x6B, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xA5, 0x29, 0x94, 0xA5, 0x6B, 0x5B, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0xA5, 0x8C, 0x63, 
++	0x84, 0x21, 0x6B, 0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5A, 0xD7, 0x4A, 
++	0x53, 0x39, 0xCF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 
++};
++
++Gfx mario_wing1_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 mario_wing1_rgba16[] = {
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9C, 0xE7, 0xA5, 
++	0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x84, 
++	0x21, 0x8C, 0x63, 0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 
++	0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x7B, 0xDF, 0x84, 0x21, 
++	0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 
++	0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 0x8C, 
++	0x63, 0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
++	0xBD, 0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 
++	0xF7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x73, 0x9D, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 
++	0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xBD, 
++	0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 
++	0xE7, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6B, 0x5B, 
++	0x6B, 0x5B, 0x6B, 0x5B, 0x7B, 0xDF, 0x84, 0x21, 0x8C, 
++	0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xBD, 0xEF, 
++	0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 0xE7, 
++	0x39, 0xEF, 0x7B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x19, 0x63, 
++	0x19, 0x6B, 0x5B, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 0x21, 
++	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 
++	0xEF, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 
++	0xE7, 0x39, 0xEF, 0x7B, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x5A, 0xD7, 0x5A, 0xD7, 
++	0x63, 0x19, 0x6B, 0x5B, 0x73, 0x9D, 0x84, 0x21, 0x8C, 
++	0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 
++	0xC6, 0x31, 0xCE, 0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xD6, 
++	0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0x95, 0x5A, 
++	0xD7, 0x63, 0x19, 0x73, 0x9D, 0x7B, 0xDF, 0x8C, 0x63, 
++	0x9C, 0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 
++	0x31, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 
++	0xCE, 0x73, 0xCE, 0x73, 0xC6, 0x31, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x4A, 0x53, 0x52, 0x95, 
++	0x63, 0x19, 0x6B, 0x5B, 0x7B, 0xDF, 0x84, 0x21, 0x94, 
++	0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 
++	0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x42, 0x11, 0x4A, 0x53, 0x5A, 
++	0xD7, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 
++	0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x39, 0xCF, 0x52, 0x95, 
++	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
++	0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xA5, 0x29, 0xA5, 0x29, 0x9C, 0xE7, 0xB5, 0xAD, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x31, 0x8D, 0x42, 0x11, 0x52, 
++	0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
++	0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 
++	0x9C, 0xE7, 0xA5, 0x29, 0xB5, 0xAD, 0xC6, 0x31, 0xD6, 
++	0xB5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x4A, 0x53, 
++	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
++	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
++	0x29, 0xAD, 0x6B, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 
++	0xCE, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x39, 0xCF, 0x52, 
++	0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
++	0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0xAD, 0x6B, 
++	0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xC6, 
++	0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x18, 0xC7, 0x31, 0x8D, 0x4A, 0x53, 
++	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x94, 0xA5, 0xA5, 
++	0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xAD, 0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xB5, 
++	0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 0x42, 0x11, 0x52, 
++	0x95, 0x63, 0x19, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 
++	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
++	0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xB5, 0xAD, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 
++	0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 0x4A, 0x53, 
++	0x5A, 0xD7, 0x6B, 0x5B, 0x84, 0x21, 0x94, 0xA5, 0xA5, 
++	0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xAD, 0x6B, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xB5, 
++	0xAD, 0xBD, 0xEF, 0xBD, 0xEF, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xAD, 0x6B, 0xA5, 0x29, 0xA5, 0x29, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x52, 
++	0x95, 0x63, 0x19, 0x73, 0x9D, 0x8C, 0x63, 0x9C, 0xE7, 
++	0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
++	0x6B, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 
++	0x29, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x4A, 0x53, 
++	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x94, 0xA5, 0xA5, 
++	0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xAD, 0x6B, 0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 
++	0x9C, 0xE7, 0x94, 0xA5, 0x94, 0xA5, 0x8C, 0x63, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x52, 
++	0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x9C, 0xE7, 
++	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 
++	0x6B, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 
++	0xE7, 0x94, 0xA5, 0x8C, 0x63, 0x84, 0x21, 0x7B, 0xDF, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 0x42, 0x11, 
++	0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
++	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 
++	0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xAD, 0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 
++	0x94, 0xA5, 0x8C, 0x63, 0x84, 0x21, 0x73, 0x9D, 0x6B, 
++	0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 0x4A, 
++	0x53, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
++	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0x94, 
++	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 
++	0xA5, 0x8C, 0x63, 0x7B, 0xDF, 0x73, 0x9D, 0x63, 0x19, 
++	0x5A, 0xD7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x42, 0x11, 
++	0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 
++	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 
++	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 
++	0xAD, 0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 
++	0x8C, 0x63, 0x7B, 0xDF, 0x6B, 0x5B, 0x5A, 0xD7, 0x6B, 
++	0x5B, 0x5A, 0xD7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x4A, 
++	0x53, 0x5A, 0xD7, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 
++	0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xAD, 0x6B, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x8C, 
++	0x63, 0x7B, 0xDF, 0x6B, 0x5B, 0x73, 0x9D, 0x6B, 0x5B, 
++	0x94, 0xA5, 0xC6, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 
++	0x52, 0x95, 0x63, 0x19, 0x73, 0x9D, 0x84, 0x21, 0x9C, 
++	0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xBD, 0xEF, 0x9C, 0xE7, 
++	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xA5, 0x29, 0x94, 0xA5, 0x8C, 0x63, 
++	0x7B, 0xDF, 0x7B, 0xDF, 0x6B, 0x5B, 0x94, 0xA5, 0xC6, 
++	0x31, 0xCE, 0x73, 0xCE, 0x73, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 
++	0xCF, 0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 
++	0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xAD, 0x6B, 0x94, 
++	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xAD, 0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x8C, 0x63, 0x84, 
++	0x21, 0x7B, 0xDF, 0x6B, 0x5B, 0xAD, 0x6B, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 
++	0x4A, 0x53, 0x5A, 0xD7, 0x73, 0x9D, 0x84, 0x21, 0x94, 
++	0xA5, 0xA5, 0x29, 0xB5, 0xAD, 0xBD, 0xEF, 0x94, 0xA5, 
++	0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0x8C, 0x63, 0x94, 0xA5, 
++	0x7B, 0xDF, 0x8C, 0x63, 0xAD, 0x6B, 0xAD, 0x6B, 0xB5, 
++	0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 
++	0x8D, 0x52, 0x95, 0x63, 0x19, 0x73, 0x9D, 0x8C, 0x63, 
++	0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0xA5, 0x29, 0x94, 
++	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xA5, 0x29, 0x9C, 0xE7, 0x94, 0xA5, 0x9C, 0xE7, 0x8C, 
++	0x63, 0x7B, 0xDF, 0x94, 0xA5, 0x9C, 0xE7, 0x9C, 0xE7, 
++	0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 
++	0x39, 0xCF, 0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 
++	0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0xB5, 0xAD, 0x8C, 0x63, 
++	0x94, 0xA5, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xA5, 0x29, 0x9C, 0xE7, 0xAD, 0x6B, 0xCE, 0x73, 
++	0xEF, 0x7B, 0xE7, 0x39, 0xD6, 0xB5, 0xC6, 0x31, 0xA5, 
++	0x29, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0xA5, 0x29, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 
++	0x9, 0x42, 0x11, 0x5A, 0xD7, 0x73, 0x9D, 0x84, 0x21, 
++	0x94, 0xA5, 0xA5, 0x29, 0xB5, 0xAD, 0xAD, 0x6B, 0x94, 
++	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xA5, 0x29, 0x9C, 0xE7, 0xAD, 0x6B, 0xE7, 0x39, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 
++	0xEF, 0x7B, 0xBD, 0xEF, 0x94, 0xA5, 0x84, 0x21, 0x8C, 
++	0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x21, 0x9, 0x4A, 0x53, 0x63, 0x19, 0x73, 0x9D, 0x84, 
++	0x21, 0x94, 0xA5, 0xA5, 0x29, 0xB5, 0xAD, 0x94, 0xA5, 
++	0x94, 0xA5, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0x9C, 0xE7, 0xA5, 0x29, 0xD6, 0xB5, 0xDE, 0xF7, 
++	0xE7, 0x39, 0xEF, 0x7B, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 
++	0xBD, 0xF7, 0xBD, 0xF7, 0xBD, 0xB5, 0xAD, 0x6B, 0x5B, 
++	0x6B, 0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x31, 0x8D, 0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 
++	0x8C, 0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0xAD, 0x6B, 0x94, 
++	0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 
++	0xA5, 0x29, 0x9C, 0xE7, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 
++	0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xE7, 0x39, 
++	0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 0xF7, 0xBD, 0x9C, 
++	0xE7, 0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x18, 0xC7, 0x39, 0xCF, 0x5A, 0xD7, 0x6B, 0x5B, 0x7B, 
++	0xDF, 0x8C, 0x63, 0xA5, 0x29, 0xAD, 0x6B, 0x9C, 0xE7, 
++	0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xA5, 
++	0x29, 0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xC6, 0x31, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 
++	0x73, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 0xDE, 0xF7, 
++	0xDE, 0xF7, 0xE7, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x18, 0xC7, 0x42, 0x11, 0x5A, 0xD7, 0x73, 0x9D, 
++	0x84, 0x21, 0x94, 0xA5, 0xA5, 0x29, 0xA5, 0x29, 0x8C, 
++	0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 
++	0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xA5, 
++	0x29, 0xD6, 0xB5, 0xD6, 0xB5, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x21, 0x9, 0x4A, 0x53, 0x63, 0x19, 0x73, 
++	0x9D, 0x8C, 0x63, 0x94, 0xA5, 0xA5, 0x29, 0xA5, 0x29, 
++	0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xA5, 
++	0x29, 0x9C, 0xE7, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 
++	0x94, 0xA5, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x8C, 0x63, 0x73, 0x9D, 
++	0xB5, 0xAD, 0xC6, 0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x29, 0x4B, 0x4A, 0x53, 0x6B, 0x5B, 
++	0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 0xAD, 0x6B, 0x8C, 
++	0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xAD, 0x6B, 
++	0xA5, 0x29, 0x84, 0x21, 0x42, 0x11, 0x52, 0x95, 0x5A, 
++	0xD7, 0x63, 0x19, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 
++	0x63, 0x19, 0x5A, 0xD7, 0x52, 0x95, 0x52, 0x95, 0xAD, 
++	0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xB5, 0xAD, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x52, 0x95, 0x6B, 
++	0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 
++	0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xA5, 
++	0x29, 0xA5, 0x29, 0x73, 0x9D, 0x4A, 0x53, 0x42, 0x11, 
++	0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 0x39, 0xCF, 0x39, 
++	0xCF, 0x39, 0xCF, 0x39, 0xCF, 0x63, 0x19, 0x8C, 0x63, 
++	0x9C, 0xE7, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 0x0, 
++	0x0, 0x0, 0x0, 0x10, 0x85, 0x31, 0x8D, 0x5A, 0xD7, 
++	0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 0xA5, 0x29, 0x8C, 
++	0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 
++	0xA5, 0x29, 0xB5, 0xAD, 0x94, 0xA5, 0x7B, 0xDF, 0x6B, 
++	0x5B, 0x63, 0x19, 0x52, 0x95, 0x42, 0x11, 0x42, 0x11, 
++	0x42, 0x11, 0x42, 0x11, 0x73, 0x9D, 0x7B, 0xDF, 0x84, 
++	0x21, 0x84, 0x21, 0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 
++	0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x39, 0xCF, 0x5A, 
++	0xD7, 0x73, 0x9D, 0x84, 0x21, 0x94, 0xA5, 0xA5, 0x29, 
++	0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 
++	0x29, 0xAD, 0x6B, 0xD6, 0xB5, 0xD6, 0xB5, 0xDE, 0xF7, 
++	0xE7, 0x39, 0xEF, 0x7B, 0xF7, 0xBD, 0xEF, 0x7B, 0xD6, 
++	0xB5, 0x84, 0x21, 0x42, 0x11, 0x52, 0x95, 0x5A, 0xD7, 
++	0x5A, 0xD7, 0x63, 0x19, 0x63, 0x19, 0x6B, 0x5B, 0x6B, 
++	0x5B, 0x0, 0x0, 0x0, 0x0, 0x18, 0xC7, 0x42, 0x11, 
++	0x63, 0x19, 0x73, 0x9D, 0x8C, 0x63, 0x94, 0xA5, 0x94, 
++	0xA5, 0x8C, 0x63, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 
++	0xA5, 0x29, 0xA5, 0x29, 0xBD, 0xEF, 0xC6, 0x31, 0xCE, 
++	0x73, 0xCE, 0x73, 0xD6, 0xB5, 0xDE, 0xF7, 0xEF, 0x7B, 
++	0xF7, 0xBD, 0xCE, 0x73, 0x39, 0xCF, 0x39, 0xCF, 0x31, 
++	0x8D, 0x39, 0xCF, 0x39, 0xCF, 0x42, 0x11, 0x42, 0x11, 
++	0x42, 0x11, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 0x4A, 
++	0x53, 0x63, 0x19, 0x7B, 0xDF, 0x8C, 0x63, 0x9C, 0xE7, 
++	0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 
++	0x29, 0xA5, 0x29, 0xA5, 0x29, 0xAD, 0x6B, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xBD, 0xEF, 0xC6, 0x31, 0xCE, 0x73, 0xCE, 
++	0x73, 0xD6, 0xB5, 0xCE, 0x73, 0xBD, 0xEF, 0xAD, 0x6B, 
++	0x9C, 0xE7, 0x84, 0x21, 0x84, 0x21, 0x73, 0x9D, 0x6B, 
++	0x5B, 0x63, 0x19, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 
++	0x4A, 0x53, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 0x94, 
++	0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 
++	0xA5, 0x29, 0x94, 0xA5, 0x84, 0x21, 0x94, 0xA5, 0x9C, 
++	0xE7, 0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 
++	0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xC6, 0x31, 
++	0xC6, 0x31, 0xC6, 0x31, 0x0, 0x0, 0x0, 0x0, 0x21, 
++	0x9, 0x52, 0x95, 0x6B, 0x5B, 0x7B, 0xDF, 0x8C, 0x63, 
++	0x94, 0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 
++	0x29, 0xA5, 0x29, 0x4A, 0x53, 0x52, 0x95, 0x6B, 0x5B, 
++	0x7B, 0xDF, 0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 
++	0x63, 0x73, 0x9D, 0x9C, 0xE7, 0xA5, 0x29, 0xA5, 0x29, 
++	0xA5, 0x29, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 
++	0x21, 0x9, 0x52, 0x95, 0x6B, 0x5B, 0x84, 0x21, 0x94, 
++	0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 0x29, 
++	0xA5, 0x29, 0x84, 0x21, 0x42, 0x11, 0x42, 0x11, 0x39, 
++	0xCF, 0x39, 0xCF, 0x42, 0x11, 0x42, 0x11, 0x4A, 0x53, 
++	0x39, 0xCF, 0x4A, 0x53, 0x8C, 0x63, 0x8C, 0x63, 0x94, 
++	0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 
++	0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x0, 0x0, 0x0, 
++	0x0, 0x29, 0x4B, 0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 
++	0x8C, 0x63, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 0xA5, 
++	0x29, 0xA5, 0x29, 0x4A, 0x53, 0x42, 0x11, 0x42, 0x11, 
++	0x42, 0x11, 0x42, 0x11, 0x31, 0x8D, 0x31, 0x8D, 0x31, 
++	0x8D, 0x39, 0xCF, 0x6B, 0x5B, 0x6B, 0x5B, 0x6B, 0x5B, 
++	0x73, 0x9D, 0x73, 0x9D, 0x73, 0x9D, 0x73, 0x9D, 0x73, 
++	0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x5A, 0xD7, 0x0, 0x0, 
++	0x0, 0x0, 0x29, 0x4B, 0x52, 0x95, 0x73, 0x9D, 0x84, 
++	0x21, 0x8C, 0x63, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 0xE7, 
++	0xA5, 0x29, 0xAD, 0x6B, 0xA5, 0x29, 0x6B, 0x5B, 0x5A, 
++	0xD7, 0x42, 0x11, 0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 
++	0x31, 0x8D, 0x39, 0xCF, 0x39, 0xCF, 0x39, 0xCF, 0x39, 
++	0xCF, 0x42, 0x11, 0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 
++	0x31, 0x8D, 0x31, 0x8D, 0x29, 0x4B, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 0xD7, 0x73, 0x9D, 
++	0x84, 0x21, 0x8C, 0x63, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 
++	0xE7, 0xA5, 0x29, 0xA5, 0x29, 0xB5, 0xAD, 0xB5, 0xAD, 
++	0xB5, 0xAD, 0xAD, 0x6B, 0x9C, 0xE7, 0x73, 0x9D, 0x6B, 
++	0x5B, 0x6B, 0x5B, 0x52, 0x95, 0x4A, 0x53, 0x39, 0xCF, 
++	0x42, 0x11, 0x39, 0xCF, 0x39, 0xCF, 0x42, 0x11, 0x42, 
++	0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 0xD7, 0x73, 
++	0x9D, 0x84, 0x21, 0x84, 0x21, 0x8C, 0x63, 0x94, 0xA5, 
++	0x9C, 0xE7, 0x94, 0xA5, 0x8C, 0x63, 0x94, 0xA5, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x8C, 0x63, 0xBD, 0xEF, 
++	0xC6, 0x31, 0xCE, 0x73, 0xCE, 0x73, 0xCE, 0x73, 0xBD, 
++	0xEF, 0xAD, 0x6B, 0xA5, 0x29, 0x8C, 0x63, 0x8C, 0x63, 
++	0x6B, 0x5B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 0xD7, 
++	0x73, 0x9D, 0x84, 0x21, 0x84, 0x21, 0x94, 0xA5, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0x52, 0x95, 0x5A, 0xD7, 0x5A, 0xD7, 
++	0x5A, 0xD7, 0x52, 0x95, 0x52, 0x95, 0x9C, 0xE7, 0xAD, 
++	0x6B, 0xAD, 0x6B, 0xB5, 0xAD, 0xB5, 0xAD, 0xBD, 0xEF, 
++	0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 0xEF, 0xBD, 
++	0xEF, 0xAD, 0x6B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x4B, 0x5A, 
++	0xD7, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 0x94, 0xA5, 
++	0x9C, 0xE7, 0x63, 0x19, 0x29, 0x4B, 0x29, 0x4B, 0x31, 
++	0x8D, 0x31, 0x8D, 0x4A, 0x53, 0x84, 0x21, 0x8C, 0x63, 
++	0x94, 0xA5, 0x94, 0xA5, 0x94, 0xA5, 0x9C, 0xE7, 0x9C, 
++	0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x9C, 0xE7, 0x94, 0xA5, 
++	0x84, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x9, 
++	0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 0x94, 
++	0xA5, 0x94, 0xA5, 0x31, 0x8D, 0x18, 0xC7, 0x21, 0x9, 
++	0x29, 0x4B, 0x31, 0x8D, 0x5A, 0xD7, 0x63, 0x19, 0x6B, 
++	0x5B, 0x6B, 0x5B, 0x73, 0x9D, 0x73, 0x9D, 0x73, 0x9D, 
++	0x73, 0x9D, 0x73, 0x9D, 0x6B, 0x5B, 0x5A, 0xD7, 0x42, 
++	0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 0x8C, 0x63, 
++	0x94, 0xA5, 0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x18, 0xC7, 0x18, 0xC7, 0x29, 0x4B, 0x29, 0x4B, 
++	0x31, 0x8D, 0x31, 0x8D, 0x31, 0x8D, 0x39, 0xCF, 0x31, 
++	0x8D, 0x31, 0x8D, 0x31, 0x8D, 0x21, 0x9, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x52, 0x95, 0x73, 0x9D, 0x84, 0x21, 0x8C, 
++	0x63, 0x84, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x52, 0x95, 0x7B, 0xDF, 0x84, 0x21, 
++	0x7B, 0xDF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7B, 0xDF, 0x73, 
++	0x9D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
++	0x0, 
++};
++
++Vtx mario_000_offset_mesh_vtx_0[53] = {
++	{{{73, 11, 0},0, {-16, -16},{0x7F, 0x5, 0x0, 0xFF}}},
++	{{{55, -61, -36},0, {-16, -16},{0x64, 0xB5, 0xE7, 0xFF}}},
++	{{{44, -10, -92},0, {-16, -16},{0x50, 0xF0, 0x9F, 0xFF}}},
++	{{{55, -61, 36},0, {-16, -16},{0x64, 0xB5, 0x19, 0xFF}}},
++	{{{44, -9, 92},0, {-16, -16},{0x51, 0xF1, 0x60, 0xFF}}},
++	{{{43, 40, 91},0, {-16, -16},{0x45, 0x2C, 0x61, 0xFF}}},
++	{{{52, 70, 38},0, {-16, -16},{0x5C, 0x53, 0x1A, 0xFF}}},
++	{{{52, 70, -39},0, {-16, -16},{0x5C, 0x53, 0xE5, 0xFF}}},
++	{{{43, 40, -91},0, {-16, -16},{0x45, 0x2C, 0x9F, 0xFF}}},
++	{{{6, 33, -95},0, {-16, -16},{0xE3, 0x28, 0x8B, 0xFF}}},
++	{{{8, -8, -99},0, {-16, -16},{0xEB, 0xF4, 0x83, 0xFF}}},
++	{{{36, -51, -79},0, {-16, -16},{0x3A, 0xB7, 0xAA, 0xFF}}},
++	{{{26, -74, -46},0, {-16, -16},{0x19, 0x88, 0xDE, 0xFF}}},
++	{{{26, -74, 45},0, {-16, -16},{0x19, 0x88, 0x20, 0xFF}}},
++	{{{36, -52, 79},0, {-16, -16},{0x3B, 0xB7, 0x55, 0xFF}}},
++	{{{8, -8, 99},0, {-16, -16},{0xEA, 0xF4, 0x7D, 0xFF}}},
++	{{{7, 33, 95},0, {-16, -16},{0xE5, 0x28, 0x76, 0xFF}}},
++	{{{27, 72, 63},0, {-16, -16},{0x11, 0x6D, 0x3F, 0xFF}}},
++	{{{22, 82, 26},0, {-16, -16},{0x5, 0x7E, 0xD, 0xFF}}},
++	{{{22, 82, -26},0, {-16, -16},{0x5, 0x7E, 0xF3, 0xFF}}},
++	{{{27, 72, -63},0, {-16, -16},{0x10, 0x6D, 0xC1, 0xFF}}},
++	{{{-5, 59, -72},0, {-16, -16},{0xC5, 0x56, 0xB8, 0xFF}}},
++	{{{-17, 32, -79},0, {-16, -16},{0xA0, 0x21, 0xB4, 0xFF}}},
++	{{{-20, -8, -81},0, {-16, -16},{0x9D, 0xF6, 0xB2, 0xFF}}},
++	{{{4, -48, -86},0, {-16, -16},{0xDF, 0xBC, 0x9A, 0xFF}}},
++	{{{-9, -69, -55},0, {-16, -16},{0xCC, 0x99, 0xCB, 0xFF}}},
++	{{{-14, -74, 0},0, {-16, -16},{0xC6, 0x8F, 0x0, 0xFF}}},
++	{{{-9, -69, 55},0, {-16, -16},{0xCC, 0x98, 0x34, 0xFF}}},
++	{{{4, -49, 86},0, {-16, -16},{0xDF, 0xBB, 0x66, 0xFF}}},
++	{{{-20, -7, 81},0, {-16, -16},{0x9D, 0xF6, 0x4E, 0xFF}}},
++	{{{-18, 32, 79},0, {-16, -16},{0xA1, 0x20, 0x4E, 0xFF}}},
++	{{{-5, 59, 72},0, {-16, -16},{0xC6, 0x57, 0x49, 0xFF}}},
++	{{{27, 72, 63},0, {-16, -16},{0x11, 0x6D, 0x3F, 0xFF}}},
++	{{{-9, 73, 34},0, {-16, -16},{0xBA, 0x68, 0x15, 0xFF}}},
++	{{{-5, 59, 72},0, {-16, -16},{0xC6, 0x57, 0x49, 0xFF}}},
++	{{{22, 82, 26},0, {-16, -16},{0x5, 0x7E, 0xD, 0xFF}}},
++	{{{22, 82, -26},0, {-16, -16},{0x5, 0x7E, 0xF3, 0xFF}}},
++	{{{-9, 73, -34},0, {-16, -16},{0xBA, 0x68, 0xEB, 0xFF}}},
++	{{{27, 72, -63},0, {-16, -16},{0x10, 0x6D, 0xC1, 0xFF}}},
++	{{{-5, 59, -72},0, {-16, -16},{0xC5, 0x56, 0xB8, 0xFF}}},
++	{{{-32, 40, -39},0, {-16, -16},{0x89, 0x27, 0xEA, 0xFF}}},
++	{{{-17, 32, -79},0, {-16, -16},{0xA0, 0x21, 0xB4, 0xFF}}},
++	{{{-20, -8, -81},0, {-16, -16},{0x9D, 0xF6, 0xB2, 0xFF}}},
++	{{{-31, -51, -42},0, {-16, -16},{0x8E, 0xD1, 0xE1, 0xFF}}},
++	{{{4, -48, -86},0, {-16, -16},{0xDF, 0xBC, 0x9A, 0xFF}}},
++	{{{-9, -69, -55},0, {-16, -16},{0xCC, 0x99, 0xCB, 0xFF}}},
++	{{{-14, -74, 0},0, {-16, -16},{0xC6, 0x8F, 0x0, 0xFF}}},
++	{{{-31, -51, 42},0, {-16, -16},{0x8E, 0xD1, 0x1F, 0xFF}}},
++	{{{-9, -69, 55},0, {-16, -16},{0xCC, 0x98, 0x34, 0xFF}}},
++	{{{4, -49, 86},0, {-16, -16},{0xDF, 0xBB, 0x66, 0xFF}}},
++	{{{-20, -7, 81},0, {-16, -16},{0x9D, 0xF6, 0x4E, 0xFF}}},
++	{{{-32, 40, 39},0, {-16, -16},{0x89, 0x27, 0x15, 0xFF}}},
++	{{{-18, 32, 79},0, {-16, -16},{0xA1, 0x20, 0x4E, 0xFF}}},
++};
++
++Gfx mario_000_offset_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(3, 0, 4, 0, 5, 4, 0, 0),
++	gsSP2Triangles(0, 6, 5, 0, 6, 0, 7, 0),
++	gsSP2Triangles(8, 7, 0, 0, 0, 2, 8, 0),
++	gsSP2Triangles(9, 8, 2, 0, 2, 10, 9, 0),
++	gsSP2Triangles(10, 2, 11, 0, 1, 11, 2, 0),
++	gsSP2Triangles(1, 12, 11, 0, 12, 1, 3, 0),
++	gsSP2Triangles(3, 13, 12, 0, 14, 13, 3, 0),
++	gsSP2Triangles(4, 14, 3, 0, 15, 14, 4, 0),
++	gsSP2Triangles(16, 15, 4, 0, 16, 4, 5, 0),
++	gsSP2Triangles(16, 5, 17, 0, 17, 5, 6, 0),
++	gsSP2Triangles(6, 18, 17, 0, 19, 18, 6, 0),
++	gsSP2Triangles(7, 19, 6, 0, 20, 19, 7, 0),
++	gsSP2Triangles(8, 20, 7, 0, 9, 20, 8, 0),
++	gsSP2Triangles(9, 21, 20, 0, 21, 9, 22, 0),
++	gsSP2Triangles(23, 22, 9, 0, 9, 10, 23, 0),
++	gsSP2Triangles(23, 10, 24, 0, 11, 24, 10, 0),
++	gsSP2Triangles(24, 11, 12, 0, 12, 25, 24, 0),
++	gsSP2Triangles(26, 25, 12, 0, 13, 26, 12, 0),
++	gsSP2Triangles(13, 27, 26, 0, 28, 27, 13, 0),
++	gsSP2Triangles(13, 14, 28, 0, 15, 28, 14, 0),
++	gsSP2Triangles(28, 15, 29, 0, 29, 15, 16, 0),
++	gsSP2Triangles(16, 30, 29, 0, 30, 16, 31, 0),
++	gsSP1Triangle(17, 31, 16, 0),
++	gsSPVertex(mario_000_offset_mesh_vtx_0 + 32, 21, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(1, 3, 4, 0, 5, 1, 4, 0),
++	gsSP2Triangles(5, 4, 6, 0, 7, 5, 6, 0),
++	gsSP2Triangles(8, 5, 7, 0, 7, 9, 8, 0),
++	gsSP2Triangles(8, 9, 10, 0, 8, 10, 11, 0),
++	gsSP2Triangles(10, 12, 11, 0, 12, 13, 11, 0),
++	gsSP2Triangles(11, 13, 14, 0, 15, 11, 14, 0),
++	gsSP2Triangles(14, 16, 15, 0, 15, 16, 17, 0),
++	gsSP2Triangles(17, 18, 15, 0, 18, 19, 15, 0),
++	gsSP2Triangles(18, 20, 19, 0, 19, 20, 2, 0),
++	gsSP2Triangles(2, 1, 19, 0, 19, 1, 8, 0),
++	gsSP2Triangles(1, 5, 8, 0, 15, 19, 8, 0),
++	gsSP1Triangle(8, 11, 15, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_001_mesh_vtx_0[88] = {
++	{{{47, 75, -34},0, {-16, -16},{0x48, 0x66, 0xE6, 0xFF}}},
++	{{{28, 85, 30},0, {-16, -16},{0x2D, 0x76, 0x10, 0xFF}}},
++	{{{47, 75, 35},0, {-16, -16},{0x48, 0x66, 0x1A, 0xFF}}},
++	{{{28, 85, -29},0, {-16, -16},{0x2D, 0x76, 0xF0, 0xFF}}},
++	{{{9, 89, -40},0, {-16, -16},{0xF, 0x78, 0xD8, 0xFF}}},
++	{{{9, 89, 41},0, {-16, -16},{0x10, 0x78, 0x28, 0xFF}}},
++	{{{-15, 88, 35},0, {-16, -16},{0xEC, 0x7A, 0x1D, 0xFF}}},
++	{{{-15, 87, -35},0, {-16, -16},{0xEB, 0x7A, 0xE2, 0xFF}}},
++	{{{3, 77, -61},0, {-16, -16},{0x4, 0x6C, 0xBD, 0xFF}}},
++	{{{-28, 63, -74},0, {-16, -16},{0xCB, 0x48, 0xA6, 0xFF}}},
++	{{{-4, 58, -82},0, {-16, -16},{0xFA, 0x41, 0x93, 0xFF}}},
++	{{{17, 66, -75},0, {-16, -16},{0x17, 0x57, 0xA7, 0xFF}}},
++	{{{12, 33, -90},0, {-16, -16},{0xD, 0x1C, 0x85, 0xFF}}},
++	{{{32, 62, -73},0, {-16, -16},{0x2A, 0x51, 0xA8, 0xFF}}},
++	{{{43, 51, -74},0, {-16, -16},{0x3D, 0x34, 0x9E, 0xFF}}},
++	{{{48, 64, -58},0, {-16, -16},{0x46, 0x59, 0xC7, 0xFF}}},
++	{{{80, 14, -61},0, {-16, -16},{0x61, 0x24, 0xB7, 0xFF}}},
++	{{{82, 37, -26},0, {-16, -16},{0x68, 0x45, 0xEB, 0xFF}}},
++	{{{100, 1, -23},0, {-16, -16},{0x7C, 0x12, 0xEB, 0xFF}}},
++	{{{84, -29, -62},0, {-16, -16},{0x5E, 0xD7, 0xB5, 0xFF}}},
++	{{{93, -36, -25},0, {-16, -16},{0x6B, 0xBE, 0xF0, 0xFF}}},
++	{{{66, -52, -50},0, {-16, -16},{0x3B, 0x98, 0xD5, 0xFF}}},
++	{{{54, -63, 0},0, {-16, -16},{0x30, 0x8A, 0x0, 0xFF}}},
++	{{{20, -61, -67},0, {-16, -16},{0xA, 0x97, 0xB9, 0xFF}}},
++	{{{8, -74, 0},0, {-16, -16},{0x2, 0x81, 0x0, 0xFF}}},
++	{{{20, -61, 68},0, {-16, -16},{0x9, 0x97, 0x47, 0xFF}}},
++	{{{66, -52, 51},0, {-16, -16},{0x3B, 0x98, 0x2B, 0xFF}}},
++	{{{93, -36, 26},0, {-16, -16},{0x6B, 0xBE, 0x10, 0xFF}}},
++	{{{84, -29, 63},0, {-16, -16},{0x5E, 0xD7, 0x4B, 0xFF}}},
++	{{{100, 1, 24},0, {-16, -16},{0x7C, 0x12, 0x15, 0xFF}}},
++	{{{80, 14, 62},0, {-16, -16},{0x61, 0x23, 0x4A, 0xFF}}},
++	{{{82, 37, 27},0, {-16, -16},{0x68, 0x45, 0x15, 0xFF}}},
++	{{{80, 14, 62},0, {-16, -16},{0x61, 0x23, 0x4A, 0xFF}}},
++	{{{82, 37, 27},0, {-16, -16},{0x68, 0x45, 0x15, 0xFF}}},
++	{{{48, 64, 59},0, {-16, -16},{0x46, 0x5A, 0x37, 0xFF}}},
++	{{{47, 75, 35},0, {-16, -16},{0x48, 0x66, 0x1A, 0xFF}}},
++	{{{44, 51, 75},0, {-16, -16},{0x3E, 0x37, 0x60, 0xFF}}},
++	{{{32, 62, 74},0, {-16, -16},{0x29, 0x53, 0x57, 0xFF}}},
++	{{{13, 33, 91},0, {-16, -16},{0x10, 0x1C, 0x7B, 0xFF}}},
++	{{{17, 66, 76},0, {-16, -16},{0x19, 0x58, 0x59, 0xFF}}},
++	{{{-4, 58, 84},0, {-16, -16},{0xFB, 0x42, 0x6D, 0xFF}}},
++	{{{3, 77, 62},0, {-16, -16},{0x4, 0x6C, 0x42, 0xFF}}},
++	{{{-28, 63, 75},0, {-16, -16},{0xCB, 0x49, 0x59, 0xFF}}},
++	{{{-15, 88, 35},0, {-16, -16},{0xEC, 0x7A, 0x1D, 0xFF}}},
++	{{{9, 89, 41},0, {-16, -16},{0x10, 0x78, 0x28, 0xFF}}},
++	{{{-40, 72, 55},0, {-16, -16},{0xC1, 0x59, 0x40, 0xFF}}},
++	{{{-43, 83, 25},0, {-16, -16},{0xC4, 0x6E, 0x13, 0xFF}}},
++	{{{-43, 83, -24},0, {-16, -16},{0xC5, 0x6F, 0xED, 0xFF}}},
++	{{{-15, 87, -35},0, {-16, -16},{0xEB, 0x7A, 0xE2, 0xFF}}},
++	{{{-40, 72, -54},0, {-16, -16},{0xC1, 0x59, 0xC0, 0xFF}}},
++	{{{-28, 63, -74},0, {-16, -16},{0xCB, 0x48, 0xA6, 0xFF}}},
++	{{{-71, 54, -29},0, {-16, -16},{0x8B, 0x25, 0xDE, 0xFF}}},
++	{{{-27, 26, -89},0, {-16, -16},{0xC4, 0xE, 0x91, 0xFF}}},
++	{{{-4, 58, -82},0, {-16, -16},{0xFA, 0x41, 0x93, 0xFF}}},
++	{{{12, 33, -90},0, {-16, -16},{0xD, 0x1C, 0x85, 0xFF}}},
++	{{{6, -10, -92},0, {-16, -16},{0x0, 0xEA, 0x83, 0xFF}}},
++	{{{-27, -25, -86},0, {-16, -16},{0xC5, 0xDA, 0x96, 0xFF}}},
++	{{{20, -61, -67},0, {-16, -16},{0xA, 0x97, 0xB9, 0xFF}}},
++	{{{46, -34, -83},0, {-16, -16},{0x24, 0xC9, 0x93, 0xFF}}},
++	{{{66, -52, -50},0, {-16, -16},{0x3B, 0x98, 0xD5, 0xFF}}},
++	{{{84, -29, -62},0, {-16, -16},{0x5E, 0xD7, 0xB5, 0xFF}}},
++	{{{-29, -58, -59},0, {-16, -16},{0xC5, 0x9F, 0xC8, 0xFF}}},
++	{{{8, -74, 0},0, {-16, -16},{0x2, 0x81, 0x0, 0xFF}}},
++	{{{-30, -66, 0},0, {-16, -16},{0xBF, 0x93, 0x0, 0xFF}}},
++	{{{-29, -58, 59},0, {-16, -16},{0xC4, 0x9F, 0x38, 0xFF}}},
++	{{{-30, -66, 0},0, {-16, -16},{0xBF, 0x93, 0x0, 0xFF}}},
++	{{{8, -74, 0},0, {-16, -16},{0x2, 0x81, 0x0, 0xFF}}},
++	{{{20, -61, 68},0, {-16, -16},{0x9, 0x97, 0x47, 0xFF}}},
++	{{{-27, -25, 87},0, {-16, -16},{0xC5, 0xD8, 0x69, 0xFF}}},
++	{{{6, -11, 93},0, {-16, -16},{0x0, 0xE9, 0x7D, 0xFF}}},
++	{{{46, -34, 84},0, {-16, -16},{0x24, 0xC9, 0x6D, 0xFF}}},
++	{{{66, -52, 51},0, {-16, -16},{0x3B, 0x98, 0x2B, 0xFF}}},
++	{{{84, -29, 63},0, {-16, -16},{0x5E, 0xD7, 0x4B, 0xFF}}},
++	{{{-27, 26, 91},0, {-16, -16},{0xC4, 0xD, 0x6F, 0xFF}}},
++	{{{13, 33, 91},0, {-16, -16},{0x10, 0x1C, 0x7B, 0xFF}}},
++	{{{-4, 58, 84},0, {-16, -16},{0xFB, 0x42, 0x6D, 0xFF}}},
++	{{{-28, 63, 75},0, {-16, -16},{0xCB, 0x49, 0x59, 0xFF}}},
++	{{{-71, 54, 30},0, {-16, -16},{0x8B, 0x25, 0x22, 0xFF}}},
++	{{{-40, 72, 55},0, {-16, -16},{0xC1, 0x59, 0x40, 0xFF}}},
++	{{{-43, 83, 25},0, {-16, -16},{0xC4, 0x6E, 0x13, 0xFF}}},
++	{{{-71, 54, -29},0, {-16, -16},{0x8B, 0x25, 0xDE, 0xFF}}},
++	{{{-43, 83, -24},0, {-16, -16},{0xC5, 0x6F, 0xED, 0xFF}}},
++	{{{-40, 72, -54},0, {-16, -16},{0xC1, 0x59, 0xC0, 0xFF}}},
++	{{{-59, -28, 38},0, {-16, -16},{0x8E, 0xD4, 0x22, 0xFF}}},
++	{{{-59, -28, -37},0, {-16, -16},{0x8E, 0xD4, 0xDE, 0xFF}}},
++	{{{-27, 26, -89},0, {-16, -16},{0xC4, 0xE, 0x91, 0xFF}}},
++	{{{-27, -25, -86},0, {-16, -16},{0xC5, 0xDA, 0x96, 0xFF}}},
++	{{{-29, -58, -59},0, {-16, -16},{0xC5, 0x9F, 0xC8, 0xFF}}},
++};
++
++Gfx mario_000_offset_001_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_001_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(1, 3, 4, 0, 5, 1, 4, 0),
++	gsSP2Triangles(5, 4, 6, 0, 4, 7, 6, 0),
++	gsSP2Triangles(7, 4, 8, 0, 7, 8, 9, 0),
++	gsSP2Triangles(9, 8, 10, 0, 11, 10, 8, 0),
++	gsSP2Triangles(12, 10, 11, 0, 12, 11, 13, 0),
++	gsSP2Triangles(12, 13, 14, 0, 15, 14, 13, 0),
++	gsSP2Triangles(16, 14, 15, 0, 17, 16, 15, 0),
++	gsSP2Triangles(15, 0, 17, 0, 16, 17, 18, 0),
++	gsSP2Triangles(16, 18, 19, 0, 18, 20, 19, 0),
++	gsSP2Triangles(19, 20, 21, 0, 22, 21, 20, 0),
++	gsSP2Triangles(23, 21, 22, 0, 22, 24, 23, 0),
++	gsSP2Triangles(25, 24, 22, 0, 25, 22, 26, 0),
++	gsSP2Triangles(27, 26, 22, 0, 26, 27, 28, 0),
++	gsSP2Triangles(28, 27, 29, 0, 30, 28, 29, 0),
++	gsSP1Triangle(29, 31, 30, 0),
++	gsSPVertex(mario_000_offset_001_mesh_vtx_0 + 32, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 2, 1, 0),
++	gsSP2Triangles(2, 4, 0, 0, 5, 4, 2, 0),
++	gsSP2Triangles(6, 4, 5, 0, 5, 7, 6, 0),
++	gsSP2Triangles(7, 8, 6, 0, 9, 8, 7, 0),
++	gsSP2Triangles(10, 8, 9, 0, 11, 10, 9, 0),
++	gsSP2Triangles(9, 12, 11, 0, 11, 13, 10, 0),
++	gsSP2Triangles(13, 11, 14, 0, 15, 14, 11, 0),
++	gsSP2Triangles(15, 11, 16, 0, 15, 16, 17, 0),
++	gsSP2Triangles(18, 17, 16, 0, 17, 18, 19, 0),
++	gsSP2Triangles(18, 20, 19, 0, 20, 18, 21, 0),
++	gsSP2Triangles(20, 21, 22, 0, 23, 20, 22, 0),
++	gsSP2Triangles(24, 20, 23, 0, 25, 24, 23, 0),
++	gsSP2Triangles(23, 26, 25, 0, 26, 27, 25, 0),
++	gsSP2Triangles(27, 26, 28, 0, 25, 29, 24, 0),
++	gsSP2Triangles(29, 25, 30, 0, 30, 31, 29, 0),
++	gsSPVertex(mario_000_offset_001_mesh_vtx_0 + 64, 24, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
++	gsSP2Triangles(0, 3, 4, 0, 3, 5, 4, 0),
++	gsSP2Triangles(3, 6, 5, 0, 3, 7, 6, 0),
++	gsSP2Triangles(8, 6, 7, 0, 5, 9, 4, 0),
++	gsSP2Triangles(9, 5, 10, 0, 9, 10, 11, 0),
++	gsSP2Triangles(12, 9, 11, 0, 13, 9, 12, 0),
++	gsSP2Triangles(13, 12, 14, 0, 14, 15, 13, 0),
++	gsSP2Triangles(15, 16, 13, 0, 15, 17, 16, 0),
++	gsSP2Triangles(16, 17, 18, 0, 16, 19, 13, 0),
++	gsSP2Triangles(16, 20, 19, 0, 20, 16, 21, 0),
++	gsSP2Triangles(21, 22, 20, 0, 22, 23, 20, 0),
++	gsSP2Triangles(1, 20, 23, 0, 19, 20, 1, 0),
++	gsSP2Triangles(1, 0, 19, 0, 0, 4, 19, 0),
++	gsSP2Triangles(19, 4, 9, 0, 9, 13, 19, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_offset_001_mesh_vtx_1[23] = {
++	{{{47, 75, -34},0, {-16, -16},{0x48, 0x66, 0xE6, 0xFF}}},
++	{{{47, 75, 35},0, {-16, -16},{0x48, 0x66, 0x1A, 0xFF}}},
++	{{{82, 37, 27},0, {-16, -16},{0x68, 0x45, 0x15, 0xFF}}},
++	{{{82, 37, -26},0, {-16, -16},{0x68, 0x45, 0xEB, 0xFF}}},
++	{{{100, 1, 24},0, {-16, -16},{0x7C, 0x12, 0x15, 0xFF}}},
++	{{{100, 1, -23},0, {-16, -16},{0x7C, 0x12, 0xEB, 0xFF}}},
++	{{{93, -36, 26},0, {-16, -16},{0x6B, 0xBE, 0x10, 0xFF}}},
++	{{{93, -36, -25},0, {-16, -16},{0x6B, 0xBE, 0xF0, 0xFF}}},
++	{{{54, -63, 0},0, {-16, -16},{0x30, 0x8A, 0x0, 0xFF}}},
++	{{{46, -34, 84},0, {-16, -16},{0x24, 0xC9, 0x6D, 0xFF}}},
++	{{{47, 3, 89},0, {-16, -16},{0x2F, 0x8, 0x76, 0xFF}}},
++	{{{6, -11, 93},0, {-16, -16},{0x0, 0xE9, 0x7D, 0xFF}}},
++	{{{84, -29, 63},0, {-16, -16},{0x5E, 0xD7, 0x4B, 0xFF}}},
++	{{{80, 14, 62},0, {-16, -16},{0x61, 0x23, 0x4A, 0xFF}}},
++	{{{44, 51, 75},0, {-16, -16},{0x3E, 0x37, 0x60, 0xFF}}},
++	{{{13, 33, 91},0, {-16, -16},{0x10, 0x1C, 0x7B, 0xFF}}},
++	{{{6, -10, -92},0, {-16, -16},{0x0, 0xEA, 0x83, 0xFF}}},
++	{{{47, 3, -88},0, {-16, -16},{0x2F, 0x9, 0x8A, 0xFF}}},
++	{{{46, -34, -83},0, {-16, -16},{0x24, 0xC9, 0x93, 0xFF}}},
++	{{{12, 33, -90},0, {-16, -16},{0xD, 0x1C, 0x85, 0xFF}}},
++	{{{43, 51, -74},0, {-16, -16},{0x3D, 0x34, 0x9E, 0xFF}}},
++	{{{80, 14, -61},0, {-16, -16},{0x61, 0x24, 0xB7, 0xFF}}},
++	{{{84, -29, -62},0, {-16, -16},{0x5E, 0xD7, 0xB5, 0xFF}}},
++};
++
++Gfx mario_000_offset_001_mesh_tri_1[] = {
++	gsSPVertex(mario_000_offset_001_mesh_vtx_1 + 0, 23, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSP2Triangles(4, 3, 2, 0, 4, 5, 3, 0),
++	gsSP2Triangles(5, 4, 6, 0, 5, 6, 7, 0),
++	gsSP2Triangles(8, 7, 6, 0, 9, 10, 11, 0),
++	gsSP2Triangles(10, 9, 12, 0, 13, 10, 12, 0),
++	gsSP2Triangles(14, 10, 13, 0, 15, 10, 14, 0),
++	gsSP2Triangles(15, 11, 10, 0, 16, 17, 18, 0),
++	gsSP2Triangles(16, 19, 17, 0, 17, 19, 20, 0),
++	gsSP2Triangles(21, 17, 20, 0, 22, 17, 21, 0),
++	gsSP1Triangle(22, 18, 17, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_offset_001_mesh_vtx_2[14] = {
++	{{{9, 89, -40},0, {760, 904},{0xF, 0x78, 0xD8, 0xFF}}},
++	{{{28, 85, -29},0, {974, 496},{0x2D, 0x76, 0xF0, 0xFF}}},
++	{{{47, 75, -34},0, {834, 56},{0x48, 0x66, 0xE6, 0xFF}}},
++	{{{3, 77, -61},0, {248, 956},{0x4, 0x6C, 0xBD, 0xFF}}},
++	{{{17, 66, -75},0, {-74, 626},{0x17, 0x57, 0xA7, 0xFF}}},
++	{{{32, 62, -73},0, {-40, 294},{0x2A, 0x51, 0xA8, 0xFF}}},
++	{{{48, 64, -58},0, {296, -16},{0x46, 0x59, 0xC7, 0xFF}}},
++	{{{47, 75, 35},0, {18, 90},{0x48, 0x66, 0x1A, 0xFF}}},
++	{{{28, 85, 30},0, {-76, 556},{0x2D, 0x76, 0x10, 0xFF}}},
++	{{{9, 89, 41},0, {164, 946},{0x10, 0x78, 0x28, 0xFF}}},
++	{{{3, 77, 62},0, {666, 950},{0x4, 0x6C, 0x42, 0xFF}}},
++	{{{17, 66, 76},0, {950, 574},{0x19, 0x58, 0x59, 0xFF}}},
++	{{{32, 62, 74},0, {886, 236},{0x29, 0x53, 0x57, 0xFF}}},
++	{{{48, 64, 59},0, {532, -16},{0x46, 0x5A, 0x37, 0xFF}}},
++};
++
++Gfx mario_000_offset_001_mesh_tri_2[] = {
++	gsSPVertex(mario_000_offset_001_mesh_vtx_2 + 0, 14, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
++	gsSP2Triangles(4, 3, 2, 0, 5, 4, 2, 0),
++	gsSP2Triangles(2, 6, 5, 0, 7, 8, 9, 0),
++	gsSP2Triangles(9, 10, 7, 0, 10, 11, 7, 0),
++	gsSP2Triangles(11, 12, 7, 0, 12, 13, 7, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_displaylist_mesh_vtx_0[10] = {
++	{{{97, 103, 25},0, {708, 942},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{104, 87, 70},0, {1122, 848},{0x2B, 0x63, 0x44, 0xFF}}},
++	{{{144, 83, 67},0, {1092, 412},{0x20, 0x5B, 0x52, 0xFF}}},
++	{{{175, 91, 39},0, {826, 96},{0xA5, 0x57, 0xB, 0xFF}}},
++	{{{145, 101, 0},0, {464, 430},{0x17, 0x7D, 0x0, 0xFF}}},
++	{{{175, 91, -38},0, {90, 114},{0xA5, 0x57, 0xF5, 0xFF}}},
++	{{{97, 103, -24},0, {240, 954},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{144, 83, -66},0, {-162, 444},{0x20, 0x5B, 0xAE, 0xFF}}},
++	{{{104, 87, -69},0, {-176, 882},{0x2B, 0x63, 0xBC, 0xFF}}},
++	{{{108, 105, 0},0, {472, 838},{0x65, 0x4D, 0xFF, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_0[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_0 + 0, 10, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
++	gsSP2Triangles(3, 4, 0, 0, 5, 4, 3, 0),
++	gsSP2Triangles(6, 4, 5, 0, 6, 5, 7, 0),
++	gsSP2Triangles(8, 6, 7, 0, 6, 9, 4, 0),
++	gsSP1Triangle(4, 9, 0, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_mesh_vtx_1[71] = {
++	{{{153, 33, 95},0, {1346, 280},{0x1, 0x46, 0x6A, 0xFF}}},
++	{{{175, 91, 39},0, {826, 96},{0xA5, 0x57, 0xB, 0xFF}}},
++	{{{144, 83, 67},0, {1092, 412},{0x20, 0x5B, 0x52, 0xFF}}},
++	{{{144, 83, -66},0, {-162, 444},{0x20, 0x5B, 0xAE, 0xFF}}},
++	{{{175, 91, -38},0, {90, 114},{0xA5, 0x57, 0xF5, 0xFF}}},
++	{{{153, 33, -94},0, {-420, 326},{0x0, 0x46, 0x96, 0xFF}}},
++	{{{92, 88, 84},0, {-16, -16},{0x2B, 0x4E, 0x5A, 0xFF}}},
++	{{{104, 87, 70},0, {-16, -16},{0x2B, 0x63, 0x44, 0xFF}}},
++	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{96, 49, 94},0, {-16, -16},{0xC, 0x29, 0x78, 0xFF}}},
++	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{144, 83, 67},0, {-16, -16},{0x20, 0x5B, 0x52, 0xFF}}},
++	{{{153, 33, 95},0, {-16, -16},{0x1, 0x46, 0x6A, 0xFF}}},
++	{{{92, 88, -83},0, {-16, -16},{0x2B, 0x4E, 0xA6, 0xFF}}},
++	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{104, 87, -69},0, {-16, -16},{0x2B, 0x63, 0xBC, 0xFF}}},
++	{{{96, 49, -93},0, {-16, -16},{0xC, 0x28, 0x88, 0xFF}}},
++	{{{144, 83, -66},0, {-16, -16},{0x20, 0x5B, 0xAE, 0xFF}}},
++	{{{153, 33, -94},0, {-16, -16},{0x0, 0x46, 0x96, 0xFF}}},
++	{{{44, 44, -96},0, {-16, -16},{0xD1, 0x1E, 0x8E, 0xFF}}},
++	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
++	{{{42, 0, 103},0, {-16, -16},{0xB8, 0xFF, 0x68, 0xFF}}},
++	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
++	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
++	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
++	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
++	{{{42, 0, -102},0, {-16, -16},{0xB8, 0xFF, 0x98, 0xFF}}},
++	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
++	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
++	{{{85, -23, -110},0, {-16, -16},{0x7, 0x5A, 0xA7, 0xFF}}},
++	{{{102, -33, -134},0, {-16, -16},{0x33, 0xED, 0x8D, 0xFF}}},
++	{{{120, -12, -109},0, {-16, -16},{0xEE, 0x20, 0x86, 0xFF}}},
++	{{{102, -33, -134},0, {-16, -16},{0x33, 0xED, 0x8D, 0xFF}}},
++	{{{120, -12, -109},0, {-16, -16},{0xEE, 0x20, 0x86, 0xFF}}},
++	{{{91, -54, -85},0, {-16, -16},{0xC7, 0xC0, 0xA3, 0xFF}}},
++	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
++	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
++	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{108, 105, 0},0, {-16, -16},{0x65, 0x4D, 0xFF, 0xFF}}},
++	{{{117, 128, 0},0, {-16, -16},{0x7C, 0xE4, 0xFF, 0xFF}}},
++	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{102, 129, -40},0, {-16, -16},{0x4C, 0xDF, 0xA0, 0xFF}}},
++	{{{77, 108, -33},0, {-16, -16},{0x18, 0x2D, 0x8C, 0xFF}}},
++	{{{75, 130, -45},0, {-16, -16},{0xFE, 0xE1, 0x85, 0xFF}}},
++	{{{47, 131, -40},0, {-16, -16},{0xAF, 0xE9, 0xA1, 0xFF}}},
++	{{{52, 111, -30},0, {-16, -16},{0xB4, 0x37, 0xAB, 0xFF}}},
++	{{{32, 132, 0},0, {-16, -16},{0x83, 0xEC, 0xFE, 0xFF}}},
++	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{52, 111, 31},0, {-16, -16},{0xB4, 0x37, 0x55, 0xFF}}},
++	{{{47, 131, 41},0, {-16, -16},{0xB0, 0xE7, 0x60, 0xFF}}},
++	{{{77, 108, 34},0, {-16, -16},{0x18, 0x2D, 0x74, 0xFF}}},
++	{{{75, 130, 46},0, {-16, -16},{0xFE, 0xE1, 0x7B, 0xFF}}},
++	{{{102, 129, 41},0, {-16, -16},{0x4C, 0xDF, 0x60, 0xFF}}},
++	{{{104, 162, 41},0, {-16, -16},{0x49, 0x39, 0x57, 0xFF}}},
++	{{{119, 161, 0},0, {-16, -16},{0x78, 0x29, 0x0, 0xFF}}},
++	{{{104, 162, -40},0, {-16, -16},{0x48, 0x38, 0xA8, 0xFF}}},
++	{{{78, 163, -45},0, {-16, -16},{0x3, 0x43, 0x94, 0xFF}}},
++	{{{52, 164, -40},0, {-16, -16},{0xC2, 0x41, 0xA7, 0xFF}}},
++	{{{33, 165, 0},0, {-16, -16},{0x90, 0x3C, 0xFE, 0xFF}}},
++	{{{52, 164, 41},0, {-16, -16},{0xC3, 0x43, 0x59, 0xFF}}},
++	{{{78, 163, 46},0, {-16, -16},{0x3, 0x44, 0x6B, 0xFF}}},
++	{{{101, 179, 0},0, {-16, -16},{0x30, 0x76, 0x0, 0xFF}}},
++	{{{60, 181, 0},0, {-16, -16},{0xE5, 0x7C, 0x0, 0xFF}}},
++	{{{42, 0, 103},0, {-16, -16},{0xB8, 0xFF, 0x68, 0xFF}}},
++	{{{64, -25, 135},0, {-16, -16},{0xD6, 0x6, 0x78, 0xFF}}},
++	{{{85, -23, 111},0, {-16, -16},{0x5, 0x5A, 0x59, 0xFF}}},
++	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
++	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
++	{{{91, -54, 86},0, {-16, -16},{0xC7, 0xC0, 0x5D, 0xFF}}},
++	{{{102, -33, 135},0, {-16, -16},{0x32, 0xEB, 0x73, 0xFF}}},
++	{{{120, -11, 111},0, {-16, -16},{0xED, 0x20, 0x7A, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_1[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_1 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
++	gsSP2Triangles(6, 7, 8, 0, 7, 6, 9, 0),
++	gsSP2Triangles(10, 9, 6, 0, 11, 7, 9, 0),
++	gsSP2Triangles(9, 12, 11, 0, 13, 14, 15, 0),
++	gsSP2Triangles(16, 13, 15, 0, 16, 15, 17, 0),
++	gsSP2Triangles(17, 18, 16, 0, 13, 16, 19, 0),
++	gsSP2Triangles(10, 20, 21, 0, 20, 22, 21, 0),
++	gsSP2Triangles(22, 20, 23, 0, 24, 22, 23, 0),
++	gsSP2Triangles(24, 23, 25, 0, 26, 24, 25, 0),
++	gsSP2Triangles(26, 25, 19, 0, 26, 27, 24, 0),
++	gsSP2Triangles(26, 28, 27, 0, 29, 28, 26, 0),
++	gsSP2Triangles(29, 30, 28, 0, 30, 29, 31, 0),
++	gsSPVertex(mario_000_displaylist_mesh_vtx_1 + 32, 31, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
++	gsSP2Triangles(4, 3, 2, 0, 5, 6, 7, 0),
++	gsSP2Triangles(7, 6, 8, 0, 8, 9, 7, 0),
++	gsSP2Triangles(9, 8, 10, 0, 11, 9, 10, 0),
++	gsSP2Triangles(12, 11, 10, 0, 10, 13, 12, 0),
++	gsSP2Triangles(14, 12, 13, 0, 13, 15, 14, 0),
++	gsSP2Triangles(14, 15, 16, 0, 16, 17, 14, 0),
++	gsSP2Triangles(17, 16, 18, 0, 19, 17, 18, 0),
++	gsSP2Triangles(20, 19, 18, 0, 18, 5, 20, 0),
++	gsSP2Triangles(7, 20, 5, 0, 21, 20, 7, 0),
++	gsSP2Triangles(22, 21, 7, 0, 7, 9, 22, 0),
++	gsSP2Triangles(9, 23, 22, 0, 11, 23, 9, 0),
++	gsSP2Triangles(11, 24, 23, 0, 25, 24, 11, 0),
++	gsSP2Triangles(12, 25, 11, 0, 25, 12, 14, 0),
++	gsSP2Triangles(26, 25, 14, 0, 14, 17, 26, 0),
++	gsSP2Triangles(17, 27, 26, 0, 27, 17, 19, 0),
++	gsSP2Triangles(27, 19, 28, 0, 28, 19, 21, 0),
++	gsSP2Triangles(19, 20, 21, 0, 21, 29, 28, 0),
++	gsSP2Triangles(29, 21, 22, 0, 29, 22, 23, 0),
++	gsSP2Triangles(29, 23, 24, 0, 24, 30, 29, 0),
++	gsSP2Triangles(30, 24, 25, 0, 26, 30, 25, 0),
++	gsSP2Triangles(26, 27, 30, 0, 27, 28, 30, 0),
++	gsSP1Triangle(30, 28, 29, 0),
++	gsSPVertex(mario_000_displaylist_mesh_vtx_1 + 63, 8, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
++	gsSP2Triangles(4, 3, 0, 0, 1, 3, 5, 0),
++	gsSP2Triangles(1, 5, 6, 0, 5, 7, 6, 0),
++	gsSP2Triangles(7, 2, 6, 0, 1, 6, 2, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_mesh_vtx_2[24] = {
++	{{{92, 88, -83},0, {906, -20},{0x2B, 0x4E, 0xA6, 0xFF}}},
++	{{{77, 108, -33},0, {346, 328},{0x18, 0x2D, 0x8C, 0xFF}}},
++	{{{97, 103, -24},0, {258, 84},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{48, 94, -75},0, {840, 592},{0xD5, 0x59, 0xB0, 0xFF}}},
++	{{{44, 44, -96},0, {1234, 502},{0xD1, 0x1E, 0x8E, 0xFF}}},
++	{{{3, 54, -51},0, {790, 1146},{0x8F, 0x1A, 0xCB, 0xFF}}},
++	{{{27, 100, -29},0, {378, 982},{0xB0, 0x60, 0xE6, 0xFF}}},
++	{{{52, 111, -30},0, {324, 668},{0xB4, 0x37, 0xAB, 0xFF}}},
++	{{{41, 109, 0},0, {34, 884},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{27, 100, 30},0, {426, 966},{0xB0, 0x60, 0x1A, 0xFF}}},
++	{{{52, 111, 31},0, {338, 674},{0xB4, 0x37, 0x55, 0xFF}}},
++	{{{41, 109, 0},0, {54, 908},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{48, 94, 76},0, {872, 548},{0xD5, 0x59, 0x50, 0xFF}}},
++	{{{3, 54, 52},0, {876, 1074},{0x8F, 0x1A, 0x35, 0xFF}}},
++	{{{44, 44, 97},0, {1280, 422},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{92, 88, 84},0, {882, -34},{0x2B, 0x4E, 0x5A, 0xFF}}},
++	{{{77, 108, 34},0, {326, 352},{0x18, 0x2D, 0x74, 0xFF}}},
++	{{{97, 103, 25},0, {208, 130},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{27, 100, -29},0, {-16, -16},{0xB0, 0x60, 0xE6, 0xFF}}},
++	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
++	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
++	{{{27, 100, 30},0, {-16, -16},{0xB0, 0x60, 0x1A, 0xFF}}},
++	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
++	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_2[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_2 + 0, 24, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(0, 4, 3, 0, 5, 3, 4, 0),
++	gsSP2Triangles(6, 3, 5, 0, 7, 3, 6, 0),
++	gsSP2Triangles(8, 7, 6, 0, 3, 7, 1, 0),
++	gsSP2Triangles(9, 10, 11, 0, 9, 12, 10, 0),
++	gsSP2Triangles(13, 12, 9, 0, 14, 12, 13, 0),
++	gsSP2Triangles(12, 14, 15, 0, 15, 16, 12, 0),
++	gsSP2Triangles(16, 15, 17, 0, 16, 10, 12, 0),
++	gsSP2Triangles(18, 19, 20, 0, 21, 18, 20, 0),
++	gsSP2Triangles(20, 22, 21, 0, 23, 18, 21, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_mesh_vtx_3[19] = {
++	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
++	{{{31, -84, 0},0, {-16, -16},{0x9E, 0xB0, 0x1, 0xFF}}},
++	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
++	{{{9, -88, -58},0, {-16, -16},{0x84, 0xEC, 0xEA, 0xFF}}},
++	{{{31, -85, -86},0, {-16, -16},{0xE4, 0xFA, 0x84, 0xFF}}},
++	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
++	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
++	{{{64, -103, -51},0, {-16, -16},{0xF2, 0x95, 0xBD, 0xFF}}},
++	{{{91, -54, -85},0, {-16, -16},{0xC7, 0xC0, 0xA3, 0xFF}}},
++	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
++	{{{35, -120, -67},0, {-16, -16},{0xE6, 0x92, 0xC6, 0xFF}}},
++	{{{64, -103, 52},0, {-16, -16},{0xF2, 0x95, 0x43, 0xFF}}},
++	{{{36, -116, 36},0, {-16, -16},{0xEE, 0x92, 0xC3, 0xFF}}},
++	{{{58, -114, 60},0, {-16, -16},{0x57, 0xAA, 0x21, 0xFF}}},
++	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
++	{{{91, -54, 86},0, {-16, -16},{0xC7, 0xC0, 0x5D, 0xFF}}},
++	{{{31, -85, 87},0, {-16, -16},{0xE4, 0xFA, 0x7C, 0xFF}}},
++	{{{9, -88, 59},0, {-16, -16},{0x84, 0xEC, 0x16, 0xFF}}},
++	{{{35, -120, 68},0, {-16, -16},{0xE6, 0x92, 0x3A, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_3[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_3 + 0, 19, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
++	gsSP2Triangles(4, 3, 0, 0, 0, 5, 4, 0),
++	gsSP2Triangles(6, 4, 5, 0, 5, 7, 6, 0),
++	gsSP2Triangles(5, 8, 7, 0, 9, 6, 7, 0),
++	gsSP2Triangles(9, 10, 6, 0, 3, 10, 9, 0),
++	gsSP2Triangles(3, 9, 1, 0, 1, 9, 7, 0),
++	gsSP2Triangles(1, 7, 11, 0, 1, 11, 12, 0),
++	gsSP2Triangles(13, 12, 11, 0, 13, 11, 14, 0),
++	gsSP2Triangles(11, 15, 14, 0, 14, 16, 13, 0),
++	gsSP2Triangles(16, 14, 2, 0, 2, 17, 16, 0),
++	gsSP2Triangles(17, 2, 1, 0, 1, 12, 17, 0),
++	gsSP2Triangles(12, 18, 17, 0, 13, 18, 12, 0),
++	gsSP2Triangles(16, 18, 13, 0, 17, 18, 16, 0),
++	gsSP2Triangles(10, 4, 6, 0, 4, 10, 3, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_mesh_vtx_4[12] = {
++	{{{96, 49, 94},0, {-90, 710},{0xC, 0x29, 0x78, 0xFF}}},
++	{{{44, 44, 97},0, {180, 1350},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{42, 0, 103},0, {952, 1176},{0xB8, 0xFF, 0x68, 0xFF}}},
++	{{{85, -23, 111},0, {1222, 502},{0x5, 0x5A, 0x59, 0xFF}}},
++	{{{120, -11, 111},0, {906, 106},{0xED, 0x20, 0x7A, 0xFF}}},
++	{{{153, 33, 95},0, {6, -84},{0x1, 0x46, 0x6A, 0xFF}}},
++	{{{120, -12, -109},0, {900, 168},{0xEE, 0x20, 0x86, 0xFF}}},
++	{{{96, 49, -93},0, {-86, 684},{0xC, 0x28, 0x88, 0xFF}}},
++	{{{153, 33, -94},0, {74, -74},{0x0, 0x46, 0x96, 0xFF}}},
++	{{{85, -23, -110},0, {1134, 566},{0x7, 0x5A, 0xA7, 0xFF}}},
++	{{{42, 0, -102},0, {826, 1194},{0xB8, 0xFF, 0x98, 0xFF}}},
++	{{{44, 44, -96},0, {102, 1318},{0xD1, 0x1E, 0x8E, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_4[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_4 + 0, 12, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
++	gsSP2Triangles(3, 4, 0, 0, 5, 0, 4, 0),
++	gsSP2Triangles(6, 7, 8, 0, 9, 7, 6, 0),
++	gsSP2Triangles(7, 9, 10, 0, 10, 11, 7, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_mesh_vtx_5[30] = {
++	{{{120, -12, -109},0, {-16, -16},{0xEE, 0x20, 0x86, 0xFF}}},
++	{{{131, -56, -123},0, {-16, -16},{0xEA, 0xD7, 0x8A, 0xFF}}},
++	{{{91, -54, -85},0, {-16, -16},{0xC7, 0xC0, 0xA3, 0xFF}}},
++	{{{187, -6, -133},0, {-16, -16},{0x22, 0x6, 0x86, 0xFF}}},
++	{{{153, 33, -94},0, {-16, -16},{0x0, 0x46, 0x96, 0xFF}}},
++	{{{252, 62, -69},0, {-16, -16},{0x47, 0x41, 0xAE, 0xFF}}},
++	{{{271, 0, -41},0, {-16, -16},{0x71, 0xD2, 0xDB, 0xFF}}},
++	{{{272, 85, 0},0, {-16, -16},{0x5E, 0x55, 0x0, 0xFF}}},
++	{{{271, 0, 42},0, {-16, -16},{0x71, 0xD2, 0x25, 0xFF}}},
++	{{{252, 62, 70},0, {-16, -16},{0x47, 0x41, 0x52, 0xFF}}},
++	{{{187, -6, 134},0, {-16, -16},{0x23, 0x6, 0x7A, 0xFF}}},
++	{{{153, 33, 95},0, {-16, -16},{0x1, 0x46, 0x6A, 0xFF}}},
++	{{{120, -11, 111},0, {-16, -16},{0xED, 0x20, 0x7A, 0xFF}}},
++	{{{131, -56, 124},0, {-16, -16},{0xEA, 0xD6, 0x76, 0xFF}}},
++	{{{91, -54, 86},0, {-16, -16},{0xC7, 0xC0, 0x5D, 0xFF}}},
++	{{{64, -103, 52},0, {-16, -16},{0xF2, 0x95, 0x43, 0xFF}}},
++	{{{77, -138, 51},0, {-16, -16},{0xBE, 0xA0, 0x32, 0xFF}}},
++	{{{77, -138, -50},0, {-16, -16},{0xBE, 0xA0, 0xCE, 0xFF}}},
++	{{{64, -103, -51},0, {-16, -16},{0xF2, 0x95, 0xBD, 0xFF}}},
++	{{{122, -139, -48},0, {-16, -16},{0x2C, 0x90, 0xD6, 0xFF}}},
++	{{{164, -89, -74},0, {-16, -16},{0x4A, 0xA7, 0xCC, 0xFF}}},
++	{{{164, -89, 75},0, {-16, -16},{0x4A, 0xA7, 0x34, 0xFF}}},
++	{{{122, -139, 49},0, {-16, -16},{0x2C, 0x90, 0x2A, 0xFF}}},
++	{{{195, 93, 32},0, {-16, -16},{0x53, 0x52, 0x34, 0xFF}}},
++	{{{173, 132, 66},0, {-16, -16},{0xE9, 0x58, 0x59, 0xFF}}},
++	{{{182, 155, 0},0, {-16, -16},{0xFD, 0x7F, 0x0, 0xFF}}},
++	{{{195, 93, -31},0, {-16, -16},{0x52, 0x51, 0xCB, 0xFF}}},
++	{{{173, 132, -65},0, {-16, -16},{0xE9, 0x57, 0xA7, 0xFF}}},
++	{{{175, 91, -38},0, {-16, -16},{0xA5, 0x57, 0xF5, 0xFF}}},
++	{{{175, 91, 39},0, {-16, -16},{0xA5, 0x57, 0xB, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_5[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_5 + 0, 30, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
++	gsSP2Triangles(6, 3, 5, 0, 5, 7, 6, 0),
++	gsSP2Triangles(6, 7, 8, 0, 8, 7, 9, 0),
++	gsSP2Triangles(9, 10, 8, 0, 10, 9, 11, 0),
++	gsSP2Triangles(10, 11, 12, 0, 12, 13, 10, 0),
++	gsSP2Triangles(14, 13, 12, 0, 14, 15, 13, 0),
++	gsSP2Triangles(13, 15, 16, 0, 16, 15, 17, 0),
++	gsSP2Triangles(15, 18, 17, 0, 17, 18, 1, 0),
++	gsSP2Triangles(2, 1, 18, 0, 1, 19, 17, 0),
++	gsSP2Triangles(20, 19, 1, 0, 3, 20, 1, 0),
++	gsSP2Triangles(20, 3, 6, 0, 20, 6, 21, 0),
++	gsSP2Triangles(6, 8, 21, 0, 8, 10, 21, 0),
++	gsSP2Triangles(13, 21, 10, 0, 13, 22, 21, 0),
++	gsSP2Triangles(16, 22, 13, 0, 17, 22, 16, 0),
++	gsSP2Triangles(17, 19, 22, 0, 22, 19, 20, 0),
++	gsSP2Triangles(20, 21, 22, 0, 23, 24, 11, 0),
++	gsSP2Triangles(23, 25, 24, 0, 26, 25, 23, 0),
++	gsSP2Triangles(27, 25, 26, 0, 27, 26, 4, 0),
++	gsSP2Triangles(28, 27, 4, 0, 28, 25, 27, 0),
++	gsSP2Triangles(28, 29, 25, 0, 24, 25, 29, 0),
++	gsSP1Triangle(11, 24, 29, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_mesh_vtx_6[7] = {
++	{{{195, 93, 32},0, {728, 716},{0x53, 0x52, 0x34, 0xFF}}},
++	{{{153, 33, 95},0, {1234, 1050},{0x1, 0x46, 0x6A, 0xFF}}},
++	{{{252, 62, 70},0, {1016, 136},{0x47, 0x41, 0x52, 0xFF}}},
++	{{{272, 85, 0},0, {456, -32},{0x5E, 0x55, 0x0, 0xFF}}},
++	{{{195, 93, -31},0, {216, 720},{0x52, 0x51, 0xCB, 0xFF}}},
++	{{{252, 62, -69},0, {-94, 142},{0x47, 0x41, 0xAE, 0xFF}}},
++	{{{153, 33, -94},0, {-274, 1060},{0x0, 0x46, 0x96, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_mesh_tri_6[] = {
++	gsSPVertex(mario_000_displaylist_mesh_vtx_6 + 0, 7, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
++	gsSP2Triangles(3, 4, 0, 0, 3, 5, 4, 0),
++	gsSP1Triangle(5, 6, 4, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_002_switch_option_head__no_cap__mesh_vtx_0[85] = {
++	{{{104, 87, -69},0, {-176, 882},{0x2B, 0x63, 0xBC, 0xFF}}},
++	{{{97, 103, -24},0, {240, 954},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{144, 83, -66},0, {-162, 444},{0x20, 0x5B, 0xAE, 0xFF}}},
++	{{{175, 91, -38},0, {90, 114},{0x21, 0x73, 0xD5, 0xFF}}},
++	{{{145, 101, 0},0, {464, 430},{0x17, 0x7D, 0x0, 0xFF}}},
++	{{{108, 105, 0},0, {472, 838},{0x65, 0x4D, 0xFF, 0xFF}}},
++	{{{97, 103, 25},0, {708, 942},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{175, 91, 39},0, {826, 96},{0x21, 0x73, 0x2B, 0xFF}}},
++	{{{144, 83, 67},0, {1092, 412},{0x20, 0x5B, 0x52, 0xFF}}},
++	{{{104, 87, 70},0, {1122, 848},{0x2B, 0x63, 0x44, 0xFF}}},
++	{{{153, 33, 95},0, {1346, 280},{0xFE, 0x36, 0x73, 0xFF}}},
++	{{{153, 33, -94},0, {-420, 326},{0xF5, 0x33, 0x8C, 0xFF}}},
++	{{{144, 83, -66},0, {-16, -16},{0x20, 0x5B, 0xAE, 0xFF}}},
++	{{{153, 33, -94},0, {-16, -16},{0xF5, 0x33, 0x8C, 0xFF}}},
++	{{{96, 49, -93},0, {-16, -16},{0xC, 0x28, 0x88, 0xFF}}},
++	{{{104, 87, -69},0, {-16, -16},{0x2B, 0x63, 0xBC, 0xFF}}},
++	{{{92, 88, -83},0, {-16, -16},{0x2B, 0x4E, 0xA6, 0xFF}}},
++	{{{44, 44, -96},0, {-16, -16},{0xD1, 0x1E, 0x8E, 0xFF}}},
++	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{92, 88, 84},0, {-16, -16},{0x2B, 0x4E, 0x5A, 0xFF}}},
++	{{{104, 87, 70},0, {-16, -16},{0x2B, 0x63, 0x44, 0xFF}}},
++	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{96, 49, 94},0, {-16, -16},{0xC, 0x29, 0x78, 0xFF}}},
++	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{144, 83, 67},0, {-16, -16},{0x20, 0x5B, 0x52, 0xFF}}},
++	{{{153, 33, 95},0, {-16, -16},{0xFE, 0x36, 0x73, 0xFF}}},
++	{{{42, 0, -102},0, {-16, -16},{0xB8, 0xFF, 0x98, 0xFF}}},
++	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
++	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
++	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
++	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
++	{{{85, -23, -110},0, {-16, -16},{0x7, 0x5A, 0xA7, 0xFF}}},
++	{{{85, -23, -110},0, {-16, -16},{0x7, 0x5A, 0xA7, 0xFF}}},
++	{{{102, -33, -134},0, {-16, -16},{0x33, 0xED, 0x8D, 0xFF}}},
++	{{{64, -25, -134},0, {-16, -16},{0xD6, 0x6, 0x88, 0xFF}}},
++	{{{120, -12, -109},0, {-16, -16},{0x2, 0xE, 0x82, 0xFF}}},
++	{{{91, -54, -85},0, {-16, -16},{0xDA, 0xB6, 0xA0, 0xFF}}},
++	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
++	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
++	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
++	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
++	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
++	{{{31, -84, 0},0, {-16, -16},{0x9E, 0xB0, 0x1, 0xFF}}},
++	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
++	{{{42, 0, 103},0, {-16, -16},{0xB8, 0xFF, 0x68, 0xFF}}},
++	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
++	{{{64, -25, 135},0, {-16, -16},{0xD6, 0x6, 0x78, 0xFF}}},
++	{{{91, -54, 86},0, {-16, -16},{0xDA, 0xB6, 0x60, 0xFF}}},
++	{{{102, -33, 135},0, {-16, -16},{0x32, 0xEB, 0x73, 0xFF}}},
++	{{{120, -11, 111},0, {-16, -16},{0x1, 0xF, 0x7E, 0xFF}}},
++	{{{85, -23, 111},0, {-16, -16},{0x5, 0x5A, 0x59, 0xFF}}},
++	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{108, 105, 0},0, {-16, -16},{0x65, 0x4D, 0xFF, 0xFF}}},
++	{{{117, 128, 0},0, {-16, -16},{0x7C, 0xE4, 0xFF, 0xFF}}},
++	{{{97, 103, -24},0, {-16, -16},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{102, 129, -40},0, {-16, -16},{0x4C, 0xDF, 0xA0, 0xFF}}},
++	{{{77, 108, -33},0, {-16, -16},{0x18, 0x2D, 0x8C, 0xFF}}},
++	{{{75, 130, -45},0, {-16, -16},{0xFE, 0xE1, 0x85, 0xFF}}},
++	{{{47, 131, -40},0, {-16, -16},{0xAF, 0xE9, 0xA1, 0xFF}}},
++	{{{52, 111, -30},0, {-16, -16},{0xB4, 0x37, 0xAB, 0xFF}}},
++	{{{32, 132, 0},0, {-16, -16},{0x83, 0xEC, 0xFE, 0xFF}}},
++	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{52, 111, 31},0, {-16, -16},{0xB4, 0x37, 0x55, 0xFF}}},
++	{{{52, 111, 31},0, {-16, -16},{0xB4, 0x37, 0x55, 0xFF}}},
++	{{{47, 131, 41},0, {-16, -16},{0xB0, 0xE7, 0x60, 0xFF}}},
++	{{{32, 132, 0},0, {-16, -16},{0x83, 0xEC, 0xFE, 0xFF}}},
++	{{{77, 108, 34},0, {-16, -16},{0x18, 0x2D, 0x74, 0xFF}}},
++	{{{75, 130, 46},0, {-16, -16},{0xFE, 0xE1, 0x7B, 0xFF}}},
++	{{{102, 129, 41},0, {-16, -16},{0x4C, 0xDF, 0x60, 0xFF}}},
++	{{{97, 103, 25},0, {-16, -16},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{117, 128, 0},0, {-16, -16},{0x7C, 0xE4, 0xFF, 0xFF}}},
++	{{{104, 162, 41},0, {-16, -16},{0x49, 0x39, 0x57, 0xFF}}},
++	{{{119, 161, 0},0, {-16, -16},{0x78, 0x29, 0x0, 0xFF}}},
++	{{{102, 129, -40},0, {-16, -16},{0x4C, 0xDF, 0xA0, 0xFF}}},
++	{{{104, 162, -40},0, {-16, -16},{0x48, 0x38, 0xA8, 0xFF}}},
++	{{{75, 130, -45},0, {-16, -16},{0xFE, 0xE1, 0x85, 0xFF}}},
++	{{{78, 163, -45},0, {-16, -16},{0x3, 0x43, 0x94, 0xFF}}},
++	{{{52, 164, -40},0, {-16, -16},{0xC2, 0x41, 0xA7, 0xFF}}},
++	{{{47, 131, -40},0, {-16, -16},{0xAF, 0xE9, 0xA1, 0xFF}}},
++	{{{33, 165, 0},0, {-16, -16},{0x90, 0x3C, 0xFE, 0xFF}}},
++	{{{52, 164, 41},0, {-16, -16},{0xC3, 0x43, 0x59, 0xFF}}},
++	{{{78, 163, 46},0, {-16, -16},{0x3, 0x44, 0x6B, 0xFF}}},
++	{{{101, 179, 0},0, {-16, -16},{0x30, 0x76, 0x0, 0xFF}}},
++	{{{60, 181, 0},0, {-16, -16},{0xE5, 0x7C, 0x0, 0xFF}}},
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_tri_0[] = {
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
++	gsSP2Triangles(1, 4, 3, 0, 1, 5, 4, 0),
++	gsSP2Triangles(4, 5, 6, 0, 7, 4, 6, 0),
++	gsSP2Triangles(8, 7, 6, 0, 6, 9, 8, 0),
++	gsSP2Triangles(10, 7, 8, 0, 3, 4, 7, 0),
++	gsSP2Triangles(2, 3, 11, 0, 12, 13, 14, 0),
++	gsSP2Triangles(14, 15, 12, 0, 14, 16, 15, 0),
++	gsSP2Triangles(16, 14, 17, 0, 16, 18, 15, 0),
++	gsSP2Triangles(19, 20, 21, 0, 20, 19, 22, 0),
++	gsSP2Triangles(23, 22, 19, 0, 24, 20, 22, 0),
++	gsSP2Triangles(22, 25, 24, 0, 26, 27, 17, 0),
++	gsSP2Triangles(26, 28, 27, 0, 26, 29, 28, 0),
++	gsSP2Triangles(26, 30, 29, 0, 31, 30, 26, 0),
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_0 + 32, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
++	gsSP2Triangles(1, 3, 4, 0, 2, 1, 4, 0),
++	gsSP2Triangles(5, 2, 4, 0, 6, 7, 8, 0),
++	gsSP2Triangles(6, 9, 7, 0, 6, 10, 9, 0),
++	gsSP2Triangles(9, 11, 7, 0, 11, 9, 12, 0),
++	gsSP2Triangles(9, 13, 12, 0, 14, 12, 13, 0),
++	gsSP2Triangles(14, 13, 15, 0, 14, 15, 16, 0),
++	gsSP2Triangles(15, 17, 16, 0, 17, 18, 16, 0),
++	gsSP2Triangles(14, 16, 18, 0, 12, 14, 18, 0),
++	gsSP2Triangles(19, 11, 12, 0, 20, 21, 22, 0),
++	gsSP2Triangles(22, 21, 23, 0, 23, 24, 22, 0),
++	gsSP2Triangles(24, 23, 25, 0, 26, 24, 25, 0),
++	gsSP2Triangles(27, 26, 25, 0, 25, 28, 27, 0),
++	gsSP2Triangles(29, 27, 28, 0, 28, 30, 29, 0),
++	gsSP1Triangle(29, 30, 31, 0),
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_0 + 64, 21, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 0, 3, 0),
++	gsSP2Triangles(4, 1, 3, 0, 5, 4, 3, 0),
++	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
++	gsSP2Triangles(8, 5, 7, 0, 9, 8, 7, 0),
++	gsSP2Triangles(7, 10, 9, 0, 10, 11, 9, 0),
++	gsSP2Triangles(12, 11, 10, 0, 12, 13, 11, 0),
++	gsSP2Triangles(14, 13, 12, 0, 15, 14, 12, 0),
++	gsSP2Triangles(14, 15, 2, 0, 16, 14, 2, 0),
++	gsSP2Triangles(2, 1, 16, 0, 1, 17, 16, 0),
++	gsSP2Triangles(17, 1, 4, 0, 17, 4, 18, 0),
++	gsSP2Triangles(18, 4, 8, 0, 4, 5, 8, 0),
++	gsSP2Triangles(8, 19, 18, 0, 19, 8, 9, 0),
++	gsSP2Triangles(19, 9, 11, 0, 19, 11, 13, 0),
++	gsSP2Triangles(13, 20, 19, 0, 20, 13, 14, 0),
++	gsSP2Triangles(16, 20, 14, 0, 16, 17, 20, 0),
++	gsSP2Triangles(17, 18, 20, 0, 20, 18, 19, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_002_switch_option_head__no_cap__mesh_vtx_1[26] = {
++	{{{44, 44, 97},0, {-16, -16},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{48, 94, 76},0, {-16, -16},{0xD5, 0x59, 0x50, 0xFF}}},
++	{{{3, 54, 52},0, {-16, -16},{0x8F, 0x1A, 0x35, 0xFF}}},
++	{{{77, 108, 34},0, {314, 300},{0x18, 0x2D, 0x74, 0xFF}}},
++	{{{92, 88, 84},0, {932, -24},{0x2B, 0x4E, 0x5A, 0xFF}}},
++	{{{97, 103, 25},0, {232, 34},{0x4E, 0x42, 0x4C, 0xFF}}},
++	{{{48, 94, 76},0, {832, 614},{0xD5, 0x59, 0x50, 0xFF}}},
++	{{{52, 111, 31},0, {276, 654},{0xB4, 0x37, 0x55, 0xFF}}},
++	{{{27, 100, 30},0, {320, 990},{0xB0, 0x60, 0x1A, 0xFF}}},
++	{{{41, 109, 0},0, {-46, 860},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{3, 54, 52},0, {752, 1194},{0x8F, 0x1A, 0x35, 0xFF}}},
++	{{{44, 44, 97},0, {1260, 550},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{92, 88, -83},0, {976, -26},{0x2B, 0x4E, 0xA6, 0xFF}}},
++	{{{77, 108, -33},0, {344, 280},{0x18, 0x2D, 0x8C, 0xFF}}},
++	{{{97, 103, -24},0, {282, 4},{0x4D, 0x42, 0xB4, 0xFF}}},
++	{{{48, 94, -75},0, {828, 624},{0xD5, 0x59, 0xB0, 0xFF}}},
++	{{{44, 44, -96},0, {1256, 576},{0xD1, 0x1E, 0x8E, 0xFF}}},
++	{{{3, 54, -51},0, {704, 1212},{0x8F, 0x1A, 0xCB, 0xFF}}},
++	{{{27, 100, -29},0, {294, 986},{0xB0, 0x60, 0xE6, 0xFF}}},
++	{{{52, 111, -30},0, {278, 640},{0xB4, 0x37, 0xAB, 0xFF}}},
++	{{{41, 109, 0},0, {-54, 836},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{-7, 62, 0},0, {-16, -16},{0x85, 0x21, 0x0, 0xFF}}},
++	{{{27, 100, 30},0, {-16, -16},{0xB0, 0x60, 0x1A, 0xFF}}},
++	{{{27, 100, -29},0, {-16, -16},{0xB0, 0x60, 0xE6, 0xFF}}},
++	{{{41, 109, 0},0, {-16, -16},{0x8D, 0x36, 0xFF, 0xFF}}},
++	{{{3, 54, -51},0, {-16, -16},{0x8F, 0x1A, 0xCB, 0xFF}}},
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_tri_1[] = {
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_1 + 0, 26, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 4, 5, 0),
++	gsSP2Triangles(4, 3, 6, 0, 3, 7, 6, 0),
++	gsSP2Triangles(8, 6, 7, 0, 8, 7, 9, 0),
++	gsSP2Triangles(10, 6, 8, 0, 6, 11, 4, 0),
++	gsSP2Triangles(12, 13, 14, 0, 15, 13, 12, 0),
++	gsSP2Triangles(12, 16, 15, 0, 17, 15, 16, 0),
++	gsSP2Triangles(18, 15, 17, 0, 19, 15, 18, 0),
++	gsSP2Triangles(20, 19, 18, 0, 15, 19, 13, 0),
++	gsSP2Triangles(21, 2, 22, 0, 22, 23, 21, 0),
++	gsSP2Triangles(24, 23, 22, 0, 23, 25, 21, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_002_switch_option_head__no_cap__mesh_vtx_2[12] = {
++	{{{96, 49, 94},0, {-90, 710},{0xC, 0x29, 0x78, 0xFF}}},
++	{{{44, 44, 97},0, {180, 1350},{0xD1, 0x1E, 0x72, 0xFF}}},
++	{{{42, 0, 103},0, {952, 1176},{0xB8, 0xFF, 0x68, 0xFF}}},
++	{{{85, -23, 111},0, {1222, 502},{0x5, 0x5A, 0x59, 0xFF}}},
++	{{{120, -11, 111},0, {906, 106},{0x1, 0xF, 0x7E, 0xFF}}},
++	{{{153, 33, 95},0, {6, -84},{0xFE, 0x36, 0x73, 0xFF}}},
++	{{{42, 0, -102},0, {826, 1194},{0xB8, 0xFF, 0x98, 0xFF}}},
++	{{{44, 44, -96},0, {102, 1318},{0xD1, 0x1E, 0x8E, 0xFF}}},
++	{{{96, 49, -93},0, {-86, 684},{0xC, 0x28, 0x88, 0xFF}}},
++	{{{85, -23, -110},0, {1134, 566},{0x7, 0x5A, 0xA7, 0xFF}}},
++	{{{120, -12, -109},0, {900, 168},{0x2, 0xE, 0x82, 0xFF}}},
++	{{{153, 33, -94},0, {74, -74},{0xF5, 0x33, 0x8C, 0xFF}}},
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_tri_2[] = {
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_2 + 0, 12, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 3, 0, 0),
++	gsSP2Triangles(3, 4, 0, 0, 5, 0, 4, 0),
++	gsSP2Triangles(6, 7, 8, 0, 8, 9, 6, 0),
++	gsSP2Triangles(9, 8, 10, 0, 10, 8, 11, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_002_switch_option_head__no_cap__mesh_vtx_3[75] = {
++	{{{153, 33, 95},0, {-16, -16},{0xFE, 0x36, 0x73, 0xFF}}},
++	{{{200, 75, 84},0, {-16, -16},{0x21, 0x51, 0x5D, 0xFF}}},
++	{{{151, 72, 70},0, {-16, -16},{0xE2, 0x5B, 0x54, 0xFF}}},
++	{{{181, -9, 116},0, {-16, -16},{0x2A, 0x2, 0x78, 0xFF}}},
++	{{{120, -11, 111},0, {-16, -16},{0x1, 0xF, 0x7E, 0xFF}}},
++	{{{145, -83, 105},0, {-16, -16},{0xFF, 0xCA, 0x73, 0xFF}}},
++	{{{91, -54, 86},0, {-16, -16},{0xDA, 0xB6, 0x60, 0xFF}}},
++	{{{64, -103, 52},0, {-16, -16},{0x19, 0x8B, 0x2C, 0xFF}}},
++	{{{56, -45, 77},0, {-16, -16},{0xCB, 0xC7, 0x64, 0xFF}}},
++	{{{58, -114, 60},0, {-16, -16},{0x57, 0xAA, 0x21, 0xFF}}},
++	{{{31, -85, 87},0, {-16, -16},{0xE4, 0xFA, 0x7C, 0xFF}}},
++	{{{17, -52, 47},0, {-16, -16},{0x86, 0xFC, 0x22, 0xFF}}},
++	{{{9, -88, 59},0, {-16, -16},{0x84, 0xEC, 0x16, 0xFF}}},
++	{{{31, -84, 0},0, {-16, -16},{0x9E, 0xB0, 0x1, 0xFF}}},
++	{{{36, -116, 36},0, {-16, -16},{0xEE, 0x92, 0xC3, 0xFF}}},
++	{{{64, -103, -51},0, {-16, -16},{0x1A, 0x8C, 0xD4, 0xFF}}},
++	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
++	{{{9, -88, -58},0, {-16, -16},{0x84, 0xEC, 0xEA, 0xFF}}},
++	{{{17, -52, -46},0, {-16, -16},{0x86, 0xFC, 0xDE, 0xFF}}},
++	{{{31, -85, -86},0, {-16, -16},{0xE4, 0xFA, 0x84, 0xFF}}},
++	{{{56, -45, -76},0, {-16, -16},{0xCB, 0xC7, 0x9C, 0xFF}}},
++	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
++	{{{91, -54, -85},0, {-16, -16},{0xDA, 0xB6, 0xA0, 0xFF}}},
++	{{{145, -84, -104},0, {-16, -16},{0x0, 0xC8, 0x8E, 0xFF}}},
++	{{{120, -12, -109},0, {-16, -16},{0x2, 0xE, 0x82, 0xFF}}},
++	{{{182, -9, -115},0, {-16, -16},{0x2B, 0xFF, 0x88, 0xFF}}},
++	{{{153, 33, -94},0, {-16, -16},{0xF5, 0x33, 0x8C, 0xFF}}},
++	{{{200, 70, -97},0, {-16, -16},{0x21, 0x3F, 0x97, 0xFF}}},
++	{{{151, 72, -68},0, {-16, -16},{0xD7, 0x5E, 0xB5, 0xFF}}},
++	{{{175, 91, -38},0, {-16, -16},{0xC7, 0x63, 0xC8, 0xFF}}},
++	{{{211, 91, -71},0, {-16, -16},{0x23, 0x52, 0xA5, 0xFF}}},
++	{{{201, 125, -13},0, {-16, -16},{0xF8, 0x7F, 0xFF, 0xFF}}},
++	{{{175, 91, -38},0, {-16, -16},{0xC7, 0x63, 0xC8, 0xFF}}},
++	{{{160, 96, 0},0, {-16, -16},{0xB8, 0x68, 0x5, 0xFF}}},
++	{{{201, 125, -13},0, {-16, -16},{0xF8, 0x7F, 0xFF, 0xFF}}},
++	{{{175, 91, 39},0, {-16, -16},{0xE2, 0x70, 0x34, 0xFF}}},
++	{{{209, 86, 60},0, {-16, -16},{0x32, 0x62, 0x3F, 0xFF}}},
++	{{{200, 75, 84},0, {-16, -16},{0x21, 0x51, 0x5D, 0xFF}}},
++	{{{151, 72, 70},0, {-16, -16},{0xE2, 0x5B, 0x54, 0xFF}}},
++	{{{227, 35, 75},0, {-16, -16},{0x6C, 0xB, 0x42, 0xFF}}},
++	{{{181, -9, 116},0, {-16, -16},{0x2A, 0x2, 0x78, 0xFF}}},
++	{{{227, -14, 59},0, {-16, -16},{0x72, 0xEA, 0x34, 0xFF}}},
++	{{{189, -102, 73},0, {-16, -16},{0x49, 0xB0, 0x41, 0xFF}}},
++	{{{145, -83, 105},0, {-16, -16},{0xFF, 0xCA, 0x73, 0xFF}}},
++	{{{116, -126, 68},0, {-16, -16},{0xEA, 0x95, 0x41, 0xFF}}},
++	{{{64, -103, 52},0, {-16, -16},{0x19, 0x8B, 0x2C, 0xFF}}},
++	{{{119, -134, 0},0, {-16, -16},{0xF1, 0x82, 0xFE, 0xFF}}},
++	{{{64, -103, -51},0, {-16, -16},{0x1A, 0x8C, 0xD4, 0xFF}}},
++	{{{116, -124, -67},0, {-16, -16},{0xEB, 0x95, 0xBF, 0xFF}}},
++	{{{145, -84, -104},0, {-16, -16},{0x0, 0xC8, 0x8E, 0xFF}}},
++	{{{189, -102, -71},0, {-16, -16},{0x49, 0xAF, 0xC0, 0xFF}}},
++	{{{182, -9, -115},0, {-16, -16},{0x2B, 0xFF, 0x88, 0xFF}}},
++	{{{227, -14, -58},0, {-16, -16},{0x72, 0xEF, 0xCA, 0xFF}}},
++	{{{221, 35, -73},0, {-16, -16},{0x70, 0x3, 0xC4, 0xFF}}},
++	{{{200, 70, -97},0, {-16, -16},{0x21, 0x3F, 0x97, 0xFF}}},
++	{{{211, 91, -71},0, {-16, -16},{0x23, 0x52, 0xA5, 0xFF}}},
++	{{{232, 69, -34},0, {-16, -16},{0x75, 0xE2, 0xD8, 0xFF}}},
++	{{{248, 104, -43},0, {-16, -16},{0x6A, 0x32, 0xCF, 0xFF}}},
++	{{{231, 81, 33},0, {-16, -16},{0x6C, 0x34, 0x2A, 0xFF}}},
++	{{{237, 64, 0},0, {-16, -16},{0x7F, 0xF8, 0x5, 0xFF}}},
++	{{{241, -34, 0},0, {-16, -16},{0x7C, 0xE4, 0x0, 0xFF}}},
++	{{{200, -117, 0},0, {-16, -16},{0x4F, 0x9D, 0xFF, 0xFF}}},
++	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
++	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
++	{{{36, -116, -35},0, {-16, -16},{0xEE, 0x92, 0x3D, 0xFF}}},
++	{{{35, -120, -67},0, {-16, -16},{0xE6, 0x92, 0xC6, 0xFF}}},
++	{{{58, -114, -59},0, {-16, -16},{0x57, 0xAA, 0xDF, 0xFF}}},
++	{{{9, -88, -58},0, {-16, -16},{0x84, 0xEC, 0xEA, 0xFF}}},
++	{{{31, -85, -86},0, {-16, -16},{0xE4, 0xFA, 0x84, 0xFF}}},
++	{{{58, -114, 60},0, {-16, -16},{0x57, 0xAA, 0x21, 0xFF}}},
++	{{{36, -116, 36},0, {-16, -16},{0xEE, 0x92, 0xC3, 0xFF}}},
++	{{{64, -103, 52},0, {-16, -16},{0x19, 0x8B, 0x2C, 0xFF}}},
++	{{{35, -120, 68},0, {-16, -16},{0xE6, 0x92, 0x3A, 0xFF}}},
++	{{{31, -85, 87},0, {-16, -16},{0xE4, 0xFA, 0x7C, 0xFF}}},
++	{{{9, -88, 59},0, {-16, -16},{0x84, 0xEC, 0x16, 0xFF}}},
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_tri_3[] = {
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_3 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(0, 4, 3, 0, 5, 3, 4, 0),
++	gsSP2Triangles(6, 5, 4, 0, 7, 5, 6, 0),
++	gsSP2Triangles(7, 6, 8, 0, 9, 7, 8, 0),
++	gsSP2Triangles(8, 10, 9, 0, 10, 8, 11, 0),
++	gsSP2Triangles(11, 12, 10, 0, 12, 11, 13, 0),
++	gsSP2Triangles(13, 14, 12, 0, 13, 7, 14, 0),
++	gsSP2Triangles(13, 15, 7, 0, 13, 16, 15, 0),
++	gsSP2Triangles(17, 16, 13, 0, 13, 18, 17, 0),
++	gsSP2Triangles(19, 17, 18, 0, 18, 20, 19, 0),
++	gsSP2Triangles(21, 19, 20, 0, 20, 15, 21, 0),
++	gsSP2Triangles(20, 22, 15, 0, 22, 23, 15, 0),
++	gsSP2Triangles(23, 22, 24, 0, 25, 23, 24, 0),
++	gsSP2Triangles(24, 26, 25, 0, 26, 27, 25, 0),
++	gsSP2Triangles(27, 26, 28, 0, 29, 27, 28, 0),
++	gsSP2Triangles(27, 29, 30, 0, 30, 29, 31, 0),
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_3 + 32, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(4, 2, 3, 0, 3, 5, 4, 0),
++	gsSP2Triangles(3, 6, 5, 0, 5, 7, 4, 0),
++	gsSP2Triangles(8, 7, 5, 0, 7, 8, 9, 0),
++	gsSP2Triangles(9, 8, 10, 0, 11, 10, 8, 0),
++	gsSP2Triangles(11, 12, 10, 0, 13, 12, 11, 0),
++	gsSP2Triangles(13, 14, 12, 0, 13, 15, 14, 0),
++	gsSP2Triangles(15, 16, 14, 0, 17, 16, 15, 0),
++	gsSP2Triangles(18, 16, 17, 0, 19, 18, 17, 0),
++	gsSP2Triangles(18, 19, 20, 0, 20, 19, 21, 0),
++	gsSP2Triangles(22, 21, 19, 0, 21, 22, 23, 0),
++	gsSP2Triangles(21, 23, 24, 0, 24, 23, 25, 0),
++	gsSP2Triangles(23, 2, 25, 0, 2, 4, 25, 0),
++	gsSP2Triangles(4, 26, 25, 0, 7, 26, 4, 0),
++	gsSP2Triangles(7, 27, 26, 0, 27, 7, 9, 0),
++	gsSP2Triangles(9, 28, 27, 0, 28, 9, 10, 0),
++	gsSP2Triangles(29, 28, 10, 0, 29, 10, 12, 0),
++	gsSP2Triangles(14, 29, 12, 0, 14, 16, 29, 0),
++	gsSP2Triangles(16, 18, 29, 0, 29, 18, 28, 0),
++	gsSP2Triangles(18, 20, 28, 0, 20, 27, 28, 0),
++	gsSP2Triangles(20, 21, 27, 0, 21, 24, 27, 0),
++	gsSP2Triangles(27, 24, 25, 0, 27, 25, 26, 0),
++	gsSP1Triangle(30, 31, 15, 0),
++	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_vtx_3 + 64, 11, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 1, 3, 0, 1, 4, 2, 0),
++	gsSP2Triangles(5, 6, 7, 0, 5, 8, 6, 0),
++	gsSP2Triangles(9, 8, 5, 0, 10, 8, 9, 0),
++	gsSP1Triangle(6, 8, 10, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_displaylist_001_mesh_vtx_0[4] = {
++	{{{0, 0, 0},0, {-16, 1978},{0x17, 0x0, 0x7D, 0xFF}}},
++	{{{104, 0, -19},0, {974, 1978},{0x18, 0xFF, 0x7D, 0xFF}}},
++	{{{104, 212, -19},0, {974, -34},{0x17, 0x0, 0x7D, 0xFF}}},
++	{{{0, 212, 0},0, {-16, -34},{0x17, 0x0, 0x7D, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_001_mesh_tri_0[] = {
++	gsSPVertex(mario_000_displaylist_001_mesh_vtx_0 + 0, 4, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_001_mesh_vtx_1[4] = {
++	{{{-103, 212, 18},0, {-16, -34},{0x17, 0x0, 0x7D, 0xFF}}},
++	{{{0, 0, 0},0, {974, 1978},{0x17, 0x0, 0x7D, 0xFF}}},
++	{{{0, 212, 0},0, {974, -34},{0x17, 0x0, 0x7D, 0xFF}}},
++	{{{-103, 0, 19},0, {-16, 1978},{0x17, 0x0, 0x7D, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_001_mesh_tri_1[] = {
++	gsSPVertex(mario_000_displaylist_001_mesh_vtx_1 + 0, 4, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_displaylist_002_mesh_vtx_0[4] = {
++	{{{0, 0, 0},0, {-16, 1978},{0xE9, 0x0, 0x7D, 0xFF}}},
++	{{{104, 0, 19},0, {974, 1978},{0xE8, 0x1, 0x7D, 0xFF}}},
++	{{{104, 212, 19},0, {974, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
++	{{{0, 212, 0},0, {-16, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_002_mesh_tri_0[] = {
++	gsSPVertex(mario_000_displaylist_002_mesh_vtx_0 + 0, 4, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_000_displaylist_002_mesh_vtx_1[4] = {
++	{{{-103, 212, -18},0, {-16, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
++	{{{-103, 0, -19},0, {-16, 1978},{0xE9, 0x0, 0x7D, 0xFF}}},
++	{{{0, 0, 0},0, {974, 1978},{0xE9, 0x0, 0x7D, 0xFF}}},
++	{{{0, 212, 0},0, {974, -34},{0xE9, 0x0, 0x7D, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_002_mesh_tri_1[] = {
++	gsSPVertex(mario_000_displaylist_002_mesh_vtx_1 + 0, 4, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_003_mesh_vtx_0[20] = {
++	{{{6, -13, -42},0, {-16, -16},{0xDB, 0xE1, 0x8A, 0xFF}}},
++	{{{-8, -9, -27},0, {-16, -16},{0x90, 0xF1, 0xC6, 0xFF}}},
++	{{{-8, 17, -17},0, {-16, -16},{0x92, 0x36, 0xDF, 0xFF}}},
++	{{{5, -42, -5},0, {-16, -16},{0xD7, 0x88, 0xFD, 0xFF}}},
++	{{{57, -36, -5},0, {-16, -16},{0x32, 0x8B, 0xFD, 0xFF}}},
++	{{{58, -13, -34},0, {-16, -16},{0x33, 0xDF, 0x90, 0xFF}}},
++	{{{7, 29, -26},0, {-16, -16},{0xDF, 0x66, 0xBC, 0xFF}}},
++	{{{-8, 16, 10},0, {-16, -16},{0x92, 0x33, 0x26, 0xFF}}},
++	{{{-8, -11, 18},0, {-16, -16},{0x91, 0xEC, 0x3A, 0xFF}}},
++	{{{-9, -26, -5},0, {-16, -16},{0x8E, 0xC8, 0xFD, 0xFF}}},
++	{{{6, -16, 32},0, {-16, -16},{0xDB, 0xD8, 0x73, 0xFF}}},
++	{{{58, -15, 25},0, {-16, -16},{0x35, 0xD7, 0x6C, 0xFF}}},
++	{{{67, -12, 16},0, {-16, -16},{0x6E, 0xE8, 0x3B, 0xFF}}},
++	{{{67, -26, -5},0, {-16, -16},{0x6D, 0xBF, 0xFE, 0xFF}}},
++	{{{68, -10, -25},0, {-16, -16},{0x6D, 0xEF, 0xC1, 0xFF}}},
++	{{{68, 13, -16},0, {-16, -16},{0x6F, 0x33, 0xDC, 0xFF}}},
++	{{{59, 21, -21},0, {-16, -16},{0x37, 0x5F, 0xC0, 0xFF}}},
++	{{{7, 27, 20},0, {-16, -16},{0xDF, 0x60, 0x4C, 0xFF}}},
++	{{{59, 20, 15},0, {-16, -16},{0x37, 0x5A, 0x46, 0xFF}}},
++	{{{68, 12, 9},0, {-16, -16},{0x70, 0x2D, 0x27, 0xFF}}},
++};
++
++Gfx mario_000_offset_003_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_003_mesh_vtx_0 + 0, 20, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(3, 0, 4, 0, 0, 5, 4, 0),
++	gsSP2Triangles(0, 6, 5, 0, 0, 2, 6, 0),
++	gsSP2Triangles(6, 2, 7, 0, 8, 7, 2, 0),
++	gsSP2Triangles(2, 1, 8, 0, 1, 9, 8, 0),
++	gsSP2Triangles(3, 9, 1, 0, 10, 9, 3, 0),
++	gsSP2Triangles(10, 3, 11, 0, 3, 4, 11, 0),
++	gsSP2Triangles(4, 12, 11, 0, 4, 13, 12, 0),
++	gsSP2Triangles(14, 13, 4, 0, 5, 14, 4, 0),
++	gsSP2Triangles(15, 14, 5, 0, 16, 15, 5, 0),
++	gsSP2Triangles(6, 16, 5, 0, 6, 17, 16, 0),
++	gsSP2Triangles(6, 7, 17, 0, 17, 7, 8, 0),
++	gsSP2Triangles(17, 8, 10, 0, 10, 8, 9, 0),
++	gsSP2Triangles(17, 10, 18, 0, 10, 11, 18, 0),
++	gsSP2Triangles(11, 12, 18, 0, 12, 19, 18, 0),
++	gsSP2Triangles(19, 12, 14, 0, 12, 13, 14, 0),
++	gsSP2Triangles(19, 14, 15, 0, 18, 19, 15, 0),
++	gsSP2Triangles(18, 15, 16, 0, 17, 18, 16, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_004_mesh_vtx_0[16] = {
++	{{{-2, 21, -21},0, {-16, -16},{0xDF, 0x67, 0xBE, 0xFF}}},
++	{{{-14, 13, -15},0, {-16, -16},{0x97, 0x3E, 0xDD, 0xFF}}},
++	{{{-14, 11, 10},0, {-16, -16},{0x96, 0x37, 0x2B, 0xFF}}},
++	{{{-3, -14, -34},0, {-16, -16},{0xDC, 0xE0, 0x8A, 0xFF}}},
++	{{{46, -14, -30},0, {-16, -16},{0x40, 0xE0, 0x97, 0xFF}}},
++	{{{47, 16, -19},0, {-16, -16},{0x43, 0x59, 0xC4, 0xFF}}},
++	{{{-2, 19, 16},0, {-16, -16},{0xE0, 0x60, 0x4C, 0xFF}}},
++	{{{-15, -13, 17},0, {-16, -16},{0x95, 0xEB, 0x41, 0xFF}}},
++	{{{-15, -27, -4},0, {-16, -16},{0x93, 0xBF, 0xFD, 0xFF}}},
++	{{{-15, -11, -24},0, {-16, -16},{0x94, 0xF1, 0xBF, 0xFF}}},
++	{{{-3, -38, -4},0, {-16, -16},{0xDB, 0x86, 0xFC, 0xFF}}},
++	{{{45, -34, -4},0, {-16, -16},{0x3D, 0x91, 0xFB, 0xFF}}},
++	{{{58, -7, -3},0, {-16, -16},{0x7F, 0xFC, 0x1, 0xFF}}},
++	{{{47, 14, 13},0, {-16, -16},{0x43, 0x53, 0x44, 0xFF}}},
++	{{{-3, -17, 26},0, {-16, -16},{0xDD, 0xD7, 0x73, 0xFF}}},
++	{{{46, -17, 22},0, {-16, -16},{0x40, 0xD8, 0x66, 0xFF}}},
++};
++
++Gfx mario_000_offset_004_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_004_mesh_vtx_0 + 0, 16, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(3, 0, 4, 0, 0, 5, 4, 0),
++	gsSP2Triangles(0, 6, 5, 0, 0, 2, 6, 0),
++	gsSP2Triangles(6, 2, 7, 0, 8, 7, 2, 0),
++	gsSP2Triangles(8, 2, 1, 0, 9, 8, 1, 0),
++	gsSP2Triangles(3, 9, 1, 0, 10, 9, 3, 0),
++	gsSP2Triangles(10, 3, 11, 0, 3, 4, 11, 0),
++	gsSP2Triangles(4, 12, 11, 0, 5, 12, 4, 0),
++	gsSP2Triangles(13, 12, 5, 0, 6, 13, 5, 0),
++	gsSP2Triangles(6, 14, 13, 0, 6, 7, 14, 0),
++	gsSP2Triangles(14, 7, 8, 0, 14, 8, 10, 0),
++	gsSP2Triangles(10, 8, 9, 0, 14, 10, 15, 0),
++	gsSP2Triangles(10, 11, 15, 0, 11, 12, 15, 0),
++	gsSP2Triangles(15, 12, 13, 0, 14, 15, 13, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_displaylist_003_mesh_vtx_0[30] = {
++	{{{17, -38, -39},0, {-16, -16},{0x9E, 0xB9, 0xDA, 0xFF}}},
++	{{{-14, -14, -4},0, {-16, -16},{0x8C, 0xCD, 0x3, 0xFF}}},
++	{{{-10, 26, -38},0, {-16, -16},{0x88, 0xEC, 0xDA, 0xFF}}},
++	{{{27, -58, 6},0, {-16, -16},{0xA2, 0xAC, 0xE, 0xFF}}},
++	{{{5, -6, 36},0, {-16, -16},{0x99, 0xD2, 0x3A, 0xFF}}},
++	{{{-18, 45, 8},0, {-16, -16},{0x82, 0xF5, 0xE, 0xFF}}},
++	{{{26, -25, -32},0, {-16, -16},{0x17, 0xC9, 0x90, 0xFF}}},
++	{{{17, -38, -39},0, {-16, -16},{0x5E, 0xEC, 0xAC, 0xFF}}},
++	{{{-10, 26, -38},0, {-16, -16},{0x33, 0x54, 0xB0, 0xFF}}},
++	{{{34, -41, 3},0, {-16, -16},{0x3D, 0x97, 0x26, 0xFF}}},
++	{{{58, -45, 7},0, {-16, -16},{0x6, 0x8A, 0x2F, 0xFF}}},
++	{{{80, -31, -61},0, {-16, -16},{0x1D, 0xB6, 0x9D, 0xFF}}},
++	{{{33, 7, -44},0, {-16, -16},{0xC4, 0xFD, 0x90, 0xFF}}},
++	{{{4, 24, -31},0, {-16, -16},{0xFB, 0x44, 0x95, 0xFF}}},
++	{{{-1, 39, 5},0, {-16, -16},{0xDB, 0x71, 0x2D, 0xFF}}},
++	{{{-18, 45, 8},0, {-16, -16},{0x2E, 0x73, 0x1C, 0xFF}}},
++	{{{5, -6, 36},0, {-16, -16},{0x43, 0x1C, 0x68, 0xFF}}},
++	{{{17, -1, 27},0, {-16, -16},{0xFE, 0xFD, 0x7F, 0xFF}}},
++	{{{27, -58, 6},0, {-16, -16},{0x75, 0xD4, 0x18, 0xFF}}},
++	{{{36, 6, 42},0, {-16, -16},{0xE2, 0xEF, 0x7A, 0xFF}}},
++	{{{12, 59, 10},0, {-16, -16},{0xAF, 0x55, 0x30, 0xFF}}},
++	{{{59, 81, 8},0, {-16, -16},{0x15, 0x79, 0x21, 0xFF}}},
++	{{{86, 29, 41},0, {-16, -16},{0x3F, 0x1A, 0x6B, 0xFF}}},
++	{{{107, -26, 4},0, {-16, -16},{0x65, 0xBF, 0x29, 0xFF}}},
++	{{{100, -6, -46},0, {-16, -16},{0x69, 0xFD, 0xB9, 0xFF}}},
++	{{{61, 12, -60},0, {-16, -16},{0xF4, 0x18, 0x84, 0xFF}}},
++	{{{32, 63, -28},0, {-16, -16},{0xD0, 0x5B, 0xB6, 0xFF}}},
++	{{{57, 55, -37},0, {-16, -16},{0x18, 0x54, 0xA4, 0xFF}}},
++	{{{99, 40, -16},0, {-16, -16},{0x6B, 0x41, 0xEA, 0xFF}}},
++	{{{90, 17, -46},0, {-16, -16},{0x47, 0x31, 0xA3, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_003_mesh_tri_0[] = {
++	gsSPVertex(mario_000_displaylist_003_mesh_vtx_0 + 0, 30, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 1, 3, 0, 5, 1, 4, 0),
++	gsSP2Triangles(2, 1, 5, 0, 6, 7, 8, 0),
++	gsSP2Triangles(7, 6, 9, 0, 10, 9, 6, 0),
++	gsSP2Triangles(6, 11, 10, 0, 6, 12, 11, 0),
++	gsSP2Triangles(6, 13, 12, 0, 8, 13, 6, 0),
++	gsSP2Triangles(14, 13, 8, 0, 8, 15, 14, 0),
++	gsSP2Triangles(14, 15, 16, 0, 16, 17, 14, 0),
++	gsSP2Triangles(9, 17, 16, 0, 16, 18, 9, 0),
++	gsSP2Triangles(9, 18, 7, 0, 19, 17, 9, 0),
++	gsSP2Triangles(14, 17, 19, 0, 14, 19, 20, 0),
++	gsSP2Triangles(19, 21, 20, 0, 19, 22, 21, 0),
++	gsSP2Triangles(23, 22, 19, 0, 10, 23, 19, 0),
++	gsSP2Triangles(9, 10, 19, 0, 11, 23, 10, 0),
++	gsSP2Triangles(11, 24, 23, 0, 25, 24, 11, 0),
++	gsSP2Triangles(12, 25, 11, 0, 25, 12, 26, 0),
++	gsSP2Triangles(26, 12, 13, 0, 20, 26, 13, 0),
++	gsSP2Triangles(13, 14, 20, 0, 26, 20, 21, 0),
++	gsSP2Triangles(21, 27, 26, 0, 21, 28, 27, 0),
++	gsSP2Triangles(22, 28, 21, 0, 23, 28, 22, 0),
++	gsSP2Triangles(24, 28, 23, 0, 29, 28, 24, 0),
++	gsSP2Triangles(25, 29, 24, 0, 27, 29, 25, 0),
++	gsSP2Triangles(25, 26, 27, 0, 29, 27, 28, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_002_switch_option_right_hand_open_mesh_vtx_0[42] = {
++	{{{2, 3, 26},0, {-16, -16},{0x4A, 0x34, 0x59, 0xFF}}},
++	{{{20, -46, 12},0, {-16, -16},{0x75, 0xDD, 0x23, 0xFF}}},
++	{{{26, -32, 6},0, {-16, -16},{0x37, 0xA8, 0x49, 0xFF}}},
++	{{{13, -39, -31},0, {-16, -16},{0x63, 0xDD, 0xB9, 0xFF}}},
++	{{{20, -27, -27},0, {-16, -16},{0x11, 0xB1, 0x9E, 0xFF}}},
++	{{{-10, 14, -43},0, {-16, -16},{0x32, 0x3C, 0x9C, 0xFF}}},
++	{{{1, 15, -37},0, {-16, -16},{0xE0, 0x1D, 0x88, 0xFF}}},
++	{{{-3, 35, -9},0, {-16, -16},{0xCE, 0x72, 0x19, 0xFF}}},
++	{{{-17, 40, -8},0, {-16, -16},{0x2B, 0x78, 0x0, 0xFF}}},
++	{{{11, 5, 17},0, {-16, -16},{0x6, 0x1C, 0x7C, 0xFF}}},
++	{{{26, 16, 28},0, {-16, -16},{0xDE, 0xD, 0x7A, 0xFF}}},
++	{{{45, -34, 10},0, {-16, -16},{0xFF, 0x9F, 0x52, 0xFF}}},
++	{{{41, -37, -36},0, {-16, -16},{0xD7, 0x9E, 0xBB, 0xFF}}},
++	{{{25, -1, -44},0, {-16, -16},{0xDF, 0xE2, 0x89, 0xFF}}},
++	{{{11, 29, -52},0, {-16, -16},{0xDA, 0x1F, 0x8B, 0xFF}}},
++	{{{6, 53, -9},0, {-16, -16},{0xAC, 0x5C, 0x17, 0xFF}}},
++	{{{70, 89, -20},0, {-16, -16},{0xF0, 0x7E, 0xF8, 0xFF}}},
++	{{{77, 41, 21},0, {-16, -16},{0x14, 0x28, 0x77, 0xFF}}},
++	{{{83, -17, 10},0, {-16, -16},{0x42, 0xC1, 0x58, 0xFF}}},
++	{{{89, -47, -37},0, {-16, -16},{0x4B, 0xA4, 0xD3, 0xFF}}},
++	{{{76, -18, -48},0, {-16, -16},{0x2D, 0x3, 0x89, 0xFF}}},
++	{{{26, 41, -41},0, {-16, -16},{0xF5, 0x42, 0x94, 0xFF}}},
++	{{{78, 59, -34},0, {-16, -16},{0xF6, 0x16, 0x83, 0xFF}}},
++	{{{119, 70, -42},0, {-16, -16},{0x33, 0x40, 0x9F, 0xFF}}},
++	{{{121, 73, -21},0, {-16, -16},{0x4D, 0x5F, 0x22, 0xFF}}},
++	{{{141, 34, -7},0, {-16, -16},{0x74, 0xF7, 0x33, 0xFF}}},
++	{{{133, 28, -40},0, {-16, -16},{0x50, 0xD8, 0xA6, 0xFF}}},
++	{{{89, -6, -27},0, {-16, -16},{0x64, 0xE3, 0xB8, 0xFF}}},
++	{{{69, 10, -36},0, {-16, -16},{0x34, 0x1D, 0x90, 0xFF}}},
++	{{{2, 3, 26},0, {-16, -16},{0xA8, 0xF0, 0x5A, 0xFF}}},
++	{{{6, -38, 7},0, {-16, -16},{0xA7, 0xB0, 0x2A, 0xFF}}},
++	{{{20, -46, 12},0, {-16, -16},{0xBA, 0xA1, 0x2E, 0xFF}}},
++	{{{2, 3, 26},0, {-16, -16},{0xA8, 0xF0, 0x5A, 0xFF}}},
++	{{{-6, -3, 17},0, {-16, -16},{0x97, 0xE2, 0x42, 0xFF}}},
++	{{{6, -38, 7},0, {-16, -16},{0xA7, 0xB0, 0x2A, 0xFF}}},
++	{{{-20, 22, -7},0, {-16, -16},{0x83, 0x0, 0x17, 0xFF}}},
++	{{{-17, 40, -8},0, {-16, -16},{0x84, 0x16, 0x11, 0xFF}}},
++	{{{-10, 14, -43},0, {-16, -16},{0x91, 0xF4, 0xC4, 0xFF}}},
++	{{{-15, 4, -32},0, {-16, -16},{0x8D, 0xDE, 0xD6, 0xFF}}},
++	{{{1, -33, -23},0, {-16, -16},{0x9F, 0xB3, 0xE2, 0xFF}}},
++	{{{13, -39, -31},0, {-16, -16},{0xB5, 0xA4, 0xD4, 0xFF}}},
++	{{{20, -46, 12},0, {-16, -16},{0xBA, 0xA1, 0x2E, 0xFF}}},
++};
++
++Gfx mario_002_switch_option_right_hand_open_mesh_tri_0[] = {
++	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(3, 4, 2, 0, 4, 3, 5, 0),
++	gsSP2Triangles(5, 6, 4, 0, 7, 6, 5, 0),
++	gsSP2Triangles(5, 8, 7, 0, 7, 8, 0, 0),
++	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
++	gsSP2Triangles(10, 9, 2, 0, 2, 11, 10, 0),
++	gsSP2Triangles(2, 12, 11, 0, 2, 4, 12, 0),
++	gsSP2Triangles(4, 13, 12, 0, 4, 6, 13, 0),
++	gsSP2Triangles(6, 14, 13, 0, 14, 6, 7, 0),
++	gsSP2Triangles(7, 15, 14, 0, 7, 10, 15, 0),
++	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
++	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
++	gsSP2Triangles(11, 18, 10, 0, 19, 18, 11, 0),
++	gsSP2Triangles(11, 12, 19, 0, 19, 12, 20, 0),
++	gsSP2Triangles(12, 13, 20, 0, 20, 13, 21, 0),
++	gsSP2Triangles(13, 14, 21, 0, 15, 21, 14, 0),
++	gsSP2Triangles(21, 15, 16, 0, 16, 22, 21, 0),
++	gsSP2Triangles(23, 22, 16, 0, 16, 24, 23, 0),
++	gsSP2Triangles(24, 16, 17, 0, 25, 24, 17, 0),
++	gsSP2Triangles(18, 25, 17, 0, 26, 25, 18, 0),
++	gsSP2Triangles(27, 26, 18, 0, 19, 27, 18, 0),
++	gsSP2Triangles(20, 27, 19, 0, 20, 28, 27, 0),
++	gsSP2Triangles(20, 21, 28, 0, 21, 22, 28, 0),
++	gsSP2Triangles(28, 22, 27, 0, 22, 26, 27, 0),
++	gsSP2Triangles(22, 23, 26, 0, 23, 25, 26, 0),
++	gsSP2Triangles(24, 25, 23, 0, 29, 30, 31, 0),
++	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_vtx_0 + 32, 10, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 3, 0, 0, 5, 3, 4, 0),
++	gsSP2Triangles(5, 6, 3, 0, 7, 6, 5, 0),
++	gsSP2Triangles(8, 7, 5, 0, 2, 7, 8, 0),
++	gsSP2Triangles(9, 2, 8, 0, 7, 2, 1, 0),
++	gsSP2Triangles(1, 6, 7, 0, 1, 3, 6, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_006_mesh_vtx_0[20] = {
++	{{{58, 17, 27},0, {-16, -16},{0x37, 0x5A, 0x48, 0xFF}}},
++	{{{67, 10, 21},0, {-16, -16},{0x6F, 0x31, 0x26, 0xFF}}},
++	{{{67, 11, -4},0, {-16, -16},{0x6F, 0x33, 0xDE, 0xFF}}},
++	{{{67, -14, 28},0, {-16, -16},{0x6E, 0xE8, 0x3B, 0xFF}}},
++	{{{57, -17, 37},0, {-16, -16},{0x33, 0xD7, 0x6D, 0xFF}}},
++	{{{7, 25, 32},0, {-16, -16},{0xDF, 0x60, 0x4C, 0xFF}}},
++	{{{7, 27, -13},0, {-16, -16},{0xE0, 0x68, 0xBF, 0xFF}}},
++	{{{58, 19, -9},0, {-16, -16},{0x37, 0x60, 0xC2, 0xFF}}},
++	{{{67, -12, -13},0, {-16, -16},{0x6E, 0xEE, 0xC3, 0xFF}}},
++	{{{66, -28, 6},0, {-16, -16},{0x6F, 0xC3, 0xFA, 0xFF}}},
++	{{{57, -38, 6},0, {-16, -16},{0x34, 0x8C, 0xF9, 0xFF}}},
++	{{{57, -14, -22},0, {-16, -16},{0x32, 0xE2, 0x8F, 0xFF}}},
++	{{{5, -44, 5},0, {-16, -16},{0xD8, 0x88, 0xF8, 0xFF}}},
++	{{{6, -19, 44},0, {-16, -16},{0xDC, 0xD5, 0x72, 0xFF}}},
++	{{{-8, 14, 22},0, {-16, -16},{0x93, 0x35, 0x26, 0xFF}}},
++	{{{-8, 15, -5},0, {-16, -16},{0x93, 0x38, 0xDE, 0xFF}}},
++	{{{-9, -10, -15},0, {-16, -16},{0x90, 0xF5, 0xC4, 0xFF}}},
++	{{{6, -15, -30},0, {-16, -16},{0xDC, 0xE2, 0x8A, 0xFF}}},
++	{{{-9, -28, 6},0, {-16, -16},{0x8F, 0xC6, 0xFB, 0xFF}}},
++	{{{-9, -13, 30},0, {-16, -16},{0x91, 0xEE, 0x3B, 0xFF}}},
++};
++
++Gfx mario_000_offset_006_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_006_mesh_vtx_0 + 0, 20, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 0, 5, 0),
++	gsSP2Triangles(0, 6, 5, 0, 0, 7, 6, 0),
++	gsSP2Triangles(0, 2, 7, 0, 7, 2, 8, 0),
++	gsSP2Triangles(8, 2, 9, 0, 2, 3, 9, 0),
++	gsSP2Triangles(2, 1, 3, 0, 10, 9, 3, 0),
++	gsSP2Triangles(8, 9, 10, 0, 11, 8, 10, 0),
++	gsSP2Triangles(11, 10, 12, 0, 10, 13, 12, 0),
++	gsSP2Triangles(10, 4, 13, 0, 10, 3, 4, 0),
++	gsSP2Triangles(4, 5, 13, 0, 5, 14, 13, 0),
++	gsSP2Triangles(15, 14, 5, 0, 6, 15, 5, 0),
++	gsSP2Triangles(16, 15, 6, 0, 17, 16, 6, 0),
++	gsSP2Triangles(7, 17, 6, 0, 7, 11, 17, 0),
++	gsSP2Triangles(7, 8, 11, 0, 11, 12, 17, 0),
++	gsSP2Triangles(12, 18, 17, 0, 19, 18, 12, 0),
++	gsSP2Triangles(13, 19, 12, 0, 14, 19, 13, 0),
++	gsSP2Triangles(19, 14, 15, 0, 19, 15, 16, 0),
++	gsSP2Triangles(16, 18, 19, 0, 18, 16, 17, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_007_mesh_vtx_0[16] = {
++	{{{-2, -18, 38},0, {-16, -16},{0xDC, 0xD6, 0x72, 0xFF}}},
++	{{{-14, -14, 28},0, {-16, -16},{0x93, 0xED, 0x3E, 0xFF}}},
++	{{{-3, -39, 6},0, {-16, -16},{0xD8, 0x88, 0xF9, 0xFF}}},
++	{{{-13, 10, 21},0, {-16, -16},{0x95, 0x36, 0x2A, 0xFF}}},
++	{{{-1, 18, 28},0, {-16, -16},{0xDF, 0x60, 0x4C, 0xFF}}},
++	{{{47, -17, 34},0, {-16, -16},{0x41, 0xD9, 0x66, 0xFF}}},
++	{{{46, -36, 6},0, {-16, -16},{0x3D, 0x91, 0xFA, 0xFF}}},
++	{{{47, -15, -19},0, {-16, -16},{0x3F, 0xE3, 0x96, 0xFF}}},
++	{{{-2, -15, -23},0, {-16, -16},{0xDC, 0xE2, 0x8A, 0xFF}}},
++	{{{-14, -28, 6},0, {-16, -16},{0x92, 0xC1, 0xFA, 0xFF}}},
++	{{{-14, -12, -13},0, {-16, -16},{0x94, 0xF2, 0xBF, 0xFF}}},
++	{{{-13, 12, -4},0, {-16, -16},{0x98, 0x3E, 0xDA, 0xFF}}},
++	{{{-1, 20, -9},0, {-16, -16},{0xE1, 0x68, 0xBE, 0xFF}}},
++	{{{48, 13, 25},0, {-16, -16},{0x44, 0x54, 0x44, 0xFF}}},
++	{{{59, -8, 7},0, {-16, -16},{0x7F, 0xFD, 0xFE, 0xFF}}},
++	{{{48, 15, -7},0, {-16, -16},{0x43, 0x5B, 0xC5, 0xFF}}},
++};
++
++Gfx mario_000_offset_007_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_007_mesh_vtx_0 + 0, 16, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 3, 0, 0, 5, 4, 0, 0),
++	gsSP2Triangles(6, 5, 0, 0, 6, 0, 2, 0),
++	gsSP2Triangles(7, 6, 2, 0, 7, 2, 8, 0),
++	gsSP2Triangles(2, 9, 8, 0, 1, 9, 2, 0),
++	gsSP2Triangles(9, 1, 3, 0, 10, 9, 3, 0),
++	gsSP2Triangles(10, 3, 11, 0, 11, 3, 4, 0),
++	gsSP2Triangles(12, 11, 4, 0, 13, 12, 4, 0),
++	gsSP2Triangles(5, 13, 4, 0, 5, 14, 13, 0),
++	gsSP2Triangles(6, 14, 5, 0, 7, 14, 6, 0),
++	gsSP2Triangles(15, 14, 7, 0, 15, 7, 8, 0),
++	gsSP2Triangles(15, 8, 12, 0, 8, 10, 12, 0),
++	gsSP2Triangles(9, 10, 8, 0, 10, 11, 12, 0),
++	gsSP2Triangles(13, 14, 15, 0, 13, 15, 12, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_displaylist_004_mesh_vtx_0[30] = {
++	{{{-14, 26, 41},0, {-16, -16},{0x2D, 0x50, 0x57, 0xFF}}},
++	{{{13, -38, 41},0, {-16, -16},{0x57, 0xE5, 0x58, 0xFF}}},
++	{{{23, -26, 35},0, {-16, -16},{0xF, 0xBF, 0x6C, 0xFF}}},
++	{{{31, -40, -1},0, {-16, -16},{0x3D, 0x99, 0xD4, 0xFF}}},
++	{{{24, -57, -4},0, {-16, -16},{0x75, 0xD3, 0xEC, 0xFF}}},
++	{{{4, -3, -33},0, {-16, -16},{0x4C, 0x21, 0x9F, 0xFF}}},
++	{{{15, 0, -23},0, {-16, -16},{0xC, 0x1, 0x82, 0xFF}}},
++	{{{-2, 41, -1},0, {-16, -16},{0xDA, 0x71, 0xD3, 0xFF}}},
++	{{{-19, 47, -4},0, {-16, -16},{0x2D, 0x75, 0xEB, 0xFF}}},
++	{{{1, 24, 35},0, {-16, -16},{0xF5, 0x3E, 0x6E, 0xFF}}},
++	{{{29, 6, 49},0, {-16, -16},{0xBF, 0xF9, 0x6D, 0xFF}}},
++	{{{75, -33, 66},0, {-16, -16},{0x19, 0xB2, 0x61, 0xFF}}},
++	{{{55, -44, -4},0, {-16, -16},{0x7, 0x8C, 0xCC, 0xFF}}},
++	{{{35, 9, -37},0, {-16, -16},{0xE7, 0xF6, 0x84, 0xFF}}},
++	{{{10, 60, -4},0, {-16, -16},{0xB1, 0x58, 0xD2, 0xFF}}},
++	{{{29, 62, 34},0, {-16, -16},{0xCE, 0x59, 0x4B, 0xFF}}},
++	{{{57, 10, 66},0, {-16, -16},{0xF3, 0x15, 0x7D, 0xFF}}},
++	{{{96, -8, 52},0, {-16, -16},{0x67, 0xF9, 0x4A, 0xFF}}},
++	{{{104, -26, 1},0, {-16, -16},{0x65, 0xBF, 0xD7, 0xFF}}},
++	{{{86, 30, -33},0, {-16, -16},{0x45, 0x1C, 0x99, 0xFF}}},
++	{{{58, 81, 0},0, {-16, -16},{0x17, 0x7A, 0xE4, 0xFF}}},
++	{{{54, 54, 44},0, {-16, -16},{0x14, 0x51, 0x5F, 0xFF}}},
++	{{{86, 15, 52},0, {-16, -16},{0x45, 0x2E, 0x61, 0xFF}}},
++	{{{97, 39, 24},0, {-16, -16},{0x6B, 0x3E, 0x1C, 0xFF}}},
++	{{{4, -3, -33},0, {-16, -16},{0x9A, 0xD6, 0xC1, 0xFF}}},
++	{{{-16, -12, 6},0, {-16, -16},{0x8B, 0xCF, 0xF6, 0xFF}}},
++	{{{-19, 47, -4},0, {-16, -16},{0x83, 0xF6, 0xEB, 0xFF}}},
++	{{{24, -57, -4},0, {-16, -16},{0xA0, 0xAF, 0xEC, 0xFF}}},
++	{{{13, -38, 41},0, {-16, -16},{0x9C, 0xB8, 0x1F, 0xFF}}},
++	{{{-14, 26, 41},0, {-16, -16},{0x86, 0xEB, 0x1E, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_004_mesh_tri_0[] = {
++	gsSPVertex(mario_000_displaylist_004_mesh_vtx_0 + 0, 30, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 2, 1, 0),
++	gsSP2Triangles(1, 4, 3, 0, 3, 4, 5, 0),
++	gsSP2Triangles(5, 6, 3, 0, 7, 6, 5, 0),
++	gsSP2Triangles(5, 8, 7, 0, 7, 8, 0, 0),
++	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
++	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
++	gsSP2Triangles(12, 11, 2, 0, 2, 3, 12, 0),
++	gsSP2Triangles(13, 12, 3, 0, 3, 6, 13, 0),
++	gsSP2Triangles(13, 6, 7, 0, 14, 13, 7, 0),
++	gsSP2Triangles(14, 7, 9, 0, 15, 14, 9, 0),
++	gsSP2Triangles(9, 10, 15, 0, 15, 10, 16, 0),
++	gsSP2Triangles(11, 16, 10, 0, 11, 17, 16, 0),
++	gsSP2Triangles(18, 17, 11, 0, 12, 18, 11, 0),
++	gsSP2Triangles(13, 18, 12, 0, 13, 19, 18, 0),
++	gsSP2Triangles(20, 19, 13, 0, 14, 20, 13, 0),
++	gsSP2Triangles(20, 14, 15, 0, 15, 21, 20, 0),
++	gsSP2Triangles(21, 15, 16, 0, 22, 21, 16, 0),
++	gsSP2Triangles(17, 22, 16, 0, 17, 23, 22, 0),
++	gsSP2Triangles(18, 23, 17, 0, 19, 23, 18, 0),
++	gsSP2Triangles(20, 23, 19, 0, 21, 23, 20, 0),
++	gsSP2Triangles(23, 21, 22, 0, 24, 25, 26, 0),
++	gsSP2Triangles(27, 25, 24, 0, 28, 25, 27, 0),
++	gsSP2Triangles(29, 25, 28, 0, 26, 25, 29, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_002_switch_option_left_hand_open_mesh_vtx_0[42] = {
++	{{{7, 1, -26},0, {-16, -16},{0x4C, 0x2B, 0xA4, 0xFF}}},
++	{{{-9, 41, 5},0, {-16, -16},{0x32, 0x74, 0xF3, 0xFF}}},
++	{{{3, 36, 6},0, {-16, -16},{0xD7, 0x74, 0xE0, 0xFF}}},
++	{{{-1, 18, 42},0, {-16, -16},{0x3E, 0x42, 0x5A, 0xFF}}},
++	{{{9, 18, 35},0, {-16, -16},{0xEA, 0x29, 0x76, 0xFF}}},
++	{{{26, -24, 28},0, {-16, -16},{0xE, 0xBA, 0x69, 0xFF}}},
++	{{{19, -36, 33},0, {-16, -16},{0x66, 0xE1, 0x45, 0xFF}}},
++	{{{30, -32, -4},0, {-16, -16},{0x37, 0xA3, 0xBD, 0xFF}}},
++	{{{25, -46, -9},0, {-16, -16},{0x77, 0xE1, 0xDF, 0xFF}}},
++	{{{16, 4, -17},0, {-16, -16},{0xFF, 0x11, 0x82, 0xFF}}},
++	{{{30, 13, -30},0, {-16, -16},{0xD6, 0x3, 0x88, 0xFF}}},
++	{{{13, 53, 5},0, {-16, -16},{0xAE, 0x5E, 0xE7, 0xFF}}},
++	{{{20, 33, 48},0, {-16, -16},{0xE2, 0x2B, 0x74, 0xFF}}},
++	{{{32, 2, 43},0, {-16, -16},{0xE2, 0xED, 0x7A, 0xFF}}},
++	{{{46, -35, 37},0, {-16, -16},{0xD8, 0xA4, 0x4E, 0xFF}}},
++	{{{48, -35, -9},0, {-16, -16},{0xF7, 0x99, 0xB7, 0xFF}}},
++	{{{86, -19, -13},0, {-16, -16},{0x3D, 0xB9, 0xAB, 0xFF}}},
++	{{{81, 37, -28},0, {-16, -16},{0x11, 0x1E, 0x86, 0xFF}}},
++	{{{76, 88, 9},0, {-16, -16},{0xF2, 0x7E, 0xFE, 0xFF}}},
++	{{{34, 43, 36},0, {-16, -16},{0xFD, 0x4A, 0x67, 0xFF}}},
++	{{{81, -15, 45},0, {-16, -16},{0x35, 0xC, 0x73, 0xFF}}},
++	{{{93, -45, 36},0, {-16, -16},{0x4C, 0xA7, 0x31, 0xFF}}},
++	{{{93, -5, 22},0, {-16, -16},{0x68, 0xE6, 0x45, 0xFF}}},
++	{{{136, 28, 31},0, {-16, -16},{0x51, 0xDD, 0x5B, 0xFF}}},
++	{{{143, 31, -1},0, {-16, -16},{0x72, 0xF0, 0xCB, 0xFF}}},
++	{{{125, 71, 9},0, {-16, -16},{0x4E, 0x5B, 0xD4, 0xFF}}},
++	{{{124, 69, 30},0, {-16, -16},{0x38, 0x45, 0x5A, 0xFF}}},
++	{{{84, 59, 25},0, {-16, -16},{0xFD, 0x21, 0x7B, 0xFF}}},
++	{{{75, 11, 32},0, {-16, -16},{0x3E, 0x24, 0x69, 0xFF}}},
++	{{{25, -46, -9},0, {-16, -16},{0xB8, 0x9F, 0xDA, 0xFF}}},
++	{{{11, -38, -3},0, {-16, -16},{0xA5, 0xAD, 0xE2, 0xFF}}},
++	{{{7, 1, -26},0, {-16, -16},{0x9E, 0xE7, 0xB3, 0xFF}}},
++	{{{19, -36, 33},0, {-16, -16},{0xB6, 0xA8, 0x37, 0xFF}}},
++	{{{11, -38, -3},0, {-16, -16},{0xA5, 0xAD, 0xE2, 0xFF}}},
++	{{{25, -46, -9},0, {-16, -16},{0xB8, 0x9F, 0xDA, 0xFF}}},
++	{{{7, -30, 26},0, {-16, -16},{0x9E, 0xBA, 0x2A, 0xFF}}},
++	{{{-1, 18, 42},0, {-16, -16},{0x94, 0xFD, 0x42, 0xFF}}},
++	{{{-7, 7, 32},0, {-16, -16},{0x8E, 0xE6, 0x31, 0xFF}}},
++	{{{-12, 23, 6},0, {-16, -16},{0x82, 0x0, 0xF0, 0xFF}}},
++	{{{-9, 41, 5},0, {-16, -16},{0x83, 0x14, 0xF4, 0xFF}}},
++	{{{7, 1, -26},0, {-16, -16},{0x9E, 0xE7, 0xB3, 0xFF}}},
++	{{{0, -4, -15},0, {-16, -16},{0x92, 0xDD, 0xCB, 0xFF}}},
++};
++
++Gfx mario_002_switch_option_left_hand_open_mesh_tri_0[] = {
++	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(3, 4, 2, 0, 5, 4, 3, 0),
++	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
++	gsSP2Triangles(6, 8, 7, 0, 7, 8, 0, 0),
++	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
++	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
++	gsSP2Triangles(12, 11, 2, 0, 2, 4, 12, 0),
++	gsSP2Triangles(13, 12, 4, 0, 13, 4, 5, 0),
++	gsSP2Triangles(14, 13, 5, 0, 14, 5, 7, 0),
++	gsSP2Triangles(15, 14, 7, 0, 10, 15, 7, 0),
++	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
++	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
++	gsSP2Triangles(11, 18, 10, 0, 18, 11, 19, 0),
++	gsSP2Triangles(12, 19, 11, 0, 19, 12, 13, 0),
++	gsSP2Triangles(19, 13, 20, 0, 20, 13, 14, 0),
++	gsSP2Triangles(20, 14, 21, 0, 21, 14, 15, 0),
++	gsSP2Triangles(15, 16, 21, 0, 16, 22, 21, 0),
++	gsSP2Triangles(16, 23, 22, 0, 16, 24, 23, 0),
++	gsSP2Triangles(17, 24, 16, 0, 17, 25, 24, 0),
++	gsSP2Triangles(17, 18, 25, 0, 26, 25, 18, 0),
++	gsSP2Triangles(18, 27, 26, 0, 19, 27, 18, 0),
++	gsSP2Triangles(28, 27, 19, 0, 28, 19, 20, 0),
++	gsSP2Triangles(22, 28, 20, 0, 21, 22, 20, 0),
++	gsSP2Triangles(22, 27, 28, 0, 22, 23, 27, 0),
++	gsSP2Triangles(23, 26, 27, 0, 23, 24, 26, 0),
++	gsSP2Triangles(26, 24, 25, 0, 29, 30, 31, 0),
++	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_vtx_0 + 32, 10, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
++	gsSP2Triangles(6, 5, 4, 0, 7, 6, 4, 0),
++	gsSP2Triangles(8, 6, 7, 0, 8, 9, 6, 0),
++	gsSP2Triangles(1, 9, 8, 0, 9, 1, 3, 0),
++	gsSP2Triangles(3, 5, 9, 0, 5, 6, 9, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_004_switch_option_left_hand_peace_mesh_vtx_0[61] = {
++	{{{166, -13, -17},0, {-16, -16},{0x7A, 0x9, 0x23, 0xFF}}},
++	{{{162, 14, -11},0, {-16, -16},{0x7A, 0xB, 0x22, 0xFF}}},
++	{{{153, 7, 24},0, {-16, -16},{0x49, 0xF2, 0x67, 0xFF}}},
++	{{{155, -15, 21},0, {-16, -16},{0x47, 0xF8, 0x69, 0xFF}}},
++	{{{101, -29, 15},0, {-16, -16},{0x42, 0x97, 0x1A, 0xFF}}},
++	{{{98, 10, 29},0, {-16, -16},{0x4F, 0x9, 0x63, 0xFF}}},
++	{{{90, -3, 52},0, {-16, -16},{0x47, 0x3, 0x69, 0xFF}}},
++	{{{84, 48, 24},0, {-16, -16},{0x1A, 0x4F, 0x60, 0xFF}}},
++	{{{139, 53, 25},0, {-16, -16},{0xFC, 0x14, 0x7D, 0xFF}}},
++	{{{123, 72, 21},0, {-16, -16},{0xFC, 0x17, 0x7D, 0xFF}}},
++	{{{46, 49, 45},0, {-16, -16},{0xF7, 0x48, 0x68, 0xFF}}},
++	{{{56, 80, 1},0, {-16, -16},{0x7, 0x7D, 0xEC, 0xFF}}},
++	{{{84, 60, -7},0, {-16, -16},{0x2, 0x70, 0xC4, 0xFF}}},
++	{{{126, 84, -3},0, {-16, -16},{0xC3, 0x67, 0x2B, 0xFF}}},
++	{{{123, 72, 21},0, {-16, -16},{0xC4, 0x67, 0x2C, 0xFF}}},
++	{{{89, 18, -34},0, {-16, -16},{0x7, 0xB, 0x82, 0xFF}}},
++	{{{126, 84, -3},0, {-16, -16},{0x6, 0x33, 0x8C, 0xFF}}},
++	{{{146, 59, -8},0, {-16, -16},{0x17, 0x2A, 0x8A, 0xFF}}},
++	{{{33, 7, -37},0, {-16, -16},{0xDF, 0xF9, 0x86, 0xFF}}},
++	{{{94, -22, -18},0, {-16, -16},{0x1A, 0xA8, 0xA9, 0xFF}}},
++	{{{166, -13, -17},0, {-16, -16},{0x1E, 0x7, 0x85, 0xFF}}},
++	{{{162, 14, -11},0, {-16, -16},{0x27, 0x20, 0x8B, 0xFF}}},
++	{{{56, -47, -5},0, {-16, -16},{0x3, 0x8A, 0xD1, 0xFF}}},
++	{{{32, -43, 0},0, {-16, -16},{0x34, 0x95, 0xD3, 0xFF}}},
++	{{{45, -29, 52},0, {-16, -16},{0xE7, 0xBC, 0x69, 0xFF}}},
++	{{{88, -34, 39},0, {-16, -16},{0x3D, 0xA6, 0x41, 0xFF}}},
++	{{{155, -15, 21},0, {-16, -16},{0x15, 0x83, 0xF6, 0xFF}}},
++	{{{166, -13, -17},0, {-16, -16},{0x10, 0x82, 0xFE, 0xFF}}},
++	{{{18, 30, 41},0, {-16, -16},{0xC9, 0x2E, 0x69, 0xFF}}},
++	{{{8, 58, -2},0, {-16, -16},{0xAF, 0x5D, 0xE2, 0xFF}}},
++	{{{-4, 38, 0},0, {-16, -16},{0xD9, 0x72, 0xD8, 0xFF}}},
++	{{{14, -1, -22},0, {-16, -16},{0x4, 0x4, 0x81, 0xFF}}},
++	{{{2, -5, -33},0, {-16, -16},{0xFA, 0x3, 0x81, 0xFF}}},
++	{{{14, -1, -22},0, {-16, -16},{0x4, 0x4, 0x81, 0xFF}}},
++	{{{32, -43, 0},0, {-16, -16},{0x34, 0x95, 0xD3, 0xFF}}},
++	{{{24, -59, -3},0, {-16, -16},{0x27, 0x8D, 0xDA, 0xFF}}},
++	{{{23, -29, 36},0, {-16, -16},{0x17, 0xC5, 0x6E, 0xFF}}},
++	{{{45, -29, 52},0, {-16, -16},{0xE7, 0xBC, 0x69, 0xFF}}},
++	{{{18, 30, 41},0, {-16, -16},{0xC9, 0x2E, 0x69, 0xFF}}},
++	{{{0, 21, 37},0, {-16, -16},{0x5, 0x44, 0x6B, 0xFF}}},
++	{{{-4, 38, 0},0, {-16, -16},{0xD9, 0x72, 0xD8, 0xFF}}},
++	{{{8, 58, -2},0, {-16, -16},{0xAF, 0x5D, 0xE2, 0xFF}}},
++	{{{-15, 23, 43},0, {-16, -16},{0xD4, 0x3C, 0x67, 0xFF}}},
++	{{{15, -39, 42},0, {-16, -16},{0x13, 0xBA, 0x68, 0xFF}}},
++	{{{0, -35, 32},0, {-16, -16},{0xA4, 0xB8, 0x32, 0xFF}}},
++	{{{-21, 9, 33},0, {-16, -16},{0x8D, 0xE6, 0x30, 0xFF}}},
++	{{{-22, 43, -3},0, {-16, -16},{0xC2, 0x68, 0xD9, 0xFF}}},
++	{{{-25, 24, 0},0, {-16, -16},{0x84, 0xFB, 0xE5, 0xFF}}},
++	{{{-8, -12, -20},0, {-16, -16},{0x9B, 0xD0, 0xC4, 0xFF}}},
++	{{{6, -49, 0},0, {-16, -16},{0xAC, 0xA5, 0xE6, 0xFF}}},
++	{{{146, 59, -8},0, {-16, -16},{0x5E, 0x4B, 0x29, 0xFF}}},
++	{{{126, 84, -3},0, {-16, -16},{0x60, 0x44, 0x2F, 0xFF}}},
++	{{{123, 72, 21},0, {-16, -16},{0x5D, 0x4C, 0x28, 0xFF}}},
++	{{{139, 53, 25},0, {-16, -16},{0x5A, 0x53, 0x22, 0xFF}}},
++	{{{105, 17, 3},0, {-16, -16},{0x77, 0x2D, 0x3, 0xFF}}},
++	{{{98, 10, 29},0, {-16, -16},{0x6E, 0x30, 0x2B, 0xFF}}},
++	{{{153, 7, 24},0, {-16, -16},{0xD, 0x7B, 0x1E, 0xFF}}},
++	{{{139, 53, 25},0, {-16, -16},{0x5B, 0xA8, 0x3, 0xFF}}},
++	{{{146, 59, -8},0, {-16, -16},{0x59, 0xA6, 0xF5, 0xFF}}},
++	{{{89, 18, -34},0, {-16, -16},{0x70, 0x25, 0xD0, 0xFF}}},
++	{{{162, 14, -11},0, {-16, -16},{0xB, 0x7D, 0x13, 0xFF}}},
++};
++
++Gfx mario_004_switch_option_left_hand_peace_mesh_tri_0[] = {
++	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSP2Triangles(4, 3, 2, 0, 4, 2, 5, 0),
++	gsSP2Triangles(4, 5, 6, 0, 5, 7, 6, 0),
++	gsSP2Triangles(7, 5, 8, 0, 8, 9, 7, 0),
++	gsSP2Triangles(6, 7, 10, 0, 10, 7, 11, 0),
++	gsSP2Triangles(11, 7, 12, 0, 12, 7, 13, 0),
++	gsSP2Triangles(7, 14, 13, 0, 11, 12, 15, 0),
++	gsSP2Triangles(16, 15, 12, 0, 15, 16, 17, 0),
++	gsSP2Triangles(11, 15, 18, 0, 18, 15, 19, 0),
++	gsSP2Triangles(20, 19, 15, 0, 15, 21, 20, 0),
++	gsSP2Triangles(22, 18, 19, 0, 18, 22, 23, 0),
++	gsSP2Triangles(22, 24, 23, 0, 24, 22, 25, 0),
++	gsSP2Triangles(4, 25, 22, 0, 4, 22, 19, 0),
++	gsSP2Triangles(19, 26, 4, 0, 26, 19, 27, 0),
++	gsSP2Triangles(25, 4, 6, 0, 25, 6, 24, 0),
++	gsSP2Triangles(24, 6, 10, 0, 24, 10, 28, 0),
++	gsSP2Triangles(10, 29, 28, 0, 10, 11, 29, 0),
++	gsSP2Triangles(29, 11, 18, 0, 29, 18, 30, 0),
++	gsSP2Triangles(18, 31, 30, 0, 23, 31, 18, 0),
++	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_vtx_0 + 32, 29, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSP2Triangles(3, 2, 4, 0, 5, 4, 2, 0),
++	gsSP2Triangles(4, 5, 6, 0, 7, 4, 6, 0),
++	gsSP2Triangles(8, 7, 6, 0, 6, 9, 8, 0),
++	gsSP2Triangles(10, 7, 8, 0, 11, 7, 10, 0),
++	gsSP2Triangles(10, 12, 11, 0, 10, 13, 12, 0),
++	gsSP2Triangles(14, 13, 10, 0, 10, 8, 14, 0),
++	gsSP2Triangles(14, 8, 1, 0, 14, 1, 0, 0),
++	gsSP2Triangles(0, 15, 14, 0, 0, 16, 15, 0),
++	gsSP2Triangles(3, 16, 0, 0, 3, 17, 16, 0),
++	gsSP2Triangles(11, 17, 3, 0, 3, 4, 11, 0),
++	gsSP2Triangles(11, 4, 7, 0, 11, 12, 17, 0),
++	gsSP2Triangles(16, 17, 12, 0, 12, 13, 16, 0),
++	gsSP2Triangles(13, 15, 16, 0, 14, 15, 13, 0),
++	gsSP2Triangles(18, 19, 20, 0, 20, 21, 18, 0),
++	gsSP2Triangles(22, 23, 24, 0, 25, 23, 22, 0),
++	gsSP2Triangles(25, 22, 26, 0, 26, 22, 27, 0),
++	gsSP2Triangles(28, 27, 22, 0, 22, 24, 28, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_0[47] = {
++	{{{131, 47, -1},0, {1088, 212},{0xE3, 0x5C, 0xAE, 0xFF}}},
++	{{{107, -19, -33},0, {458, 16},{0xCE, 0xF, 0x8C, 0xFF}}},
++	{{{78, 11, 40},0, {756, 802},{0xD2, 0x41, 0x9D, 0xFF}}},
++	{{{70, -52, 35},0, {180, 784},{0xC6, 0xDB, 0x95, 0xFF}}},
++	{{{114, -92, -11},0, {-164, 172},{0xD0, 0xBA, 0xA2, 0xFF}}},
++	{{{192, 11, -2},0, {-16, -16},{0x52, 0x22, 0xA6, 0xFF}}},
++	{{{107, -19, -33},0, {-16, -16},{0xCE, 0xF, 0x8C, 0xFF}}},
++	{{{131, 47, -1},0, {-16, -16},{0xE3, 0x5C, 0xAE, 0xFF}}},
++	{{{182, -72, -8},0, {-16, -16},{0x4A, 0xD8, 0xA0, 0xFF}}},
++	{{{246, 29, 128},0, {-16, -16},{0x71, 0x29, 0xD6, 0xFF}}},
++	{{{183, 100, 86},0, {-16, -16},{0x14, 0x7B, 0xE9, 0xFF}}},
++	{{{129, 65, 103},0, {-16, -16},{0xA4, 0x4D, 0x2A, 0xFF}}},
++	{{{78, 11, 40},0, {-16, -16},{0xD2, 0x41, 0x9D, 0xFF}}},
++	{{{45, 49, 53},0, {-16, -16},{0x18, 0x3B, 0x92, 0xFF}}},
++	{{{18, -13, 33},0, {-16, -16},{0x1, 0xA, 0x81, 0xFF}}},
++	{{{70, -52, 35},0, {-16, -16},{0xC6, 0xDB, 0x95, 0xFF}}},
++	{{{29, -82, 43},0, {-16, -16},{0xB, 0xD2, 0x8A, 0xFF}}},
++	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
++	{{{114, -92, -11},0, {-16, -16},{0xD0, 0xBA, 0xA2, 0xFF}}},
++	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
++	{{{228, -121, 117},0, {-16, -16},{0x64, 0xC4, 0xCE, 0xFF}}},
++	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
++	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
++	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
++	{{{211, 81, 156},0, {-16, -16},{0x26, 0x71, 0x2C, 0xFF}}},
++	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
++	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
++	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
++	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
++	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
++	{{{45, 49, 53},0, {-16, -16},{0xC8, 0xEC, 0x70, 0xFF}}},
++	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
++	{{{65, -53, 55},0, {-16, -16},{0xBB, 0x8, 0x6A, 0xFF}}},
++	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
++	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
++	{{{29, -82, 43},0, {-16, -16},{0xCC, 0x10, 0x73, 0xFF}}},
++	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
++	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
++	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
++	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
++	{{{171, -129, 178},0, {-16, -16},{0xB7, 0xCD, 0x5A, 0xFF}}},
++	{{{216, -104, 220},0, {-16, -16},{0xF4, 0xCE, 0x74, 0xFF}}},
++	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
++	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
++	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
++	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
++	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
++};
++
++Gfx mario_005_switch_option_left_hand_cap_mesh_tri_0[] = {
++	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
++	gsSP2Triangles(1, 4, 3, 0, 5, 6, 7, 0),
++	gsSP2Triangles(8, 6, 5, 0, 8, 5, 9, 0),
++	gsSP2Triangles(5, 10, 9, 0, 7, 10, 5, 0),
++	gsSP2Triangles(10, 7, 11, 0, 12, 11, 7, 0),
++	gsSP2Triangles(12, 13, 11, 0, 12, 14, 13, 0),
++	gsSP2Triangles(15, 14, 12, 0, 16, 14, 15, 0),
++	gsSP2Triangles(16, 15, 17, 0, 18, 17, 15, 0),
++	gsSP2Triangles(17, 18, 19, 0, 8, 19, 18, 0),
++	gsSP2Triangles(18, 6, 8, 0, 20, 19, 8, 0),
++	gsSP2Triangles(19, 20, 21, 0, 20, 22, 21, 0),
++	gsSP2Triangles(23, 22, 20, 0, 20, 9, 23, 0),
++	gsSP2Triangles(20, 8, 9, 0, 24, 23, 9, 0),
++	gsSP2Triangles(25, 23, 24, 0, 25, 24, 26, 0),
++	gsSP2Triangles(26, 24, 27, 0, 27, 24, 10, 0),
++	gsSP2Triangles(24, 9, 10, 0, 10, 11, 27, 0),
++	gsSP2Triangles(27, 11, 28, 0, 11, 29, 28, 0),
++	gsSP2Triangles(11, 30, 29, 0, 30, 31, 29, 0),
++	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_vtx_0 + 32, 15, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSP2Triangles(0, 3, 4, 0, 0, 4, 5, 0),
++	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
++	gsSP2Triangles(5, 7, 8, 0, 8, 7, 9, 0),
++	gsSP2Triangles(7, 10, 9, 0, 9, 10, 11, 0),
++	gsSP2Triangles(10, 12, 11, 0, 9, 11, 13, 0),
++	gsSP2Triangles(13, 8, 9, 0, 13, 5, 8, 0),
++	gsSP2Triangles(13, 14, 5, 0, 1, 0, 5, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_005_switch_option_left_hand_cap_mesh_vtx_1[30] = {
++	{{{4, -3, -32},0, {-16, -16},{0x48, 0x20, 0x9D, 0xFF}}},
++	{{{-19, 47, -4},0, {-16, -16},{0x2F, 0x74, 0xE8, 0xFF}}},
++	{{{-2, 41, 0},0, {-16, -16},{0xDD, 0x73, 0xD7, 0xFF}}},
++	{{{-13, 26, 41},0, {-16, -16},{0x2E, 0x50, 0x57, 0xFF}}},
++	{{{1, 24, 35},0, {-16, -16},{0xF8, 0x3F, 0x6E, 0xFF}}},
++	{{{23, -25, 35},0, {-16, -16},{0x10, 0xC1, 0x6D, 0xFF}}},
++	{{{13, -37, 41},0, {-16, -16},{0x57, 0xE5, 0x59, 0xFF}}},
++	{{{31, -39, 0},0, {-16, -16},{0x3C, 0x98, 0xD7, 0xFF}}},
++	{{{24, -55, -4},0, {-16, -16},{0x74, 0xD2, 0xE9, 0xFF}}},
++	{{{16, 1, -22},0, {-16, -16},{0x4, 0xFF, 0x81, 0xFF}}},
++	{{{35, 9, -36},0, {-16, -16},{0xE6, 0xF5, 0x84, 0xFF}}},
++	{{{11, 60, -3},0, {-16, -16},{0xB1, 0x59, 0xD2, 0xFF}}},
++	{{{29, 62, 34},0, {-16, -16},{0xCE, 0x59, 0x4B, 0xFF}}},
++	{{{29, 7, 48},0, {-16, -16},{0xC1, 0xF9, 0x6E, 0xFF}}},
++	{{{75, -32, 65},0, {-16, -16},{0x19, 0xB2, 0x61, 0xFF}}},
++	{{{55, -43, -3},0, {-16, -16},{0x7, 0x8C, 0xCD, 0xFF}}},
++	{{{103, -25, 1},0, {-16, -16},{0x65, 0xC0, 0xD6, 0xFF}}},
++	{{{85, 30, -32},0, {-16, -16},{0x45, 0x1C, 0x99, 0xFF}}},
++	{{{58, 81, 0},0, {-16, -16},{0x18, 0x79, 0xE3, 0xFF}}},
++	{{{54, 54, 44},0, {-16, -16},{0x15, 0x51, 0x5F, 0xFF}}},
++	{{{56, 11, 65},0, {-16, -16},{0xF0, 0x13, 0x7D, 0xFF}}},
++	{{{95, -8, 52},0, {-16, -16},{0x67, 0xF9, 0x4A, 0xFF}}},
++	{{{96, 39, 24},0, {-16, -16},{0x6C, 0x3D, 0x1C, 0xFF}}},
++	{{{85, 15, 52},0, {-16, -16},{0x44, 0x2D, 0x61, 0xFF}}},
++	{{{13, -37, 41},0, {-16, -16},{0x9B, 0xB8, 0x1E, 0xFF}}},
++	{{{-15, -12, 7},0, {-16, -16},{0x8B, 0xCF, 0xF8, 0xFF}}},
++	{{{24, -55, -4},0, {-16, -16},{0xA1, 0xAF, 0xEC, 0xFF}}},
++	{{{-13, 26, 41},0, {-16, -16},{0x87, 0xEA, 0x1F, 0xFF}}},
++	{{{-19, 47, -4},0, {-16, -16},{0x83, 0xF4, 0xED, 0xFF}}},
++	{{{4, -3, -32},0, {-16, -16},{0x99, 0xD5, 0xC3, 0xFF}}},
++};
++
++Gfx mario_005_switch_option_left_hand_cap_mesh_tri_1[] = {
++	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_vtx_1 + 0, 30, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(3, 4, 2, 0, 5, 4, 3, 0),
++	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
++	gsSP2Triangles(6, 8, 7, 0, 7, 8, 0, 0),
++	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
++	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
++	gsSP2Triangles(11, 2, 4, 0, 12, 11, 4, 0),
++	gsSP2Triangles(4, 13, 12, 0, 13, 4, 5, 0),
++	gsSP2Triangles(14, 13, 5, 0, 15, 14, 5, 0),
++	gsSP2Triangles(5, 7, 15, 0, 10, 15, 7, 0),
++	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
++	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
++	gsSP2Triangles(11, 18, 10, 0, 18, 11, 12, 0),
++	gsSP2Triangles(12, 19, 18, 0, 19, 12, 20, 0),
++	gsSP2Triangles(12, 13, 20, 0, 14, 20, 13, 0),
++	gsSP2Triangles(14, 21, 20, 0, 16, 21, 14, 0),
++	gsSP2Triangles(15, 16, 14, 0, 16, 22, 21, 0),
++	gsSP2Triangles(17, 22, 16, 0, 18, 22, 17, 0),
++	gsSP2Triangles(19, 22, 18, 0, 22, 19, 23, 0),
++	gsSP2Triangles(23, 19, 20, 0, 21, 23, 20, 0),
++	gsSP2Triangles(21, 22, 23, 0, 24, 25, 26, 0),
++	gsSP2Triangles(27, 25, 24, 0, 28, 25, 27, 0),
++	gsSP2Triangles(29, 25, 28, 0, 26, 25, 29, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0[47] = {
++	{{{131, 47, -1},0, {1088, 212},{0xE3, 0x5C, 0xAE, 0xFF}}},
++	{{{107, -19, -33},0, {458, 16},{0xCE, 0xF, 0x8C, 0xFF}}},
++	{{{78, 11, 40},0, {756, 802},{0xD2, 0x41, 0x9D, 0xFF}}},
++	{{{70, -52, 35},0, {180, 784},{0xC6, 0xDB, 0x95, 0xFF}}},
++	{{{114, -92, -11},0, {-164, 172},{0xD0, 0xBA, 0xA2, 0xFF}}},
++	{{{192, 11, -2},0, {-16, -16},{0x52, 0x22, 0xA6, 0xFF}}},
++	{{{107, -19, -33},0, {-16, -16},{0xCE, 0xF, 0x8C, 0xFF}}},
++	{{{131, 47, -1},0, {-16, -16},{0xE3, 0x5C, 0xAE, 0xFF}}},
++	{{{182, -72, -8},0, {-16, -16},{0x4A, 0xD8, 0xA0, 0xFF}}},
++	{{{246, 29, 128},0, {-16, -16},{0x71, 0x29, 0xD6, 0xFF}}},
++	{{{183, 100, 86},0, {-16, -16},{0x14, 0x7B, 0xE9, 0xFF}}},
++	{{{129, 65, 103},0, {-16, -16},{0xA4, 0x4D, 0x2A, 0xFF}}},
++	{{{78, 11, 40},0, {-16, -16},{0xD2, 0x41, 0x9D, 0xFF}}},
++	{{{45, 49, 53},0, {-16, -16},{0x18, 0x3B, 0x92, 0xFF}}},
++	{{{18, -13, 33},0, {-16, -16},{0x1, 0xA, 0x81, 0xFF}}},
++	{{{70, -52, 35},0, {-16, -16},{0xC6, 0xDB, 0x95, 0xFF}}},
++	{{{29, -82, 43},0, {-16, -16},{0xB, 0xD2, 0x8A, 0xFF}}},
++	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
++	{{{114, -92, -11},0, {-16, -16},{0xD0, 0xBA, 0xA2, 0xFF}}},
++	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
++	{{{228, -121, 117},0, {-16, -16},{0x64, 0xC4, 0xCE, 0xFF}}},
++	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
++	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
++	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
++	{{{211, 81, 156},0, {-16, -16},{0x26, 0x71, 0x2C, 0xFF}}},
++	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
++	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
++	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
++	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
++	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
++	{{{45, 49, 53},0, {-16, -16},{0xC8, 0xEC, 0x70, 0xFF}}},
++	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
++	{{{65, -53, 55},0, {-16, -16},{0xBB, 0x8, 0x6A, 0xFF}}},
++	{{{73, 11, 60},0, {-16, -16},{0xBC, 0xFA, 0x6B, 0xFF}}},
++	{{{18, -13, 33},0, {-16, -16},{0xCC, 0xFD, 0x74, 0xFF}}},
++	{{{29, -82, 43},0, {-16, -16},{0xCC, 0x10, 0x73, 0xFF}}},
++	{{{106, -124, 90},0, {-16, -16},{0x98, 0xBB, 0x17, 0xFF}}},
++	{{{137, -137, 134},0, {-16, -16},{0xA3, 0xC8, 0x41, 0xFF}}},
++	{{{151, -168, 67},0, {-16, -16},{0xF7, 0x88, 0xD8, 0xFF}}},
++	{{{181, -167, 138},0, {-16, -16},{0x8, 0x84, 0x1B, 0xFF}}},
++	{{{171, -129, 178},0, {-16, -16},{0xB7, 0xCD, 0x5A, 0xFF}}},
++	{{{216, -104, 220},0, {-16, -16},{0xF4, 0xCE, 0x74, 0xFF}}},
++	{{{273, -105, 188},0, {-16, -16},{0x6D, 0xC5, 0x1E, 0xFF}}},
++	{{{228, 1, 228},0, {-16, -16},{0xFB, 0x22, 0x7A, 0xFF}}},
++	{{{285, -6, 196},0, {-16, -16},{0x76, 0x1B, 0x26, 0xFF}}},
++	{{{192, 42, 190},0, {-16, -16},{0xC4, 0x35, 0x62, 0xFF}}},
++	{{{160, 65, 148},0, {-16, -16},{0xB0, 0x42, 0x48, 0xFF}}},
++};
++
++Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_0[] = {
++	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
++	gsSP2Triangles(1, 4, 3, 0, 5, 6, 7, 0),
++	gsSP2Triangles(8, 6, 5, 0, 8, 5, 9, 0),
++	gsSP2Triangles(5, 10, 9, 0, 7, 10, 5, 0),
++	gsSP2Triangles(10, 7, 11, 0, 12, 11, 7, 0),
++	gsSP2Triangles(12, 13, 11, 0, 12, 14, 13, 0),
++	gsSP2Triangles(15, 14, 12, 0, 16, 14, 15, 0),
++	gsSP2Triangles(16, 15, 17, 0, 18, 17, 15, 0),
++	gsSP2Triangles(17, 18, 19, 0, 8, 19, 18, 0),
++	gsSP2Triangles(18, 6, 8, 0, 20, 19, 8, 0),
++	gsSP2Triangles(19, 20, 21, 0, 20, 22, 21, 0),
++	gsSP2Triangles(23, 22, 20, 0, 20, 9, 23, 0),
++	gsSP2Triangles(20, 8, 9, 0, 24, 23, 9, 0),
++	gsSP2Triangles(25, 23, 24, 0, 25, 24, 26, 0),
++	gsSP2Triangles(26, 24, 27, 0, 27, 24, 10, 0),
++	gsSP2Triangles(24, 9, 10, 0, 10, 11, 27, 0),
++	gsSP2Triangles(27, 11, 28, 0, 11, 29, 28, 0),
++	gsSP2Triangles(11, 30, 29, 0, 30, 31, 29, 0),
++	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_vtx_0 + 32, 15, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSP2Triangles(0, 3, 4, 0, 0, 4, 5, 0),
++	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
++	gsSP2Triangles(5, 7, 8, 0, 8, 7, 9, 0),
++	gsSP2Triangles(7, 10, 9, 0, 9, 10, 11, 0),
++	gsSP2Triangles(10, 12, 11, 0, 9, 11, 13, 0),
++	gsSP2Triangles(13, 8, 9, 0, 13, 5, 8, 0),
++	gsSP2Triangles(13, 14, 5, 0, 1, 0, 5, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_006_switch_option_left_hand_wing_cap_mesh_vtx_1[30] = {
++	{{{4, -3, -32},0, {-16, -16},{0x48, 0x20, 0x9D, 0xFF}}},
++	{{{-19, 47, -4},0, {-16, -16},{0x2F, 0x74, 0xE8, 0xFF}}},
++	{{{-2, 41, 0},0, {-16, -16},{0xDD, 0x73, 0xD7, 0xFF}}},
++	{{{-13, 26, 41},0, {-16, -16},{0x2E, 0x50, 0x57, 0xFF}}},
++	{{{1, 24, 35},0, {-16, -16},{0xF8, 0x3F, 0x6E, 0xFF}}},
++	{{{23, -25, 35},0, {-16, -16},{0x10, 0xC1, 0x6D, 0xFF}}},
++	{{{13, -37, 41},0, {-16, -16},{0x57, 0xE5, 0x59, 0xFF}}},
++	{{{31, -39, 0},0, {-16, -16},{0x3C, 0x98, 0xD7, 0xFF}}},
++	{{{24, -55, -4},0, {-16, -16},{0x74, 0xD2, 0xE9, 0xFF}}},
++	{{{16, 1, -22},0, {-16, -16},{0x4, 0xFF, 0x81, 0xFF}}},
++	{{{35, 9, -36},0, {-16, -16},{0xE6, 0xF5, 0x84, 0xFF}}},
++	{{{11, 60, -3},0, {-16, -16},{0xB1, 0x59, 0xD2, 0xFF}}},
++	{{{29, 62, 34},0, {-16, -16},{0xCE, 0x59, 0x4B, 0xFF}}},
++	{{{29, 7, 48},0, {-16, -16},{0xC1, 0xF9, 0x6E, 0xFF}}},
++	{{{75, -32, 65},0, {-16, -16},{0x19, 0xB2, 0x61, 0xFF}}},
++	{{{55, -43, -3},0, {-16, -16},{0x7, 0x8C, 0xCD, 0xFF}}},
++	{{{103, -25, 1},0, {-16, -16},{0x65, 0xC0, 0xD6, 0xFF}}},
++	{{{85, 30, -32},0, {-16, -16},{0x45, 0x1C, 0x99, 0xFF}}},
++	{{{58, 81, 0},0, {-16, -16},{0x18, 0x79, 0xE3, 0xFF}}},
++	{{{54, 54, 44},0, {-16, -16},{0x15, 0x51, 0x5F, 0xFF}}},
++	{{{56, 11, 65},0, {-16, -16},{0xF0, 0x13, 0x7D, 0xFF}}},
++	{{{95, -8, 52},0, {-16, -16},{0x67, 0xF9, 0x4A, 0xFF}}},
++	{{{96, 39, 24},0, {-16, -16},{0x6C, 0x3D, 0x1C, 0xFF}}},
++	{{{85, 15, 52},0, {-16, -16},{0x44, 0x2D, 0x61, 0xFF}}},
++	{{{13, -37, 41},0, {-16, -16},{0x9B, 0xB8, 0x1E, 0xFF}}},
++	{{{-15, -12, 7},0, {-16, -16},{0x8B, 0xCF, 0xF8, 0xFF}}},
++	{{{24, -55, -4},0, {-16, -16},{0xA1, 0xAF, 0xEC, 0xFF}}},
++	{{{-13, 26, 41},0, {-16, -16},{0x87, 0xEA, 0x1F, 0xFF}}},
++	{{{-19, 47, -4},0, {-16, -16},{0x83, 0xF4, 0xED, 0xFF}}},
++	{{{4, -3, -32},0, {-16, -16},{0x99, 0xD5, 0xC3, 0xFF}}},
++};
++
++Gfx mario_006_switch_option_left_hand_wing_cap_mesh_tri_1[] = {
++	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_vtx_1 + 0, 30, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(3, 4, 2, 0, 5, 4, 3, 0),
++	gsSP2Triangles(3, 6, 5, 0, 7, 5, 6, 0),
++	gsSP2Triangles(6, 8, 7, 0, 7, 8, 0, 0),
++	gsSP2Triangles(0, 9, 7, 0, 2, 9, 0, 0),
++	gsSP2Triangles(10, 9, 2, 0, 11, 10, 2, 0),
++	gsSP2Triangles(11, 2, 4, 0, 12, 11, 4, 0),
++	gsSP2Triangles(4, 13, 12, 0, 13, 4, 5, 0),
++	gsSP2Triangles(14, 13, 5, 0, 15, 14, 5, 0),
++	gsSP2Triangles(5, 7, 15, 0, 10, 15, 7, 0),
++	gsSP2Triangles(7, 9, 10, 0, 10, 16, 15, 0),
++	gsSP2Triangles(10, 17, 16, 0, 18, 17, 10, 0),
++	gsSP2Triangles(11, 18, 10, 0, 18, 11, 12, 0),
++	gsSP2Triangles(12, 19, 18, 0, 19, 12, 20, 0),
++	gsSP2Triangles(12, 13, 20, 0, 14, 20, 13, 0),
++	gsSP2Triangles(14, 21, 20, 0, 16, 21, 14, 0),
++	gsSP2Triangles(15, 16, 14, 0, 16, 22, 21, 0),
++	gsSP2Triangles(17, 22, 16, 0, 18, 22, 17, 0),
++	gsSP2Triangles(19, 22, 18, 0, 22, 19, 23, 0),
++	gsSP2Triangles(23, 19, 20, 0, 21, 23, 20, 0),
++	gsSP2Triangles(21, 22, 23, 0, 24, 25, 26, 0),
++	gsSP2Triangles(27, 25, 24, 0, 28, 25, 27, 0),
++	gsSP2Triangles(29, 25, 28, 0, 26, 25, 29, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_0[8] = {
++	{{{178, -177, 128},0, {-16, 4008},{0xA8, 0xB3, 0xCF, 0xFF}}},
++	{{{319, -248, -14},0, {-16, -16},{0xA8, 0xB4, 0xCE, 0xFF}}},
++	{{{349, -325, 53},0, {974, -16},{0xA8, 0xB3, 0xCF, 0xFF}}},
++	{{{207, -253, 195},0, {974, 4008},{0xA8, 0xB3, 0xCF, 0xFF}}},
++	{{{414, 206, 82},0, {974, -16},{0xBD, 0x64, 0xD8, 0xFF}}},
++	{{{368, 146, 7},0, {-16, -16},{0xBE, 0x65, 0xD8, 0xFF}}},
++	{{{212, 96, 143},0, {-16, 4008},{0xBE, 0x65, 0xD8, 0xFF}}},
++	{{{258, 156, 218},0, {974, 4008},{0xBD, 0x64, 0xD8, 0xFF}}},
++};
++
++Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0[] = {
++	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_0 + 0, 8, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
++	gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
++	gsSPEndDisplayList(),
++};Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_1[8] = {
++	{{{368, 146, 7},0, {974, -16},{0xBE, 0x65, 0xD8, 0xFF}}},
++	{{{166, 37, 68},0, {-16, 4008},{0xBE, 0x65, 0xD9, 0xFF}}},
++	{{{212, 96, 143},0, {974, 4008},{0xBE, 0x65, 0xD8, 0xFF}}},
++	{{{322, 87, -67},0, {-16, -16},{0xBE, 0x65, 0xD8, 0xFF}}},
++	{{{178, -177, 128},0, {974, 4008},{0xA8, 0xB3, 0xCF, 0xFF}}},
++	{{{149, -100, 60},0, {-16, 4008},{0xA8, 0xB4, 0xCE, 0xFF}}},
++	{{{319, -248, -14},0, {974, -16},{0xA8, 0xB4, 0xCE, 0xFF}}},
++	{{{290, -171, -81},0, {-16, -16},{0xA8, 0xB4, 0xCE, 0xFF}}},
++};
++
++Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1[] = {
++	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_wings_mesh_vtx_1 + 0, 8, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(4, 5, 6, 0, 5, 7, 6, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_009_mesh_vtx_0[17] = {
++	{{{-5, 37, 31},0, {-16, -16},{0x9D, 0x3F, 0x32, 0xFF}}},
++	{{{-15, 0, 7},0, {-16, -16},{0x81, 0xF7, 0xFE, 0xFF}}},
++	{{{-1, -12, 47},0, {-16, -16},{0xA5, 0xE2, 0x53, 0xFF}}},
++	{{{-4, 37, -17},0, {-16, -16},{0xA0, 0x3E, 0xC9, 0xFF}}},
++	{{{14, 48, -23},0, {-16, -16},{0xE2, 0x62, 0xB5, 0xFF}}},
++	{{{13, 48, 38},0, {-16, -16},{0xE0, 0x62, 0x4A, 0xFF}}},
++	{{{18, -15, 58},0, {-16, -16},{0xEB, 0xD9, 0x77, 0xFF}}},
++	{{{1, -44, 8},0, {-16, -16},{0xAA, 0xA3, 0x0, 0xFF}}},
++	{{{0, -13, -32},0, {-16, -16},{0xA8, 0xDF, 0xAA, 0xFF}}},
++	{{{19, -15, -42},0, {-16, -16},{0xEE, 0xD8, 0x89, 0xFF}}},
++	{{{92, 45, -16},0, {-16, -16},{0x3B, 0x5C, 0xC0, 0xFF}}},
++	{{{91, 45, 32},0, {-16, -16},{0x39, 0x5D, 0x40, 0xFF}}},
++	{{{95, -5, 48},0, {-16, -16},{0x42, 0xE6, 0x69, 0xFF}}},
++	{{{98, -37, 8},0, {-16, -16},{0x4A, 0x99, 0x0, 0xFF}}},
++	{{{21, -54, 8},0, {-16, -16},{0xF3, 0x82, 0x0, 0xFF}}},
++	{{{96, -5, -31},0, {-16, -16},{0x44, 0xE5, 0x98, 0xFF}}},
++	{{{116, 10, 8},0, {-16, -16},{0x7F, 0xA, 0x1, 0xFF}}},
++};
++
++Gfx mario_000_offset_009_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_009_mesh_vtx_0 + 0, 17, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 0, 5, 0),
++	gsSP2Triangles(5, 0, 6, 0, 0, 2, 6, 0),
++	gsSP2Triangles(6, 2, 7, 0, 2, 1, 7, 0),
++	gsSP2Triangles(7, 1, 8, 0, 8, 1, 3, 0),
++	gsSP2Triangles(9, 8, 3, 0, 9, 3, 4, 0),
++	gsSP2Triangles(9, 4, 10, 0, 4, 5, 10, 0),
++	gsSP2Triangles(5, 11, 10, 0, 5, 6, 11, 0),
++	gsSP2Triangles(6, 12, 11, 0, 13, 12, 6, 0),
++	gsSP2Triangles(6, 14, 13, 0, 6, 7, 14, 0),
++	gsSP2Triangles(14, 7, 9, 0, 7, 8, 9, 0),
++	gsSP2Triangles(14, 9, 13, 0, 9, 15, 13, 0),
++	gsSP2Triangles(10, 15, 9, 0, 10, 16, 15, 0),
++	gsSP2Triangles(11, 16, 10, 0, 12, 16, 11, 0),
++	gsSP2Triangles(13, 16, 12, 0, 15, 16, 13, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_010_mesh_vtx_0[12] = {
++	{{{8, 44, 33},0, {-16, -16},{0xC5, 0x5C, 0x40, 0xFF}}},
++	{{{65, -11, 54},0, {-16, -16},{0x3A, 0xDB, 0x6B, 0xFF}}},
++	{{{68, 45, 37},0, {-16, -16},{0x40, 0x57, 0x44, 0xFF}}},
++	{{{6, -6, 49},0, {-16, -16},{0xBF, 0xE3, 0x69, 0xFF}}},
++	{{{-14, 8, 8},0, {-16, -16},{0x81, 0x6, 0xFE, 0xFF}}},
++	{{{9, 44, -16},0, {-16, -16},{0xC7, 0x5C, 0xBE, 0xFF}}},
++	{{{69, 45, -18},0, {-16, -16},{0x42, 0x57, 0xC0, 0xFF}}},
++	{{{81, 3, 9},0, {-16, -16},{0x7F, 0xF9, 0x1, 0xFF}}},
++	{{{64, -46, 9},0, {-16, -16},{0x36, 0x8D, 0x0, 0xFF}}},
++	{{{4, -37, 9},0, {-16, -16},{0xBA, 0x96, 0x0, 0xFF}}},
++	{{{6, -6, -31},0, {-16, -16},{0xBF, 0xE2, 0x97, 0xFF}}},
++	{{{66, -11, -36},0, {-16, -16},{0x3B, 0xDB, 0x96, 0xFF}}},
++};
++
++Gfx mario_000_offset_010_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_010_mesh_vtx_0 + 0, 12, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(0, 4, 3, 0, 5, 4, 0, 0),
++	gsSP2Triangles(6, 5, 0, 0, 0, 2, 6, 0),
++	gsSP2Triangles(2, 7, 6, 0, 1, 7, 2, 0),
++	gsSP2Triangles(8, 7, 1, 0, 9, 8, 1, 0),
++	gsSP2Triangles(1, 3, 9, 0, 3, 4, 9, 0),
++	gsSP2Triangles(9, 4, 10, 0, 10, 4, 5, 0),
++	gsSP2Triangles(11, 10, 5, 0, 5, 6, 11, 0),
++	gsSP2Triangles(6, 7, 11, 0, 11, 7, 8, 0),
++	gsSP2Triangles(9, 11, 8, 0, 9, 10, 11, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_011_mesh_vtx_0[23] = {
++	{{{-11, 54, 53},0, {-16, -16},{0x2D, 0x77, 0xFE, 0xFF}}},
++	{{{-39, 64, -8},0, {-16, -16},{0x2E, 0x76, 0xFE, 0xFF}}},
++	{{{-41, 65, 26},0, {-16, -16},{0x2D, 0x77, 0xFF, 0xFF}}},
++	{{{-12, 53, -32},0, {-16, -16},{0x2D, 0x77, 0xFE, 0xFF}}},
++	{{{78, 21, 61},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
++	{{{76, 20, -41},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
++	{{{110, 9, 35},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
++	{{{110, 8, -20},0, {-16, -16},{0x2C, 0x77, 0xFE, 0xFF}}},
++	{{{-34, 12, 44},0, {-16, -16},{0xB3, 0xCF, 0x58, 0xFF}}},
++	{{{-11, 54, 53},0, {-16, -16},{0xD1, 0x3, 0x76, 0xFF}}},
++	{{{-41, 65, 26},0, {-16, -16},{0x8E, 0x1A, 0x31, 0xFF}}},
++	{{{43, -18, 54},0, {-16, -16},{0x0, 0xB0, 0x62, 0xFF}}},
++	{{{27, -35, 11},0, {-16, -16},{0xE4, 0x84, 0xFC, 0xFF}}},
++	{{{-54, 15, 8},0, {-16, -16},{0x89, 0xD3, 0xFC, 0xFF}}},
++	{{{-39, 64, -8},0, {-16, -16},{0x92, 0x19, 0xC6, 0xFF}}},
++	{{{-35, 11, -21},0, {-16, -16},{0xB4, 0xCB, 0xA9, 0xFF}}},
++	{{{-12, 53, -32},0, {-16, -16},{0xCE, 0xFE, 0x8B, 0xFF}}},
++	{{{44, -12, -33},0, {-16, -16},{0xFB, 0xB5, 0x99, 0xFF}}},
++	{{{76, 20, -41},0, {-16, -16},{0x13, 0xD0, 0x8C, 0xFF}}},
++	{{{110, 8, -20},0, {-16, -16},{0x48, 0xAA, 0xC5, 0xFF}}},
++	{{{80, -31, 7},0, {-16, -16},{0x36, 0x8D, 0xF9, 0xFF}}},
++	{{{110, 9, 35},0, {-16, -16},{0x4E, 0xAC, 0x36, 0xFF}}},
++	{{{78, 21, 61},0, {-16, -16},{0x1C, 0xD2, 0x73, 0xFF}}},
++};
++
++Gfx mario_000_offset_011_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_011_mesh_vtx_0 + 0, 23, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(0, 4, 3, 0, 4, 5, 3, 0),
++	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
++	gsSP2Triangles(8, 9, 10, 0, 8, 11, 9, 0),
++	gsSP2Triangles(12, 11, 8, 0, 12, 8, 13, 0),
++	gsSP2Triangles(10, 13, 8, 0, 13, 10, 14, 0),
++	gsSP2Triangles(14, 15, 13, 0, 14, 16, 15, 0),
++	gsSP2Triangles(17, 15, 16, 0, 17, 16, 18, 0),
++	gsSP2Triangles(17, 18, 19, 0, 19, 20, 17, 0),
++	gsSP2Triangles(20, 19, 21, 0, 11, 20, 21, 0),
++	gsSP2Triangles(21, 22, 11, 0, 11, 22, 9, 0),
++	gsSP2Triangles(20, 11, 12, 0, 12, 17, 20, 0),
++	gsSP2Triangles(15, 17, 12, 0, 13, 15, 12, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_012_mesh_vtx_0[17] = {
++	{{{95, -3, -49},0, {-16, -16},{0x41, 0xE8, 0x96, 0xFF}}},
++	{{{116, 11, -9},0, {-16, -16},{0x7F, 0xB, 0xFF, 0xFF}}},
++	{{{98, -35, -10},0, {-16, -16},{0x4B, 0x99, 0xFD, 0xFF}}},
++	{{{90, 47, -32},0, {-16, -16},{0x37, 0x5F, 0xC1, 0xFF}}},
++	{{{18, -13, -58},0, {-16, -16},{0xEB, 0xDC, 0x88, 0xFF}}},
++	{{{22, -54, -9},0, {-16, -16},{0xF6, 0x81, 0xFE, 0xFF}}},
++	{{{19, -16, 41},0, {-16, -16},{0xEF, 0xD5, 0x76, 0xFF}}},
++	{{{96, -5, 30},0, {-16, -16},{0x44, 0xE2, 0x67, 0xFF}}},
++	{{{91, 46, 16},0, {-16, -16},{0x3B, 0x5C, 0x42, 0xFF}}},
++	{{{12, 49, -37},0, {-16, -16},{0xE0, 0x64, 0xB9, 0xFF}}},
++	{{{-6, 38, -31},0, {-16, -16},{0x9E, 0x3F, 0xCD, 0xFF}}},
++	{{{-1, -11, -47},0, {-16, -16},{0xA5, 0xE2, 0xAC, 0xFF}}},
++	{{{1, -44, -9},0, {-16, -16},{0xAB, 0xA2, 0xFE, 0xFF}}},
++	{{{0, -14, 31},0, {-16, -16},{0xA9, 0xDB, 0x54, 0xFF}}},
++	{{{-5, 36, 18},0, {-16, -16},{0x9E, 0x39, 0x39, 0xFF}}},
++	{{{13, 48, 24},0, {-16, -16},{0xE1, 0x60, 0x4D, 0xFF}}},
++	{{{-15, 0, -7},0, {-16, -16},{0x81, 0xF5, 0x2, 0xFF}}},
++};
++
++Gfx mario_000_offset_012_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_012_mesh_vtx_0 + 0, 17, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(3, 0, 4, 0, 4, 0, 2, 0),
++	gsSP2Triangles(2, 5, 4, 0, 2, 6, 5, 0),
++	gsSP2Triangles(2, 7, 6, 0, 2, 1, 7, 0),
++	gsSP2Triangles(7, 1, 8, 0, 8, 1, 3, 0),
++	gsSP2Triangles(8, 3, 9, 0, 3, 4, 9, 0),
++	gsSP2Triangles(4, 10, 9, 0, 4, 11, 10, 0),
++	gsSP2Triangles(12, 11, 4, 0, 5, 12, 4, 0),
++	gsSP2Triangles(6, 12, 5, 0, 6, 13, 12, 0),
++	gsSP2Triangles(14, 13, 6, 0, 15, 14, 6, 0),
++	gsSP2Triangles(8, 15, 6, 0, 6, 7, 8, 0),
++	gsSP2Triangles(8, 9, 15, 0, 9, 10, 15, 0),
++	gsSP2Triangles(10, 14, 15, 0, 10, 16, 14, 0),
++	gsSP2Triangles(11, 16, 10, 0, 12, 16, 11, 0),
++	gsSP2Triangles(13, 16, 12, 0, 14, 16, 13, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_offset_013_mesh_vtx_0[12] = {
++	{{{66, -11, 34},0, {-16, -16},{0x39, 0xD8, 0x6A, 0xFF}}},
++	{{{69, 45, 18},0, {-16, -16},{0x40, 0x55, 0x44, 0xFF}}},
++	{{{9, 44, 16},0, {-16, -16},{0xC6, 0x5A, 0x45, 0xFF}}},
++	{{{83, 4, -10},0, {-16, -16},{0x7F, 0xF8, 0x0, 0xFF}}},
++	{{{63, -45, -12},0, {-16, -16},{0x33, 0x8C, 0xFC, 0xFF}}},
++	{{{4, -36, -10},0, {-16, -16},{0xB9, 0x96, 0xFF, 0xFF}}},
++	{{{6, -6, 30},0, {-16, -16},{0xC0, 0xE0, 0x69, 0xFF}}},
++	{{{-13, 10, -9},0, {-16, -16},{0x81, 0x8, 0x2, 0xFF}}},
++	{{{9, 46, -33},0, {-16, -16},{0xC6, 0x5F, 0xC3, 0xFF}}},
++	{{{69, 46, -37},0, {-16, -16},{0x40, 0x58, 0xBF, 0xFF}}},
++	{{{65, -9, -56},0, {-16, -16},{0x37, 0xDD, 0x93, 0xFF}}},
++	{{{5, -3, -50},0, {-16, -16},{0xBC, 0xE7, 0x97, 0xFF}}},
++};
++
++Gfx mario_000_offset_013_mesh_tri_0[] = {
++	gsSPVertex(mario_000_offset_013_mesh_vtx_0 + 0, 12, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 0, 5, 0),
++	gsSP2Triangles(0, 6, 5, 0, 2, 6, 0, 0),
++	gsSP2Triangles(2, 7, 6, 0, 8, 7, 2, 0),
++	gsSP2Triangles(8, 2, 1, 0, 1, 9, 8, 0),
++	gsSP2Triangles(1, 3, 9, 0, 9, 3, 10, 0),
++	gsSP2Triangles(10, 3, 4, 0, 10, 4, 5, 0),
++	gsSP2Triangles(5, 11, 10, 0, 5, 7, 11, 0),
++	gsSP2Triangles(6, 7, 5, 0, 11, 7, 8, 0),
++	gsSP2Triangles(10, 11, 8, 0, 9, 10, 8, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx mario_000_displaylist_005_mesh_vtx_0[23] = {
++	{{{75, 23, 40},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
++	{{{109, 11, 20},0, {-16, -16},{0x2B, 0x78, 0x1, 0xFF}}},
++	{{{110, 11, -36},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
++	{{{78, 22, -61},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
++	{{{-14, 54, 29},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
++	{{{-11, 53, -56},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
++	{{{-40, 63, 5},0, {-16, -16},{0x2A, 0x78, 0x0, 0xFF}}},
++	{{{-42, 64, -29},0, {-16, -16},{0x2C, 0x77, 0x1, 0xFF}}},
++	{{{110, 11, -36},0, {-16, -16},{0x50, 0xAD, 0xCB, 0xFF}}},
++	{{{109, 11, 20},0, {-16, -16},{0x49, 0xAD, 0x3E, 0xFF}}},
++	{{{80, -29, -7},0, {-16, -16},{0x39, 0x8F, 0x9, 0xFF}}},
++	{{{44, -11, 32},0, {-16, -16},{0xFC, 0xB7, 0x68, 0xFF}}},
++	{{{75, 23, 40},0, {-16, -16},{0x12, 0xD4, 0x76, 0xFF}}},
++	{{{-14, 54, 29},0, {-16, -16},{0xCD, 0x0, 0x74, 0xFF}}},
++	{{{-36, 11, 19},0, {-16, -16},{0xB4, 0xCC, 0x57, 0xFF}}},
++	{{{-40, 63, 5},0, {-16, -16},{0x91, 0x19, 0x38, 0xFF}}},
++	{{{-54, 14, -10},0, {-16, -16},{0x8A, 0xD1, 0x4, 0xFF}}},
++	{{{-42, 64, -29},0, {-16, -16},{0x8D, 0x17, 0xCE, 0xFF}}},
++	{{{-34, 11, -46},0, {-16, -16},{0xB4, 0xCC, 0xA9, 0xFF}}},
++	{{{-11, 53, -56},0, {-16, -16},{0xD2, 0x0, 0x8A, 0xFF}}},
++	{{{43, -18, -55},0, {-16, -16},{0x2, 0xAF, 0x9F, 0xFF}}},
++	{{{78, 22, -61},0, {-16, -16},{0x1F, 0xD4, 0x8D, 0xFF}}},
++	{{{27, -35, -11},0, {-16, -16},{0xE6, 0x84, 0x6, 0xFF}}},
++};
++
++Gfx mario_000_displaylist_005_mesh_tri_0[] = {
++	gsSPVertex(mario_000_displaylist_005_mesh_vtx_0 + 0, 23, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSP2Triangles(4, 0, 3, 0, 4, 3, 5, 0),
++	gsSP2Triangles(6, 4, 5, 0, 7, 6, 5, 0),
++	gsSP2Triangles(8, 9, 10, 0, 11, 10, 9, 0),
++	gsSP2Triangles(9, 12, 11, 0, 12, 13, 11, 0),
++	gsSP2Triangles(13, 14, 11, 0, 14, 13, 15, 0),
++	gsSP2Triangles(16, 14, 15, 0, 15, 17, 16, 0),
++	gsSP2Triangles(18, 16, 17, 0, 17, 19, 18, 0),
++	gsSP2Triangles(19, 20, 18, 0, 19, 21, 20, 0),
++	gsSP2Triangles(20, 21, 8, 0, 8, 10, 20, 0),
++	gsSP2Triangles(22, 20, 10, 0, 10, 11, 22, 0),
++	gsSP2Triangles(22, 11, 14, 0, 22, 14, 16, 0),
++	gsSP2Triangles(16, 18, 22, 0, 18, 20, 22, 0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_mario_blue[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(0, 0, 254, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_metal[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT, 0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT),
++	gsSPSetGeometryMode(G_TEXTURE_GEN),
++	gsSPTexture(4031, 1983, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, mario_metal_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 252, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0),
++	gsDPSetTileSize(0, 0, 0, 252, 124),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_mario_metal[] = {
++	gsDPPipeSync(),
++	gsSPClearGeometryMode(G_TEXTURE_GEN),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_red[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(254, 0, 0, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_body[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_button_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_face_0___eye_open[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetTextureLUT(G_TT_RGBA16),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_mario_face_1_ci8_pal_rgba16),
++	gsDPTileSync(),
++	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
++	gsDPLoadSync(),
++	gsDPLoadTLUTCmd(7, 110),
++	gsDPPipeSync(),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 32, mario_mario_face_1_ci8),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_mario_face_0___eye_open[] = {
++	gsDPPipeSync(),
++	gsDPSetTextureLUT(G_TT_NONE),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_skin[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(253, 192, 121, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_mustache[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetTextureLUT(G_TT_RGBA16),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_mario_mustache_ci4_pal_rgba16),
++	gsDPTileSync(),
++	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
++	gsDPLoadSync(),
++	gsDPLoadTLUTCmd(7, 1),
++	gsDPPipeSync(),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 16, mario_mario_mustache_ci4),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 2, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 62, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_4b, 2, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_mario_mustache[] = {
++	gsDPPipeSync(),
++	gsDPSetTextureLUT(G_TT_NONE),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_hair[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(115, 5, 0, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_sideburns[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_sideburn_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_cap[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetTextureLUT(G_TT_RGBA16),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_mario_logo_rgba16_ci8_pal_rgba16),
++	gsDPTileSync(),
++	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
++	gsDPLoadSync(),
++	gsDPLoadTLUTCmd(7, 35),
++	gsDPPipeSync(),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 32, mario_mario_logo_rgba16_ci8),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_mario_cap[] = {
++	gsDPPipeSync(),
++	gsDPSetTextureLUT(G_TT_NONE),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_face_1___eye_half[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_face_2_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_face_2___eye_closed[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_face_3_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_face_7___eye_X[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_mario_face_4_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_wing_2[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
++	gsSPClearGeometryMode(G_CULL_BACK),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_wing_2_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 252),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 252),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_mario_wing_2[] = {
++	gsDPPipeSync(),
++	gsSPSetGeometryMode(G_CULL_BACK),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_wing_1[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
++	gsSPClearGeometryMode(G_CULL_BACK),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, mario_wing1_rgba16),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 124, 252),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 252),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_mario_wing_1[] = {
++	gsDPPipeSync(),
++	gsSPSetGeometryMode(G_CULL_BACK),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_gloves[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(254, 254, 254, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mat_mario_shoes[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, ENVIRONMENT, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetEnvColor(114, 27, 14, 255),
++	gsSPEndDisplayList(),
++};
++
++
++Gfx mario_000_offset_mesh[] = {
++	gsSPDisplayList(mat_mario_blue),
++	gsSPDisplayList(mario_000_offset_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_offset_001_mesh[] = {
++	gsSPDisplayList(mat_mario_blue),
++	gsSPDisplayList(mario_000_offset_001_mesh_tri_0),
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_offset_001_mesh_tri_1),
++	gsSPDisplayList(mat_mario_body),
++	gsSPDisplayList(mario_000_offset_001_mesh_tri_2),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_001_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_001_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_001_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_001_mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_displaylist_mesh[] = {
++	gsSPDisplayList(mat_mario_face_0___eye_open),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_face_0___eye_open),
++	gsSPDisplayList(mat_mario_skin),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
++	gsSPDisplayList(mat_mario_cap),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
++	gsSPDisplayList(mat_revert_mario_cap),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_displaylist_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_displaylist_mesh_mat_override_face_1___eye_half_1[] = {
++	gsSPDisplayList(mat_mario_face_1___eye_half),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
++	gsSPDisplayList(mat_mario_skin),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
++	gsSPDisplayList(mat_mario_cap),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
++	gsSPDisplayList(mat_revert_mario_cap),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_displaylist_mesh_mat_override_face_2___eye_closed_2[] = {
++	gsSPDisplayList(mat_mario_face_2___eye_closed),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
++	gsSPDisplayList(mat_mario_skin),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
++	gsSPDisplayList(mat_mario_cap),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
++	gsSPDisplayList(mat_revert_mario_cap),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_displaylist_mesh_mat_override_face_7___eye_X_3[] = {
++	gsSPDisplayList(mat_mario_face_7___eye_X),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_0),
++	gsSPDisplayList(mat_mario_skin),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_1),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_3),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_4),
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_5),
++	gsSPDisplayList(mat_mario_cap),
++	gsSPDisplayList(mario_000_displaylist_mesh_tri_6),
++	gsSPDisplayList(mat_revert_mario_cap),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_002_switch_option_head__no_cap__mesh[] = {
++	gsSPDisplayList(mat_mario_face_0___eye_open),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_face_0___eye_open),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_1___eye_half_1[] = {
++	gsSPDisplayList(mat_mario_face_1___eye_half),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_2___eye_closed_2[] = {
++	gsSPDisplayList(mat_mario_face_2___eye_closed),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_002_switch_option_head__no_cap__mesh_mat_override_face_7___eye_X_3[] = {
++	gsSPDisplayList(mat_mario_face_7___eye_X),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_0),
++	gsSPDisplayList(mat_mario_mustache),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_mustache),
++	gsSPDisplayList(mat_mario_sideburns),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_2),
++	gsSPDisplayList(mat_mario_hair),
++	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_tri_3),
++	gsSPEndDisplayList(),
++};
+ 
+-// 0x04000000 # solid color blue - butt, left thigh, right thigh - all poly types
+-static const Lights1 mario_blue_lights_group = gdSPDefLights1(
+-    0x00, 0x00, 0x7f,
+-    0x00, 0x00, 0xff, 0x28, 0x28, 0x28
+-);
+ 
+-// 0x04000018 # solid color red - left & right arm, torso (tshirt part), caps - all poly types
+-static const Lights1 mario_red_lights_group = gdSPDefLights1(
+-    0x7f, 0x00, 0x00,
+-    0xff, 0x00, 0x00, 0x28, 0x28, 0x28
+-);
+ 
+-// 0x04000030 # solid color white - metal butt & left thigh - normal left & right hand closed & open (with cap too) and all wings - all poly types
+-static const Lights1 mario_white_lights_group = gdSPDefLights1(
+-    0x7f, 0x7f, 0x7f,
+-    0xff, 0xff, 0xff, 0x28, 0x28, 0x28
+-);
++Gfx mario_000_displaylist_001_mesh[] = {
++	gsSPDisplayList(mat_mario_wing_2),
++	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_wing_2),
++	gsSPDisplayList(mat_mario_wing_1),
++	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_wing_1),
++	gsSPEndDisplayList(),
++};
+ 
+-// 0x04000048 # solid color brown 1 - foot - all poly types
+-static const Lights1 mario_brown1_lights_group = gdSPDefLights1(
+-    0x39, 0x0e, 0x07,
+-    0x72, 0x1c, 0x0e, 0x28, 0x28, 0x28
+-);
++Gfx mario_000_displaylist_001_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_wing_2),
++	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_wing_2),
++	gsSPDisplayList(mat_mario_wing_1),
++	gsSPDisplayList(mario_000_displaylist_001_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_wing_1),
++	gsSPEndDisplayList(),
++};
+ 
+-// 0x04000060 # solid color beige skin - face (cap on and off dls) - all poly types
+-static const Lights1 mario_beige_lights_group = gdSPDefLights1(
+-    0x7f, 0x60, 0x3c,
+-    0xfe, 0xc1, 0x79, 0x28, 0x28, 0x28
+-);
+ 
+-// 0x04000078  # solid color brown 2 - hair - all poly types
+-static const Lights1 mario_brown2_lights_group = gdSPDefLights1(
+-    0x39, 0x03, 0x00,
+-    0x73, 0x06, 0x00, 0x28, 0x28, 0x28
+-);
+ 
+-// 0x04000090
+-ALIGNED8 static const Texture mario_texture_metal[] = {
+-#include "actors/mario/mario_metal.rgba16.inc.c"
++Gfx mario_000_displaylist_002_mesh[] = {
++	gsSPDisplayList(mat_mario_wing_2),
++	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_wing_2),
++	gsSPDisplayList(mat_mario_wing_1),
++	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_wing_1),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04001090
+-ALIGNED8 static const Texture mario_texture_yellow_button[] = {
+-#include "actors/mario/mario_overalls_button.rgba16.inc.c"
++Gfx mario_000_displaylist_002_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_wing_2),
++	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_wing_2),
++	gsSPDisplayList(mat_mario_wing_1),
++	gsSPDisplayList(mario_000_displaylist_002_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_wing_1),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04001890
+-ALIGNED8 static const Texture mario_texture_m_logo[] = {
+-#include "actors/mario/mario_logo.rgba16.inc.c"
++
++
++Gfx mario_000_offset_003_mesh[] = {
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_offset_003_mesh_tri_0),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04002090
+-ALIGNED8 static const Texture mario_texture_hair_sideburn[] = {
+-#include "actors/mario/mario_sideburn.rgba16.inc.c"
++Gfx mario_000_offset_003_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_003_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04002890
+-ALIGNED8 static const Texture mario_texture_mustache[] = {
+-#include "actors/mario/mario_mustache.rgba16.inc.c"
++
++
++Gfx mario_000_offset_004_mesh[] = {
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_offset_004_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_004_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_004_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04003090
+-ALIGNED8 static const Texture mario_texture_eyes_front[] = {
+-#include "actors/mario/mario_eyes_center.rgba16.inc.c"
++
++
++Gfx mario_000_displaylist_003_mesh[] = {
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_000_displaylist_003_mesh_tri_0),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04003890
+-ALIGNED8 static const Texture mario_texture_eyes_half_closed[] = {
+-#include "actors/mario/mario_eyes_half_closed.rgba16.inc.c"
++Gfx mario_000_displaylist_003_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_003_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04004090
+-ALIGNED8 static const Texture mario_texture_eyes_closed[] = {
+-#include "actors/mario/mario_eyes_closed.rgba16.inc.c"
++
++
++Gfx mario_002_switch_option_right_hand_open_mesh[] = {
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_002_switch_option_right_hand_open_mesh_tri_0),
++	gsSPEndDisplayList(),
+ };
+ 
+-// Unreferenced
+-// 0x04004890
+-ALIGNED8 static const Texture mario_texture_eyes_closed_unused1[] = {
+-#include "actors/mario/mario_eyes_closed_unused_0.rgba16.inc.c"
++Gfx mario_002_switch_option_right_hand_open_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_002_switch_option_right_hand_open_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// Unreferenced
+-// 0x04005090
+-ALIGNED8 static const Texture mario_texture_eyes_closed_unused2[] = {
+-#include "actors/mario/mario_eyes_closed_unused_1.rgba16.inc.c"
++
++
++Gfx mario_000_offset_006_mesh[] = {
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_offset_006_mesh_tri_0),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04005890
+-ALIGNED8 static const Texture mario_texture_eyes_right[] = {
+-#include "actors/mario/mario_eyes_left_unused.rgba16.inc.c"
++Gfx mario_000_offset_006_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_006_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04006090
+-ALIGNED8 static const Texture mario_texture_eyes_left[] = {
+-#include "actors/mario/mario_eyes_right_unused.rgba16.inc.c"
++
++
++Gfx mario_000_offset_007_mesh[] = {
++	gsSPDisplayList(mat_mario_red),
++	gsSPDisplayList(mario_000_offset_007_mesh_tri_0),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04006890
+-ALIGNED8 static const Texture mario_texture_eyes_up[] = {
+-#include "actors/mario/mario_eyes_up_unused.rgba16.inc.c"
++Gfx mario_000_offset_007_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_007_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04007090
+-ALIGNED8 static const Texture mario_texture_eyes_down[] = {
+-#include "actors/mario/mario_eyes_down_unused.rgba16.inc.c"
+-};
+ 
+-// 0x04007890
+-ALIGNED8 static const Texture mario_texture_eyes_dead[] = {
+-#include "actors/mario/mario_eyes_dead.rgba16.inc.c"
++
++Gfx mario_000_displaylist_004_mesh[] = {
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_000_displaylist_004_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_displaylist_004_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_004_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04008090
+-ALIGNED8 static const Texture mario_texture_wings_half_1[] = {
+-#include "actors/mario/mario_wing.rgba16.inc.c"
++
++
++Gfx mario_002_switch_option_left_hand_open_mesh[] = {
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_002_switch_option_left_hand_open_mesh_tri_0),
++	gsSPEndDisplayList(),
+ };
+ 
+-// 0x04009090
+-ALIGNED8 static const Texture mario_texture_wings_half_2[] = {
+-#include "actors/mario/mario_wing_tip.rgba16.inc.c"
+-};
+-
+-// 0x0400A090
+-ALIGNED8 static const Texture mario_texture_metal_wings_half_1[] = {
+-#include "actors/mario/mario_metal_wing_unused.rgba16.inc.c"
+-};
++Gfx mario_002_switch_option_left_hand_open_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_002_switch_option_left_hand_open_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_004_switch_option_left_hand_peace_mesh[] = {
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_004_switch_option_left_hand_peace_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_004_switch_option_left_hand_peace_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_004_switch_option_left_hand_peace_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_005_switch_option_left_hand_cap_mesh[] = {
++	gsSPDisplayList(mat_mario_cap),
++	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_cap),
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_1),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_005_switch_option_left_hand_cap_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_006_switch_option_left_hand_wing_cap_mesh[] = {
++	gsSPDisplayList(mat_mario_cap),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_cap),
++	gsSPDisplayList(mat_mario_gloves),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_1),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_006_switch_option_left_hand_wing_cap_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh[] = {
++	gsSPDisplayList(mat_mario_wing_2),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_wing_2),
++	gsSPDisplayList(mat_mario_wing_1),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_wing_1),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_wing_2),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_wing_2),
++	gsSPDisplayList(mat_mario_wing_1),
++	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_tri_1),
++	gsSPDisplayList(mat_revert_mario_wing_1),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_offset_009_mesh[] = {
++	gsSPDisplayList(mat_mario_blue),
++	gsSPDisplayList(mario_000_offset_009_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_009_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_009_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_offset_010_mesh[] = {
++	gsSPDisplayList(mat_mario_blue),
++	gsSPDisplayList(mario_000_offset_010_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_010_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_010_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_offset_011_mesh[] = {
++	gsSPDisplayList(mat_mario_shoes),
++	gsSPDisplayList(mario_000_offset_011_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_011_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_011_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_offset_012_mesh[] = {
++	gsSPDisplayList(mat_mario_blue),
++	gsSPDisplayList(mario_000_offset_012_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_012_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_012_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_offset_013_mesh[] = {
++	gsSPDisplayList(mat_mario_blue),
++	gsSPDisplayList(mario_000_offset_013_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_offset_013_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_offset_013_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
++
++Gfx mario_000_displaylist_005_mesh[] = {
++	gsSPDisplayList(mat_mario_shoes),
++	gsSPDisplayList(mario_000_displaylist_005_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mario_000_displaylist_005_mesh_mat_override_metal_0[] = {
++	gsSPDisplayList(mat_mario_metal),
++	gsSPDisplayList(mario_000_displaylist_005_mesh_tri_0),
++	gsSPDisplayList(mat_revert_mario_metal),
++	gsSPEndDisplayList(),
++};
++
++
+ 
+-// 0x0400B090
+-ALIGNED8 static const Texture mario_texture_metal_wings_half_2[] = {
+-#include "actors/mario/mario_metal_wing_tip_unused.rgba16.inc.c"
+-};
+-
+-// 0x0400C090
+-static const Vtx mario_butt_dl_vertex_group1[] = {
+-    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+-    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+-    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+-};
+-
+-// 0x0400C180
+-static const Vtx mario_butt_dl_vertex_group2[] = {
+-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+-    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+-    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+-    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
+-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+-};
+-
+-// 0x0400C260
+-static const Vtx mario_butt_dl_vertex_group3[] = {
+-    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+-    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
+-    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+-    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+-};
+-
+-// 0x0400C360
+-static const Vtx mario_butt_dl_vertex_group4[] = {
+-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+-    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+-    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+-    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+-    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+-};
+-
+-// 0x0400C450
+-static const Vtx mario_butt_dl_vertex_group5[] = {
+-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+-    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+-    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+-    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+-};
+-
+-// 0x0400C540
+-static const Vtx mario_butt_dl_vertex_group6[] = {
+-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+-    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+-    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+-};
+-
+-// 0x0400C630
+-static const Vtx mario_butt_dl_vertex_group7[] = {
+-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+-    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
+-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+-    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+-    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+-    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+-    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+-};
+-
+-// 0x0400C720
+-static const Vtx mario_butt_dl_vertex_group8[] = {
+-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+-    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+-    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+-    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+-    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+-    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+-    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+-    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+-    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+-    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+-};
+-
+-// 0x0400C820
+-static const Vtx mario_butt_dl_vertex_group9[] = {
+-    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+-    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+-    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+-    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+-    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+-    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+-    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+-    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+-    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+-    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+-    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+-};
+-
+-// 0x0400C920
+-static const Vtx mario_butt_dl_vertex_group10[] = {
+-    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+-    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
+-    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+-    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+-    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+-    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+-    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+-    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+-    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+-    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+-    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+-    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+-    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+-    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+-};
+-
+-// 0x0400CA00 - 0x0400CC98
+-const Gfx mario_butt_dl[] = {
+-    gsSPVertex(mario_butt_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9,  5, 10, 0x0),
+-    gsSP2Triangles( 4, 11, 10, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group2, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles(12,  3, 13, 0x0,  6,  8, 12, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  1,  7, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles(11,  9, 12, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group4, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  6,  5, 0x0,  7,  8,  2, 0x0),
+-    gsSP2Triangles( 9,  7, 10, 0x0, 11, 12,  7, 0x0),
+-    gsSP1Triangle(13, 11, 14, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group5, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  2,  7,  8, 0x0),
+-    gsSP2Triangles( 9, 10, 11, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group6, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
+-    gsSP2Triangles(11, 10,  9, 0x0, 12, 13, 14, 0x0),
+-    gsSP1Triangle( 0, 13, 12, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group7, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  2,  3, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  9,  8, 11, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0, 13, 14,  1, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group8, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  5, 0x0),
+-    gsSP2Triangles( 4, 11, 12, 0x0,  6, 11, 13, 0x0),
+-    gsSP2Triangles(13,  3, 14, 0x0, 15,  2,  1, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group9, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 1,  0,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0,  0, 13, 14, 0x0),
+-    gsSP1Triangle(15,  0, 14, 0x0),
+-    gsSPVertex(mario_butt_dl_vertex_group10, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 3,  4,  0, 0x0,  0,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  5,  7,  0, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
+-    gsSP2Triangles( 9,  1, 11, 0x0, 11, 12, 10, 0x0),
+-    gsSP1Triangle(10, 13,  8, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400CC98 - 0x0400CCC8
+-const Gfx mario_butt[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_butt_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400CCC8 - 0x0400CD40
+-const Gfx mario_metal_butt[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_butt_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400CD40
+-static const Vtx mario_left_arm_shared_dl_vertex_group1[] = {
+-    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+-    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+-    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+-    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+-    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+-    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+-    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+-    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
+-    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+-    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
+-    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+-    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
+-    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+-    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+-};
+-
+-// 0x0400CE30
+-static const Vtx mario_left_arm_shared_dl_vertex_group2[] = {
+-    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
+-    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
+-    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+-    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+-    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
+-    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+-    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+-    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
+-    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+-    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+-    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+-    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+-    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+-    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+-};
+-
+-// 0x0400CF20
+-static const Vtx mario_left_arm_shared_dl_vertex_group3[] = {
+-    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+-    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+-    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
+-    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+-    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
+-    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
+-    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+-    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+-    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+-    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+-    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+-    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+-    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+-};
+-
+-// 0x0400D000
+-static const Vtx mario_left_arm_shared_dl_vertex_group4[] = {
+-    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
+-    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
+-    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
+-    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+-    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
+-    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+-    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+-    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+-    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+-};
+-
+-// 0x0400D090 - 0x0400D1D8
+-const Gfx mario_left_arm_shared_dl[] = {
+-    gsSPVertex(mario_left_arm_shared_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+-    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
+-    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
+-    gsSPVertex(mario_left_arm_shared_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
+-    gsSP2Triangles( 1,  7,  6, 0x0,  2,  1,  6, 0x0),
+-    gsSP2Triangles( 6,  5,  8, 0x0,  8,  5,  3, 0x0),
+-    gsSP2Triangles( 3,  0,  9, 0x0,  9,  0,  2, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_left_arm_shared_dl_vertex_group3, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  2,  4,  7, 0x0),
+-    gsSP2Triangles( 0,  2,  8, 0x0,  9,  0, 10, 0x0),
+-    gsSP2Triangles( 6,  9, 11, 0x0,  4,  6, 12, 0x0),
+-    gsSP1Triangle(13,  5,  3, 0x0),
+-    gsSPVertex(mario_left_arm_shared_dl_vertex_group4, 9, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 3,  4,  1, 0x0,  5,  6,  7, 0x0),
+-    gsSP1Triangle( 6,  8,  7, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400D1D8 - 0x0400D1F8
+-const Gfx mario_left_arm[] = {
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_left_arm_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400D1F8
+-static const Vtx mario_left_forearm_shared_dl_vertex[] = {
+-    {{{    -2,     19,     16}, 0, {     0,      0}, {0xdb, 0x61, 0x48, 0x00}}},
+-    {{{    47,     14,     13}, 0, {     0,      0}, {0x44, 0x44, 0x51, 0x00}}},
+-    {{{    47,     16,    -19}, 0, {     0,      0}, {0x45, 0x61, 0xd6, 0x00}}},
+-    {{{    -3,    -17,     26}, 0, {     0,      0}, {0xd7, 0xdb, 0x71, 0x00}}},
+-    {{{    46,    -17,     22}, 0, {     0,      0}, {0x41, 0xc7, 0x5c, 0x00}}},
+-    {{{    -3,    -38,     -4}, 0, {     0,      0}, {0xd4, 0x89, 0xfe, 0x00}}},
+-    {{{    45,    -34,     -4}, 0, {     0,      0}, {0x3f, 0x95, 0xe8, 0x00}}},
+-    {{{    -3,    -14,    -34}, 0, {     0,      0}, {0xd7, 0xde, 0x8e, 0x00}}},
+-    {{{    46,    -14,    -30}, 0, {     0,      0}, {0x42, 0xf4, 0x95, 0x00}}},
+-    {{{    -2,     21,    -21}, 0, {     0,      0}, {0xdb, 0x63, 0xbb, 0x00}}},
+-    {{{   -14,     13,    -15}, 0, {     0,      0}, {0x93, 0x2c, 0xd3, 0x00}}},
+-    {{{   -14,     11,     10}, 0, {     0,      0}, {0x93, 0x3b, 0x19, 0x00}}},
+-    {{{   -15,    -11,    -24}, 0, {     0,      0}, {0x9a, 0xde, 0xbe, 0x00}}},
+-    {{{   -15,    -27,     -4}, 0, {     0,      0}, {0x8b, 0xd2, 0x0a, 0x00}}},
+-    {{{   -15,    -13,     17}, 0, {     0,      0}, {0x9b, 0xfb, 0x4c, 0x00}}},
+-    {{{    58,     -7,     -3}, 0, {     0,      0}, {0x7e, 0xfc, 0x00, 0x00}}},
+-};
+-
+-// 0x0400D2F8 - 0x0400D3E8
+-const Gfx mario_left_forearm_shared_dl[] = {
+-    gsSPVertex(mario_left_forearm_shared_dl_vertex, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+-    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
+-    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
+-    gsSP2Triangles( 8, 15,  6, 0x0,  6, 15,  4, 0x0),
+-    gsSP2Triangles( 4, 15,  1, 0x0,  1, 15,  2, 0x0),
+-    gsSP2Triangles( 2, 15,  8, 0x0,  0, 14,  3, 0x0),
+-    gsSP2Triangles( 3, 13,  5, 0x0,  5, 12,  7, 0x0),
+-    gsSP2Triangles( 7, 10,  9, 0x0,  9, 11,  0, 0x0),
+-    gsSP2Triangles( 7,  9,  8, 0x0,  5,  7,  6, 0x0),
+-    gsSP2Triangles( 3,  5,  4, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 9,  0,  2, 0x0, 12, 13, 10, 0x0),
+-    gsSP2Triangles(13, 11, 10, 0x0, 13, 14, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400D3E8
+-static const Vtx mario_left_hand_closed_shared_dl_vertex_group1[] = {
+-    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+-    {{{    17,     -1,     27}, 0, {     0,      0}, {0x00, 0xfd, 0x7f, 0x00}}},
+-    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+-    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+-    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
+-    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+-    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+-    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
+-    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
+-    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
+-    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
+-    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
+-    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
+-    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+-    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
+-    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
+-};
+-
+-// 0x0400D4E8
+-static const Vtx mario_left_hand_closed_shared_dl_vertex_group2[] = {
+-    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
+-    {{{    57,     55,    -37}, 0, {     0,      0}, {0x22, 0x54, 0xa9, 0x00}}},
+-    {{{    99,     40,    -16}, 0, {     0,      0}, {0x6c, 0x3c, 0xe5, 0x00}}},
+-    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
+-    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+-    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
+-    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
+-    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
+-    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
+-    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+-    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+-    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
+-    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+-    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+-};
+-
+-// 0x0400D5C8
+-static const Vtx mario_left_hand_closed_shared_dl_vertex_group3[] = {
+-    {{{    27,    -58,      6}, 0, {     0,      0}, {0xa3, 0xad, 0x12, 0x00}}},
+-    {{{   -14,    -14,     -4}, 0, {     0,      0}, {0x8c, 0xcd, 0x02, 0x00}}},
+-    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
+-    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
+-    {{{   -18,     45,      8}, 0, {     0,      0}, {0x84, 0xf3, 0x13, 0x00}}},
+-    {{{     5,     -6,     36}, 0, {     0,      0}, {0x99, 0xd2, 0x38, 0x00}}},
+-    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+-    {{{    27,    -58,      6}, 0, {     0,      0}, {0x73, 0xd5, 0x1d, 0x00}}},
+-    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+-    {{{   -18,     45,      8}, 0, {     0,      0}, {0x2d, 0x71, 0x21, 0x00}}},
+-    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+-    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
+-    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+-    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+-    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+-};
+-
+-// 0x0400D6B8
+-static const Vtx mario_left_hand_closed_shared_dl_vertex_group4[] = {
+-    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+-    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+-    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
+-    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+-    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+-    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+-    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+-    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
+-    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
+-    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+-};
+-
+-// 0x0400D758 - 0x0400D8F0
+-const Gfx mario_left_hand_closed_shared_dl[] = {
+-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  1,  0, 0x0,  2,  1,  7, 0x0),
+-    gsSP2Triangles( 7,  1,  6, 0x0,  6,  4,  8, 0x0),
+-    gsSP2Triangles( 8,  4,  3, 0x0,  9,  3,  2, 0x0),
+-    gsSP2Triangles( 0, 10, 11, 0x0, 12, 10,  0, 0x0),
+-    gsSP1Triangle(13, 14, 15, 0x0),
+-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group2, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  1,  3, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 9, 10,  3, 0x0,  1,  0,  9, 0x0),
+-    gsSP2Triangles( 9,  3,  1, 0x0,  5,  2,  1, 0x0),
+-    gsSP2Triangles( 0,  2,  7, 0x0,  7,  2,  8, 0x0),
+-    gsSP2Triangles( 8,  2, 11, 0x0, 11,  2,  5, 0x0),
+-    gsSP2Triangles( 9,  7,  6, 0x0,  6,  8, 12, 0x0),
+-    gsSP2Triangles(12,  8, 13, 0x0, 13,  5,  4, 0x0),
+-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+-    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  2, 0x0),
+-    gsSP2Triangles( 8,  2,  3, 0x0,  3,  9, 10, 0x0),
+-    gsSP2Triangles(10,  9, 11, 0x0, 11,  7,  6, 0x0),
+-    gsSP2Triangles(10, 12, 13, 0x0,  6, 14, 12, 0x0),
+-    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group4, 10, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSP2Triangles( 1,  5,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+-    gsSP1Triangle( 7,  1,  8, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400D8F0 - 0x0400D910
+-const Gfx mario_left_hand_closed[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_left_hand_closed_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400D910
+-static const Vtx mario_right_arm_shared_dl_vertex_group1[] = {
+-    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
+-    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+-    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
+-    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+-    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+-    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+-    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+-    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+-    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
+-    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+-    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+-    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+-    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+-    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+-};
+-
+-// 0x0400DA10
+-static const Vtx mario_right_arm_shared_dl_vertex_group2[] = {
+-    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+-    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+-    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+-    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+-    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+-    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+-    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
+-    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+-    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+-    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+-    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+-    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+-    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+-    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+-};
+-
+-// 0x0400DB10
+-static const Vtx mario_right_arm_shared_dl_vertex_group3[] = {
+-    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+-    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
+-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+-    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
+-    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+-    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
+-    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+-    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+-    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+-    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+-    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+-    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+-    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+-    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+-    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+-};
+-
+-// 0x0400DC10
+-static const Vtx mario_right_arm_shared_dl_vertex_group4[] = {
+-    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+-    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+-    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+-    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+-    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+-    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+-    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+-    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+-    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
+-};
+-
+-// 0x0400DCA0 - 0x0400DDE8
+-const Gfx mario_right_arm_shared_dl[] = {
+-    gsSPVertex(mario_right_arm_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+-    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
+-    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
+-    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
+-    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
+-    gsSPVertex(mario_right_arm_shared_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  4,  5, 0x0,  3,  6,  4, 0x0),
+-    gsSP2Triangles( 1,  6,  3, 0x0,  0,  7,  1, 0x0),
+-    gsSP2Triangles( 8,  7,  0, 0x0,  5,  4,  8, 0x0),
+-    gsSP2Triangles( 9, 10, 11, 0x0, 12,  9, 13, 0x0),
+-    gsSP1Triangle(14, 12, 15, 0x0),
+-    gsSPVertex(mario_right_arm_shared_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  5,  2, 0x0),
+-    gsSP2Triangles( 8,  7,  9, 0x0, 10,  8, 11, 0x0),
+-    gsSP2Triangles( 6, 10, 12, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_right_arm_shared_dl_vertex_group4, 9, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+-    gsSP1Triangle( 5,  8,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400DDE8 - 0x0400DE08
+-const Gfx mario_right_arm[] = {
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_arm_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400DE08
+-static const Vtx mario_right_forearm_shared_dl_vertex[] = {
+-    {{{    47,    -15,    -19}, 0, {     0,      0}, {0x41, 0xcf, 0x9f, 0x00}}},
+-    {{{    -3,    -39,      6}, 0, {     0,      0}, {0xd4, 0x8a, 0xf8, 0x00}}},
+-    {{{    -2,    -15,    -23}, 0, {     0,      0}, {0xd7, 0xe5, 0x8c, 0x00}}},
+-    {{{    46,    -36,      6}, 0, {     0,      0}, {0x3f, 0x94, 0x0f, 0x00}}},
+-    {{{    -2,    -18,     38}, 0, {     0,      0}, {0xd6, 0xd5, 0x6f, 0x00}}},
+-    {{{    47,    -17,     34}, 0, {     0,      0}, {0x42, 0xec, 0x6a, 0x00}}},
+-    {{{    -1,     18,     28}, 0, {     0,      0}, {0xdb, 0x5d, 0x4d, 0x00}}},
+-    {{{    48,     13,     25}, 0, {     0,      0}, {0x45, 0x5d, 0x32, 0x00}}},
+-    {{{    -1,     20,     -9}, 0, {     0,      0}, {0xdb, 0x67, 0xc1, 0x00}}},
+-    {{{    48,     15,     -7}, 0, {     0,      0}, {0x45, 0x4c, 0xb6, 0x00}}},
+-    {{{   -14,    -28,      6}, 0, {     0,      0}, {0x90, 0xc9, 0xef, 0x00}}},
+-    {{{   -14,    -12,    -13}, 0, {     0,      0}, {0x91, 0x01, 0xc3, 0x00}}},
+-    {{{   -13,     12,     -4}, 0, {     0,      0}, {0x9e, 0x4b, 0xe7, 0x00}}},
+-    {{{   -13,     10,     21}, 0, {     0,      0}, {0x8d, 0x22, 0x28, 0x00}}},
+-    {{{   -14,    -14,     28}, 0, {     0,      0}, {0x9a, 0xd8, 0x3f, 0x00}}},
+-    {{{    59,     -8,      7}, 0, {     0,      0}, {0x7f, 0xfd, 0x00, 0x00}}},
+-};
+-
+-// 0x0400DF08 - 0x0400DFF8
+-const Gfx mario_right_forearm_shared_dl[] = {
+-    gsSPVertex(mario_right_forearm_shared_dl_vertex, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+-    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
+-    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
+-    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
+-    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
+-    gsSP2Triangles( 3, 15,  5, 0x0,  5, 15,  7, 0x0),
+-    gsSP2Triangles( 7, 15,  9, 0x0, 14, 10,  1, 0x0),
+-    gsSP2Triangles(13, 14,  4, 0x0, 12, 13,  6, 0x0),
+-    gsSP2Triangles(11, 12,  8, 0x0, 10, 11,  2, 0x0),
+-    gsSP2Triangles( 9,  0,  2, 0x0,  7,  9,  8, 0x0),
+-    gsSP2Triangles( 5,  7,  6, 0x0,  3,  5,  4, 0x0),
+-    gsSP2Triangles( 0,  3,  1, 0x0, 11, 13, 12, 0x0),
+-    gsSP2Triangles(11, 10, 13, 0x0, 10, 14, 13, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400DFF8
+-static const Vtx mario_right_hand_closed_dl_vertex_group1[] = {
+-    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+-    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+-    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
+-    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+-    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
+-    {{{    24,    -57,     -4}, 0, {     0,      0}, {0x73, 0xd4, 0xe6, 0x00}}},
+-    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
+-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x30, 0x72, 0xe5, 0x00}}},
+-    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
+-    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
+-    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
+-    {{{    24,    -57,     -4}, 0, {     0,      0}, {0xa2, 0xaf, 0xe7, 0x00}}},
+-    {{{   -16,    -12,      6}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0x00}}},
+-    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x9b, 0xd5, 0xc2, 0x00}}},
+-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x85, 0xf5, 0xe7, 0x00}}},
+-    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
+-};
+-
+-// 0x0400E0F8
+-static const Vtx mario_right_hand_closed_dl_vertex_group2[] = {
+-    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+-    {{{   104,    -26,      1}, 0, {     0,      0}, {0x68, 0xc5, 0xd7, 0x00}}},
+-    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+-    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
+-    {{{    96,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x51, 0x00}}},
+-    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
+-    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
+-    {{{    97,     39,     24}, 0, {     0,      0}, {0x6b, 0x3a, 0x21, 0x00}}},
+-    {{{    86,     30,    -33}, 0, {     0,      0}, {0x4f, 0x22, 0xa4, 0x00}}},
+-    {{{    86,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x61, 0x00}}},
+-    {{{    54,     54,     44}, 0, {     0,      0}, {0x20, 0x51, 0x5c, 0x00}}},
+-    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
+-    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
+-    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+-};
+-
+-// 0x0400E1D8
+-static const Vtx mario_right_hand_closed_dl_vertex_group3[] = {
+-    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
+-    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
+-    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
+-    {{{     1,     24,     35}, 0, {     0,      0}, {0xd2, 0x3c, 0x65, 0x00}}},
+-    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
+-    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
+-    {{{    15,      0,    -23}, 0, {     0,      0}, {0x04, 0x01, 0x82, 0x00}}},
+-    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
+-    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+-    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
+-    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+-    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
+-    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
+-    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+-    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
+-};
+-
+-// 0x0400E2C8 - 0x0400E458
+-const Gfx mario_right_hand_closed_dl[] = {
+-    gsSPVertex(mario_right_hand_closed_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 2,  5,  6, 0x0,  6,  7,  4, 0x0),
+-    gsSP2Triangles( 4,  7,  8, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles( 9,  5,  2, 0x0, 11, 12, 13, 0x0),
+-    gsSP2Triangles(13, 12, 14, 0x0, 14, 12,  8, 0x0),
+-    gsSP2Triangles( 8, 12,  9, 0x0,  9, 12, 11, 0x0),
+-    gsSP1Triangle( 3, 15,  0, 0x0),
+-    gsSPVertex(mario_right_hand_closed_dl_vertex_group2, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 8,  7,  1, 0x0,  1,  7,  4, 0x0),
+-    gsSP2Triangles( 4,  7,  9, 0x0, 10,  7,  6, 0x0),
+-    gsSP2Triangles( 9, 10,  5, 0x0, 10, 11,  5, 0x0),
+-    gsSP2Triangles(11, 12,  5, 0x0,  1,  4,  3, 0x0),
+-    gsSP2Triangles(11, 10,  6, 0x0,  6, 13, 11, 0x0),
+-    gsSP2Triangles( 7, 10,  9, 0x0,  4,  9,  5, 0x0),
+-    gsSP2Triangles( 0,  8,  1, 0x0,  6,  8,  0, 0x0),
+-    gsSPVertex(mario_right_hand_closed_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 7,  6,  0, 0x0,  8,  6,  5, 0x0),
+-    gsSP2Triangles( 9,  3,  1, 0x0,  0,  6,  8, 0x0),
+-    gsSP2Triangles(10, 11,  1, 0x0, 11,  9,  1, 0x0),
+-    gsSP2Triangles(11, 12,  9, 0x0,  1,  0, 10, 0x0),
+-    gsSP2Triangles(13,  5,  3, 0x0,  3,  9, 14, 0x0),
+-    gsSP1Triangle(14, 13,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E458 - 0x0400E478
+-const Gfx mario_right_hand_closed[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_hand_closed_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E478 - 0x0400E4A8
+-const Gfx mario_metal_right_hand_closed[] = {
+-    gsSPDisplayList(mario_right_hand_closed_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E4A8
+-static const Vtx mario_left_thigh_dl_vertex_group1[] = {
+-    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
+-    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
+-    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
+-    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
+-    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
+-    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
+-    {{{   116,     10,      8}, 0, {     0,      0}, {0x7e, 0x09, 0x01, 0x00}}},
+-    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
+-    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
+-    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
+-    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
+-    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
+-    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
+-    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
+-    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
+-};
+-
+-// 0x0400E5A8
+-static const Vtx mario_left_thigh_dl_vertex_group2[] = {
+-    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
+-    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
+-    {{{    21,    -54,      8}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0x00}}},
+-    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
+-    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
+-    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
+-    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
+-    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
+-    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
+-    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
+-    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
+-    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
+-    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
+-    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
+-    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
+-};
+-
+-// 0x0400E6A8 - 0x0400E7B0
+-const Gfx mario_left_thigh_dl[] = {
+-    gsSPVertex(mario_left_thigh_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  7,  9, 0x0),
+-    gsSP2Triangles( 9,  7, 10, 0x0, 10,  7, 11, 0x0),
+-    gsSP2Triangles(11,  7,  6, 0x0, 12,  3, 13, 0x0),
+-    gsSP2Triangles(13,  4, 14, 0x0, 14,  4, 15, 0x0),
+-    gsSPVertex(mario_left_thigh_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  1, 0x0,  0,  2,  6, 0x0),
+-    gsSP2Triangles( 7,  0,  8, 0x0,  9,  7, 10, 0x0),
+-    gsSP2Triangles( 3,  9, 10, 0x0,  2,  3,  6, 0x0),
+-    gsSP2Triangles( 3, 11,  6, 0x0, 10, 11,  3, 0x0),
+-    gsSP2Triangles( 7,  8, 10, 0x0,  0, 12,  8, 0x0),
+-    gsSP2Triangles( 6, 12,  0, 0x0,  1, 13,  3, 0x0),
+-    gsSP2Triangles( 0,  4,  1, 0x0, 14,  4,  0, 0x0),
+-    gsSP2Triangles( 9, 15, 14, 0x0,  3, 13, 15, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E7B0 - 0x0400E7E0
+-const Gfx mario_left_thigh[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_left_thigh_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E7E0 - 0x0400E858
+-const Gfx mario_metal_left_thigh[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_left_thigh_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E858
+-static const Vtx mario_left_leg_shared_dl_vertex[] = {
+-    {{{     4,    -37,      9}, 0, {     0,      0}, {0xc1, 0x93, 0x00, 0x00}}},
+-    {{{    64,    -46,      9}, 0, {     0,      0}, {0x4b, 0x9a, 0x01, 0x00}}},
+-    {{{    65,    -11,     54}, 0, {     0,      0}, {0x2d, 0xdb, 0x70, 0x00}}},
+-    {{{     8,     44,     33}, 0, {     0,      0}, {0xcc, 0x5e, 0x43, 0x00}}},
+-    {{{    68,     45,     37}, 0, {     0,      0}, {0x52, 0x4b, 0x3c, 0x00}}},
+-    {{{    69,     45,    -18}, 0, {     0,      0}, {0x42, 0x61, 0xd1, 0x00}}},
+-    {{{     9,     44,    -16}, 0, {     0,      0}, {0xc4, 0x4d, 0xaf, 0x00}}},
+-    {{{    66,    -11,    -36}, 0, {     0,      0}, {0x2e, 0xda, 0x91, 0x00}}},
+-    {{{     6,     -6,    -31}, 0, {     0,      0}, {0xb4, 0xe5, 0x9f, 0x00}}},
+-    {{{     6,     -6,     49}, 0, {     0,      0}, {0xb3, 0xe7, 0x60, 0x00}}},
+-    {{{   -14,      8,      8}, 0, {     0,      0}, {0x82, 0x06, 0xff, 0x00}}},
+-    {{{    81,      3,      9}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-};
+-
+-// 0x0400E918 - 0x0400E9C8
+-const Gfx mario_left_leg_shared_dl[] = {
+-    gsSPVertex(mario_left_leg_shared_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
+-    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
+-    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
+-    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
+-    gsSP2Triangles( 3, 10,  9, 0x0,  5, 11,  7, 0x0),
+-    gsSP2Triangles( 7, 11,  1, 0x0,  1, 11,  2, 0x0),
+-    gsSP2Triangles( 2, 11,  4, 0x0,  4, 11,  5, 0x0),
+-    gsSP2Triangles( 9, 10,  0, 0x0,  0, 10,  8, 0x0),
+-    gsSP2Triangles( 8, 10,  6, 0x0,  6, 10,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400E9C8
+-static const Vtx mario_left_foot_shared_dl_vertex_group1[] = {
+-    {{{   110,      9,     35}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   110,      8,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    76,     20,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    78,     21,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -12,     53,    -32}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -11,     54,     53}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -41,     65,     26}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
+-    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
+-    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
+-    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
+-    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
+-    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
+-    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
+-    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
+-};
+-
+-// 0x0400EAC8
+-static const Vtx mario_left_foot_shared_dl_vertex_group2[] = {
+-    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
+-    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
+-    {{{   110,      8,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+-    {{{    80,    -31,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
+-    {{{   110,      9,     35}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
+-    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
+-    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
+-    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
+-    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
+-    {{{   -41,     65,     26}, 0, {     0,      0}, {0x90, 0x17, 0x35, 0x00}}},
+-    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x93, 0x16, 0xc4, 0x00}}},
+-    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
+-    {{{   -54,     15,      8}, 0, {     0,      0}, {0x88, 0xd8, 0xfd, 0x00}}},
+-    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
+-    {{{    27,    -35,     11}, 0, {     0,      0}, {0xdb, 0x87, 0xfc, 0x00}}},
+-};
+-
+-// 0x0400EBB8 - 0x0400ECA0
+-const Gfx mario_left_foot_shared_dl[] = {
+-    gsSPVertex(mario_left_foot_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  4,  6, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
+-    gsSP2Triangles(14,  8, 10, 0x0, 11, 13, 15, 0x0),
+-    gsSPVertex(mario_left_foot_shared_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+-    gsSP2Triangles( 2,  3,  0, 0x0,  4,  5,  6, 0x0),
+-    gsSP2Triangles( 6,  3,  4, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
+-    gsSP2Triangles(12,  9, 10, 0x0,  9, 12,  7, 0x0),
+-    gsSP2Triangles(14,  0,  3, 0x0, 11,  0, 14, 0x0),
+-    gsSP2Triangles( 3,  6, 14, 0x0, 14,  6,  7, 0x0),
+-    gsSP2Triangles(14,  7, 12, 0x0, 12, 11, 14, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400ECA0 - 0x0400ECC0
+-const Gfx mario_left_foot[] = {
+-    gsSPLight(&mario_brown1_lights_group.l, 1),
+-    gsSPLight(&mario_brown1_lights_group.a, 2),
+-    gsSPDisplayList(mario_left_foot_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400ECC0
+-static const Vtx mario_right_thigh_shared_dl_vertex_group1[] = {
+-    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
+-    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
+-    {{{    22,    -54,     -9}, 0, {     0,      0}, {0xf2, 0x82, 0xfd, 0x00}}},
+-    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
+-    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
+-    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
+-    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
+-    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
+-    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
+-    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
+-    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
+-    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
+-    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
+-    {{{   116,     11,     -9}, 0, {     0,      0}, {0x7e, 0x0b, 0xfe, 0x00}}},
+-    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
+-};
+-
+-// 0x0400EDC0
+-static const Vtx mario_right_thigh_shared_dl_vertex_group2[] = {
+-    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
+-    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{     0,    -14,     31}, 0, {     0,      0}, {0xa0, 0xdf, 0x4b, 0x00}}},
+-    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
+-    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
+-    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
+-    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
+-    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
+-    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
+-    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
+-    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
+-    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
+-    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
+-    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
+-    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
+-};
+-
+-// 0x0400EEB0 - 0x0400EFB8
+-const Gfx mario_right_thigh_shared_dl[] = {
+-    gsSPVertex(mario_right_thigh_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 3,  5,  4, 0x0,  6,  7,  5, 0x0),
+-    gsSP2Triangles( 0,  2,  7, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles( 1,  8,  2, 0x0,  2,  8,  7, 0x0),
+-    gsSP2Triangles( 7, 11,  5, 0x0,  5, 11,  4, 0x0),
+-    gsSP2Triangles( 4, 12,  1, 0x0, 13, 14,  0, 0x0),
+-    gsSP2Triangles( 0, 14, 15, 0x0, 15, 14,  3, 0x0),
+-    gsSP2Triangles( 3, 14,  6, 0x0,  6, 14, 13, 0x0),
+-    gsSP2Triangles(10,  9, 11, 0x0, 11,  9, 12, 0x0),
+-    gsSPVertex(mario_right_thigh_shared_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 0,  2,  4, 0x0,  5,  0,  6, 0x0),
+-    gsSP2Triangles( 7,  8,  5, 0x0,  3,  8,  7, 0x0),
+-    gsSP2Triangles( 4,  2,  3, 0x0,  7,  9, 10, 0x0),
+-    gsSP2Triangles(11,  9,  7, 0x0, 12, 11, 13, 0x0),
+-    gsSP2Triangles( 4, 14, 12, 0x0, 10, 14,  4, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400EFB8 - 0x0400EFD8
+-const Gfx mario_right_thigh[] = {
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_thigh_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400EFD8
+-static const Vtx mario_right_leg_shared_dl_vertex_group1[] = {
+-    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+-    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
+-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
+-    {{{    69,     45,     18}, 0, {     0,      0}, {0xfc, 0x22, 0x7a, 0x00}}},
+-    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
+-    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+-    {{{    69,     46,    -37}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+-    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
+-    {{{    69,     46,    -37}, 0, {     0,      0}, {0xf7, 0x27, 0x88, 0x00}}},
+-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
+-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+-    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+-    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
+-    {{{   -13,     10,     -9}, 0, {     0,      0}, {0x82, 0x08, 0x02, 0x00}}},
+-    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
+-};
+-
+-// 0x0400F0D8
+-static const Vtx mario_right_leg_shared_dl_vertex_group2[] = {
+-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0x75, 0xee, 0xd5, 0x00}}},
+-    {{{    83,      4,    -10}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    63,    -45,    -12}, 0, {     0,      0}, {0x75, 0xd1, 0xfd, 0x00}}},
+-    {{{    66,    -11,     34}, 0, {     0,      0}, {0x77, 0xec, 0x26, 0x00}}},
+-    {{{    69,     45,     18}, 0, {     0,      0}, {0x7a, 0x18, 0x17, 0x00}}},
+-    {{{    69,     46,    -37}, 0, {     0,      0}, {0x79, 0x19, 0xe6, 0x00}}},
+-    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
+-    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
+-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+-    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
+-    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
+-    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
+-    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+-    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
+-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
+-    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+-};
+-
+-// 0x0400F1D8 - 0x0400F290
+-const Gfx mario_right_leg_shared_dl[] = {
+-    gsSPVertex(mario_right_leg_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  8, 0x0),
+-    gsSP2Triangles(11, 12,  2, 0x0, 13, 14,  2, 0x0),
+-    gsSP2Triangles( 2, 14, 15, 0x0, 15, 14,  8, 0x0),
+-    gsSP2Triangles( 8, 14,  5, 0x0,  5, 14, 13, 0x0),
+-    gsSPVertex(mario_right_leg_shared_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+-    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 9,  7, 10, 0x0, 10, 11, 12, 0x0),
+-    gsSP2Triangles(11, 13, 14, 0x0, 15, 13,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400F290
+-static const Vtx mario_right_foot_dl_vertex_group1[] = {
+-    {{{    27,    -35,    -11}, 0, {     0,      0}, {0xdc, 0x87, 0x06, 0x00}}},
+-    {{{   -36,     11,     19}, 0, {     0,      0}, {0xb5, 0xd3, 0x5b, 0x00}}},
+-    {{{   -54,     14,    -10}, 0, {     0,      0}, {0x89, 0xd6, 0x03, 0x00}}},
+-    {{{   -34,     11,    -46}, 0, {     0,      0}, {0xb4, 0xd0, 0xa8, 0x00}}},
+-    {{{    43,    -18,    -55}, 0, {     0,      0}, {0x0a, 0xb2, 0x9d, 0x00}}},
+-    {{{    80,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
+-    {{{    44,    -11,     32}, 0, {     0,      0}, {0x01, 0xb8, 0x68, 0x00}}},
+-    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x90, 0x14, 0xc9, 0x00}}},
+-    {{{   -40,     63,      5}, 0, {     0,      0}, {0x92, 0x15, 0x3b, 0x00}}},
+-    {{{   -14,     54,     29}, 0, {     0,      0}, {0xd5, 0xfe, 0x77, 0x00}}},
+-    {{{   -11,     53,    -56}, 0, {     0,      0}, {0xda, 0xfe, 0x87, 0x00}}},
+-    {{{   110,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
+-    {{{    78,     22,    -61}, 0, {     0,      0}, {0x17, 0xd9, 0x8a, 0x00}}},
+-    {{{   109,     11,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
+-    {{{    75,     23,     40}, 0, {     0,      0}, {0x0b, 0xda, 0x78, 0x00}}},
+-};
+-
+-// 0x0400F380
+-static const Vtx mario_right_foot_dl_vertex_group2[] = {
+-    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -40,     63,      5}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -11,     53,    -56}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -14,     54,     29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{    78,     22,    -61}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{    75,     23,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   110,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   109,     11,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-};
+-
+-// 0x0400F400 - 0x0400F4E8
+-const Gfx mario_right_foot_dl[] = {
+-    gsSPVertex(mario_right_foot_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 3,  4,  0, 0x0,  0,  4,  5, 0x0),
+-    gsSP2Triangles( 0,  6,  1, 0x0,  5,  6,  0, 0x0),
+-    gsSP2Triangles( 3,  2,  7, 0x0,  8,  7,  2, 0x0),
+-    gsSP2Triangles( 1,  9,  8, 0x0,  2,  1,  8, 0x0),
+-    gsSP2Triangles( 7, 10,  3, 0x0, 11,  5,  4, 0x0),
+-    gsSP2Triangles( 4, 12, 11, 0x0,  6,  5, 13, 0x0),
+-    gsSP2Triangles(11, 13,  5, 0x0, 13, 14,  6, 0x0),
+-    gsSP2Triangles(14,  9,  6, 0x0, 10,  4,  3, 0x0),
+-    gsSP2Triangles( 9,  1,  6, 0x0, 10, 12,  4, 0x0),
+-    gsSPVertex(mario_right_foot_dl_vertex_group2, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP2Triangles( 3,  4,  2, 0x0,  3,  5,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  4, 0x0,  5,  7,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400F4E8 - 0x0400F528
+-const Gfx mario_right_foot[] = {
+-    gsSPLight(&mario_brown1_lights_group.l, 1),
+-    gsSPLight(&mario_brown1_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_foot_dl),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsDPSetEnvColor(255, 255, 255, 255),
+-    gsDPSetAlphaCompare(G_AC_NONE),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400F528 - 0x0400F568
+-const Gfx mario_metal_right_foot[] = {
+-    gsSPDisplayList(mario_right_foot_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPSetEnvColor(255, 255, 255, 255),
+-    gsDPSetAlphaCompare(G_AC_NONE),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400F568
+-static const Vtx mario_yellow_button_dl_vertex[] = {
+-    {{{     9,     89,     41}, 0, {   180,    962}, {0x14, 0x78, 0x23, 0xff}}},
+-    {{{     3,     77,     62}, 0, {   682,    966}, {0x04, 0x6a, 0x44, 0xff}}},
+-    {{{    47,     75,     35}, 0, {    34,    106}, {0x39, 0x6a, 0x26, 0xff}}},
+-    {{{    28,     85,     30}, 0, {   -60,    572}, {0x2c, 0x76, 0x08, 0xff}}},
+-    {{{    17,     66,     76}, 0, {   966,    590}, {0x19, 0x58, 0x57, 0xff}}},
+-    {{{    32,     62,     74}, 0, {   902,    252}, {0x29, 0x53, 0x56, 0xff}}},
+-    {{{    48,     64,     59}, 0, {   548,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
+-    {{{     9,     89,    -40}, 0, {   776,    920}, {0x10, 0x7b, 0xe7, 0xff}}},
+-    {{{    28,     85,    -29}, 0, {   990,    512}, {0x2d, 0x75, 0xf2, 0xff}}},
+-    {{{    47,     75,    -34}, 0, {   850,     72}, {0x3e, 0x6a, 0xe2, 0xff}}},
+-    {{{     3,     77,    -61}, 0, {   264,    972}, {0x03, 0x6a, 0xbb, 0xff}}},
+-    {{{    48,     64,    -58}, 0, {   312,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
+-    {{{    32,     62,    -73}, 0, {   -24,    310}, {0x29, 0x52, 0xa9, 0xff}}},
+-    {{{    17,     66,    -75}, 0, {   -58,    642}, {0x17, 0x58, 0xa8, 0xff}}},
+-};
+-
+-// 0x0400F648
+-static const Vtx mario_tshirt_shared_dl_vertex_group1[] = {
+-    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+-    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+-    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
+-    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+-    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
+-    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
+-    {{{    46,    -34,    -83}, 0, {     0,      0}, {0x24, 0xc8, 0x95, 0xff}}},
+-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+-    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
+-    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+-    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+-    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
+-};
+-
+-// 0x0400F748
+-static const Vtx mario_tshirt_shared_dl_vertex_group2[] = {
+-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+-    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
+-    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
+-    {{{    47,      3,     89}, 0, {     0,      0}, {0x30, 0x08, 0x75, 0xff}}},
+-    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
+-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+-    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
+-    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
+-    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+-    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+-    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+-};
+-
+-// 0x0400F828
+-static const Vtx mario_tshirt_shared_dl_vertex_group3[] = {
+-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+-    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
+-    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+-    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+-};
+-
+-// 0x0400F878
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group1[] = {
+-    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+-    {{{    28,     85,     30}, 0, {     0,      0}, {0x2c, 0x76, 0x08, 0xff}}},
+-    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+-    {{{    28,     85,    -29}, 0, {     0,      0}, {0x2d, 0x75, 0xf2, 0xff}}},
+-    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
+-    {{{     9,     89,    -40}, 0, {     0,      0}, {0x10, 0x7b, 0xe7, 0xff}}},
+-    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+-    {{{   -15,     87,    -35}, 0, {     0,      0}, {0xea, 0x76, 0xda, 0xff}}},
+-    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
+-    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+-    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
+-    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
+-    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+-    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+-};
+-
+-// 0x0400F968
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group2[] = {
+-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+-    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+-    {{{    48,     64,    -58}, 0, {     0,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
+-    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
+-    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
+-    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+-    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+-    {{{    48,     64,     59}, 0, {     0,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
+-    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
+-    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
+-    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+-    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+-    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+-    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
+-    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+-};
+-
+-// 0x0400FA68
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group3[] = {
+-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+-    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+-    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
+-    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+-    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+-    {{{   -27,    -25,    -86}, 0, {     0,      0}, {0xcb, 0xd5, 0x96, 0xff}}},
+-    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
+-    {{{   -29,    -58,    -59}, 0, {     0,      0}, {0xc9, 0x9a, 0xcf, 0xff}}},
+-    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+-    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+-    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+-    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+-};
+-
+-// 0x0400FB68
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group4[] = {
+-    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+-    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+-    {{{   -29,    -58,     59}, 0, {     0,      0}, {0xc8, 0x99, 0x30, 0xff}}},
+-    {{{   -27,    -25,     87}, 0, {     0,      0}, {0xcb, 0xd3, 0x69, 0xff}}},
+-    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
+-    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
+-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+-    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
+-    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+-    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+-    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
+-    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+-    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
+-    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+-    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+-};
+-
+-// 0x0400FC68
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group5[] = {
+-    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
+-    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+-    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
+-    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+-    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
+-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+-    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+-    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
+-    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+-    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
+-    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+-    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
+-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+-    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
+-};
+-
+-// 0x0400FD48
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group6[] = {
+-    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+-    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
+-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+-    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+-    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+-    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+-    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
+-    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+-    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+-    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+-    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
+-    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
+-    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+-    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+-};
+-
+-// 0x0400FE38
+-static const Vtx mario_pants_overalls_shared_dl_vertex_group7[] = {
+-    {{{    17,     66,    -75}, 0, {     0,      0}, {0x17, 0x58, 0xa8, 0xff}}},
+-    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
+-    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
+-    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+-    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
+-    {{{    17,     66,     76}, 0, {     0,      0}, {0x19, 0x58, 0x57, 0xff}}},
+-    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+-    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+-    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
+-    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
+-    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+-    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+-    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
+-    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+-    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+-};
+-
+-// 0x0400FF28 - 0x0400FF88
+-const Gfx mario_yellow_button_dl[] = {
+-    gsSPVertex(mario_yellow_button_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 1,  4,  2, 0x0,  5,  6,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  2, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles(10,  7,  9, 0x0,  9, 11, 12, 0x0),
+-    gsSP2Triangles(12, 13,  9, 0x0, 13, 10,  9, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0400FF88 - 0x04010260
+-const Gfx mario_pants_overalls_shared_dl[] = {
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 4,  1,  5, 0x0,  1,  3,  5, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+-    gsSP2Triangles( 7,  5,  8, 0x0,  9,  6,  7, 0x0),
+-    gsSP2Triangles( 7,  8, 10, 0x0, 10, 11,  7, 0x0),
+-    gsSP2Triangles( 9,  7, 11, 0x0, 12,  6, 13, 0x0),
+-    gsSP2Triangles( 9, 13,  6, 0x0,  6, 12, 14, 0x0),
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
+-    gsSP2Triangles( 7, 10, 11, 0x0, 11,  8,  7, 0x0),
+-    gsSP2Triangles(12,  8, 11, 0x0, 13,  0,  2, 0x0),
+-    gsSP2Triangles( 2,  1, 14, 0x0,  2, 15, 13, 0x0),
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 3,  6,  7, 0x0,  3,  8,  6, 0x0),
+-    gsSP2Triangles( 5,  9,  3, 0x0,  8,  3,  9, 0x0),
+-    gsSP2Triangles( 6,  8, 10, 0x0, 11, 10,  8, 0x0),
+-    gsSP2Triangles( 9, 11,  8, 0x0,  6, 12,  7, 0x0),
+-    gsSP2Triangles(12,  6, 10, 0x0,  7, 12, 13, 0x0),
+-    gsSP2Triangles(14,  5, 15, 0x0, 14,  9,  5, 0x0),
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 1,  4,  3, 0x0,  5,  4,  6, 0x0),
+-    gsSP2Triangles( 4,  5,  3, 0x0,  2,  3,  7, 0x0),
+-    gsSP2Triangles( 7,  3,  5, 0x0,  8,  2,  7, 0x0),
+-    gsSP2Triangles( 2,  8,  0, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles(12, 11, 10, 0x0, 11,  7, 13, 0x0),
+-    gsSP1Triangle(14, 15, 11, 0x0),
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group5, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  4, 0x0),
+-    gsSP2Triangles( 2,  5,  0, 0x0,  6,  0,  7, 0x0),
+-    gsSP2Triangles( 4,  3,  8, 0x0,  9,  7,  4, 0x0),
+-    gsSP2Triangles( 7, 10, 11, 0x0, 11,  6,  7, 0x0),
+-    gsSP2Triangles( 9, 12, 13, 0x0, 10,  9, 13, 0x0),
+-    gsSP1Triangle( 7,  9, 10, 0x0),
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group6, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9,  8,  7, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 12, 11, 13, 0x0),
+-    gsSP2Triangles(14, 12, 13, 0x0, 11, 10,  9, 0x0),
+-    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group7, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles(10,  7,  9, 0x0,  9,  8,  5, 0x0),
+-    gsSP2Triangles( 5,  8,  6, 0x0, 11,  1,  0, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0,  6, 14,  4, 0x0),
+-    gsSP1Triangle(11,  0, 12, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04010260 - 0x04010348
+-const Gfx mario_tshirt_shared_dl[] = {
+-    gsSPVertex(mario_tshirt_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  3,  2, 0x0,  4,  5,  3, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  6,  9,  7, 0x0),
+-    gsSP2Triangles( 6,  8, 10, 0x0, 11,  8, 12, 0x0),
+-    gsSP2Triangles(12,  8,  7, 0x0,  8, 11, 10, 0x0),
+-    gsSP1Triangle(13, 14, 15, 0x0),
+-    gsSPVertex(mario_tshirt_shared_dl_vertex_group2, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+-    gsSP2Triangles( 6,  2,  3, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 7,  9, 10, 0x0, 11, 10,  9, 0x0),
+-    gsSP2Triangles(12,  3,  4, 0x0, 13,  3, 12, 0x0),
+-    gsSP1Triangle( 6,  3, 13, 0x0),
+-    gsSPVertex(mario_tshirt_shared_dl_vertex_group3, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP1Triangle( 1,  4,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04010348 - 0x04010370
+-const Gfx mario_torso_dl[] = {
+-    gsSPDisplayList(mario_pants_overalls_shared_dl),
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_tshirt_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04010370 - 0x040103F0
+-const Gfx mario_torso[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_yellow_button_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_torso_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040103F0 - 0x04010410
+-const Gfx mario_metal_torso_shared_dl[] = {
+-    gsSPDisplayList(mario_yellow_button_dl),
+-    gsSPDisplayList(mario_pants_overalls_shared_dl),
+-    gsSPDisplayList(mario_tshirt_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04010410
+-static const Vtx mario_m_logo_dl_vertex[] = {
+-    {{{   195,     93,     32}, 0, {   744,    732}, {0x51, 0x54, 0x30, 0xff}}},
+-    {{{   153,     33,     95}, 0, {  1250,   1066}, {0x04, 0x46, 0x69, 0xff}}},
+-    {{{   252,     62,     70}, 0, {  1032,    152}, {0x39, 0x4a, 0x55, 0xff}}},
+-    {{{   272,     85,      0}, 0, {   472,    -16}, {0x5f, 0x54, 0x00, 0xff}}},
+-    {{{   252,     62,    -69}, 0, {   -78,    158}, {0x39, 0x4a, 0xab, 0xff}}},
+-    {{{   195,     93,    -31}, 0, {   232,    736}, {0x51, 0x54, 0xcf, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {  -258,   1076}, {0x03, 0x46, 0x97, 0xff}}},
+-};
+-
+-// 0x04010480
+-static const Vtx mario_eyes_cap_on_dl_vertex[] = {
+-    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
+-    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
+-    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{   175,     91,    -38}, 0, {   106,    130}, {0xc6, 0x6d, 0xe7, 0xff}}},
+-    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
+-    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
+-    {{{   175,     91,     39}, 0, {   842,    112}, {0xc6, 0x6d, 0x19, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {  -404,    342}, {0x03, 0x46, 0x97, 0xff}}},
+-    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
+-    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
+-    {{{   153,     33,     95}, 0, {  1362,    296}, {0x04, 0x46, 0x69, 0xff}}},
+-};
+-
+-// 0x04010540
+-static const Vtx mario_hair_sideburn_cap_on_dl_vertex[] = {
+-    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xed, 0x24, 0x88, 0xff}}},
+-    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {    90,    -58}, {0x03, 0x46, 0x97, 0xff}}},
+-    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
+-    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
+-    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {   922,    122}, {0xed, 0x24, 0x78, 0xff}}},
+-    {{{   153,     33,     95}, 0, {    22,    -68}, {0x04, 0x46, 0x69, 0xff}}},
+-};
+-
+-// 0x04010600
+-static const Vtx mario_mustache_cap_on_dl_vertex_group1[] = {
+-    {{{    77,    108,     34}, 0, {   342,    368}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{    92,     88,     84}, 0, {   898,    -18}, {0x23, 0x59, 0x53, 0xff}}},
+-    {{{    97,    103,     25}, 0, {   224,    146}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{    48,     94,     76}, 0, {   888,    564}, {0xd7, 0x60, 0x47, 0xff}}},
+-    {{{    52,    111,     31}, 0, {   354,    690}, {0xa8, 0x33, 0x4b, 0xff}}},
+-    {{{    27,    100,     30}, 0, {   442,    982}, {0xb1, 0x60, 0x16, 0xff}}},
+-    {{{    41,    109,      0}, 0, {    70,    924}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{    44,     44,     97}, 0, {  1296,    438}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{     3,     54,     52}, 0, {   892,   1090}, {0x95, 0x1d, 0x3c, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {   340,    684}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
+-    {{{    27,    100,    -29}, 0, {   394,    998}, {0xb1, 0x60, 0xea, 0xff}}},
+-    {{{     3,     54,    -51}, 0, {   806,   1162}, {0x95, 0x1d, 0xc4, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
+-    {{{    41,    109,      0}, 0, {    50,    900}, {0x95, 0x44, 0x00, 0xff}}},
+-};
+-
+-// 0x04010700
+-static const Vtx mario_mustache_cap_on_dl_vertex_group2[] = {
+-    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
+-    {{{    92,     88,    -83}, 0, {   922,     -4}, {0x23, 0x59, 0xad, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {   274,    100}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
+-};
+-
+-// 0x04010750
+-static const Vtx mario_face_cap_dl_vertex_group1[] = {
+-    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+-    {{{   122,   -139,    -48}, 0, {     0,      0}, {0x28, 0x94, 0xcd, 0xff}}},
+-    {{{   131,    -56,   -123}, 0, {     0,      0}, {0xde, 0xd4, 0x8f, 0xff}}},
+-    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+-    {{{    77,   -138,    -50}, 0, {     0,      0}, {0xbc, 0x9e, 0xd8, 0xff}}},
+-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+-    {{{   122,   -139,     49}, 0, {     0,      0}, {0x2d, 0x8f, 0x22, 0xff}}},
+-    {{{    77,   -138,     51}, 0, {     0,      0}, {0xc1, 0xa4, 0x3c, 0xff}}},
+-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
+-    {{{   131,    -56,    124}, 0, {     0,      0}, {0xdf, 0xd3, 0x71, 0xff}}},
+-    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+-    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+-};
+-
+-// 0x04010850
+-static const Vtx mario_face_cap_dl_vertex_group2[] = {
+-    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
+-    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
+-    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
+-    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
+-    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
+-    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+-    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
+-    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
+-    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+-    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
+-    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
+-    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+-};
+-
+-// 0x04010940
+-static const Vtx mario_face_cap_dl_vertex_group3[] = {
+-    {{{   195,     93,     32}, 0, {     0,      0}, {0x51, 0x54, 0x30, 0xff}}},
+-    {{{   173,    132,     66}, 0, {     0,      0}, {0xda, 0x5a, 0x50, 0xff}}},
+-    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+-    {{{   175,     91,     39}, 0, {     0,      0}, {0xc6, 0x6d, 0x19, 0xff}}},
+-    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+-    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
+-    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+-    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
+-    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
+-    {{{   272,     85,      0}, 0, {     0,      0}, {0x5f, 0x54, 0x00, 0xff}}},
+-    {{{   182,    155,      0}, 0, {     0,      0}, {0xed, 0x7d, 0x00, 0xff}}},
+-    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
+-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
+-    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
+-    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
+-};
+-
+-// 0x04010A30
+-static const Vtx mario_face_part_cap_on_dl_vertex_group1[] = {
+-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
+-    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+-    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+-    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+-    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+-};
+-
+-// 0x04010B20
+-static const Vtx mario_face_part_cap_on_dl_vertex_group2[] = {
+-    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+-    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+-    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+-    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-};
+-
+-// 0x04010C20
+-static const Vtx mario_face_part_cap_on_dl_vertex_group3[] = {
+-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+-    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+-};
+-
+-// 0x04010D10
+-static const Vtx mario_face_part_cap_on_dl_vertex_group4[] = {
+-    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+-    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+-    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+-    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
+-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+-    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+-};
+-
+-// 0x04010E10
+-static const Vtx mario_face_part_cap_on_dl_vertex_group5[] = {
+-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+-    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+-    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+-    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+-    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+-};
+-
+-// 0x04010F00
+-static const Vtx mario_face_part_cap_on_dl_vertex_group6[] = {
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
+-    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+-    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
+-    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+-};
+-
+-// 0x04011000
+-static const Vtx mario_face_part_cap_on_dl_vertex_group7[] = {
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+-};
+-
+-// 0x040110D0
+-static const Vtx mario_face_back_hair_cap_on_dl_vertex_group1[] = {
+-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+-    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+-    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+-    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+-    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+-    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+-    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-};
+-
+-// 0x040111D0
+-static const Vtx mario_face_back_hair_cap_on_dl_vertex_group2[] = {
+-    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+-    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+-    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+-    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+-};
+-
+-// 0x040112B0 - 0x040112E8
+-const Gfx mario_m_logo_dl[] = {
+-    gsSPVertex(mario_m_logo_dl_vertex, 7, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 2,  3,  0, 0x0,  3,  5,  0, 0x0),
+-    gsSP1Triangle( 4,  6,  5, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040112E8 - 0x04011350
+-const Gfx mario_eyes_cap_on_dl[] = {
+-    gsSPVertex(mario_eyes_cap_on_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 3,  0,  4, 0x0,  6,  3,  5, 0x0),
+-    gsSP2Triangles( 3,  1,  0, 0x0,  4,  0,  7, 0x0),
+-    gsSP2Triangles( 5,  4,  8, 0x0,  2,  9, 10, 0x0),
+-    gsSP2Triangles(10,  7,  2, 0x0, 11,  7, 10, 0x0),
+-    gsSP1Triangle( 7,  0,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011350 - 0x040113A0
+-const Gfx mario_hair_sideburn_cap_on_dl[] = {
+-    gsSPVertex(mario_hair_sideburn_cap_on_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 4,  5,  1, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+-    gsSP2Triangles( 9, 10,  6, 0x0, 11,  6, 10, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040113A0 - 0x04011438
+-const Gfx mario_mustache_cap_on_dl[] = {
+-    gsSPVertex(mario_mustache_cap_on_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+-    gsSP2Triangles( 0,  4,  3, 0x0,  5,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  4,  6, 0x0,  7,  3,  8, 0x0),
+-    gsSP2Triangles( 8,  3,  5, 0x0,  3,  7,  1, 0x0),
+-    gsSP2Triangles( 9, 10, 11, 0x0, 12, 10, 13, 0x0),
+-    gsSP2Triangles(11, 10, 12, 0x0, 10,  9, 14, 0x0),
+-    gsSP1Triangle(15,  9, 11, 0x0),
+-    gsSPVertex(mario_mustache_cap_on_dl_vertex_group2, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP1Triangle( 2,  4,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011438 - 0x040116F8
+-const Gfx mario_face_part_cap_on_dl[] = {
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  4,  2, 0x0,  1,  5,  3, 0x0),
+-    gsSP2Triangles( 6,  7,  3, 0x0,  7,  4,  3, 0x0),
+-    gsSP2Triangles( 6,  3,  5, 0x0,  4,  7,  8, 0x0),
+-    gsSP2Triangles( 9,  4,  8, 0x0, 10,  6,  5, 0x0),
+-    gsSP2Triangles(10,  5, 11, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  5,  6,  8, 0x0),
+-    gsSP2Triangles( 3,  8,  7, 0x0,  9,  3,  7, 0x0),
+-    gsSP2Triangles( 3,  9,  4, 0x0, 10, 11, 12, 0x0),
+-    gsSP2Triangles( 0, 10,  1, 0x0, 10,  0, 11, 0x0),
+-    gsSP2Triangles(11,  0,  2, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  3,  0,  7, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0, 11,  9,  8, 0x0),
+-    gsSP2Triangles(12, 13,  8, 0x0,  8, 13, 11, 0x0),
+-    gsSP1Triangle( 9, 11, 14, 0x0),
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  2, 0x0),
+-    gsSP2Triangles( 5,  2,  4, 0x0,  2,  6,  3, 0x0),
+-    gsSP2Triangles( 3,  6,  7, 0x0,  8,  9,  3, 0x0),
+-    gsSP2Triangles( 9,  4,  3, 0x0,  7, 10,  3, 0x0),
+-    gsSP2Triangles( 3, 10,  8, 0x0, 11,  4,  9, 0x0),
+-    gsSP2Triangles(12, 11,  9, 0x0, 13,  9,  8, 0x0),
+-    gsSP2Triangles( 9, 13, 12, 0x0,  4, 11,  5, 0x0),
+-    gsSP1Triangle(14, 15, 11, 0x0),
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group5, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 1,  5,  6, 0x0,  1,  3,  5, 0x0),
+-    gsSP2Triangles( 2,  1,  6, 0x0,  2,  6,  7, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  6,  5, 11, 0x0),
+-    gsSP2Triangles(12, 13,  8, 0x0, 10, 12,  8, 0x0),
+-    gsSP1Triangle(14,  8, 13, 0x0),
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group6, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  6,  5,  8, 0x0),
+-    gsSP2Triangles( 5,  7,  3, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 6, 12,  7, 0x0, 13, 10,  9, 0x0),
+-    gsSP2Triangles(14, 13,  9, 0x0, 15, 10, 13, 0x0),
+-    gsSPVertex(mario_face_part_cap_on_dl_vertex_group7, 13, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 1,  5,  3, 0x0,  2,  1,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  7,  6,  8, 0x0),
+-    gsSP2Triangles( 7,  9,  3, 0x0,  5,  7,  3, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 12,  6, 10, 0x0),
+-    gsSP1Triangle(12,  8,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040116F8 - 0x04011870
+-const Gfx mario_face_cap_dl[] = {
+-    gsSPVertex(mario_face_cap_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+-    gsSP2Triangles( 4,  2,  5, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 2,  1,  6, 0x0,  6,  7,  2, 0x0),
+-    gsSP2Triangles( 5,  2,  7, 0x0,  6,  1,  8, 0x0),
+-    gsSP2Triangles( 8,  1,  0, 0x0,  6,  8,  9, 0x0),
+-    gsSP2Triangles(10,  7,  6, 0x0,  9, 10,  6, 0x0),
+-    gsSP2Triangles(11, 10,  9, 0x0,  9,  8, 11, 0x0),
+-    gsSP2Triangles(11,  8, 12, 0x0,  0, 12,  8, 0x0),
+-    gsSP2Triangles(13, 10, 11, 0x0, 11, 12, 14, 0x0),
+-    gsSP2Triangles(15, 11, 14, 0x0, 13, 11, 15, 0x0),
+-    gsSPVertex(mario_face_cap_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  0, 0x0,  0,  6,  1, 0x0),
+-    gsSP2Triangles( 7,  1,  8, 0x0,  8,  1,  6, 0x0),
+-    gsSP2Triangles( 9, 10, 11, 0x0,  9, 12, 10, 0x0),
+-    gsSP2Triangles(12,  9, 13, 0x0, 13,  9, 14, 0x0),
+-    gsSPVertex(mario_face_cap_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+-    gsSP2Triangles( 8,  9,  5, 0x0,  0, 10,  1, 0x0),
+-    gsSP2Triangles( 1, 10,  3, 0x0, 11, 10,  0, 0x0),
+-    gsSP2Triangles(12,  3, 10, 0x0, 12, 10, 13, 0x0),
+-    gsSP2Triangles(13, 10, 11, 0x0,  5,  9,  7, 0x0),
+-    gsSP1Triangle( 7,  9, 14, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011870 - 0x04011960
+-const Gfx mario_face_back_hair_cap_on_dl[] = {
+-    gsSPVertex(mario_face_back_hair_cap_on_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  5,  8,  6, 0x0),
+-    gsSP2Triangles( 5,  4,  8, 0x0,  7,  3,  5, 0x0),
+-    gsSP2Triangles( 0,  2,  6, 0x0,  6,  9,  7, 0x0),
+-    gsSP2Triangles( 0,  6,  8, 0x0,  3,  7, 10, 0x0),
+-    gsSP2Triangles( 1, 11, 12, 0x0, 12, 13, 14, 0x0),
+-    gsSP2Triangles(11, 13, 12, 0x0,  1, 12,  2, 0x0),
+-    gsSP2Triangles(14,  2, 12, 0x0, 15, 14, 13, 0x0),
+-    gsSPVertex(mario_face_back_hair_cap_on_dl_vertex_group2, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  3,  2, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0,  9, 10,  7, 0x0),
+-    gsSP2Triangles( 2,  1, 11, 0x0,  2, 11,  7, 0x0),
+-    gsSP2Triangles( 9, 12, 13, 0x0, 10,  9, 13, 0x0),
+-    gsSP1Triangle( 8, 12,  9, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011960 - 0x040119A0
+-const Gfx mario_face_cap_on_dl[] = {
+-    gsSPDisplayList(mario_face_part_cap_on_dl),
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_face_cap_dl),
+-    gsSPLight(&mario_brown2_lights_group.l, 1),
+-    gsSPLight(&mario_brown2_lights_group.a, 2),
+-    gsSPDisplayList(mario_face_back_hair_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040119A0 - 0x04011A90
+-const Gfx mario_cap_on_eyes_front[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011A90 - 0x04011B80
+-const Gfx mario_cap_on_eyes_half_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011B80 - 0x04011C70
+-const Gfx mario_cap_on_eyes_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011C70 - 0x04011D60
+-const Gfx mario_cap_on_eyes_right[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011D60 - 0x04011E50
+-const Gfx mario_cap_on_eyes_left[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011E50 - 0x04011F40
+-const Gfx mario_cap_on_eyes_up[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04011F40 - 0x04012030
+-const Gfx mario_cap_on_eyes_down[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04012030 - 0x04012120
+-const Gfx mario_cap_on_eyes_dead[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04012120 - 0x04012160
+-const Gfx mario_metal_cap_on_shared_dl[] = {
+-    gsSPDisplayList(mario_m_logo_dl),
+-    gsSPDisplayList(mario_eyes_cap_on_dl),
+-    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+-    gsSPDisplayList(mario_mustache_cap_on_dl),
+-    gsSPDisplayList(mario_face_part_cap_on_dl),
+-    gsSPDisplayList(mario_face_cap_dl),
+-    gsSPDisplayList(mario_face_back_hair_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// Unreferenced light group
+-UNUSED static const Lights1 mario_lights_unused1 = gdSPDefLights1(
+-    0x3f, 0x30, 0x1e,
+-    0xfe, 0xc1, 0x79, 0x28, 0x28, 0x28
+-);
+-
+-// Unreferenced light group
+-UNUSED static const Lights1 mario_lights_unused2 = gdSPDefLights1(
+-    0x1c, 0x01, 0x00,
+-    0x73, 0x06, 0x00, 0x28, 0x28, 0x28
+-);
+-
+-// 0x04012190
+-static const Vtx mario_eyes_cap_off_dl_vertex[] = {
+-    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
+-    {{{   153,     33,     95}, 0, {  1362,    296}, {0x05, 0x38, 0x71, 0xff}}},
+-    {{{   175,     91,     39}, 0, {   842,    112}, {0x01, 0x75, 0x2f, 0xff}}},
+-    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
+-    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
+-    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{   175,     91,    -38}, 0, {   106,    130}, {0xf5, 0x73, 0xcc, 0xff}}},
+-    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {  -404,    342}, {0xfe, 0x36, 0x8e, 0xff}}},
+-    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
+-};
+-
+-// 0x04012250
+-static const Vtx mario_hair_sideburn_cap_off_dl_vertex[] = {
+-    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
+-    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
+-    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
+-    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{   153,     33,     95}, 0, {    22,    -68}, {0x05, 0x38, 0x71, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {   922,    122}, {0xff, 0x13, 0x7d, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
+-    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xff, 0x13, 0x83, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {    90,    -58}, {0xfe, 0x36, 0x8e, 0xff}}},
+-};
+-
+-// 0x04012310
+-static const Vtx mario_mustache_cap_off_dl_vertex_group1[] = {
+-    {{{    92,     88,    -83}, 0, {   992,    -10}, {0x23, 0x59, 0xad, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {   360,    296}, {0x0e, 0x16, 0x84, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {   298,     20}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{    48,     94,    -75}, 0, {   844,    640}, {0xd7, 0x60, 0xb9, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {  1272,    592}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {   294,    656}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    92,     88,     84}, 0, {   948,     -8}, {0x23, 0x59, 0x53, 0xff}}},
+-    {{{    77,    108,     34}, 0, {   330,    316}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{    48,     94,     76}, 0, {   848,    630}, {0xd7, 0x60, 0x47, 0xff}}},
+-    {{{    97,    103,     25}, 0, {   248,     50}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{    52,    111,     31}, 0, {   292,    670}, {0xa8, 0x33, 0x4b, 0xff}}},
+-    {{{    44,     44,     97}, 0, {  1276,    566}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{     3,     54,     52}, 0, {   768,   1210}, {0x95, 0x1d, 0x3c, 0xff}}},
+-    {{{    27,    100,     30}, 0, {   336,   1006}, {0xb1, 0x60, 0x16, 0xff}}},
+-    {{{     3,     54,    -51}, 0, {   720,   1228}, {0x95, 0x1d, 0xc4, 0xff}}},
+-    {{{    41,    109,      0}, 0, {   -30,    876}, {0x95, 0x44, 0x00, 0xff}}},
+-};
+-
+-// 0x04012410
+-static const Vtx mario_mustache_cap_off_dl_vertex_group2[] = {
+-    {{{    41,    109,      0}, 0, {   -38,    852}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {   294,    656}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    27,    100,    -29}, 0, {   310,   1002}, {0xb1, 0x60, 0xea, 0xff}}},
+-    {{{    48,     94,    -75}, 0, {   844,    640}, {0xd7, 0x60, 0xb9, 0xff}}},
+-    {{{     3,     54,    -51}, 0, {   720,   1228}, {0x95, 0x1d, 0xc4, 0xff}}},
+-};
+-
+-// 0x04012460
+-static const Vtx mario_face_part_cap_off_dl_vertex_group1[] = {
+-    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
+-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+-    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
+-    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+-    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
+-    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+-    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+-    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+-};
+-
+-// 0x04012550
+-static const Vtx mario_face_part_cap_off_dl_vertex_group2[] = {
+-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+-    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+-    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+-    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+-    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+-    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+-    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+-};
+-
+-// 0x04012650
+-static const Vtx mario_face_part_cap_off_dl_vertex_group3[] = {
+-    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+-    {{{   153,     33,     95}, 0, {     0,      0}, {0x05, 0x38, 0x71, 0xff}}},
+-    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+-    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
+-    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+-};
+-
+-// 0x04012740
+-static const Vtx mario_face_part_cap_off_dl_vertex_group4[] = {
+-    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+-    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
+-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+-    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
+-    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+-    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+-    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+-};
+-
+-// 0x04012830
+-static const Vtx mario_face_part_cap_off_dl_vertex_group5[] = {
+-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+-    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+-    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+-    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+-};
+-
+-// 0x04012930
+-static const Vtx mario_face_part_cap_off_dl_vertex_group6[] = {
+-    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
+-    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+-    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+-    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+-    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+-    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+-    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+-};
+-
+-// 0x04012A30
+-static const Vtx mario_face_part_cap_off_dl_vertex_group7[] = {
+-    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
+-    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+-    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+-    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+-};
+-
+-// 0x04012B30
+-static const Vtx mario_face_part_cap_off_dl_vertex_group8[] = {
+-    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+-    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+-    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+-    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+-    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+-    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+-    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+-    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+-    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+-};
+-
+-// 0x04012BC0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group1[] = {
+-    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
+-    {{{   200,     70,    -97}, 0, {     0,      0}, {0x07, 0x48, 0x99, 0xff}}},
+-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+-    {{{   153,     33,     95}, 0, {     0,      0}, {0x05, 0x38, 0x71, 0xff}}},
+-    {{{   200,     75,     84}, 0, {     0,      0}, {0x10, 0x52, 0x5f, 0xff}}},
+-    {{{   151,     72,     70}, 0, {     0,      0}, {0xe4, 0x5c, 0x51, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
+-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+-    {{{   175,     91,     39}, 0, {     0,      0}, {0x01, 0x75, 0x2f, 0xff}}},
+-    {{{   209,     86,     60}, 0, {     0,      0}, {0x38, 0x60, 0x3c, 0xff}}},
+-    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
+-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xf5, 0x73, 0xcc, 0xff}}},
+-    {{{   151,     72,    -68}, 0, {     0,      0}, {0xd6, 0x5b, 0xb3, 0xff}}},
+-    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
+-    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
+-    {{{   227,    -14,    -58}, 0, {     0,      0}, {0x72, 0xf1, 0xcc, 0xff}}},
+-};
+-
+-// 0x04012CC0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group2[] = {
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+-    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
+-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+-    {{{   227,    -14,     59}, 0, {     0,      0}, {0x72, 0xec, 0x32, 0xff}}},
+-    {{{   241,    -34,      0}, 0, {     0,      0}, {0x7a, 0xe0, 0x00, 0xff}}},
+-    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
+-    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
+-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+-    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
+-    {{{   189,   -102,    -71}, 0, {     0,      0}, {0x50, 0xb9, 0xbd, 0xff}}},
+-    {{{   227,    -14,    -58}, 0, {     0,      0}, {0x72, 0xf1, 0xcc, 0xff}}},
+-    {{{   200,   -117,      0}, 0, {     0,      0}, {0x3f, 0x93, 0x00, 0xff}}},
+-    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
+-    {{{   248,    104,    -43}, 0, {     0,      0}, {0x76, 0x2c, 0xf3, 0xff}}},
+-    {{{   231,     81,     33}, 0, {     0,      0}, {0x71, 0x27, 0x2a, 0xff}}},
+-};
+-
+-// 0x04012DB0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group3[] = {
+-    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
+-    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
+-    {{{   232,     69,    -34}, 0, {     0,      0}, {0x72, 0xe4, 0xd1, 0xff}}},
+-    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
+-    {{{   175,     91,    -38}, 0, {     0,      0}, {0xf5, 0x73, 0xcc, 0xff}}},
+-    {{{   201,    125,    -13}, 0, {     0,      0}, {0xe4, 0x7b, 0xfb, 0xff}}},
+-    {{{   160,     96,      0}, 0, {     0,      0}, {0xb7, 0x67, 0xfe, 0xff}}},
+-    {{{   189,   -102,    -71}, 0, {     0,      0}, {0x50, 0xb9, 0xbd, 0xff}}},
+-    {{{   116,   -124,    -67}, 0, {     0,      0}, {0xfc, 0x8f, 0xc8, 0xff}}},
+-    {{{   145,    -84,   -104}, 0, {     0,      0}, {0xef, 0xcf, 0x8d, 0xff}}},
+-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+-    {{{   200,   -117,      0}, 0, {     0,      0}, {0x3f, 0x93, 0x00, 0xff}}},
+-    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
+-    {{{   116,   -126,     68}, 0, {     0,      0}, {0xfb, 0x8f, 0x38, 0xff}}},
+-    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
+-    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
+-};
+-
+-// 0x04012EB0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group4[] = {
+-    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
+-    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
+-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+-    {{{   201,    125,    -13}, 0, {     0,      0}, {0xe4, 0x7b, 0xfb, 0xff}}},
+-    {{{   209,     86,     60}, 0, {     0,      0}, {0x38, 0x60, 0x3c, 0xff}}},
+-    {{{   248,    104,    -43}, 0, {     0,      0}, {0x76, 0x2c, 0xf3, 0xff}}},
+-    {{{   231,     81,     33}, 0, {     0,      0}, {0x71, 0x27, 0x2a, 0xff}}},
+-    {{{   232,     69,    -34}, 0, {     0,      0}, {0x72, 0xe4, 0xd1, 0xff}}},
+-    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
+-    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
+-    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
+-    {{{   175,     91,     39}, 0, {     0,      0}, {0x01, 0x75, 0x2f, 0xff}}},
+-    {{{   160,     96,      0}, 0, {     0,      0}, {0xb7, 0x67, 0xfe, 0xff}}},
+-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
+-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
+-    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
+-};
+-
+-// 0x04012FB0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group5[] = {
+-    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
+-    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+-    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
+-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
+-    {{{   116,   -124,    -67}, 0, {     0,      0}, {0xfc, 0x8f, 0xc8, 0xff}}},
+-    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
+-    {{{   145,    -84,   -104}, 0, {     0,      0}, {0xef, 0xcf, 0x8d, 0xff}}},
+-    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+-    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
+-    {{{   116,   -126,     68}, 0, {     0,      0}, {0xfb, 0x8f, 0x38, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
+-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+-};
+-
+-// 0x040130B0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group6[] = {
+-    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
+-    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+-    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+-    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+-    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
+-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+-    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+-    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+-};
+-
+-// 0x040131B0
+-static const Vtx mario_face_hair_cap_off_dl_vertex_group7[] = {
+-    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+-    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+-    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+-    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+-    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+-    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+-    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+-    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+-    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+-    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+-    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+-    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+-    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+-};
+-
+-// 0x04013280
+-static const Vtx mario_face_part_cap_off_dl_vertex_group9[] = {
+-    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+-    {{{    48,     94,     76}, 0, {     0,      0}, {0xd7, 0x60, 0x47, 0xff}}},
+-    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+-};
+-
+-// 0x040132B0 - 0x04013318
+-const Gfx mario_eyes_cap_off_dl[] = {
+-    gsSPVertex(mario_eyes_cap_off_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  6,  7, 0x0,  8,  6,  4, 0x0),
+-    gsSP2Triangles( 5,  4,  7, 0x0,  7,  9,  5, 0x0),
+-    gsSP2Triangles( 2,  8, 10, 0x0,  1,  6,  8, 0x0),
+-    gsSP2Triangles( 1,  8,  2, 0x0,  6, 11,  7, 0x0),
+-    gsSP1Triangle( 1, 11,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013318 - 0x040133A8
+-const Gfx mario_mustache_cap_off_dl[] = {
+-    gsSPVertex(mario_mustache_cap_off_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 0,  4,  3, 0x0,  3,  5,  1, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  7,  6,  9, 0x0),
+-    gsSP2Triangles( 7, 10,  8, 0x0,  8, 11,  6, 0x0),
+-    gsSP2Triangles(12,  8, 13, 0x0, 13,  8, 10, 0x0),
+-    gsSP2Triangles(14,  3,  4, 0x0, 13, 10, 15, 0x0),
+-    gsSPVertex(mario_mustache_cap_off_dl_vertex_group2, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP1Triangle( 2,  3,  4, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040133A8 - 0x040133F8
+-const Gfx mario_hair_sideburn_cap_off_dl[] = {
+-    gsSPVertex(mario_hair_sideburn_cap_off_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 4,  2,  5, 0x0,  1,  5,  2, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+-    gsSP2Triangles( 9,  8, 10, 0x0, 10,  8, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040133F8 - 0x040136D0
+-const Gfx mario_face_part_cap_off_dl[] = {
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  3,  5, 0x0,  3,  6,  7, 0x0),
+-    gsSP2Triangles( 4,  8,  2, 0x0,  8,  4,  9, 0x0),
+-    gsSP2Triangles( 2,  1,  4, 0x0,  6,  5, 10, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0, 14, 13, 12, 0x0),
+-    gsSP1Triangle(13, 14,  0, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9,  8,  7, 0x0),
+-    gsSP2Triangles(10,  1, 11, 0x0,  1, 12, 11, 0x0),
+-    gsSP2Triangles(12,  1,  0, 0x0, 13, 11, 14, 0x0),
+-    gsSP2Triangles(12, 14, 11, 0x0, 11, 13, 15, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 3,  6,  4, 0x0,  3,  5,  7, 0x0),
+-    gsSP2Triangles( 8,  7,  5, 0x0,  4,  8,  5, 0x0),
+-    gsSP2Triangles( 9, 10, 11, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group4, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP2Triangles( 4,  1,  0, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 8,  3,  9, 0x0, 10, 11, 12, 0x0),
+-    gsSP2Triangles(13, 11, 10, 0x0, 11, 13, 14, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group5, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  5, 0x0,  8,  7,  6, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  8,  6,  9, 0x0),
+-    gsSP2Triangles( 9, 11, 10, 0x0,  9, 12, 11, 0x0),
+-    gsSP2Triangles( 0, 13,  1, 0x0, 13, 14,  1, 0x0),
+-    gsSP1Triangle( 1, 14, 15, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group6, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  2, 0x0),
+-    gsSP2Triangles( 2,  4,  0, 0x0,  1,  0,  5, 0x0),
+-    gsSP2Triangles( 1,  6,  7, 0x0,  1,  5,  6, 0x0),
+-    gsSP2Triangles( 7,  8,  1, 0x0,  3,  9,  4, 0x0),
+-    gsSP2Triangles( 9,  3, 10, 0x0,  4, 11,  0, 0x0),
+-    gsSP2Triangles(11,  4, 12, 0x0,  4,  9, 12, 0x0),
+-    gsSP2Triangles(10, 13, 14, 0x0,  0, 11, 15, 0x0),
+-    gsSP2Triangles( 5,  0, 15, 0x0, 14,  9, 10, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group7, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
+-    gsSP2Triangles( 8,  5,  4, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 2, 12,  0, 0x0, 13,  4,  6, 0x0),
+-    gsSP2Triangles( 6, 14, 15, 0x0,  6,  7, 14, 0x0),
+-    gsSP1Triangle(13,  6, 15, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group8, 9, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  6,  5, 0x0),
+-    gsSP1Triangle( 8,  5,  4, 0x0),
+-    gsSPVertex(mario_face_part_cap_off_dl_vertex_group9, 3, 0),
+-    gsSP1Triangle( 0,  1,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040136D0 - 0x040139C0
+-const Gfx mario_face_hair_cap_off_dl[] = {
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 3,  6,  7, 0x0,  3,  7,  4, 0x0),
+-    gsSP2Triangles( 8,  4,  9, 0x0,  7, 10,  4, 0x0),
+-    gsSP2Triangles( 4, 10,  9, 0x0,  8,  5,  4, 0x0),
+-    gsSP2Triangles(11,  1, 12, 0x0,  1,  0, 12, 0x0),
+-    gsSP2Triangles( 1, 13,  2, 0x0,  1, 11, 14, 0x0),
+-    gsSP2Triangles(13,  1, 14, 0x0, 15,  2, 13, 0x0),
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  3,  6, 0x0,  3,  7,  6, 0x0),
+-    gsSP2Triangles( 8,  7,  3, 0x0,  5,  8,  3, 0x0),
+-    gsSP2Triangles( 9, 10,  4, 0x0, 11,  4,  6, 0x0),
+-    gsSP2Triangles(11,  9,  4, 0x0, 10,  5,  4, 0x0),
+-    gsSP2Triangles(10, 12,  5, 0x0,  5, 13, 14, 0x0),
+-    gsSP2Triangles( 8,  5, 14, 0x0,  9,  2, 10, 0x0),
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 1,  4,  5, 0x0,  4,  6,  5, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0, 10,  7,  9, 0x0),
+-    gsSP2Triangles( 8,  7, 11, 0x0, 11, 12, 13, 0x0),
+-    gsSP2Triangles(14, 11, 13, 0x0, 14,  8, 11, 0x0),
+-    gsSP1Triangle(15, 13, 12, 0x0),
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  6,  5, 0x0,  7,  8,  5, 0x0),
+-    gsSP2Triangles( 8,  3,  5, 0x0,  9,  7,  5, 0x0),
+-    gsSP2Triangles(10,  6,  4, 0x0,  4,  3, 11, 0x0),
+-    gsSP2Triangles( 3, 12, 11, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group5, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  4,  3, 0x0,  7,  6,  8, 0x0),
+-    gsSP2Triangles( 9,  6,  3, 0x0,  6,  9,  8, 0x0),
+-    gsSP2Triangles(10, 11,  0, 0x0, 12,  0,  2, 0x0),
+-    gsSP2Triangles(10,  0, 12, 0x0, 10,  5, 11, 0x0),
+-    gsSP2Triangles(13, 14, 15, 0x0, 13,  3, 10, 0x0),
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group6, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 5,  0,  2, 0x0,  5,  4,  0, 0x0),
+-    gsSP2Triangles( 3,  6,  7, 0x0,  8,  9,  7, 0x0),
+-    gsSP2Triangles( 6, 10,  7, 0x0,  8,  7, 10, 0x0),
+-    gsSP2Triangles( 3, 11, 12, 0x0, 13, 14,  3, 0x0),
+-    gsSP2Triangles(12,  6,  3, 0x0,  6, 15, 10, 0x0),
+-    gsSP1Triangle(12, 15,  6, 0x0),
+-    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group7, 13, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  4,  7, 0x0),
+-    gsSP2Triangles( 6,  5,  8, 0x0,  9,  8,  5, 0x0),
+-    gsSP2Triangles( 5,  7,  9, 0x0, 10, 11, 12, 0x0),
+-    gsSP2Triangles(11, 10,  3, 0x0, 12,  2, 10, 0x0),
+-    gsSP2Triangles( 2,  1, 10, 0x0, 10,  1,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040139C0 - 0x040139E8
+-const Gfx mario_face_cap_off_dl[] = {
+-    gsSPDisplayList(mario_face_part_cap_off_dl),
+-    gsSPLight(&mario_brown2_lights_group.l, 1),
+-    gsSPLight(&mario_brown2_lights_group.a, 2),
+-    gsSPDisplayList(mario_face_hair_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040139E8 - 0x04013AB8
+-const Gfx mario_cap_off_eyes_front[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013AB8 - 0x04013B88
+-const Gfx mario_cap_off_eyes_half_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013B88 - 0x04013C58
+-const Gfx mario_cap_off_eyes_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013C58 - 0x04013D28
+-const Gfx mario_cap_off_eyes_right[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013D28 - 0x04013DF8
+-const Gfx mario_cap_off_eyes_left[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013DF8 - 0x04013EC8
+-const Gfx mario_cap_off_eyes_up[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013EC8 - 0x04013F98
+-const Gfx mario_cap_off_eyes_down[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04013F98 - 0x04014068
+-const Gfx mario_cap_off_eyes_dead[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014068 - 0x04014098
+-const Gfx mario_metal_cap_off_shared_dl[] = {
+-    gsSPDisplayList(mario_eyes_cap_off_dl),
+-    gsSPDisplayList(mario_mustache_cap_off_dl),
+-    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+-    gsSPDisplayList(mario_face_part_cap_off_dl),
+-    gsSPDisplayList(mario_face_hair_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014098
+-static const Vtx mario_medium_poly_butt_dl_vertex_group1[] = {
+-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+-    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
+-    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
+-    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
+-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+-    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
+-    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
+-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+-    {{{    -5,    -45,    -97}, 0, {     0,      0}, {0xc7, 0xdd, 0x95, 0x00}}},
+-    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
+-    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
+-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+-};
+-
+-// 0x04014198
+-static const Vtx mario_medium_poly_butt_dl_vertex_group2[] = {
+-    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
+-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+-    {{{   -32,     43,     22}, 0, {     0,      0}, {0x8c, 0x2c, 0x18, 0x00}}},
+-    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
+-    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
+-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+-    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
+-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+-    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
+-    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
+-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+-    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
+-    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
+-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+-};
+-
+-// 0x04014298
+-static const Vtx mario_medium_poly_butt_dl_vertex_group3[] = {
+-    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
+-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+-    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
+-    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
+-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+-    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
+-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+-    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
+-    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
+-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+-    {{{    -5,    -45,    -97}, 0, {     0,      0}, {0xc7, 0xdd, 0x95, 0x00}}},
+-    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
+-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+-    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
+-};
+-
+-// 0x04014398
+-static const Vtx mario_medium_poly_butt_dl_vertex_group4[] = {
+-    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
+-    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
+-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+-    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+-    {{{   -32,     43,     22}, 0, {     0,      0}, {0x8c, 0x2c, 0x18, 0x00}}},
+-    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+-    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+-    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+-    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
+-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+-    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
+-    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+-    {{{    85,     -5,      0}, 0, {     0,      0}, {0x7f, 0xfe, 0x00, 0x00}}},
+-    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
+-    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
+-    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
+-};
+-
+-// 0x04014498
+-static const Vtx mario_medium_poly_butt_dl_vertex_group5[] = {
+-    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+-    {{{    85,     -5,      0}, 0, {     0,      0}, {0x7f, 0xfe, 0x00, 0x00}}},
+-    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+-    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+-};
+-
+-// 0x040144D8 - 0x04014638
+-const Gfx mario_medium_poly_butt_dl[] = {
+-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles(12, 13, 14, 0x0, 12, 15,  6, 0x0),
+-    gsSP1Triangle( 3, 10,  7, 0x0),
+-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 0,  2,  6, 0x0,  7,  5,  4, 0x0),
+-    gsSP2Triangles( 7,  8,  6, 0x0,  9, 10,  8, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0,  2,  1,  5, 0x0),
+-    gsSP1Triangle(14, 15,  0, 0x0),
+-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  3,  7, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
+-    gsSP2Triangles(11, 10, 14, 0x0,  0, 12, 15, 0x0),
+-    gsSP2Triangles(14,  9,  6, 0x0,  2, 13, 12, 0x0),
+-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 9, 12, 13, 0x0, 13, 12, 14, 0x0),
+-    gsSP2Triangles(14, 12,  8, 0x0,  8, 12, 15, 0x0),
+-    gsSP2Triangles(15, 12,  1, 0x0,  1, 12,  2, 0x0),
+-    gsSPVertex(mario_medium_poly_butt_dl_vertex_group5, 4, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014638 - 0x04014668
+-const Gfx mario_medium_poly_butt[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_butt_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014668 - 0x040146E0
+-const Gfx mario_metal_medium_poly_butt[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_butt_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040146E0
+-static const Vtx mario_medium_poly_left_arm_shared_dl_vertex[] = {
+-    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x08, 0x84, 0x18, 0x00}}},
+-    {{{    60,    -27,    -18}, 0, {     0,      0}, {0x3d, 0xc5, 0xa3, 0x00}}},
+-    {{{    60,    -18,     26}, 0, {     0,      0}, {0x5c, 0xbe, 0x36, 0x00}}},
+-    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x07, 0xf5, 0x82, 0x00}}},
+-    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x07, 0xf5, 0x82, 0x00}}},
+-    {{{    59,     16,    -22}, 0, {     0,      0}, {0x5b, 0x4f, 0xda, 0x00}}},
+-    {{{    -7,     20,     18}, 0, {     0,      0}, {0x0c, 0x73, 0x32, 0x00}}},
+-    {{{    59,     14,     14}, 0, {     0,      0}, {0x38, 0x4b, 0x55, 0x00}}},
+-    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x0b, 0x2a, 0x77, 0x00}}},
+-    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x0a, 0x7e, 0x04, 0x00}}},
+-    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x08, 0x84, 0x18, 0x00}}},
+-    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -7,     20,     18}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-};
+-
+-// 0x040147D0 - 0x04014840
+-const Gfx mario_medium_poly_left_arm_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_left_arm_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  1, 0x0,  6,  7,  5, 0x0),
+-    gsSP2Triangles( 8,  2,  7, 0x0,  6,  8,  7, 0x0),
+-    gsSP2Triangles( 9,  6,  5, 0x0, 10,  0,  2, 0x0),
+-    gsSP2Triangles( 5,  2,  1, 0x0, 11, 12, 13, 0x0),
+-    gsSP2Triangles(13, 14, 11, 0x0,  5,  7,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014840 - 0x04014860
+-const Gfx mario_medium_poly_left_arm[] = {
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_left_arm_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014860
+-static const Vtx mario_medium_poly_left_forearm_shared_dl_vertex[] = {
+-    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x05, 0x84, 0x19, 0x00}}},
+-    {{{    53,    -26,    -17}, 0, {     0,      0}, {0x59, 0xd0, 0xb5, 0x00}}},
+-    {{{    53,    -17,     24}, 0, {     0,      0}, {0x3d, 0xab, 0x47, 0x00}}},
+-    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x04, 0xf3, 0x82, 0x00}}},
+-    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x04, 0xf4, 0x82, 0x00}}},
+-    {{{    53,     13,    -21}, 0, {     0,      0}, {0x3b, 0x64, 0xce, 0x00}}},
+-    {{{    -9,     15,     15}, 0, {     0,      0}, {0x07, 0x75, 0x30, 0x00}}},
+-    {{{    53,     13,     12}, 0, {     0,      0}, {0x52, 0x41, 0x47, 0x00}}},
+-    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x07, 0x2c, 0x76, 0x00}}},
+-    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x06, 0x7e, 0x02, 0x00}}},
+-    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x05, 0x84, 0x1a, 0x00}}},
+-    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -9,     15,     15}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-};
+-
+-// 0x04014950 - 0x040149C0
+-const Gfx mario_medium_poly_left_forearm_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_left_forearm_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  1, 0x0,  6,  7,  5, 0x0),
+-    gsSP2Triangles( 8,  2,  7, 0x0,  6,  8,  7, 0x0),
+-    gsSP2Triangles( 9,  6,  5, 0x0, 10,  0,  2, 0x0),
+-    gsSP2Triangles( 1,  7,  2, 0x0,  1,  5,  7, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040149C0
+-static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group1[] = {
+-    {{{    31,     10,     40}, 0, {     0,      0}, {0xd8, 0xed, 0x76, 0x00}}},
+-    {{{    12,      1,     26}, 0, {     0,      0}, {0xf1, 0xf7, 0x7d, 0x00}}},
+-    {{{    27,    -32,     -3}, 0, {     0,      0}, {0x06, 0x82, 0x0b, 0x00}}},
+-    {{{    11,      2,    -28}, 0, {     0,      0}, {0xca, 0xf6, 0x8e, 0x00}}},
+-    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
+-    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
+-    {{{    -2,     36,     -2}, 0, {     0,      0}, {0xb0, 0x61, 0x03, 0x00}}},
+-    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+-    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x1c, 0x0e, 0x86, 0x00}}},
+-    {{{    81,     32,     40}, 0, {     0,      0}, {0x48, 0x1f, 0x63, 0x00}}},
+-    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
+-    {{{   102,    -23,      6}, 0, {     0,      0}, {0x64, 0xc4, 0x31, 0x00}}},
+-    {{{    95,     43,    -12}, 0, {     0,      0}, {0x6e, 0x36, 0xe0, 0x00}}},
+-    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
+-    {{{    84,    -10,    -41}, 0, {     0,      0}, {0x39, 0xe2, 0x93, 0x00}}},
+-    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
+-};
+-
+-// 0x04014AC0
+-static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group2[] = {
+-    {{{    31,     10,     40}, 0, {     0,      0}, {0xd8, 0xed, 0x76, 0x00}}},
+-    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
+-    {{{     7,     62,     10}, 0, {     0,      0}, {0xa7, 0x5a, 0x00, 0x00}}},
+-    {{{    27,    -32,     -3}, 0, {     0,      0}, {0x06, 0x82, 0x0b, 0x00}}},
+-    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x37, 0xd5, 0x97, 0x00}}},
+-    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x1c, 0x0e, 0x86, 0x00}}},
+-    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x05, 0x48, 0x98, 0x00}}},
+-    {{{    -2,     36,     -2}, 0, {     0,      0}, {0xb0, 0x61, 0x03, 0x00}}},
+-    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x11, 0x50, 0x60, 0x00}}},
+-    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+-    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x49, 0xd5, 0x5e, 0x00}}},
+-    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
+-    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
+-    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
+-    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
+-};
+-
+-// 0x04014BB0
+-static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group3[] = {
+-    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
+-    {{{    95,     43,    -12}, 0, {     0,      0}, {0x6e, 0x36, 0xe0, 0x00}}},
+-    {{{    84,    -10,    -41}, 0, {     0,      0}, {0x39, 0xe2, 0x93, 0x00}}},
+-    {{{     7,     62,     10}, 0, {     0,      0}, {0xa7, 0x5a, 0x00, 0x00}}},
+-    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
+-    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
+-    {{{   102,    -23,      6}, 0, {     0,      0}, {0x64, 0xc4, 0x31, 0x00}}},
+-    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
+-    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
+-    {{{    11,      2,    -28}, 0, {     0,      0}, {0xca, 0xf6, 0x8e, 0x00}}},
+-    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+-    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+-    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+-    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+-};
+-
+-// 0x04014C90 - 0x04014DC0
+-const Gfx mario_medium_poly_left_hand_closed_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  3,  6, 0x0,  6,  1,  0, 0x0),
+-    gsSP2Triangles( 2,  1,  7, 0x0,  7,  1,  6, 0x0),
+-    gsSP2Triangles( 6,  3,  8, 0x0,  3,  2,  8, 0x0),
+-    gsSP2Triangles( 0,  9, 10, 0x0, 11,  9,  0, 0x0),
+-    gsSP2Triangles(10, 12, 13, 0x0, 14, 12, 11, 0x0),
+-    gsSP2Triangles(11, 12,  9, 0x0,  9, 12, 10, 0x0),
+-    gsSP1Triangle(15, 11,  0, 0x0),
+-    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 9, 10,  3, 0x0,  7,  0,  2, 0x0),
+-    gsSP2Triangles( 7,  2, 11, 0x0,  3, 12, 13, 0x0),
+-    gsSP2Triangles( 3, 13,  0, 0x0, 11,  2, 14, 0x0),
+-    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group3, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSP2Triangles( 5,  2,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 7,  2,  8, 0x0,  7,  0,  2, 0x0),
+-    gsSP2Triangles( 5,  8,  2, 0x0, 10, 11, 12, 0x0),
+-    gsSP1Triangle(10, 13, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014DC0 - 0x04014DE0
+-const Gfx mario_medium_poly_left_hand_closed[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_left_hand_closed_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014DE0
+-static const Vtx mario_medium_poly_right_arm_shared_dl_vertex[] = {
+-    {{{    60,    -28,     22}, 0, {     0,      0}, {0x3b, 0xc7, 0x60, 0x00}}},
+-    {{{    60,    -19,    -19}, 0, {     0,      0}, {0x5a, 0xbc, 0xc7, 0x00}}},
+-    {{{    60,     14,     24}, 0, {     0,      0}, {0x5b, 0x4f, 0x26, 0x00}}},
+-    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x04, 0x84, 0xe6, 0x00}}},
+-    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x04, 0x84, 0xe6, 0x00}}},
+-    {{{    -8,     21,    -15}, 0, {     0,      0}, {0x11, 0x73, 0xce, 0x00}}},
+-    {{{    -8,     22,     27}, 0, {     0,      0}, {0x0e, 0x7e, 0xfd, 0x00}}},
+-    {{{    60,     13,     -9}, 0, {     0,      0}, {0x3c, 0x46, 0xaa, 0x00}}},
+-    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x0e, 0x23, 0x88, 0x00}}},
+-    {{{    -8,     22,     27}, 0, {     0,      0}, {0x03, 0xfa, 0x7e, 0x00}}},
+-    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x03, 0xfa, 0x7e, 0x00}}},
+-    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -8,     22,     27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{    -8,     21,    -15}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-};
+-
+-// 0x04014ED0 - 0x04014F40
+-const Gfx mario_medium_poly_right_arm_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_right_arm_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 2,  5,  6, 0x0,  7,  8,  5, 0x0),
+-    gsSP2Triangles( 7,  1,  8, 0x0,  2,  7,  5, 0x0),
+-    gsSP2Triangles( 0,  2,  9, 0x0,  0,  9, 10, 0x0),
+-    gsSP2Triangles( 1,  0,  3, 0x0, 11, 12, 13, 0x0),
+-    gsSP2Triangles(13, 14, 11, 0x0,  1,  7,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014F40 - 0x04014F60
+-const Gfx mario_medium_poly_right_arm[] = {
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_right_arm_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04014F60
+-static const Vtx mario_medium_poly_right_forearm_shared_dl_vertex[] = {
+-    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+-    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+-    {{{    -4,     17,     26}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+-    {{{    52,     13,    -10}, 0, {     0,      0}, {0x51, 0x40, 0xb7, 0x00}}},
+-    {{{    53,     13,     22}, 0, {     0,      0}, {0x3d, 0x63, 0x31, 0x00}}},
+-    {{{    53,    -26,     19}, 0, {     0,      0}, {0x5b, 0xd0, 0x49, 0x00}}},
+-    {{{    52,    -17,    -21}, 0, {     0,      0}, {0x3a, 0xac, 0xb6, 0x00}}},
+-    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x04, 0x85, 0xe4, 0x00}}},
+-    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x03, 0x85, 0xe3, 0x00}}},
+-    {{{    -5,     17,    -12}, 0, {     0,      0}, {0x09, 0x75, 0xd1, 0x00}}},
+-    {{{    -4,     17,     26}, 0, {     0,      0}, {0x08, 0x7e, 0x00, 0x00}}},
+-    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x06, 0x2a, 0x89, 0x00}}},
+-    {{{    -4,     17,     26}, 0, {     0,      0}, {0x06, 0xf5, 0x7e, 0x00}}},
+-    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x06, 0xf4, 0x7e, 0x00}}},
+-    {{{    -5,     17,    -12}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+-};
+-
+-// 0x04015050 - 0x040150C0
+-const Gfx mario_medium_poly_right_forearm_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_right_forearm_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  3,  5, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 4,  9, 10, 0x0,  3, 11,  9, 0x0),
+-    gsSP2Triangles( 3,  6, 11, 0x0,  4,  3,  9, 0x0),
+-    gsSP2Triangles( 5,  4, 12, 0x0,  5, 12, 13, 0x0),
+-    gsSP2Triangles( 6,  5,  7, 0x0,  2, 14,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040150C0
+-static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group1[] = {
+-    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+-    {{{   -26,     40,      0}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+-    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+-    {{{    14,    -51,      7}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+-    {{{    81,     -8,     49}, 0, {     0,      0}, {0x36, 0xe6, 0x6f, 0x00}}},
+-    {{{    42,    -20,     54}, 0, {     0,      0}, {0xd9, 0xbb, 0x62, 0x00}}},
+-    {{{    54,    -42,     -4}, 0, {     0,      0}, {0x04, 0x82, 0xf6, 0x00}}},
+-    {{{    52,     59,     37}, 0, {     0,      0}, {0xff, 0x55, 0x5e, 0x00}}},
+-    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
+-    {{{    10,      3,     33}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0x00}}},
+-    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
+-    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
+-    {{{     7,     62,    -11}, 0, {     0,      0}, {0xa7, 0x5a, 0xf9, 0x00}}},
+-    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
+-    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
+-    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
+-};
+-
+-// 0x040151C0
+-static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group2[] = {
+-    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
+-    {{{     7,     62,    -11}, 0, {     0,      0}, {0xa7, 0x5a, 0xf9, 0x00}}},
+-    {{{    -3,     37,      3}, 0, {     0,      0}, {0xb0, 0x62, 0xf7, 0x00}}},
+-    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
+-    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
+-    {{{    14,    -51,      7}, 0, {     0,      0}, {0x4f, 0xd0, 0xaa, 0x00}}},
+-    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x37, 0x10, 0x8f, 0x00}}},
+-    {{{   -26,     40,      0}, 0, {     0,      0}, {0x15, 0x51, 0xa1, 0x00}}},
+-    {{{   -26,     40,      0}, 0, {     0,      0}, {0x02, 0x4f, 0x62, 0x00}}},
+-    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x19, 0x13, 0x7a, 0x00}}},
+-    {{{    14,    -51,      7}, 0, {     0,      0}, {0x36, 0xd7, 0x6b, 0x00}}},
+-    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
+-    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
+-    {{{    54,    -42,     -4}, 0, {     0,      0}, {0x04, 0x82, 0xf6, 0x00}}},
+-    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
+-    {{{    83,     30,    -39}, 0, {     0,      0}, {0x4e, 0x1c, 0xa1, 0x00}}},
+-};
+-
+-// 0x040152C0
+-static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group3[] = {
+-    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
+-    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
+-    {{{    81,     -8,     49}, 0, {     0,      0}, {0x36, 0xe6, 0x6f, 0x00}}},
+-    {{{    52,     59,     37}, 0, {     0,      0}, {0xff, 0x55, 0x5e, 0x00}}},
+-    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
+-    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
+-    {{{    83,     30,    -39}, 0, {     0,      0}, {0x4e, 0x1c, 0xa1, 0x00}}},
+-    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x19, 0x13, 0x7a, 0x00}}},
+-    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
+-    {{{    10,      3,     33}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0x00}}},
+-    {{{    -3,     37,      3}, 0, {     0,      0}, {0xb0, 0x62, 0xf7, 0x00}}},
+-    {{{    13,      0,    -26}, 0, {     0,      0}, {0xf5, 0xf2, 0x83, 0x00}}},
+-    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x37, 0x10, 0x8f, 0x00}}},
+-    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
+-    {{{    42,    -20,     54}, 0, {     0,      0}, {0xd9, 0xbb, 0x62, 0x00}}},
+-};
+-
+-// 0x040153B0 - 0x040154E0
+-const Gfx mario_medium_poly_right_hand_closed_dl[] = {
+-    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  7,  8, 0x0),
+-    gsSP2Triangles( 5,  4,  8, 0x0,  9,  5,  8, 0x0),
+-    gsSP2Triangles(10,  4,  6, 0x0,  7, 11, 12, 0x0),
+-    gsSP2Triangles( 4, 13,  7, 0x0,  7, 12,  8, 0x0),
+-    gsSP2Triangles(14,  6, 15, 0x0,  6,  5, 15, 0x0),
+-    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  7,  2, 0x0),
+-    gsSP2Triangles( 2,  8,  9, 0x0,  9, 10,  4, 0x0),
+-    gsSP2Triangles( 1, 11,  3, 0x0,  3, 12, 13, 0x0),
+-    gsSP2Triangles(11, 14, 15, 0x0, 15, 14, 12, 0x0),
+-    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  0, 0x0,  4,  6,  5, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0,  7,  9, 10, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 12, 11,  8, 0x0),
+-    gsSP2Triangles( 5, 11, 10, 0x0, 10,  9, 13, 0x0),
+-    gsSP2Triangles(14,  9,  8, 0x0,  8, 11,  5, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040154E0 - 0x04015500
+-const Gfx mario_medium_poly_right_hand_closed[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_right_hand_closed_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015500 - 0x04015530
+-const Gfx mario_metal_medium_poly_right_hand_closed[] = {
+-    gsSPDisplayList(mario_medium_poly_right_hand_closed_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015530
+-static const Vtx mario_medium_poly_left_thigh_dl_vertex[] = {
+-    {{{    18,    -12,     58}, 0, {     0,      0}, {0x13, 0xdd, 0x78, 0x00}}},
+-    {{{    22,    -52,      8}, 0, {     0,      0}, {0x1c, 0x85, 0x01, 0x00}}},
+-    {{{    99,    -35,      8}, 0, {     0,      0}, {0x3e, 0x92, 0x01, 0x00}}},
+-    {{{    14,     51,     38}, 0, {     0,      0}, {0x08, 0x75, 0x30, 0x00}}},
+-    {{{    92,     47,     33}, 0, {     0,      0}, {0x36, 0x4b, 0x56, 0x00}}},
+-    {{{    14,     50,    -23}, 0, {     0,      0}, {0x0a, 0x65, 0xb5, 0x00}}},
+-    {{{    92,     47,    -16}, 0, {     0,      0}, {0x47, 0x55, 0xc5, 0x00}}},
+-    {{{    19,    -13,    -42}, 0, {     0,      0}, {0x15, 0xdb, 0x89, 0x00}}},
+-    {{{    96,     -3,    -31}, 0, {     0,      0}, {0x68, 0xf1, 0xba, 0x00}}},
+-    {{{    96,     -3,     48}, 0, {     0,      0}, {0x71, 0xf8, 0x38, 0x00}}},
+-    {{{    19,    -13,    -42}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    22,    -52,      8}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    18,    -12,     58}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    14,     51,     38}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    14,     50,    -23}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-};
+-
+-// 0x04015620 - 0x040156B0
+-const Gfx mario_medium_poly_left_thigh_dl[] = {
+-    gsSPVertex(mario_medium_poly_left_thigh_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 5,  3,  6, 0x0,  7,  5,  6, 0x0),
+-    gsSP2Triangles( 1,  7,  2, 0x0,  7,  8,  2, 0x0),
+-    gsSP2Triangles( 6,  8,  7, 0x0,  3,  4,  6, 0x0),
+-    gsSP2Triangles( 0,  9,  4, 0x0,  2,  9,  0, 0x0),
+-    gsSP2Triangles( 9,  2,  8, 0x0, 10, 11, 12, 0x0),
+-    gsSP2Triangles(12, 13, 10, 0x0, 13, 14, 10, 0x0),
+-    gsSP2Triangles( 8,  6,  9, 0x0,  6,  4,  9, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040156B0 - 0x040156E0
+-const Gfx mario_medium_poly_left_thigh[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_left_thigh_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040156E0 - 0x04015758
+-const Gfx mario_metal_medium_poly_left_thigh[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_left_thigh_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015758
+-static const Vtx mario_medium_poly_left_leg_shared_dl_vertex[] = {
+-    {{{     5,    -35,      9}, 0, {     0,      0}, {0xca, 0x8e, 0x00, 0x00}}},
+-    {{{    65,    -44,     10}, 0, {     0,      0}, {0xee, 0x83, 0x01, 0x00}}},
+-    {{{    66,     -9,     54}, 0, {     0,      0}, {0xf2, 0xdc, 0x78, 0x00}}},
+-    {{{     9,     46,     33}, 0, {     0,      0}, {0xd5, 0x61, 0x45, 0x00}}},
+-    {{{    69,     47,     37}, 0, {     0,      0}, {0xf9, 0x66, 0x4b, 0x00}}},
+-    {{{    70,     47,    -18}, 0, {     0,      0}, {0xfb, 0x74, 0xcf, 0x00}}},
+-    {{{    10,     46,    -16}, 0, {     0,      0}, {0xaf, 0x40, 0xb7, 0x00}}},
+-    {{{    67,     -9,    -36}, 0, {     0,      0}, {0xf4, 0xda, 0x88, 0x00}}},
+-    {{{     7,     -4,    -31}, 0, {     0,      0}, {0x9b, 0xee, 0xb6, 0x00}}},
+-    {{{     7,     -4,     49}, 0, {     0,      0}, {0x8f, 0xf5, 0x37, 0x00}}},
+-    {{{    66,     -9,     54}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    65,    -44,     10}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    67,     -9,    -36}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    70,     47,    -18}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    69,     47,     37}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-};
+-
+-// 0x04015848 - 0x040158D8
+-const Gfx mario_medium_poly_left_leg_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_left_leg_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
+-    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
+-    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
+-    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0,  8,  0,  9, 0x0),
+-    gsSP2Triangles( 9,  6,  8, 0x0,  9,  3,  6, 0x0),
+-    gsSP2Triangles(12, 13, 10, 0x0, 13, 14, 10, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040158D8
+-static const Vtx mario_medium_poly_left_foot_shared_dl_vertex_group1[] = {
+-    {{{   108,     10,     36}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   108,      9,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    75,     21,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    76,     22,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -14,     55,    -27}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -13,     55,     49}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -41,     65,      9}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    41,    -18,     54}, 0, {     0,      0}, {0x04, 0xb4, 0x65, 0x00}}},
+-    {{{    76,     22,     61}, 0, {     0,      0}, {0x12, 0xdd, 0x78, 0x00}}},
+-    {{{   -13,     55,     49}, 0, {     0,      0}, {0xce, 0x07, 0x74, 0x00}}},
+-    {{{    42,    -11,    -33}, 0, {     0,      0}, {0xff, 0xb8, 0x98, 0x00}}},
+-    {{{   -37,     12,    -16}, 0, {     0,      0}, {0xa1, 0xcf, 0xbd, 0x00}}},
+-    {{{   -14,     55,    -27}, 0, {     0,      0}, {0xcc, 0x02, 0x8d, 0x00}}},
+-    {{{   -36,     13,     39}, 0, {     0,      0}, {0xa0, 0xd0, 0x42, 0x00}}},
+-    {{{    75,     21,    -41}, 0, {     0,      0}, {0x09, 0xda, 0x88, 0x00}}},
+-    {{{   108,      9,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+-};
+-
+-// 0x040159D8
+-static const Vtx mario_medium_poly_left_foot_shared_dl_vertex_group2[] = {
+-    {{{    78,    -30,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
+-    {{{   108,      9,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+-    {{{   108,     10,     36}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
+-    {{{    42,    -11,    -33}, 0, {     0,      0}, {0xff, 0xb8, 0x98, 0x00}}},
+-    {{{    76,     22,     61}, 0, {     0,      0}, {0x12, 0xdd, 0x78, 0x00}}},
+-    {{{    41,    -18,     54}, 0, {     0,      0}, {0x04, 0xb4, 0x65, 0x00}}},
+-    {{{   -36,     13,     39}, 0, {     0,      0}, {0xa0, 0xd0, 0x42, 0x00}}},
+-    {{{   -13,     55,     49}, 0, {     0,      0}, {0xce, 0x07, 0x74, 0x00}}},
+-    {{{   -41,     65,      9}, 0, {     0,      0}, {0x83, 0x15, 0x00, 0x00}}},
+-    {{{   -14,     55,    -27}, 0, {     0,      0}, {0xcc, 0x02, 0x8d, 0x00}}},
+-    {{{   -37,     12,    -16}, 0, {     0,      0}, {0xa1, 0xcf, 0xbd, 0x00}}},
+-    {{{    25,    -34,     11}, 0, {     0,      0}, {0xdd, 0x87, 0xfb, 0x00}}},
+-};
+-
+-// 0x04015A98 - 0x04015B60
+-const Gfx mario_medium_poly_left_foot_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_left_foot_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
+-    gsSP2Triangles( 6,  5,  4, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 13,  7,  9, 0x0),
+-    gsSP2Triangles(10, 12, 14, 0x0, 10, 14, 15, 0x0),
+-    gsSPVertex(mario_medium_poly_left_foot_shared_dl_vertex_group2, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+-    gsSP2Triangles( 2,  4,  5, 0x0,  5,  0,  2, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles(11,  3,  0, 0x0, 10,  3, 11, 0x0),
+-    gsSP2Triangles( 0,  5, 11, 0x0, 11,  5,  6, 0x0),
+-    gsSP2Triangles(11,  6, 10, 0x0,  6,  8, 10, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015B60 - 0x04015B80
+-const Gfx mario_medium_poly_left_foot[] = {
+-    gsSPLight(&mario_brown1_lights_group.l, 1),
+-    gsSPLight(&mario_brown1_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_left_foot_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015B80
+-static const Vtx mario_medium_poly_right_thigh_shared_dl_vertex[] = {
+-    {{{    18,    -11,    -58}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    23,    -52,     -9}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    20,    -14,     41}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    97,     -3,     30}, 0, {     0,      0}, {0x69, 0xf1, 0x45, 0x00}}},
+-    {{{    99,    -33,    -10}, 0, {     0,      0}, {0x40, 0x93, 0xfc, 0x00}}},
+-    {{{    95,     -1,    -49}, 0, {     0,      0}, {0x71, 0xfb, 0xc7, 0x00}}},
+-    {{{    18,    -11,    -58}, 0, {     0,      0}, {0x12, 0xe0, 0x87, 0x00}}},
+-    {{{    91,     49,    -33}, 0, {     0,      0}, {0x34, 0x4e, 0xab, 0x00}}},
+-    {{{    92,     48,     16}, 0, {     0,      0}, {0x47, 0x55, 0x3d, 0x00}}},
+-    {{{    13,     52,    -37}, 0, {     0,      0}, {0x06, 0x76, 0xd3, 0x00}}},
+-    {{{    20,    -14,     41}, 0, {     0,      0}, {0x16, 0xd9, 0x76, 0x00}}},
+-    {{{    23,    -52,     -9}, 0, {     0,      0}, {0x1d, 0x85, 0xfd, 0x00}}},
+-    {{{    14,     50,     24}, 0, {     0,      0}, {0x0a, 0x63, 0x4d, 0x00}}},
+-    {{{    13,     52,    -37}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    14,     50,     24}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-};
+-
+-// 0x04015C70 - 0x04015D00
+-const Gfx mario_medium_poly_right_thigh_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_right_thigh_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  5,  4, 0x0,  7,  5,  6, 0x0),
+-    gsSP2Triangles( 8,  7,  9, 0x0, 10,  3,  8, 0x0),
+-    gsSP2Triangles( 4,  3, 10, 0x0,  4, 10, 11, 0x0),
+-    gsSP2Triangles( 8, 12, 10, 0x0,  8,  9, 12, 0x0),
+-    gsSP2Triangles( 7,  6,  9, 0x0,  4, 11,  6, 0x0),
+-    gsSP2Triangles( 5,  8,  3, 0x0,  5,  7,  8, 0x0),
+-    gsSP2Triangles( 2, 13,  0, 0x0,  2, 14, 13, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015D00 - 0x04015D20
+-const Gfx mario_medium_poly_right_thigh[] = {
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_right_thigh_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015D20
+-static const Vtx mario_medium_poly_right_leg_shared_dl_vertex[] = {
+-    {{{     6,     -1,    -50}, 0, {     0,      0}, {0x8e, 0xf7, 0xca, 0x00}}},
+-    {{{     5,    -34,    -11}, 0, {     0,      0}, {0xc9, 0x8e, 0xfe, 0x00}}},
+-    {{{     7,     -4,     30}, 0, {     0,      0}, {0x9b, 0xed, 0x4a, 0x00}}},
+-    {{{    67,     -9,     34}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    64,    -43,    -12}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    66,     -7,    -56}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    66,     -7,    -56}, 0, {     0,      0}, {0xf1, 0xde, 0x87, 0x00}}},
+-    {{{    10,     48,    -33}, 0, {     0,      0}, {0xd6, 0x63, 0xbe, 0x00}}},
+-    {{{    10,     46,     16}, 0, {     0,      0}, {0xb1, 0x3f, 0x4b, 0x00}}},
+-    {{{    71,     47,     18}, 0, {     0,      0}, {0xfd, 0x73, 0x33, 0x00}}},
+-    {{{    67,     -9,     34}, 0, {     0,      0}, {0xf4, 0xd8, 0x77, 0x00}}},
+-    {{{    64,    -43,    -12}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
+-    {{{    70,     49,    -37}, 0, {     0,      0}, {0xfa, 0x67, 0xb8, 0x00}}},
+-    {{{    71,     47,     18}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    70,     49,    -37}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-};
+-
+-// 0x04015E10 - 0x04015EA0
+-const Gfx mario_medium_poly_right_leg_shared_dl[] = {
+-    gsSPVertex(mario_medium_poly_right_leg_shared_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 1,  0,  6, 0x0,  6,  0,  7, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0,  8,  2, 10, 0x0),
+-    gsSP2Triangles(10,  2,  1, 0x0, 11, 10,  1, 0x0),
+-    gsSP2Triangles(10,  9,  8, 0x0,  9, 12,  7, 0x0),
+-    gsSP2Triangles(12,  6,  7, 0x0,  6, 11,  1, 0x0),
+-    gsSP2Triangles( 5, 13,  3, 0x0,  5, 14, 13, 0x0),
+-    gsSP2Triangles( 2,  8,  0, 0x0,  8,  7,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04015EA0
+-static const Vtx mario_medium_poly_right_foot_dl_vertex_group1[] = {
+-    {{{   -38,     12,     14}, 0, {     0,      0}, {0xa1, 0xcf, 0x43, 0x00}}},
+-    {{{   -43,     65,    -12}, 0, {     0,      0}, {0x83, 0x13, 0xff, 0x00}}},
+-    {{{   -36,     12,    -41}, 0, {     0,      0}, {0xa1, 0xce, 0xbe, 0x00}}},
+-    {{{    25,    -34,    -11}, 0, {     0,      0}, {0xdf, 0x86, 0x07, 0x00}}},
+-    {{{    41,    -18,    -55}, 0, {     0,      0}, {0x07, 0xb3, 0x9c, 0x00}}},
+-    {{{    79,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
+-    {{{    42,    -10,     32}, 0, {     0,      0}, {0xff, 0xba, 0x69, 0x00}}},
+-    {{{   -15,     55,     24}, 0, {     0,      0}, {0xcb, 0x04, 0x73, 0x00}}},
+-    {{{   -14,     54,    -51}, 0, {     0,      0}, {0xcf, 0x04, 0x8c, 0x00}}},
+-    {{{   108,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
+-    {{{    76,     23,    -62}, 0, {     0,      0}, {0x14, 0xdb, 0x89, 0x00}}},
+-    {{{   107,     12,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
+-    {{{    74,     24,     40}, 0, {     0,      0}, {0x08, 0xdc, 0x79, 0x00}}},
+-    {{{   -15,     55,     24}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -14,     54,    -51}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -43,     65,    -12}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-};
+-
+-// 0x04015FA0
+-static const Vtx mario_medium_poly_right_foot_dl_vertex_group2[] = {
+-    {{{   -15,     55,     24}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{    76,     23,    -62}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -14,     54,    -51}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{    74,     24,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   108,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   107,     12,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-};
+-
+-// 0x04016000 - 0x040160C8
+-const Gfx mario_medium_poly_right_foot_dl[] = {
+-    gsSPVertex(mario_medium_poly_right_foot_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 2,  4,  3, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 3,  6,  0, 0x0,  5,  6,  3, 0x0),
+-    gsSP2Triangles( 0,  7,  1, 0x0,  1,  8,  2, 0x0),
+-    gsSP2Triangles( 9,  5,  4, 0x0,  4, 10,  9, 0x0),
+-    gsSP2Triangles( 6,  5, 11, 0x0,  9, 11,  5, 0x0),
+-    gsSP2Triangles(11, 12,  6, 0x0, 12,  7,  6, 0x0),
+-    gsSP2Triangles( 8,  4,  2, 0x0,  7,  0,  6, 0x0),
+-    gsSP2Triangles( 8, 10,  4, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_medium_poly_right_foot_dl_vertex_group2, 6, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 3,  4,  1, 0x0,  3,  5,  4, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040160C8 - 0x04016108
+-const Gfx mario_medium_poly_right_foot[] = {
+-    gsSPLight(&mario_brown1_lights_group.l, 1),
+-    gsSPLight(&mario_brown1_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_right_foot_dl),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsDPSetEnvColor(255, 255, 255, 255),
+-    gsDPSetAlphaCompare(G_AC_NONE),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016108 - 0x04016148
+-const Gfx mario_metal_medium_poly_right_foot[] = {
+-    gsSPDisplayList(mario_medium_poly_right_foot_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPSetEnvColor(255, 255, 255, 255),
+-    gsDPSetAlphaCompare(G_AC_NONE),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016148
+-static const Vtx mario_seg4_vertex_04016148[] = {
+-    {{{    75,     24,    -60}, 0, {   -74,   -930}, {0x60, 0x27, 0xb8, 0xff}}},
+-    {{{    36,     47,    -76}, 0, {  -174,    168}, {0x2e, 0x36, 0x98, 0xff}}},
+-    {{{    44,     78,    -35}, 0, {   988,     92}, {0x45, 0x65, 0xe2, 0xff}}},
+-    {{{   -26,     49,    -87}, 0, {  -538,   1590}, {0xc4, 0x29, 0x99, 0xff}}},
+-    {{{     1,     87,    -53}, 0, {   638,   1164}, {0x0e, 0x74, 0xd1, 0xff}}},
+-    {{{     1,     87,     54}, 0, {  2522,    702}, {0x11, 0x74, 0x2f, 0xff}}},
+-    {{{     1,     87,     54}, 0, {   272,   1122}, {0x11, 0x74, 0x2f, 0xff}}},
+-    {{{    44,     78,     37}, 0, {   -92,    108}, {0x47, 0x5f, 0x2a, 0xff}}},
+-    {{{    44,     78,    -35}, 0, { -1398,   -128}, {0x45, 0x65, 0xe2, 0xff}}},
+-    {{{   -26,     49,     88}, 0, {  1514,   1490}, {0xc4, 0x29, 0x67, 0xff}}},
+-    {{{    36,     47,     77}, 0, {  1110,    130}, {0x2f, 0x37, 0x68, 0xff}}},
+-    {{{    75,     24,     60}, 0, {   968,   -926}, {0x62, 0x27, 0x46, 0xff}}},
+-};
+-
+-// 0x04016208
+-static const Vtx mario_seg4_vertex_04016208[] = {
+-    {{{    82,     37,     28}, 0, {     0,      0}, {0x71, 0x36, 0x0e, 0xff}}},
+-    {{{    82,     37,    -28}, 0, {     0,      0}, {0x71, 0x35, 0xea, 0xff}}},
+-    {{{    44,     78,    -35}, 0, {     0,      0}, {0x45, 0x65, 0xe2, 0xff}}},
+-    {{{    44,     78,     37}, 0, {     0,      0}, {0x47, 0x5f, 0x2a, 0xff}}},
+-    {{{    95,    -39,    -25}, 0, {     0,      0}, {0x79, 0xe6, 0xe8, 0xff}}},
+-    {{{    95,    -39,     25}, 0, {     0,      0}, {0x75, 0xdb, 0x1d, 0xff}}},
+-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+-    {{{    56,     -4,     79}, 0, {     0,      0}, {0x39, 0x04, 0x71, 0xff}}},
+-    {{{    75,     24,     60}, 0, {     0,      0}, {0x62, 0x27, 0x46, 0xff}}},
+-    {{{    36,     47,     77}, 0, {     0,      0}, {0x2f, 0x37, 0x68, 0xff}}},
+-    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
+-    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
+-    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
+-    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
+-    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
+-    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
+-};
+-
+-// 0x04016308
+-static const Vtx mario_seg4_vertex_04016308[] = {
+-    {{{    36,     47,    -76}, 0, {     0,      0}, {0x2e, 0x36, 0x98, 0xff}}},
+-    {{{    75,     24,    -60}, 0, {     0,      0}, {0x60, 0x27, 0xb8, 0xff}}},
+-    {{{    56,     -4,    -77}, 0, {     0,      0}, {0x38, 0x04, 0x8f, 0xff}}},
+-    {{{     9,      0,    -93}, 0, {     0,      0}, {0x0e, 0x03, 0x82, 0xff}}},
+-    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
+-    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
+-    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
+-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+-    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
+-};
+-
+-// 0x04016398
+-static const Vtx mario_seg4_vertex_04016398[] = {
+-    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
+-    {{{    95,    -39,    -25}, 0, {     0,      0}, {0x79, 0xe6, 0xe8, 0xff}}},
+-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+-    {{{    75,     24,    -60}, 0, {     0,      0}, {0x60, 0x27, 0xb8, 0xff}}},
+-    {{{    82,     37,    -28}, 0, {     0,      0}, {0x71, 0x35, 0xea, 0xff}}},
+-    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
+-    {{{    44,     78,    -35}, 0, {     0,      0}, {0x45, 0x65, 0xe2, 0xff}}},
+-    {{{    75,     24,     60}, 0, {     0,      0}, {0x62, 0x27, 0x46, 0xff}}},
+-    {{{    82,     37,     28}, 0, {     0,      0}, {0x71, 0x36, 0x0e, 0xff}}},
+-    {{{    44,     78,     37}, 0, {     0,      0}, {0x47, 0x5f, 0x2a, 0xff}}},
+-    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
+-    {{{    95,    -39,     25}, 0, {     0,      0}, {0x75, 0xdb, 0x1d, 0xff}}},
+-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+-    {{{     1,     87,    -53}, 0, {     0,      0}, {0x0e, 0x74, 0xd1, 0xff}}},
+-    {{{   -30,     88,     42}, 0, {     0,      0}, {0xd3, 0x72, 0x1f, 0xff}}},
+-    {{{     1,     87,     54}, 0, {     0,      0}, {0x11, 0x74, 0x2f, 0xff}}},
+-};
+-
+-// 0x04016498
+-static const Vtx mario_seg4_vertex_04016498[] = {
+-    {{{     1,     87,    -53}, 0, {     0,      0}, {0x0e, 0x74, 0xd1, 0xff}}},
+-    {{{   -30,     88,    -41}, 0, {     0,      0}, {0xc7, 0x6a, 0xda, 0xff}}},
+-    {{{   -30,     88,     42}, 0, {     0,      0}, {0xd3, 0x72, 0x1f, 0xff}}},
+-    {{{   -26,     49,    -87}, 0, {     0,      0}, {0xc4, 0x29, 0x99, 0xff}}},
+-    {{{   -71,     56,      0}, 0, {     0,      0}, {0x89, 0x2b, 0x00, 0xff}}},
+-    {{{   -26,     49,     88}, 0, {     0,      0}, {0xc4, 0x29, 0x67, 0xff}}},
+-    {{{     1,     87,     54}, 0, {     0,      0}, {0x11, 0x74, 0x2f, 0xff}}},
+-    {{{   -59,    -44,      0}, 0, {     0,      0}, {0x88, 0xd8, 0x00, 0xff}}},
+-    {{{   -26,    -72,    -38}, 0, {     0,      0}, {0xda, 0x8b, 0xe5, 0xff}}},
+-    {{{   -26,    -72,     39}, 0, {     0,      0}, {0xda, 0x8b, 0x1b, 0xff}}},
+-    {{{   -26,    -41,     85}, 0, {     0,      0}, {0xcc, 0xc2, 0x61, 0xff}}},
+-    {{{   -26,    -41,    -84}, 0, {     0,      0}, {0xcc, 0xc2, 0x9f, 0xff}}},
+-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+-    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
+-    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
+-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+-};
+-
+-// 0x04016598
+-static const Vtx mario_seg4_vertex_04016598[] = {
+-    {{{   -26,     49,     88}, 0, {     0,      0}, {0xc4, 0x29, 0x67, 0xff}}},
+-    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
+-    {{{    36,     47,     77}, 0, {     0,      0}, {0x2f, 0x37, 0x68, 0xff}}},
+-    {{{     9,      0,    -93}, 0, {     0,      0}, {0x0e, 0x03, 0x82, 0xff}}},
+-    {{{   -26,     49,    -87}, 0, {     0,      0}, {0xc4, 0x29, 0x99, 0xff}}},
+-    {{{    36,     47,    -76}, 0, {     0,      0}, {0x2e, 0x36, 0x98, 0xff}}},
+-    {{{   -26,    -41,    -84}, 0, {     0,      0}, {0xcc, 0xc2, 0x9f, 0xff}}},
+-    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
+-    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
+-    {{{   -26,    -72,    -38}, 0, {     0,      0}, {0xda, 0x8b, 0xe5, 0xff}}},
+-    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+-    {{{   -26,    -72,     39}, 0, {     0,      0}, {0xda, 0x8b, 0x1b, 0xff}}},
+-    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+-};
+-
+-// 0x04016668 - 0x040166B8
+-const Gfx mario_medium_poly_yellow_button_dl[] = {
+-    gsSPVertex(mario_seg4_vertex_04016148, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 2,  1,  4, 0x0,  4,  5,  2, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  6, 0x0),
+-    gsSP2Triangles( 6, 10,  7, 0x0,  7, 10, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040166B8 - 0x04016800
+-const Gfx mario_medium_poly_pants_overalls_shared_dl[] = {
+-    gsSPVertex(mario_seg4_vertex_04016398, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+-    gsSP2Triangles( 3,  4,  1, 0x0,  2,  5,  0, 0x0),
+-    gsSP2Triangles( 4,  3,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 7, 10, 11, 0x0,  8,  7, 11, 0x0),
+-    gsSP2Triangles(11, 10,  2, 0x0, 10, 12,  2, 0x0),
+-    gsSP1Triangle(13, 14, 15, 0x0),
+-    gsSPVertex(mario_seg4_vertex_04016498, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 4,  2,  1, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  2,  4, 0x0,  6,  2,  5, 0x0),
+-    gsSP2Triangles( 4,  3,  7, 0x0,  8,  9,  7, 0x0),
+-    gsSP2Triangles( 5,  4,  7, 0x0,  9, 10,  7, 0x0),
+-    gsSP2Triangles(11,  8,  7, 0x0,  3, 11,  7, 0x0),
+-    gsSP2Triangles( 7, 10,  5, 0x0, 10,  9, 12, 0x0),
+-    gsSP2Triangles(10, 13, 14, 0x0, 12, 13, 10, 0x0),
+-    gsSP2Triangles( 5, 10, 14, 0x0,  9,  8, 15, 0x0),
+-    gsSPVertex(mario_seg4_vertex_04016598, 13, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  4,  3, 0x0,  6,  3,  7, 0x0),
+-    gsSP2Triangles( 8,  9,  6, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 9,  8, 10, 0x0, 11, 10, 12, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016800 - 0x040168A0
+-const Gfx mario_medium_poly_tshirt_shared_dl[] = {
+-    gsSPVertex(mario_seg4_vertex_04016208, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 1,  0,  4, 0x0,  0,  5,  4, 0x0),
+-    gsSP2Triangles( 6,  4,  5, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 9, 10,  7, 0x0,  7, 10, 11, 0x0),
+-    gsSP2Triangles( 7, 12,  8, 0x0, 11, 12,  7, 0x0),
+-    gsSP1Triangle(13, 14, 15, 0x0),
+-    gsSPVertex(mario_seg4_vertex_04016308, 9, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 1,  4,  2, 0x0,  2,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  3,  2, 0x0,  6,  7,  8, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040168A0 - 0x040168C8
+-const Gfx mario_medium_poly_torso_dl[] = {
+-    gsSPDisplayList(mario_medium_poly_pants_overalls_shared_dl),
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_medium_poly_tshirt_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040168C8 - 0x04016948
+-const Gfx mario_medium_poly_torso[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_medium_poly_yellow_button_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_medium_poly_torso_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016948 - 0x04016968
+-const Gfx mario_metal_medium_poly_torso[] = {
+-    gsSPDisplayList(mario_medium_poly_yellow_button_dl),
+-    gsSPDisplayList(mario_medium_poly_pants_overalls_shared_dl),
+-    gsSPDisplayList(mario_medium_poly_tshirt_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016968
+-static const Vtx mario_low_poly_butt_dl_vertex[] = {
+-    {{{   -37,    -37,      0}, 0, {     0,      0}, {0x82, 0xf5, 0x00, 0x00}}},
+-    {{{    -2,     52,     92}, 0, {     0,      0}, {0xb1, 0x3c, 0x4e, 0x00}}},
+-    {{{   -35,     55,      0}, 0, {     0,      0}, {0x97, 0x45, 0x00, 0x00}}},
+-    {{{    -7,    -86,     85}, 0, {     0,      0}, {0xbf, 0xc4, 0x5a, 0x00}}},
+-    {{{    49,     46,     96}, 0, {     0,      0}, {0x4b, 0x1d, 0x61, 0x00}}},
+-    {{{    -7,    -86,    -85}, 0, {     0,      0}, {0xcf, 0xaa, 0xb2, 0x00}}},
+-    {{{    -2,     52,    -92}, 0, {     0,      0}, {0xb0, 0x3b, 0xb2, 0x00}}},
+-    {{{    48,     44,    -98}, 0, {     0,      0}, {0x29, 0x22, 0x8e, 0x00}}},
+-    {{{    46,    -71,    -89}, 0, {     0,      0}, {0x73, 0xd9, 0xdd, 0x00}}},
+-    {{{    46,    -71,     89}, 0, {     0,      0}, {0x44, 0xa1, 0x2f, 0x00}}},
+-    {{{    49,     96,      0}, 0, {     0,      0}, {0x2b, 0x77, 0x00, 0x00}}},
+-};
+-
+-// 0x04016A18 - 0x04016AB8
+-const Gfx mario_low_poly_butt_dl[] = {
+-    gsSPVertex(mario_low_poly_butt_dl_vertex, 11, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  0,  2,  6, 0x0),
+-    gsSP2Triangles( 6,  5,  0, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 7,  8,  5, 0x0,  3,  9,  4, 0x0),
+-    gsSP2Triangles( 8,  7, 10, 0x0,  4,  9,  8, 0x0),
+-    gsSP2Triangles( 5,  9,  3, 0x0,  3,  0,  5, 0x0),
+-    gsSP2Triangles( 5,  8,  9, 0x0, 10,  7,  6, 0x0),
+-    gsSP2Triangles(10,  4,  8, 0x0,  2,  1, 10, 0x0),
+-    gsSP2Triangles( 6,  2, 10, 0x0,  1,  4, 10, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016AB8 - 0x04016AE8
+-const Gfx mario_low_poly_butt[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_butt_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016AE8 - 0x04016B60
+-const Gfx mario_metal_low_poly_butt[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_butt_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016B60
+-static const Vtx mario_low_poly_left_arm_shared_dl_vertex[] = {
+-    {{{    -6,     28,     10}, 0, {     0,      0}, {0x09, 0x65, 0xb5, 0x00}}},
+-    {{{    72,     21,      8}, 0, {     0,      0}, {0x44, 0x4d, 0x48, 0x00}}},
+-    {{{    71,    -11,    -34}, 0, {     0,      0}, {0x3f, 0x57, 0xbe, 0x00}}},
+-    {{{    -8,    -30,     31}, 0, {     0,      0}, {0x09, 0x26, 0x78, 0x00}}},
+-    {{{    71,    -30,     23}, 0, {     0,      0}, {0x5e, 0x15, 0x51, 0x00}}},
+-    {{{    -6,     28,     10}, 0, {     0,      0}, {0x07, 0x29, 0x77, 0x00}}},
+-    {{{    -8,     -7,    -41}, 0, {     0,      0}, {0x0b, 0x67, 0xb8, 0x00}}},
+-    {{{    -8,    -30,     31}, 0, {     0,      0}, {0xa4, 0xad, 0xe5, 0x00}}},
+-    {{{    -6,     28,     10}, 0, {     0,      0}, {0x81, 0x02, 0x00, 0x00}}},
+-    {{{    -8,     -7,    -41}, 0, {     0,      0}, {0xa4, 0xad, 0xe5, 0x00}}},
+-    {{{    71,    -11,    -34}, 0, {     0,      0}, {0xfd, 0x88, 0xd9, 0x00}}},
+-    {{{    71,    -30,     23}, 0, {     0,      0}, {0xfd, 0x88, 0xd9, 0x00}}},
+-};
+-
+-// 0x04016C20 - 0x04016C70
+-const Gfx mario_low_poly_left_arm_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_left_arm_shared_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  3,  1, 0x0,  6,  0,  2, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0,  2,  1,  4, 0x0),
+-    gsSP2Triangles( 7,  9, 10, 0x0,  7, 10, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016C70 - 0x04016C90
+-const Gfx mario_low_poly_left_arm[] = {
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_left_arm_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016C90
+-static const Vtx mario_low_poly_left_forearm_shared_dl_vertex[] = {
+-    {{{    -5,     20,      6}, 0, {     0,      0}, {0x05, 0x62, 0xb0, 0x00}}},
+-    {{{    67,     16,      5}, 0, {     0,      0}, {0x43, 0x4b, 0x4c, 0x00}}},
+-    {{{    67,    -14,    -31}, 0, {     0,      0}, {0x3c, 0x55, 0xba, 0x00}}},
+-    {{{    -5,    -30,     21}, 0, {     0,      0}, {0x05, 0x20, 0x7a, 0x00}}},
+-    {{{    67,    -30,     17}, 0, {     0,      0}, {0x5c, 0x14, 0x54, 0x00}}},
+-    {{{    -5,     20,      6}, 0, {     0,      0}, {0x04, 0x22, 0x7a, 0x00}}},
+-    {{{    -5,    -12,    -35}, 0, {     0,      0}, {0x07, 0x63, 0xb2, 0x00}}},
+-    {{{    -5,    -30,     21}, 0, {     0,      0}, {0xa5, 0xad, 0xe5, 0x00}}},
+-    {{{    -5,     20,      6}, 0, {     0,      0}, {0x81, 0x01, 0x00, 0x00}}},
+-    {{{    -5,    -12,    -35}, 0, {     0,      0}, {0xa5, 0xad, 0xe5, 0x00}}},
+-    {{{    67,    -30,     17}, 0, {     0,      0}, {0xfe, 0x88, 0xd9, 0x00}}},
+-    {{{    67,    -14,    -31}, 0, {     0,      0}, {0xfe, 0x88, 0xd9, 0x00}}},
+-};
+-
+-// 0x04016D50 - 0x04016DA0
+-const Gfx mario_low_poly_left_forearm_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_left_forearm_shared_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  3,  1, 0x0,  6,  0,  2, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0,  2,  1,  4, 0x0),
+-    gsSP2Triangles(10,  7,  9, 0x0, 10,  9, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016DA0
+-static const Vtx mario_low_poly_left_hand_closed_shared_dl_vertex[] = {
+-    {{{    -6,     34,    -25}, 0, {     0,      0}, {0xa0, 0x13, 0xb0, 0x00}}},
+-    {{{    -9,     39,     24}, 0, {     0,      0}, {0xb3, 0x43, 0x4a, 0x00}}},
+-    {{{    91,     80,    -34}, 0, {     0,      0}, {0x13, 0x7c, 0xee, 0x00}}},
+-    {{{    90,     35,     33}, 0, {     0,      0}, {0x41, 0x14, 0x6b, 0x00}}},
+-    {{{    20,    -34,     21}, 0, {     0,      0}, {0xd4, 0x9a, 0x3c, 0x00}}},
+-    {{{   122,      4,    -45}, 0, {     0,      0}, {0x63, 0xbb, 0x25, 0x00}}},
+-    {{{   122,      4,    -45}, 0, {     0,      0}, {0xf2, 0x15, 0x84, 0x00}}},
+-    {{{    20,    -31,    -44}, 0, {     0,      0}, {0xcb, 0xae, 0xb1, 0x00}}},
+-};
+-
+-// 0x04016E20 - 0x04016E80
+-const Gfx mario_low_poly_left_hand_closed_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_left_hand_closed_shared_dl_vertex, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  3, 0x0,  0,  6,  7, 0x0),
+-    gsSP2Triangles( 0,  2,  6, 0x0,  4,  7,  5, 0x0),
+-    gsSP2Triangles( 3,  1,  4, 0x0,  2,  3,  5, 0x0),
+-    gsSP2Triangles( 0,  7,  4, 0x0,  4,  1,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016E80 - 0x04016EA0
+-const Gfx mario_low_poly_left_hand_closed[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_left_hand_closed_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016EA0
+-static const Vtx mario_low_poly_right_arm_shared_dl_vertex[] = {
+-    {{{    65,     30,     23}, 0, {     0,      0}, {0x5e, 0xeb, 0x51, 0x00}}},
+-    {{{    66,    -21,      8}, 0, {     0,      0}, {0x45, 0xb3, 0x49, 0x00}}},
+-    {{{    65,     11,    -34}, 0, {     0,      0}, {0x40, 0xa9, 0xbf, 0x00}}},
+-    {{{   -10,      7,    -41}, 0, {     0,      0}, {0xa4, 0x52, 0xe5, 0x00}}},
+-    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x81, 0xfe, 0x00, 0x00}}},
+-    {{{   -10,     30,     30}, 0, {     0,      0}, {0xa4, 0x52, 0xe5, 0x00}}},
+-    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x09, 0x9a, 0xb6, 0x00}}},
+-    {{{   -10,      7,    -41}, 0, {     0,      0}, {0x0c, 0x99, 0xb8, 0x00}}},
+-    {{{   -10,     30,     30}, 0, {     0,      0}, {0x0a, 0xdb, 0x78, 0x00}}},
+-    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x07, 0xd8, 0x78, 0x00}}},
+-    {{{    65,     30,     23}, 0, {     0,      0}, {0xfc, 0x78, 0xd9, 0x00}}},
+-    {{{    65,     11,    -34}, 0, {     0,      0}, {0xfc, 0x78, 0xd9, 0x00}}},
+-};
+-
+-// 0x04016F60 - 0x04016FB0
+-const Gfx mario_low_poly_right_arm_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_right_arm_shared_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 2,  6,  7, 0x0,  1,  8,  9, 0x0),
+-    gsSP2Triangles( 1,  0,  8, 0x0,  2,  1,  6, 0x0),
+-    gsSP2Triangles( 5, 10, 11, 0x0,  5, 11,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016FB0 - 0x04016FD0
+-const Gfx mario_low_poly_right_arm[] = {
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_right_arm_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04016FD0
+-static const Vtx mario_low_poly_right_forearm_shared_dl_vertex[] = {
+-    {{{   -13,     12,    -35}, 0, {     0,      0}, {0xa5, 0x53, 0xe5, 0x00}}},
+-    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+-    {{{   -13,     30,     21}, 0, {     0,      0}, {0xa5, 0x53, 0xe5, 0x00}}},
+-    {{{    54,     14,    -31}, 0, {     0,      0}, {0x3d, 0xaa, 0xba, 0x00}}},
+-    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x05, 0x9e, 0xb1, 0x00}}},
+-    {{{   -13,     12,    -35}, 0, {     0,      0}, {0x07, 0x9c, 0xb3, 0x00}}},
+-    {{{    55,    -16,      5}, 0, {     0,      0}, {0x43, 0xb5, 0x4c, 0x00}}},
+-    {{{   -13,     30,     21}, 0, {     0,      0}, {0x05, 0xe0, 0x7a, 0x00}}},
+-    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x04, 0xde, 0x7a, 0x00}}},
+-    {{{    54,     30,     17}, 0, {     0,      0}, {0x5c, 0xed, 0x54, 0x00}}},
+-    {{{    54,     30,     17}, 0, {     0,      0}, {0xfe, 0x78, 0xd8, 0x00}}},
+-    {{{    54,     14,    -31}, 0, {     0,      0}, {0xfe, 0x78, 0xd8, 0x00}}},
+-};
+-
+-// 0x04017090 - 0x040170E0
+-const Gfx mario_low_poly_right_forearm_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_right_forearm_shared_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  6,  9,  7, 0x0),
+-    gsSP2Triangles( 3,  6,  4, 0x0,  2, 10, 11, 0x0),
+-    gsSP2Triangles( 2, 11,  0, 0x0,  9,  6,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040170E0
+-static const Vtx mario_low_poly_right_hand_closed_dl_vertex[] = {
+-    {{{    85,    -38,    -32}, 0, {     0,      0}, {0x3d, 0xe3, 0x96, 0x00}}},
+-    {{{   -15,    -35,    -22}, 0, {     0,      0}, {0x99, 0xdc, 0xc1, 0x00}}},
+-    {{{    17,     37,    -22}, 0, {     0,      0}, {0xfe, 0x69, 0xb9, 0x00}}},
+-    {{{   116,    -10,     36}, 0, {     0,      0}, {0x66, 0x47, 0x16, 0x00}}},
+-    {{{    82,    -85,     44}, 0, {     0,      0}, {0x13, 0x8a, 0xd8, 0x00}}},
+-    {{{   -15,    -35,     43}, 0, {     0,      0}, {0x9d, 0xec, 0x4c, 0x00}}},
+-    {{{    82,    -85,     44}, 0, {     0,      0}, {0x02, 0x15, 0x7d, 0x00}}},
+-    {{{    14,     30,     26}, 0, {     0,      0}, {0xca, 0x50, 0x51, 0x00}}},
+-};
+-
+-// 0x04017160 - 0x040171C0
+-const Gfx mario_low_poly_right_hand_closed_dl[] = {
+-    gsSPVertex(mario_low_poly_right_hand_closed_dl_vertex, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  0,  3, 0x0,  4,  5,  1, 0x0),
+-    gsSP2Triangles( 6,  3,  7, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 0,  4,  1, 0x0,  3,  2,  7, 0x0),
+-    gsSP2Triangles( 1,  5,  7, 0x0,  7,  2,  1, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040171C0 - 0x040171E0
+-const Gfx mario_low_poly_right_hand_closed[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_right_hand_closed_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040171E0 - 0x04017210
+-const Gfx mario_metal_low_poly_right_hand_closed[] = {
+-    gsSPDisplayList(mario_low_poly_right_hand_closed_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017210
+-static const Vtx mario_low_poly_left_thigh_dl_vertex[] = {
+-    {{{    10,     51,     45}, 0, {     0,      0}, {0x08, 0x73, 0x34, 0x00}}},
+-    {{{    17,    -44,     58}, 0, {     0,      0}, {0x0a, 0x11, 0x7d, 0x00}}},
+-    {{{    94,     48,     38}, 0, {     0,      0}, {0x38, 0x40, 0x5d, 0x00}}},
+-    {{{    11,     51,    -27}, 0, {     0,      0}, {0x0b, 0x5e, 0xad, 0x00}}},
+-    {{{    95,     48,    -19}, 0, {     0,      0}, {0x4a, 0x4f, 0xbf, 0x00}}},
+-    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x0c, 0x0f, 0x83, 0x00}}},
+-    {{{   101,    -28,    -28}, 0, {     0,      0}, {0x5b, 0xca, 0xbc, 0x00}}},
+-    {{{   100,    -28,     48}, 0, {     0,      0}, {0x63, 0xbd, 0x29, 0x00}}},
+-    {{{    17,    -44,     58}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    10,     51,     45}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    11,     51,    -27}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+-    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x18, 0x84, 0x01, 0x00}}},
+-    {{{    17,    -44,     58}, 0, {     0,      0}, {0x18, 0x84, 0x01, 0x00}}},
+-};
+-
+-// 0x040172F0 - 0x04017360
+-const Gfx mario_low_poly_left_thigh_dl[] = {
+-    gsSPVertex(mario_low_poly_left_thigh_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 5,  3,  4, 0x0,  4,  6,  5, 0x0),
+-    gsSP2Triangles( 0,  2,  4, 0x0,  1,  7,  2, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
+-    gsSP2Triangles( 6,  4,  7, 0x0,  4,  2,  7, 0x0),
+-    gsSP2Triangles(12,  7, 13, 0x0, 12,  6,  7, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017360 - 0x04017390
+-const Gfx mario_low_poly_left_thigh[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_left_thigh_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017390 - 0x04017408
+-const Gfx mario_metal_low_poly_left_thigh[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_left_thigh_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017408
+-static const Vtx mario_low_poly_left_leg_shared_dl_vertex[] = {
+-    {{{     7,     47,     38}, 0, {     0,      0}, {0xcf, 0x59, 0x4b, 0x00}}},
+-    {{{    70,    -39,     53}, 0, {     0,      0}, {0xf8, 0x10, 0x7d, 0x00}}},
+-    {{{    75,     52,     42}, 0, {     0,      0}, {0xf4, 0x5e, 0x53, 0x00}}},
+-    {{{    75,     52,    -23}, 0, {     0,      0}, {0xf5, 0x72, 0xca, 0x00}}},
+-    {{{     7,     47,    -20}, 0, {     0,      0}, {0xab, 0x34, 0xb2, 0x00}}},
+-    {{{    71,    -39,    -34}, 0, {     0,      0}, {0xfa, 0x0f, 0x83, 0x00}}},
+-    {{{     3,    -29,    -29}, 0, {     0,      0}, {0xbb, 0xa4, 0xcd, 0x00}}},
+-    {{{     2,    -29,     48}, 0, {     0,      0}, {0x92, 0xdb, 0x31, 0x00}}},
+-    {{{    71,    -39,    -34}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    75,     52,    -23}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    70,    -39,     53}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    75,     52,     42}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+-    {{{    71,    -39,    -34}, 0, {     0,      0}, {0xed, 0x83, 0x00, 0x00}}},
+-    {{{    70,    -39,     53}, 0, {     0,      0}, {0xed, 0x83, 0x00, 0x00}}},
+-};
+-
+-// 0x040174E8 - 0x04017558
+-const Gfx mario_low_poly_left_leg_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_left_leg_shared_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  4, 0x0),
+-    gsSP2Triangles( 3,  4,  0, 0x0,  0,  7,  1, 0x0),
+-    gsSP2Triangles( 7,  4,  6, 0x0,  7,  0,  4, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
+-    gsSP2Triangles( 6, 12, 13, 0x0, 13,  7,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017558
+-static const Vtx mario_low_poly_left_foot_shared_dl_vertex[] = {
+-    {{{   110,     11,     56}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   109,     10,    -33}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -50,     69,    -36}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{   -49,     70,     63}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+-    {{{    74,    -39,     51}, 0, {     0,      0}, {0x13, 0xb0, 0x60, 0x00}}},
+-    {{{   110,     11,     56}, 0, {     0,      0}, {0x5b, 0xbb, 0x36, 0x00}}},
+-    {{{   -49,     70,     63}, 0, {     0,      0}, {0x00, 0xf4, 0x7e, 0x00}}},
+-    {{{    73,    -40,    -25}, 0, {     0,      0}, {0x18, 0x96, 0xc0, 0x00}}},
+-    {{{   -56,     20,    -30}, 0, {     0,      0}, {0xa4, 0xc5, 0xc2, 0x00}}},
+-    {{{   -50,     69,    -36}, 0, {     0,      0}, {0xfe, 0xf0, 0x83, 0x00}}},
+-    {{{   -54,     20,     58}, 0, {     0,      0}, {0x99, 0xc2, 0x26, 0x00}}},
+-    {{{   109,     10,    -33}, 0, {     0,      0}, {0x44, 0xc2, 0xaa, 0x00}}},
+-    {{{   -50,     69,    -36}, 0, {     0,      0}, {0x82, 0x0e, 0x01, 0x00}}},
+-    {{{   -49,     70,     63}, 0, {     0,      0}, {0x82, 0x0e, 0x01, 0x00}}},
+-};
+-
+-// 0x04017638 - 0x040176A8
+-const Gfx mario_low_poly_left_foot_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_left_foot_shared_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles(10,  4,  6, 0x0,  7,  9, 11, 0x0),
+-    gsSP2Triangles(12, 10, 13, 0x0,  7, 10,  8, 0x0),
+-    gsSP2Triangles( 7, 11,  5, 0x0,  5,  4,  7, 0x0),
+-    gsSP2Triangles( 7,  4, 10, 0x0, 12,  8, 10, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040176A8 - 0x040176C8
+-const Gfx mario_low_poly_left_foot[] = {
+-    gsSPLight(&mario_brown1_lights_group.l, 1),
+-    gsSPLight(&mario_brown1_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_left_foot_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040176C8
+-static const Vtx mario_low_poly_right_thigh_shared_dl_vertex[] = {
+-    {{{   102,    -25,    -48}, 0, {     0,      0}, {0x64, 0xbf, 0xd5, 0x00}}},
+-    {{{   103,    -27,     25}, 0, {     0,      0}, {0x5c, 0xc9, 0x42, 0x00}}},
+-    {{{    25,    -45,     35}, 0, {     0,      0}, {0x1b, 0x85, 0xfd, 0x00}}},
+-    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x1b, 0x85, 0xfd, 0x00}}},
+-    {{{    95,     50,    -36}, 0, {     0,      0}, {0x37, 0x42, 0xa3, 0x00}}},
+-    {{{    96,     49,     18}, 0, {     0,      0}, {0x4a, 0x4e, 0x41, 0x00}}},
+-    {{{    25,    -45,     35}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    17,     51,     27}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    15,     53,    -42}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+-    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x09, 0x13, 0x83, 0x00}}},
+-    {{{    15,     53,    -42}, 0, {     0,      0}, {0x07, 0x74, 0xce, 0x00}}},
+-    {{{    25,    -45,     35}, 0, {     0,      0}, {0x0d, 0x0c, 0x7d, 0x00}}},
+-    {{{    17,     51,     27}, 0, {     0,      0}, {0x0b, 0x5c, 0x55, 0x00}}},
+-};
+-
+-// 0x040177A8 - 0x04017818
+-const Gfx mario_low_poly_right_thigh_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_right_thigh_shared_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 0,  4,  5, 0x0,  0,  5,  1, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  6,  8,  9, 0x0),
+-    gsSP2Triangles( 4,  0, 10, 0x0,  5,  4, 11, 0x0),
+-    gsSP2Triangles(12,  1,  5, 0x0,  5, 13, 12, 0x0),
+-    gsSP2Triangles( 5, 11, 13, 0x0,  4, 10, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017818 - 0x04017838
+-const Gfx mario_low_poly_right_thigh[] = {
+-    gsSPLight(&mario_blue_lights_group.l, 1),
+-    gsSPLight(&mario_blue_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_right_thigh_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017838
+-static const Vtx mario_low_poly_right_leg_shared_dl_vertex[] = {
+-    {{{     2,    -29,     27}, 0, {     0,      0}, {0xba, 0xa3, 0x31, 0x00}}},
+-    {{{     1,    -26,    -50}, 0, {     0,      0}, {0x91, 0xdd, 0xcf, 0x00}}},
+-    {{{    68,    -37,    -56}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
+-    {{{    70,    -40,     30}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
+-    {{{    68,    -37,    -56}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    74,     54,    -43}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    75,     52,     21}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{    70,    -40,     30}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+-    {{{     6,     47,     19}, 0, {     0,      0}, {0xad, 0x33, 0x50, 0x00}}},
+-    {{{     6,     49,    -38}, 0, {     0,      0}, {0xcf, 0x5b, 0xb7, 0x00}}},
+-    {{{    68,    -37,    -56}, 0, {     0,      0}, {0xf8, 0x13, 0x83, 0x00}}},
+-    {{{    75,     52,     21}, 0, {     0,      0}, {0xf7, 0x71, 0x38, 0x00}}},
+-    {{{    70,    -40,     30}, 0, {     0,      0}, {0xfb, 0x0c, 0x7e, 0x00}}},
+-    {{{    74,     54,    -43}, 0, {     0,      0}, {0xf4, 0x60, 0xaf, 0x00}}},
+-};
+-
+-// 0x04017918 - 0x04017988
+-const Gfx mario_low_poly_right_leg_shared_dl[] = {
+-    gsSPVertex(mario_low_poly_right_leg_shared_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+-    gsSP2Triangles( 8,  9,  1, 0x0,  0,  8,  1, 0x0),
+-    gsSP2Triangles(10,  1,  9, 0x0,  9,  8, 11, 0x0),
+-    gsSP2Triangles( 8,  0, 12, 0x0, 12, 11,  8, 0x0),
+-    gsSP2Triangles(11, 13,  9, 0x0, 13, 10,  9, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017988
+-static const Vtx mario_low_poly_right_foot_dl_vertex[] = {
+-    {{{   -55,     19,    -59}, 0, {     0,      0}, {0x9a, 0xc0, 0xda, 0x00}}},
+-    {{{   -57,     20,     28}, 0, {     0,      0}, {0xa4, 0xc5, 0x3e, 0x00}}},
+-    {{{   -52,     69,     34}, 0, {     0,      0}, {0x82, 0x0c, 0xfd, 0x00}}},
+-    {{{    73,    -38,    -50}, 0, {     0,      0}, {0x15, 0xae, 0xa2, 0x00}}},
+-    {{{    71,    -37,     25}, 0, {     0,      0}, {0x19, 0x98, 0x42, 0x00}}},
+-    {{{   108,     12,    -55}, 0, {     0,      0}, {0x5c, 0xbc, 0xcc, 0x00}}},
+-    {{{   106,     13,     33}, 0, {     0,      0}, {0x44, 0xc5, 0x58, 0x00}}},
+-    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x82, 0x0c, 0xfd, 0x00}}},
+-    {{{   -52,     69,     34}, 0, {     0,      0}, {0xfd, 0xf2, 0x7e, 0x00}}},
+-    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x02, 0xf2, 0x82, 0x00}}},
+-    {{{   -52,     69,     34}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   108,     12,    -55}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-    {{{   106,     13,     33}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+-};
+-
+-// 0x04017A68 - 0x04017AD8
+-const Gfx mario_low_poly_right_foot_dl[] = {
+-    gsSPVertex(mario_low_poly_right_foot_dl_vertex, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  4, 0x0),
+-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  4, 0x0),
+-    gsSP2Triangles( 1,  0,  4, 0x0,  7,  0,  2, 0x0),
+-    gsSP2Triangles( 6,  8,  4, 0x0,  9,  3,  0, 0x0),
+-    gsSP2Triangles( 8,  1,  4, 0x0,  9,  5,  3, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017AD8 - 0x04017B18
+-const Gfx mario_low_poly_right_foot[] = {
+-    gsSPLight(&mario_brown1_lights_group.l, 1),
+-    gsSPLight(&mario_brown1_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_right_foot_dl),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsDPSetEnvColor(255, 255, 255, 255),
+-    gsDPSetAlphaCompare(G_AC_NONE),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017B18 - 0x04017B58
+-const Gfx mario_metal_low_poly_right_foot[] = {
+-    gsSPDisplayList(mario_low_poly_right_foot_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPSetEnvColor(255, 255, 255, 255),
+-    gsDPSetAlphaCompare(G_AC_NONE),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017B58
+-static const Vtx mario_seg4_vertex_04017B58[] = {
+-    {{{   -28,     41,    -88}, 0, {  -396,   1646}, {0xb7, 0x31, 0xa5, 0xff}}},
+-    {{{     0,     98,      0}, 0, {  1968,    722}, {0xf0, 0x7d, 0x00, 0xff}}},
+-    {{{    35,     64,    -82}, 0, {  -390,    132}, {0x29, 0x4b, 0xa3, 0xff}}},
+-    {{{    39,     90,      0}, 0, {  1698,   -280}, {0x4a, 0x67, 0x00, 0xff}}},
+-    {{{   -28,     41,     89}, 0, {  1610,   1512}, {0xd1, 0x37, 0x67, 0xff}}},
+-    {{{    35,     64,     83}, 0, {  1070,    -68}, {0x29, 0x4b, 0x5d, 0xff}}},
+-    {{{     0,     98,      0}, 0, { -1064,    968}, {0xf0, 0x7d, 0x00, 0xff}}},
+-    {{{    39,     90,      0}, 0, { -1146,   -124}, {0x4a, 0x67, 0x00, 0xff}}},
+-};
+-
+-// 0x04017BD8
+-static const Vtx mario_seg4_vertex_04017BD8[] = {
+-    {{{   -28,    -71,     81}, 0, {     0,      0}, {0x9a, 0xbd, 0x20, 0xff}}},
+-    {{{   -28,     41,    -88}, 0, {     0,      0}, {0xb7, 0x31, 0xa5, 0xff}}},
+-    {{{   -28,    -71,    -80}, 0, {     0,      0}, {0xb7, 0xb5, 0xba, 0xff}}},
+-    {{{    39,    -79,    -73}, 0, {     0,      0}, {0x27, 0xb3, 0xa4, 0xff}}},
+-    {{{   -28,     41,     89}, 0, {     0,      0}, {0xd1, 0x37, 0x67, 0xff}}},
+-    {{{   -28,     89,      0}, 0, {     0,      0}, {0x97, 0x46, 0x00, 0xff}}},
+-    {{{    39,    -79,     74}, 0, {     0,      0}, {0x37, 0xba, 0x59, 0xff}}},
+-    {{{    35,     64,     83}, 0, {     0,      0}, {0x29, 0x4b, 0x5d, 0xff}}},
+-    {{{     0,     98,      0}, 0, {     0,      0}, {0xf0, 0x7d, 0x00, 0xff}}},
+-    {{{    35,     64,    -82}, 0, {     0,      0}, {0x29, 0x4b, 0xa3, 0xff}}},
+-    {{{    89,    -45,    -42}, 0, {     0,      0}, {0x70, 0xd0, 0xdf, 0xff}}},
+-    {{{    89,    -45,     43}, 0, {     0,      0}, {0x75, 0xe4, 0x28, 0xff}}},
+-    {{{    74,     26,    -59}, 0, {     0,      0}, {0x61, 0x25, 0xb9, 0xff}}},
+-    {{{    39,     90,      0}, 0, {     0,      0}, {0x4a, 0x67, 0x00, 0xff}}},
+-    {{{    74,     26,     60}, 0, {     0,      0}, {0x61, 0x25, 0x47, 0xff}}},
+-};
+-
+-// 0x04017CC8
+-static const Vtx mario_seg4_vertex_04017CC8[] = {
+-    {{{    74,     26,     60}, 0, {     0,      0}, {0x61, 0x25, 0x47, 0xff}}},
+-    {{{    87,     42,      0}, 0, {     0,      0}, {0x76, 0x2d, 0x00, 0xff}}},
+-    {{{    39,     90,      0}, 0, {     0,      0}, {0x4a, 0x67, 0x00, 0xff}}},
+-    {{{    39,    -79,    -73}, 0, {     0,      0}, {0x27, 0xb3, 0xa4, 0xff}}},
+-    {{{    35,     64,    -82}, 0, {     0,      0}, {0x29, 0x4b, 0xa3, 0xff}}},
+-    {{{    74,     26,    -59}, 0, {     0,      0}, {0x61, 0x25, 0xb9, 0xff}}},
+-    {{{    89,    -45,    -42}, 0, {     0,      0}, {0x70, 0xd0, 0xdf, 0xff}}},
+-    {{{    39,    -79,     74}, 0, {     0,      0}, {0x37, 0xba, 0x59, 0xff}}},
+-    {{{    89,    -45,     43}, 0, {     0,      0}, {0x75, 0xe4, 0x28, 0xff}}},
+-    {{{    35,     64,     83}, 0, {     0,      0}, {0x29, 0x4b, 0x5d, 0xff}}},
+-};
+-
+-// 0x04017D68 - 0x04017D98
+-const Gfx mario_low_poly_yellow_button_dl[] = {
+-    gsSPVertex(mario_seg4_vertex_04017B58, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017D98 - 0x04017E20
+-const Gfx mario_low_poly_pants_overalls_shared_dl[] = {
+-    gsSPVertex(mario_seg4_vertex_04017BD8, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 0,  4,  5, 0x0,  3,  6,  0, 0x0),
+-    gsSP2Triangles( 4,  0,  6, 0x0,  0,  5,  1, 0x0),
+-    gsSP2Triangles( 7,  4,  6, 0x0,  5,  4,  8, 0x0),
+-    gsSP2Triangles( 8,  1,  5, 0x0,  3,  1,  9, 0x0),
+-    gsSP2Triangles( 3,  2,  1, 0x0,  6,  3, 10, 0x0),
+-    gsSP2Triangles(10, 11,  6, 0x0, 12,  9, 13, 0x0),
+-    gsSP1Triangle(13,  7, 14, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017E20 - 0x04017E78
+-const Gfx mario_low_poly_tshirt_shared_dl[] = {
+-    gsSPVertex(mario_seg4_vertex_04017CC8, 10, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 5,  6,  3, 0x0,  2,  1,  5, 0x0),
+-    gsSP2Triangles( 6,  5,  1, 0x0,  7,  8,  0, 0x0),
+-    gsSP2Triangles( 7,  0,  9, 0x0,  8,  6,  1, 0x0),
+-    gsSP1Triangle( 1,  0,  8, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017E78 - 0x04017EA0
+-const Gfx mario_low_poly_torso_dl[] = {
+-    gsSPDisplayList(mario_low_poly_pants_overalls_shared_dl),
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_tshirt_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017EA0 - 0x04017F20
+-const Gfx mario_low_poly_torso[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_yellow_button_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_torso_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017F20 - 0x04017F40
+-const Gfx mario_metal_low_poly_torso[] = {
+-    gsSPDisplayList(mario_low_poly_yellow_button_dl),
+-    gsSPDisplayList(mario_low_poly_pants_overalls_shared_dl),
+-    gsSPDisplayList(mario_low_poly_tshirt_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04017F40
+-static const Vtx mario_low_poly_mario_m_logo_dl_vertex[] = {
+-    {{{   272,     48,     53}, 0, {   904,      0}, {0x42, 0x51, 0x47, 0xff}}},
+-    {{{   174,     79,     -9}, 0, {   452,    816}, {0x51, 0x61, 0xfa, 0xff}}},
+-    {{{   146,     27,     92}, 0, {  1238,    962}, {0x03, 0x3a, 0x70, 0xff}}},
+-    {{{   272,     48,    -52}, 0, {    -2,      0}, {0x62, 0x27, 0xba, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {  -334,    962}, {0x03, 0x39, 0x8f, 0xff}}},
+-};
+-
+-// 0x04017F90
+-static const Vtx mario_low_poly_eyes_cap_on_dl_vertex[] = {
+-    {{{   146,     27,     92}, 0, {  1316,    212}, {0x03, 0x3a, 0x70, 0xff}}},
+-    {{{   168,     79,      0}, 0, {   458,     68}, {0xd9, 0x78, 0x00, 0xff}}},
+-    {{{    88,    101,     33}, 0, {   762,    990}, {0x38, 0x55, 0x4b, 0xff}}},
+-    {{{    88,    101,    -32}, 0, {   154,    990}, {0x1e, 0x5d, 0xb1, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {  -398,    212}, {0x03, 0x39, 0x8f, 0xff}}},
+-};
+-
+-// 0x04017FE0
+-static const Vtx mario_low_poly_mustache_cap_on_dl_vertex[] = {
+-    {{{    88,    101,    -32}, 0, {   398,    214}, {0x1e, 0x5d, 0xb1, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {  1408,   -550}, {0x03, 0x39, 0x8f, 0xff}}},
+-    {{{    34,     39,    -98}, 0, {  1306,    732}, {0xcd, 0x40, 0xa0, 0xff}}},
+-    {{{    44,    113,      0}, 0, {    10,    800}, {0x9c, 0x4d, 0x00, 0xff}}},
+-    {{{    -5,     58,      0}, 0, {   300,   1456}, {0x88, 0x28, 0x00, 0xff}}},
+-    {{{    88,    101,     33}, 0, {   294,    258}, {0x38, 0x55, 0x4b, 0xff}}},
+-    {{{    44,    113,      0}, 0, {    34,    840}, {0x9c, 0x4d, 0x00, 0xff}}},
+-    {{{    34,     39,     99}, 0, {  1314,    634}, {0xcd, 0x40, 0x60, 0xff}}},
+-    {{{   146,     27,     92}, 0, {  1132,   -556}, {0x03, 0x3a, 0x70, 0xff}}},
+-    {{{    -5,     58,      0}, 0, {   470,   1412}, {0x88, 0x28, 0x00, 0xff}}},
+-};
+-
+-// 0x04018080
+-static const Vtx mario_low_poly_face_cap_dl_vertex[] = {
+-    {{{   272,     48,    -52}, 0, {     0,      0}, {0x62, 0x27, 0xba, 0xff}}},
+-    {{{   272,     48,     53}, 0, {     0,      0}, {0x42, 0x51, 0x47, 0xff}}},
+-    {{{   149,    -87,    138}, 0, {     0,      0}, {0x43, 0xb6, 0x4d, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
+-    {{{   149,    -87,   -137}, 0, {     0,      0}, {0x33, 0xc2, 0x9f, 0xff}}},
+-    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
+-    {{{    58,   -114,     81}, 0, {     0,      0}, {0xba, 0xad, 0x40, 0xff}}},
+-    {{{    98,   -165,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+-    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xbc, 0xb8, 0xb2, 0xff}}},
+-    {{{   168,     79,      0}, 0, {     0,      0}, {0xd9, 0x78, 0x00, 0xff}}},
+-    {{{   175,    154,      0}, 0, {     0,      0}, {0xe1, 0x6c, 0xc6, 0xff}}},
+-    {{{   174,     79,     -9}, 0, {     0,      0}, {0x51, 0x61, 0xfa, 0xff}}},
+-};
+-
+-// 0x04018140
+-static const Vtx mario_low_poly_face_part_cap_on_dl_vertex[] = {
+-    {{{    94,    146,     33}, 0, {     0,      0}, {0xff, 0x44, 0x6b, 0xff}}},
+-    {{{    50,    153,      0}, 0, {     0,      0}, {0xad, 0x5f, 0x00, 0xff}}},
+-    {{{    44,    113,      0}, 0, {     0,      0}, {0x9c, 0x4d, 0x00, 0xff}}},
+-    {{{    88,    101,     33}, 0, {     0,      0}, {0x38, 0x55, 0x4b, 0xff}}},
+-    {{{    94,    146,    -32}, 0, {     0,      0}, {0x3b, 0x35, 0x9e, 0xff}}},
+-    {{{    88,    101,    -32}, 0, {     0,      0}, {0x1e, 0x5d, 0xb1, 0xff}}},
+-    {{{    34,     39,     99}, 0, {     0,      0}, {0xcd, 0x40, 0x60, 0xff}}},
+-    {{{    -5,     58,      0}, 0, {     0,      0}, {0x88, 0x28, 0x00, 0xff}}},
+-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+-    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
+-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+-    {{{    34,     39,    -98}, 0, {     0,      0}, {0xcd, 0x40, 0xa0, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
+-};
+-
+-// 0x04018210
+-static const Vtx mario_low_poly_face_back_hair_cap_on_dl_vertex[] = {
+-    {{{    58,   -114,     81}, 0, {     0,      0}, {0xba, 0xad, 0x40, 0xff}}},
+-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+-    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xbc, 0xb8, 0xb2, 0xff}}},
+-    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
+-};
+-
+-// 0x04018270 - 0x04018298
+-const Gfx mario_low_poly_mario_m_logo_dl[] = {
+-    gsSPVertex(mario_low_poly_mario_m_logo_dl_vertex, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP1Triangle( 3,  1,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018298 - 0x040182C0
+-const Gfx mario_low_poly_eyes_cap_on_dl[] = {
+-    gsSPVertex(mario_low_poly_eyes_cap_on_dl_vertex, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
+-    gsSP1Triangle( 3,  2,  1, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040182C0 - 0x04018300
+-const Gfx mario_low_poly_mustache_cap_on_dl[] = {
+-    gsSPVertex(mario_low_poly_mustache_cap_on_dl_vertex, 10, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 7,  8,  5, 0x0,  6,  9,  7, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018300 - 0x04018370
+-const Gfx mario_low_poly_face_part_cap_on_dl[] = {
+-    gsSPVertex(mario_low_poly_face_part_cap_on_dl_vertex, 13, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 2,  1,  4, 0x0,  2,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  1,  0, 0x0,  4,  0,  3, 0x0),
+-    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 9,  6,  8, 0x0,  8,  7, 10, 0x0),
+-    gsSP2Triangles(10,  7, 11, 0x0, 10, 11, 12, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018370 - 0x040183F0
+-const Gfx mario_low_poly_face_cap_dl[] = {
+-    gsSPVertex(mario_low_poly_face_cap_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+-    gsSP2Triangles( 4,  0,  2, 0x0,  2,  1,  5, 0x0),
+-    gsSP2Triangles( 6,  2,  5, 0x0,  6,  7,  2, 0x0),
+-    gsSP2Triangles( 7,  4,  2, 0x0,  3,  4,  8, 0x0),
+-    gsSP2Triangles( 4,  7,  8, 0x0,  9, 10,  3, 0x0),
+-    gsSP2Triangles(10, 11,  3, 0x0,  8,  7,  6, 0x0),
+-    gsSP2Triangles(10,  5, 11, 0x0, 10,  9,  5, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040183F0 - 0x04018420
+-const Gfx mario_low_poly_face_back_hair_cap_on_dl[] = {
+-    gsSPVertex(mario_low_poly_face_back_hair_cap_on_dl_vertex, 6, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  1,  0, 0x0,  3,  2,  5, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018420 - 0x04018460
+-const Gfx mario_low_poly_face_cap_on_dl[] = {
+-    gsSPDisplayList(mario_low_poly_face_part_cap_on_dl),
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_face_cap_dl),
+-    gsSPLight(&mario_brown2_lights_group.l, 1),
+-    gsSPLight(&mario_brown2_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_face_back_hair_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018460 - 0x04018530
+-const Gfx mario_low_poly_cap_on_eyes_front[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018530 - 0x04018600
+-const Gfx mario_low_poly_cap_on_eyes_half_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018600 - 0x040186D0
+-const Gfx mario_low_poly_cap_on_eyes_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040186D0 - 0x040187A0
+-const Gfx mario_low_poly_cap_on_eyes_right[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040187A0 - 0x04018870
+-const Gfx mario_low_poly_cap_on_eyes_left[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018870 - 0x04018940
+-const Gfx mario_low_poly_cap_on_eyes_up[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018940 - 0x04018A10
+-const Gfx mario_low_poly_cap_on_eyes_down[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018A10 - 0x04018AE0
+-const Gfx mario_low_poly_cap_on_eyes_dead[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018AE0 - 0x04018B18
+-const Gfx mario_metal_low_poly_cap_on[] = {
+-    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+-    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+-    gsSPDisplayList(mario_low_poly_face_part_cap_on_dl),
+-    gsSPDisplayList(mario_low_poly_face_cap_dl),
+-    gsSPDisplayList(mario_low_poly_face_back_hair_cap_on_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018B18
+-static const Vtx mario_low_poly_mario_eyes_cap_off_dl_vertex[] = {
+-    {{{   146,     27,     92}, 0, {  1316,    212}, {0x16, 0x25, 0x77, 0xff}}},
+-    {{{   168,     79,      0}, 0, {   458,     68}, {0x27, 0x78, 0x00, 0xff}}},
+-    {{{    88,    101,     33}, 0, {   762,    990}, {0x38, 0x55, 0x4b, 0xff}}},
+-    {{{    88,    101,    -32}, 0, {   154,    990}, {0x1e, 0x5d, 0xb1, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {  -398,    212}, {0x14, 0x26, 0x89, 0xff}}},
+-};
+-
+-// 0x04018B68
+-static const Vtx mario_low_poly_mustache_cap_off_dl_vertex[] = {
+-    {{{    34,     39,    -98}, 0, {  1306,    732}, {0xcd, 0x40, 0xa0, 0xff}}},
+-    {{{    44,    113,      0}, 0, {    10,    800}, {0x9c, 0x4d, 0x00, 0xff}}},
+-    {{{    88,    101,    -32}, 0, {   398,    214}, {0x1e, 0x5d, 0xb1, 0xff}}},
+-    {{{    -5,     58,      0}, 0, {   300,   1456}, {0x88, 0x28, 0x00, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {  1408,   -550}, {0x14, 0x26, 0x89, 0xff}}},
+-    {{{    88,    101,     33}, 0, {   294,    258}, {0x38, 0x55, 0x4b, 0xff}}},
+-    {{{    44,    113,      0}, 0, {    34,    840}, {0x9c, 0x4d, 0x00, 0xff}}},
+-    {{{    34,     39,     99}, 0, {  1314,    634}, {0xcd, 0x40, 0x60, 0xff}}},
+-    {{{    -5,     58,      0}, 0, {   470,   1412}, {0x88, 0x28, 0x00, 0xff}}},
+-    {{{   146,     27,     92}, 0, {  1132,   -556}, {0x16, 0x25, 0x77, 0xff}}},
+-};
+-
+-// 0x04018C08
+-static const Vtx mario_low_poly_face_part_cap_off_dl_vertex[] = {
+-    {{{    44,    113,      0}, 0, {     0,      0}, {0x9c, 0x4d, 0x00, 0xff}}},
+-    {{{    94,    146,    -32}, 0, {     0,      0}, {0x3b, 0x35, 0x9e, 0xff}}},
+-    {{{    88,    101,    -32}, 0, {     0,      0}, {0x1e, 0x5d, 0xb1, 0xff}}},
+-    {{{    50,    153,      0}, 0, {     0,      0}, {0xad, 0x5f, 0x00, 0xff}}},
+-    {{{    88,    101,     33}, 0, {     0,      0}, {0x38, 0x55, 0x4b, 0xff}}},
+-    {{{    94,    146,     33}, 0, {     0,      0}, {0xff, 0x44, 0x6b, 0xff}}},
+-    {{{   146,     27,     92}, 0, {     0,      0}, {0x16, 0x25, 0x77, 0xff}}},
+-    {{{    34,     39,     99}, 0, {     0,      0}, {0xcd, 0x40, 0x60, 0xff}}},
+-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+-    {{{    -5,     58,      0}, 0, {     0,      0}, {0x88, 0x28, 0x00, 0xff}}},
+-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+-    {{{    34,     39,    -98}, 0, {     0,      0}, {0xcd, 0x40, 0xa0, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x14, 0x26, 0x89, 0xff}}},
+-};
+-
+-// 0x04018CD8
+-static const Vtx mario_low_poly_face_hair_cap_off_dl_vertex[] = {
+-    {{{    58,   -114,     81}, 0, {     0,      0}, {0xd3, 0x9b, 0x3d, 0xff}}},
+-    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+-    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+-    {{{   146,     27,     92}, 0, {     0,      0}, {0x16, 0x25, 0x77, 0xff}}},
+-    {{{   167,   -121,     77}, 0, {     0,      0}, {0x3c, 0xad, 0x4a, 0xff}}},
+-    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xd8, 0xa3, 0xb5, 0xff}}},
+-    {{{    90,   -136,      0}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0xff}}},
+-    {{{   146,     27,    -91}, 0, {     0,      0}, {0x14, 0x26, 0x89, 0xff}}},
+-    {{{   167,   -121,    -81}, 0, {     0,      0}, {0x3a, 0xad, 0xb5, 0xff}}},
+-    {{{   218,     48,    -52}, 0, {     0,      0}, {0x5f, 0x3b, 0xc6, 0xff}}},
+-    {{{   168,     79,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+-    {{{   192,    -28,    -80}, 0, {     0,      0}, {0x55, 0xf7, 0xa3, 0xff}}},
+-    {{{   223,    -38,     -1}, 0, {     0,      0}, {0x7b, 0xe2, 0x00, 0xff}}},
+-    {{{   218,     48,     53}, 0, {     0,      0}, {0x60, 0x39, 0x3a, 0xff}}},
+-    {{{   192,    -28,     78}, 0, {     0,      0}, {0x56, 0xf4, 0x5c, 0xff}}},
+-};
+-
+-// 0x04018DC8 - 0x04018DF0
+-const Gfx mario_low_poly_mario_eyes_cap_off_dl[] = {
+-    gsSPVertex(mario_low_poly_mario_eyes_cap_off_dl_vertex, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
+-    gsSP1Triangle( 3,  2,  1, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018DF0 - 0x04018E30
+-const Gfx mario_low_poly_mustache_cap_off_dl[] = {
+-    gsSPVertex(mario_low_poly_mustache_cap_off_dl_vertex, 10, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 2,  4,  0, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 6,  8,  7, 0x0,  7,  9,  5, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018E30 - 0x04018EA0
+-const Gfx mario_low_poly_face_part_cap_off_dl[] = {
+-    gsSPVertex(mario_low_poly_face_part_cap_off_dl_vertex, 13, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  0, 0x0,  5,  3,  0, 0x0),
+-    gsSP2Triangles( 1,  3,  5, 0x0,  2,  1,  4, 0x0),
+-    gsSP2Triangles( 1,  5,  4, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 7,  9,  8, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles(10,  9, 11, 0x0, 10, 11, 12, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018EA0 - 0x04018F68
+-const Gfx mario_low_poly_face_hair_cap_off_dl[] = {
+-    gsSPVertex(mario_low_poly_face_hair_cap_off_dl_vertex, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 0,  4,  3, 0x0,  0,  2,  5, 0x0),
+-    gsSP2Triangles( 5,  6,  0, 0x0,  0,  6,  4, 0x0),
+-    gsSP2Triangles( 5,  2,  7, 0x0,  7,  8,  5, 0x0),
+-    gsSP2Triangles( 8,  6,  5, 0x0,  9,  7, 10, 0x0),
+-    gsSP2Triangles( 7,  9, 11, 0x0,  7, 11,  8, 0x0),
+-    gsSP2Triangles( 6,  8,  4, 0x0,  8, 11, 12, 0x0),
+-    gsSP2Triangles( 4,  8, 12, 0x0, 11,  9, 12, 0x0),
+-    gsSP2Triangles(13, 14, 12, 0x0, 14,  4, 12, 0x0),
+-    gsSP2Triangles( 4, 14,  3, 0x0, 13, 10,  3, 0x0),
+-    gsSP2Triangles(14, 13,  3, 0x0,  9, 10, 13, 0x0),
+-    gsSP1Triangle( 9, 13, 12, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018F68 - 0x04018F90
+-const Gfx mario_low_poly_face_cap_off_dl[] = {
+-    gsSPDisplayList(mario_low_poly_face_part_cap_off_dl),
+-    gsSPLight(&mario_brown2_lights_group.l, 1),
+-    gsSPLight(&mario_brown2_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_face_hair_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04018F90 - 0x04019040
+-const Gfx mario_low_poly_cap_off_eyes_front[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019040 - 0x040190F0
+-const Gfx mario_low_poly_cap_off_eyes_half_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040190F0 - 0x040191A0
+-const Gfx mario_low_poly_cap_off_eyes_closed[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040191A0 - 0x04019250
+-const Gfx mario_low_poly_cap_off_eyes_right[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019250 - 0x04019300
+-const Gfx mario_low_poly_cap_off_eyes_left[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019300 - 0x040193B0
+-const Gfx mario_low_poly_cap_off_eyes_up[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x040193B0 - 0x04019460
+-const Gfx mario_low_poly_cap_off_eyes_down[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019460 - 0x04019510
+-const Gfx mario_low_poly_cap_off_eyes_dead[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_beige_lights_group.l, 1),
+-    gsSPLight(&mario_beige_lights_group.a, 2),
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019510 - 0x04019538
+-const Gfx mario_metal_low_poly_cap_off[] = {
+-    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+-    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+-    gsSPDisplayList(mario_low_poly_face_part_cap_off_dl),
+-    gsSPDisplayList(mario_low_poly_face_hair_cap_off_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019538
+-static const Vtx mario_left_hand_open_shared_dl_vertex_group1[] = {
+-    {{{   121,     73,    -21}, 0, {     0,      0}, {0x47, 0x60, 0x2b, 0x00}}},
+-    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
+-    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
+-    {{{   141,     34,     -7}, 0, {     0,      0}, {0x77, 0x0c, 0x29, 0x00}}},
+-    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
+-    {{{   119,     70,    -42}, 0, {     0,      0}, {0x3d, 0x44, 0xa9, 0x00}}},
+-    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
+-    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
+-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+-    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
+-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+-    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
+-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+-    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
+-};
+-
+-// 0x04019618
+-static const Vtx mario_left_hand_open_shared_dl_vertex_group2[] = {
+-    {{{    -3,     35,     -9}, 0, {     0,      0}, {0xcd, 0x72, 0x13, 0x00}}},
+-    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
+-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+-    {{{     1,    -33,    -23}, 0, {     0,      0}, {0x9c, 0xbb, 0xe0, 0x00}}},
+-    {{{     6,    -38,      7}, 0, {     0,      0}, {0xae, 0xab, 0x2b, 0x00}}},
+-    {{{    -6,     -3,     17}, 0, {     0,      0}, {0x90, 0xda, 0x2d, 0x00}}},
+-    {{{     2,      3,     26}, 0, {     0,      0}, {0xf5, 0x17, 0x7c, 0x00}}},
+-    {{{    20,    -46,     12}, 0, {     0,      0}, {0x26, 0x9e, 0x45, 0x00}}},
+-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+-    {{{   -17,     40,     -8}, 0, {     0,      0}, {0xbc, 0x68, 0x16, 0x00}}},
+-    {{{   -10,     14,    -43}, 0, {     0,      0}, {0xd3, 0x19, 0x8d, 0x00}}},
+-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+-    {{{    13,    -39,    -31}, 0, {     0,      0}, {0x18, 0x9a, 0xba, 0x00}}},
+-    {{{   -20,     22,     -7}, 0, {     0,      0}, {0x83, 0x06, 0x14, 0x00}}},
+-    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
+-};
+-
+-// 0x04019718
+-static const Vtx mario_left_hand_open_shared_dl_vertex_group3[] = {
+-    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
+-    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
+-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+-    {{{    89,    -47,    -37}, 0, {     0,      0}, {0x56, 0xaa, 0xdf, 0x00}}},
+-    {{{    76,    -18,    -48}, 0, {     0,      0}, {0x27, 0x0a, 0x88, 0x00}}},
+-    {{{    89,     -6,    -27}, 0, {     0,      0}, {0x5c, 0xf5, 0xab, 0x00}}},
+-    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
+-    {{{    26,     41,    -41}, 0, {     0,      0}, {0x05, 0x34, 0x8d, 0x00}}},
+-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+-    {{{   141,     34,     -7}, 0, {     0,      0}, {0x77, 0x0c, 0x29, 0x00}}},
+-    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
+-    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
+-    {{{    69,     10,    -36}, 0, {     0,      0}, {0x35, 0x1c, 0x91, 0x00}}},
+-    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
+-    {{{   121,     73,    -21}, 0, {     0,      0}, {0x47, 0x60, 0x2b, 0x00}}},
+-    {{{   119,     70,    -42}, 0, {     0,      0}, {0x3d, 0x44, 0xa9, 0x00}}},
+-};
+-
+-// 0x04019818
+-static const Vtx mario_left_hand_open_shared_dl_vertex_group4[] = {
+-    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
+-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+-    {{{    26,     41,    -41}, 0, {     0,      0}, {0x05, 0x34, 0x8d, 0x00}}},
+-    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
+-    {{{    69,     10,    -36}, 0, {     0,      0}, {0x35, 0x1c, 0x91, 0x00}}},
+-    {{{    89,    -47,    -37}, 0, {     0,      0}, {0x56, 0xaa, 0xdf, 0x00}}},
+-    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
+-    {{{    76,    -18,    -48}, 0, {     0,      0}, {0x27, 0x0a, 0x88, 0x00}}},
+-    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
+-    {{{    89,     -6,    -27}, 0, {     0,      0}, {0x5c, 0xf5, 0xab, 0x00}}},
+-    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
+-    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
+-    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
+-    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
+-    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
+-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+-};
+-
+-// 0x04019918
+-static const Vtx mario_left_hand_open_shared_dl_vertex_group5[] = {
+-    {{{     6,    -38,      7}, 0, {     0,      0}, {0xae, 0xab, 0x2b, 0x00}}},
+-    {{{     1,    -33,    -23}, 0, {     0,      0}, {0x9c, 0xbb, 0xe0, 0x00}}},
+-    {{{    13,    -39,    -31}, 0, {     0,      0}, {0x18, 0x9a, 0xba, 0x00}}},
+-    {{{   -15,      4,    -32}, 0, {     0,      0}, {0x89, 0xdd, 0xe7, 0x00}}},
+-    {{{   -10,     14,    -43}, 0, {     0,      0}, {0xd3, 0x19, 0x8d, 0x00}}},
+-    {{{   -20,     22,     -7}, 0, {     0,      0}, {0x83, 0x06, 0x14, 0x00}}},
+-    {{{    -6,     -3,     17}, 0, {     0,      0}, {0x90, 0xda, 0x2d, 0x00}}},
+-    {{{     2,      3,     26}, 0, {     0,      0}, {0xf5, 0x17, 0x7c, 0x00}}},
+-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+-    {{{     1,     15,    -37}, 0, {     0,      0}, {0xd2, 0x09, 0x8b, 0x00}}},
+-    {{{    -3,     35,     -9}, 0, {     0,      0}, {0xcd, 0x72, 0x13, 0x00}}},
+-    {{{    11,      5,     17}, 0, {     0,      0}, {0xff, 0x1b, 0x7c, 0x00}}},
+-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+-    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+-    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
+-};
+-
+-// 0x04019A18
+-static const Vtx mario_left_hand_open_shared_dl_vertex_group6[] = {
+-    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+-    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+-    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
+-    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+-    {{{    11,      5,     17}, 0, {     0,      0}, {0xff, 0x1b, 0x7c, 0x00}}},
+-};
+-
+-// 0x04019A68 - 0x04019CA0
+-const Gfx mario_left_hand_open_shared_dl[] = {
+-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group1, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  3,  7, 0x0),
+-    gsSP2Triangles( 1,  0,  5, 0x0,  5,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  3,  6, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles( 8, 11,  9, 0x0, 12, 13, 11, 0x0),
+-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 0, 10,  7, 0x0, 11, 10,  0, 0x0),
+-    gsSP2Triangles(12, 13, 11, 0x0,  9,  8, 13, 0x0),
+-    gsSP2Triangles( 7,  5,  8, 0x0, 10, 14,  7, 0x0),
+-    gsSP2Triangles(11, 14, 10, 0x0, 13,  4, 11, 0x0),
+-    gsSP2Triangles( 8,  5, 13, 0x0,  3, 15,  1, 0x0),
+-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  3, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 1,  9, 10, 0x0,  5, 11,  1, 0x0),
+-    gsSP2Triangles(12, 13,  5, 0x0, 14,  9, 15, 0x0),
+-    gsSP1Triangle( 4,  7, 12, 0x0),
+-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  7,  0,  2, 0x0),
+-    gsSP2Triangles( 8,  6,  5, 0x0,  5,  9, 10, 0x0),
+-    gsSP2Triangles(11,  3,  2, 0x0,  2, 12, 11, 0x0),
+-    gsSP2Triangles( 3, 13,  9, 0x0,  6,  0,  7, 0x0),
+-    gsSP2Triangles( 7,  4,  9, 0x0, 10, 14, 15, 0x0),
+-    gsSP1Triangle(15, 14, 11, 0x0),
+-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group5, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 7,  6,  0, 0x0,  2,  8,  9, 0x0),
+-    gsSP2Triangles( 4, 10,  8, 0x0, 11, 10,  4, 0x0),
+-    gsSP2Triangles( 7, 12, 11, 0x0,  9, 12,  7, 0x0),
+-    gsSP2Triangles( 6,  3,  1, 0x0,  6,  5,  3, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0, 14, 10, 11, 0x0),
+-    gsSP2Triangles( 8, 10, 15, 0x0, 10, 14, 15, 0x0),
+-    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group6, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019CA0 - 0x04019CC0
+-const Gfx mario_left_hand_open[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_left_hand_open_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x04019CC0
+-static const Vtx mario_right_hand_open_dl_vertex_group1[] = {
+-    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
+-    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
+-    {{{   125,     71,      9}, 0, {     0,      0}, {0x47, 0x5a, 0xcb, 0x00}}},
+-    {{{   143,     31,     -1}, 0, {     0,      0}, {0x75, 0x06, 0xd2, 0x00}}},
+-    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
+-    {{{   124,     69,     30}, 0, {     0,      0}, {0x44, 0x49, 0x4d, 0x00}}},
+-    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
+-    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
+-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+-    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
+-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+-    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
+-    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
+-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+-};
+-
+-// 0x04019DA0
+-static const Vtx mario_right_hand_open_dl_vertex_group2[] = {
+-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+-    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
+-    {{{     3,     36,      6}, 0, {     0,      0}, {0xce, 0x71, 0xe6, 0x00}}},
+-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+-    {{{     0,     -4,    -15}, 0, {     0,      0}, {0x8d, 0xda, 0xdc, 0x00}}},
+-    {{{    11,    -38,     -3}, 0, {     0,      0}, {0xa9, 0xaa, 0xe0, 0x00}}},
+-    {{{     7,    -30,     26}, 0, {     0,      0}, {0x9b, 0xc0, 0x29, 0x00}}},
+-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+-    {{{    25,    -46,     -9}, 0, {     0,      0}, {0x21, 0x97, 0xc1, 0x00}}},
+-    {{{     7,      1,    -26}, 0, {     0,      0}, {0xee, 0x0d, 0x84, 0x00}}},
+-    {{{    -9,     41,      5}, 0, {     0,      0}, {0xbc, 0x66, 0xe5, 0x00}}},
+-    {{{    -1,     18,     42}, 0, {     0,      0}, {0xd9, 0x23, 0x73, 0x00}}},
+-    {{{    19,    -36,     33}, 0, {     0,      0}, {0x1a, 0xa0, 0x4d, 0x00}}},
+-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+-    {{{   -12,     23,      6}, 0, {     0,      0}, {0x83, 0x07, 0xf1, 0x00}}},
+-    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
+-};
+-
+-// 0x04019EA0
+-static const Vtx mario_right_hand_open_dl_vertex_group3[] = {
+-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+-    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
+-    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
+-    {{{    93,    -45,     36}, 0, {     0,      0}, {0x57, 0xac, 0x23, 0x00}}},
+-    {{{    93,     -5,     22}, 0, {     0,      0}, {0x61, 0xfa, 0x50, 0x00}}},
+-    {{{    81,    -15,     45}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+-    {{{    34,     43,     36}, 0, {     0,      0}, {0x0c, 0x3d, 0x6e, 0x00}}},
+-    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
+-    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
+-    {{{   143,     31,     -1}, 0, {     0,      0}, {0x75, 0x06, 0xd2, 0x00}}},
+-    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
+-    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
+-    {{{    75,     11,     32}, 0, {     0,      0}, {0x3c, 0x23, 0x69, 0x00}}},
+-    {{{   124,     69,     30}, 0, {     0,      0}, {0x44, 0x49, 0x4d, 0x00}}},
+-    {{{   125,     71,      9}, 0, {     0,      0}, {0x47, 0x5a, 0xcb, 0x00}}},
+-};
+-
+-// 0x04019FA0
+-static const Vtx mario_right_hand_open_dl_vertex_group4[] = {
+-    {{{    34,     43,     36}, 0, {     0,      0}, {0x0c, 0x3d, 0x6e, 0x00}}},
+-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+-    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
+-    {{{    75,     11,     32}, 0, {     0,      0}, {0x3c, 0x23, 0x69, 0x00}}},
+-    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
+-    {{{    81,    -15,     45}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+-    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
+-    {{{    93,    -45,     36}, 0, {     0,      0}, {0x57, 0xac, 0x23, 0x00}}},
+-    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
+-    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
+-    {{{    93,     -5,     22}, 0, {     0,      0}, {0x61, 0xfa, 0x50, 0x00}}},
+-    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
+-    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
+-    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
+-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+-    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
+-};
+-
+-// 0x0401A0A0
+-static const Vtx mario_right_hand_open_dl_vertex_group5[] = {
+-    {{{    19,    -36,     33}, 0, {     0,      0}, {0x1a, 0xa0, 0x4d, 0x00}}},
+-    {{{     7,    -30,     26}, 0, {     0,      0}, {0x9b, 0xc0, 0x29, 0x00}}},
+-    {{{    11,    -38,     -3}, 0, {     0,      0}, {0xa9, 0xaa, 0xe0, 0x00}}},
+-    {{{    -1,     18,     42}, 0, {     0,      0}, {0xd9, 0x23, 0x73, 0x00}}},
+-    {{{    -7,      7,     32}, 0, {     0,      0}, {0x8a, 0xe2, 0x20, 0x00}}},
+-    {{{   -12,     23,      6}, 0, {     0,      0}, {0x83, 0x07, 0xf1, 0x00}}},
+-    {{{     7,      1,    -26}, 0, {     0,      0}, {0xee, 0x0d, 0x84, 0x00}}},
+-    {{{     0,     -4,    -15}, 0, {     0,      0}, {0x8d, 0xda, 0xdc, 0x00}}},
+-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+-    {{{     9,     18,     35}, 0, {     0,      0}, {0xd8, 0x13, 0x76, 0x00}}},
+-    {{{     3,     36,      6}, 0, {     0,      0}, {0xce, 0x71, 0xe6, 0x00}}},
+-    {{{    16,      4,    -17}, 0, {     0,      0}, {0xf9, 0x11, 0x83, 0x00}}},
+-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+-    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+-    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
+-};
+-
+-// 0x0401A1A0
+-static const Vtx mario_right_hand_open_dl_vertex_group6[] = {
+-    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
+-    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+-    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+-    {{{    16,      4,    -17}, 0, {     0,      0}, {0xf9, 0x11, 0x83, 0x00}}},
+-    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+-};
+-
+-// 0x0401A1F0 - 0x0401A428
+-const Gfx mario_right_hand_open_dl[] = {
+-    gsSPVertex(mario_right_hand_open_dl_vertex_group1, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  2,  1, 0x0,  1,  6,  5, 0x0),
+-    gsSP2Triangles( 4,  3,  5, 0x0,  8,  9, 10, 0x0),
+-    gsSP2Triangles( 9, 11, 10, 0x0, 11, 12, 13, 0x0),
+-    gsSPVertex(mario_right_hand_open_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 9, 10,  2, 0x0,  2, 10, 11, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0, 12,  8,  7, 0x0),
+-    gsSP2Triangles( 8,  5,  9, 0x0,  9, 14, 10, 0x0),
+-    gsSP2Triangles(10, 14, 11, 0x0, 11,  6, 12, 0x0),
+-    gsSP2Triangles(12,  5,  8, 0x0,  1, 15,  3, 0x0),
+-    gsSPVertex(mario_right_hand_open_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  4,  5, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 9, 10,  1, 0x0,  1, 11,  4, 0x0),
+-    gsSP2Triangles( 4, 12, 13, 0x0, 14, 10, 15, 0x0),
+-    gsSP1Triangle(13,  7,  5, 0x0),
+-    gsSPVertex(mario_right_hand_open_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  0,  2,  5, 0x0),
+-    gsSP2Triangles( 7,  6,  8, 0x0,  9, 10,  7, 0x0),
+-    gsSP2Triangles( 0,  4, 11, 0x0, 11, 12,  0, 0x0),
+-    gsSP2Triangles(10, 13,  4, 0x0,  5,  2,  6, 0x0),
+-    gsSP2Triangles(10,  3,  5, 0x0, 14, 15,  9, 0x0),
+-    gsSP1Triangle(11, 15, 14, 0x0),
+-    gsSPVertex(mario_right_hand_open_dl_vertex_group5, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
+-    gsSP2Triangles( 2,  7,  6, 0x0,  8,  9,  0, 0x0),
+-    gsSP2Triangles( 9, 10,  3, 0x0,  3, 10, 11, 0x0),
+-    gsSP2Triangles(11, 12,  6, 0x0,  6, 12,  8, 0x0),
+-    gsSP2Triangles( 1,  4,  7, 0x0,  4,  5,  7, 0x0),
+-    gsSP2Triangles(13, 12, 11, 0x0, 11, 10, 14, 0x0),
+-    gsSP2Triangles(15, 10,  9, 0x0, 15, 14, 10, 0x0),
+-    gsSPVertex(mario_right_hand_open_dl_vertex_group6, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401A428 - 0x0401A448
+-const Gfx mario_right_hand_open[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_hand_open_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401A448 - 0x0401A478
+-const Gfx mario_metal_right_hand_open[] = {
+-    gsSPDisplayList(mario_right_hand_open_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401A478
+-static const Vtx mario_right_hand_cap_m_logo_dl_vertex[] = {
+-    {{{   131,     47,     -1}, 0, {  1104,    228}, {0xd7, 0x60, 0xb8, 0xff}}},
+-    {{{   107,    -19,    -33}, 0, {   474,     32}, {0xd1, 0x0e, 0x8c, 0xff}}},
+-    {{{    78,     11,     40}, 0, {   772,    818}, {0xd0, 0x3e, 0x9d, 0xff}}},
+-    {{{    70,    -52,     35}, 0, {   196,    800}, {0xc5, 0xde, 0x96, 0xff}}},
+-    {{{   114,    -92,    -11}, 0, {  -148,    188}, {0xc4, 0xb8, 0xac, 0xff}}},
+-};
+-
+-// 0x0401A4C8
+-static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group1[] = {
+-    {{{     1,     24,     35}, 0, {     0,      0}, {0xd4, 0x3c, 0x66, 0xff}}},
+-    {{{    29,      7,     48}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0xff}}},
+-    {{{    29,     62,     34}, 0, {     0,      0}, {0xcd, 0x4c, 0x57, 0xff}}},
+-    {{{    11,     60,     -3}, 0, {     0,      0}, {0xab, 0x59, 0xe6, 0xff}}},
+-    {{{    56,     11,     65}, 0, {     0,      0}, {0xfc, 0x1b, 0x7b, 0xff}}},
+-    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
+-    {{{    58,     81,      0}, 0, {     0,      0}, {0x13, 0x7a, 0xe8, 0xff}}},
+-    {{{    -2,     41,      0}, 0, {     0,      0}, {0xee, 0x71, 0xca, 0xff}}},
+-    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
+-    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
+-    {{{    23,    -25,     35}, 0, {     0,      0}, {0x04, 0xc2, 0x6e, 0xff}}},
+-    {{{    75,    -32,     65}, 0, {     0,      0}, {0x08, 0xae, 0x60, 0xff}}},
+-    {{{    16,      1,    -22}, 0, {     0,      0}, {0x04, 0x00, 0x82, 0xff}}},
+-    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
+-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0xad, 0x54, 0xd3, 0xff}}},
+-};
+-
+-// 0x0401A5B8
+-static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group2[] = {
+-    {{{   103,    -25,      1}, 0, {     0,      0}, {0x67, 0xc4, 0xd6, 0xff}}},
+-    {{{    95,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x52, 0xff}}},
+-    {{{    75,    -32,     65}, 0, {     0,      0}, {0x08, 0xae, 0x60, 0xff}}},
+-    {{{    31,    -39,      0}, 0, {     0,      0}, {0x42, 0xa3, 0xca, 0xff}}},
+-    {{{    23,    -25,     35}, 0, {     0,      0}, {0x04, 0xc2, 0x6e, 0xff}}},
+-    {{{    13,    -37,     41}, 0, {     0,      0}, {0x12, 0xb1, 0x61, 0xff}}},
+-    {{{    55,    -43,     -3}, 0, {     0,      0}, {0x00, 0x86, 0xe0, 0xff}}},
+-    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
+-    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
+-    {{{    16,      1,    -22}, 0, {     0,      0}, {0x04, 0x00, 0x82, 0xff}}},
+-    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
+-    {{{    24,    -55,     -4}, 0, {     0,      0}, {0x04, 0x8b, 0xd1, 0xff}}},
+-    {{{    56,     11,     65}, 0, {     0,      0}, {0xfc, 0x1b, 0x7b, 0xff}}},
+-    {{{   -15,    -12,      7}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0xff}}},
+-    {{{    85,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x62, 0xff}}},
+-    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
+-};
+-
+-// 0x0401A6B8
+-static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group3[] = {
+-    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
+-    {{{    85,     30,    -32}, 0, {     0,      0}, {0x4f, 0x21, 0xa3, 0xff}}},
+-    {{{   103,    -25,      1}, 0, {     0,      0}, {0x67, 0xc4, 0xd6, 0xff}}},
+-    {{{    58,     81,      0}, 0, {     0,      0}, {0x13, 0x7a, 0xe8, 0xff}}},
+-    {{{    24,    -55,     -4}, 0, {     0,      0}, {0x04, 0x8b, 0xd1, 0xff}}},
+-    {{{   -15,    -12,      7}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0xff}}},
+-    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
+-    {{{   -19,     47,     -4}, 0, {     0,      0}, {0xad, 0x54, 0xd3, 0xff}}},
+-    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
+-    {{{    13,    -37,     41}, 0, {     0,      0}, {0x12, 0xb1, 0x61, 0xff}}},
+-    {{{    96,     39,     24}, 0, {     0,      0}, {0x6b, 0x39, 0x21, 0xff}}},
+-    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
+-    {{{    95,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x52, 0xff}}},
+-    {{{    85,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x62, 0xff}}},
+-};
+-
+-// 0x0401A798
+-static const Vtx mario_right_hand_cap_top_dl_vertex_group1[] = {
+-    {{{    29,    -82,     43}, 0, {     0,      0}, {0x95, 0xbd, 0x00, 0xff}}},
+-    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
+-    {{{   106,   -124,     90}, 0, {     0,      0}, {0x9d, 0xb2, 0x09, 0xff}}},
+-    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
+-    {{{   151,   -168,     67}, 0, {     0,      0}, {0xf4, 0x87, 0xdc, 0xff}}},
+-    {{{   137,   -137,    134}, 0, {     0,      0}, {0x9f, 0xdf, 0x49, 0xff}}},
+-    {{{   114,    -92,    -11}, 0, {     0,      0}, {0xc4, 0xb8, 0xac, 0xff}}},
+-    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
+-    {{{   182,    -72,     -8}, 0, {     0,      0}, {0x4d, 0xd9, 0xa4, 0xff}}},
+-    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
+-    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
+-    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
+-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+-    {{{   183,    100,     86}, 0, {     0,      0}, {0x11, 0x7c, 0xed, 0xff}}},
+-    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
+-};
+-
+-// 0x0401A888
+-static const Vtx mario_right_hand_cap_top_dl_vertex_group2[] = {
+-    {{{    78,     11,     40}, 0, {     0,      0}, {0xd0, 0x3e, 0x9d, 0xff}}},
+-    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
+-    {{{   131,     47,     -1}, 0, {     0,      0}, {0xd7, 0x60, 0xb8, 0xff}}},
+-    {{{    45,     49,     53}, 0, {     0,      0}, {0xa8, 0x5a, 0x0a, 0xff}}},
+-    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
+-    {{{   183,    100,     86}, 0, {     0,      0}, {0x11, 0x7c, 0xed, 0xff}}},
+-    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
+-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+-    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
+-    {{{    18,    -13,     33}, 0, {     0,      0}, {0x84, 0x10, 0xed, 0xff}}},
+-    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
+-    {{{   192,     11,     -2}, 0, {     0,      0}, {0x4b, 0x29, 0xa3, 0xff}}},
+-    {{{   107,    -19,    -33}, 0, {     0,      0}, {0xd1, 0x0e, 0x8c, 0xff}}},
+-    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
+-    {{{   246,     29,    128}, 0, {     0,      0}, {0x72, 0x20, 0xd4, 0xff}}},
+-    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
+-};
+-
+-// 0x0401A988
+-static const Vtx mario_right_hand_cap_top_dl_vertex_group3[] = {
+-    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
+-    {{{    18,    -13,     33}, 0, {     0,      0}, {0x84, 0x10, 0xed, 0xff}}},
+-    {{{    29,    -82,     43}, 0, {     0,      0}, {0x95, 0xbd, 0x00, 0xff}}},
+-    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
+-    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
+-    {{{   114,    -92,    -11}, 0, {     0,      0}, {0xc4, 0xb8, 0xac, 0xff}}},
+-    {{{   107,    -19,    -33}, 0, {     0,      0}, {0xd1, 0x0e, 0x8c, 0xff}}},
+-    {{{   182,    -72,     -8}, 0, {     0,      0}, {0x4d, 0xd9, 0xa4, 0xff}}},
+-    {{{   192,     11,     -2}, 0, {     0,      0}, {0x4b, 0x29, 0xa3, 0xff}}},
+-    {{{   246,     29,    128}, 0, {     0,      0}, {0x72, 0x20, 0xd4, 0xff}}},
+-    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
+-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+-    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
+-    {{{   273,   -105,    188}, 0, {     0,      0}, {0x5f, 0xbf, 0x34, 0xff}}},
+-    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
+-    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
+-};
+-
+-// 0x0401AA88
+-static const Vtx mario_right_hand_cap_top_dl_vertex_group4[] = {
+-    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
+-    {{{   273,   -105,    188}, 0, {     0,      0}, {0x5f, 0xbf, 0x34, 0xff}}},
+-    {{{   216,   -104,    220}, 0, {     0,      0}, {0xe5, 0xcc, 0x70, 0xff}}},
+-    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
+-    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
+-    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+-    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
+-    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
+-};
+-
+-// 0x0401AB08
+-static const Vtx mario_right_hand_cap_bottom_dl_vertex[] = {
+-    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
+-    {{{   106,   -124,     90}, 0, {     0,      0}, {0x9d, 0xb2, 0x09, 0xff}}},
+-    {{{   137,   -137,    134}, 0, {     0,      0}, {0x9f, 0xdf, 0x49, 0xff}}},
+-    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
+-    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
+-    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
+-    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
+-    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
+-    {{{   216,   -104,    220}, 0, {     0,      0}, {0xe5, 0xcc, 0x70, 0xff}}},
+-    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
+-};
+-
+-// 0x0401ABA8 - 0x0401ABD0
+-const Gfx mario_right_hand_cap_m_logo_dl[] = {
+-    gsSPVertex(mario_right_hand_cap_m_logo_dl_vertex, 5, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+-    gsSP1Triangle( 1,  4,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401ABD0 - 0x0401AD40
+-const Gfx mario_right_hand_cap_top_dl[] = {
+-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 2,  4,  5, 0x0,  6,  2,  1, 0x0),
+-    gsSP2Triangles( 2,  6,  4, 0x0,  7,  4,  8, 0x0),
+-    gsSP2Triangles( 8,  4,  6, 0x0,  4,  9,  5, 0x0),
+-    gsSP2Triangles( 4,  7,  9, 0x0,  5,  9, 10, 0x0),
+-    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 11, 0x0),
+-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 0,  3,  1, 0x0,  5,  2,  1, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  0,  9,  3, 0x0),
+-    gsSP2Triangles(10,  9,  0, 0x0, 11, 12,  2, 0x0),
+-    gsSP2Triangles( 2,  5, 11, 0x0,  3,  9,  4, 0x0),
+-    gsSP2Triangles(13, 14, 15, 0x0, 11,  5, 14, 0x0),
+-    gsSP1Triangle( 7, 14,  5, 0x0),
+-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group3, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 0,  4,  1, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 7,  8,  9, 0x0,  7,  6,  8, 0x0),
+-    gsSP2Triangles(10,  7,  9, 0x0, 11, 12,  9, 0x0),
+-    gsSP2Triangles(10, 13, 14, 0x0, 12, 13, 10, 0x0),
+-    gsSP1Triangle(13, 12, 15, 0x0),
+-    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group4, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+-    gsSP2Triangles( 3,  4,  5, 0x0,  3,  5,  6, 0x0),
+-    gsSP1Triangle( 7,  0,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401AD40 - 0x0401AED0
+-const Gfx mario_right_hand_cap_hand_position_dl[] = {
+-    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group1, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 2,  1,  4, 0x0,  2,  5,  6, 0x0),
+-    gsSP2Triangles( 6,  3,  2, 0x0,  5,  2,  4, 0x0),
+-    gsSP2Triangles( 3,  7,  0, 0x0,  3,  6,  8, 0x0),
+-    gsSP2Triangles( 3,  8,  7, 0x0,  9,  0,  7, 0x0),
+-    gsSP2Triangles(10,  0,  9, 0x0,  1,  0, 10, 0x0),
+-    gsSP2Triangles(11,  1, 10, 0x0, 11,  4,  1, 0x0),
+-    gsSP2Triangles( 7, 12, 13, 0x0,  8, 12,  7, 0x0),
+-    gsSP2Triangles(13, 14,  7, 0x0,  7, 14,  9, 0x0),
+-    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group2, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  3,  6, 0x0,  6,  2,  4, 0x0),
+-    gsSP2Triangles( 7,  5,  4, 0x0,  8,  9,  3, 0x0),
+-    gsSP2Triangles( 3,  9, 10, 0x0, 10,  6,  3, 0x0),
+-    gsSP2Triangles( 5, 11,  3, 0x0,  3, 11,  8, 0x0),
+-    gsSP2Triangles(10,  0,  6, 0x0,  6,  0,  2, 0x0),
+-    gsSP2Triangles( 2,  1, 12, 0x0,  5, 13, 11, 0x0),
+-    gsSP2Triangles( 1, 14, 12, 0x0, 14, 15, 12, 0x0),
+-    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group3, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
+-    gsSP2Triangles( 7,  5,  8, 0x0,  8,  5,  9, 0x0),
+-    gsSP2Triangles( 3, 10,  1, 0x0, 11, 10,  3, 0x0),
+-    gsSP2Triangles( 1, 10,  2, 0x0,  2, 10, 12, 0x0),
+-    gsSP2Triangles(12, 10, 13, 0x0, 10, 11, 13, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401AED0 - 0x0401AF20
+-const Gfx mario_right_hand_cap_bottom_dl[] = {
+-    gsSPVertex(mario_right_hand_cap_bottom_dl_vertex, 10, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 4,  3,  2, 0x0,  5,  4,  2, 0x0),
+-    gsSP2Triangles( 6,  5,  2, 0x0,  6,  2,  7, 0x0),
+-    gsSP2Triangles( 8,  9,  6, 0x0,  6,  7,  8, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401AF20 - 0x0401AF60
+-const Gfx mario_right_hand_cap_dl[] = {
+-    gsSPDisplayList(mario_right_hand_cap_top_dl),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_hand_cap_hand_position_dl),
+-    gsSPLight(&mario_brown2_lights_group.l, 1),
+-    gsSPLight(&mario_brown2_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_hand_cap_bottom_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401AF60
+-static const Vtx mario_right_hand_cap_wings_half_1_dl_vertex[] = {
+-    {{{   368,    146,      7}, 0, {   990,      0}, {0xbe, 0x65, 0xda, 0xff}}},
+-    {{{   166,     37,     68}, 0, {     0,   2012}, {0xbe, 0x65, 0xda, 0xff}}},
+-    {{{   212,     96,    143}, 0, {   990,   2012}, {0xbe, 0x65, 0xda, 0xff}}},
+-    {{{   368,    146,      7}, 0, {   990,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   322,     87,    -67}, 0, {     0,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   166,     37,     68}, 0, {     0,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   178,   -177,    128}, 0, {   990,   2012}, {0xa8, 0xb4, 0xcf, 0xff}}},
+-    {{{   149,   -100,     60}, 0, {     0,   2012}, {0xa8, 0xb4, 0xcf, 0xff}}},
+-    {{{   319,   -248,    -14}, 0, {   990,      0}, {0xa8, 0xb4, 0xcf, 0xff}}},
+-    {{{   290,   -171,    -81}, 0, {     0,      0}, {0xa8, 0xb4, 0xcf, 0xff}}},
+-};
+-
+-// 0x0401B000
+-static const Vtx mario_right_hand_cap_wings_half_2_dl_vertex[] = {
+-    {{{   414,    206,     82}, 0, {   990,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   212,     96,    143}, 0, {     0,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   258,    156,    218}, 0, {   990,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   368,    146,      7}, 0, {     0,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+-    {{{   178,   -177,    128}, 0, {     0,   2012}, {0xa8, 0xb3, 0xcf, 0xff}}},
+-    {{{   319,   -248,    -14}, 0, {     0,      0}, {0xa8, 0xb3, 0xcf, 0xff}}},
+-    {{{   349,   -325,     53}, 0, {   990,      0}, {0xa8, 0xb3, 0xcf, 0xff}}},
+-    {{{   207,   -253,    195}, 0, {   990,   2012}, {0xa8, 0xb3, 0xcf, 0xff}}},
+-};
+-
+-// 0x0401B080 - 0x0401B0B0
+-const Gfx mario_right_hand_cap_wings_half_1_dl[] = {
+-    gsSPVertex(mario_right_hand_cap_wings_half_1_dl_vertex, 10, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  7,  9,  8, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B0B0 - 0x0401B0E0
+-const Gfx mario_right_hand_cap_wings_half_2_dl[] = {
+-    gsSPVertex(mario_right_hand_cap_wings_half_2_dl_vertex, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  7,  4,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B0E0 - 0x0401B138
+-const Gfx mario_right_hand_cap_wings_intial_dl[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_MODULATERGBFADEA, G_CC_MODULATERGBFADEA),
+-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B138 - 0x0401B158
+-const Gfx mario_right_hand_cap_wings_end_dl[] = {
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B158 - 0x0401B1D8
+-const Gfx mario_right_hand_cap[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_right_hand_cap_m_logo_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPDisplayList(mario_right_hand_cap_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B1D8 - 0x0401B230
+-const Gfx mario_right_hand_cap_wings[] = {
+-    gsSPDisplayList(mario_right_hand_cap_wings_intial_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_right_hand_cap_wings_half_1_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_right_hand_cap_wings_half_2_dl),
+-    gsSPDisplayList(mario_right_hand_cap_wings_end_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B230 - 0x0401B278
+-const Gfx mario_metal_right_hand_cap_shared_dl[] = {
+-    gsSPDisplayList(mario_right_hand_cap_m_logo_dl),
+-    gsSPDisplayList(mario_right_hand_cap_top_dl),
+-    gsSPDisplayList(mario_right_hand_cap_hand_position_dl),
+-    gsSPDisplayList(mario_right_hand_cap_bottom_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B278 - 0x0401B2D0
+-const Gfx mario_metal_right_hand_cap_shared_dl_wings[] = {
+-    gsSPDisplayList(mario_right_hand_cap_wings_intial_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_right_hand_cap_wings_half_1_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_right_hand_cap_wings_half_2_dl),
+-    gsSPDisplayList(mario_right_hand_cap_wings_end_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401B2D0
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group1[] = {
+-    {{{   -21,      9,     33}, 0, {     0,      0}, {0x8a, 0xe1, 0x1f, 0x00}}},
+-    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0x00}}},
+-    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0x00}}},
+-    {{{     0,    -35,     32}, 0, {     0,      0}, {0x9d, 0xba, 0x22, 0xff}}},
+-    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
+-    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0xff}}},
+-    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
+-    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
+-    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
+-    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0xff}}},
+-    {{{    46,     49,     45}, 0, {     0,      0}, {0xf8, 0x44, 0x6a, 0xff}}},
+-    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0xff}}},
+-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0xff}}},
+-    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
+-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xbc, 0x55, 0x40, 0xff}}},
+-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
+-};
+-
+-// 0x0401B3D0
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group2[] = {
+-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
+-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xdd, 0xba, 0x9d, 0x00}}},
+-    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
+-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xeb, 0x89, 0x24, 0xff}}},
+-    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0xff}}},
+-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xbc, 0x55, 0x40, 0xff}}},
+-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
+-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xd0, 0x30, 0x96, 0xff}}},
+-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xb3, 0x18, 0x9f, 0xff}}},
+-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0xc4, 0xb9, 0xab, 0xff}}},
+-    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
+-    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0xff}}},
+-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0xad, 0xda, 0xa9, 0xff}}},
+-};
+-
+-// 0x0401B4B0
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group3[] = {
+-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x31, 0x4d, 0xa8, 0xff}}},
+-    {{{    -4,     38,      0}, 0, {     0,      0}, {0x31, 0x4d, 0xa8, 0x00}}},
+-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0x00}}},
+-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0xff}}},
+-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x86, 0x10, 0xe4, 0xff}}},
+-    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0xff}}},
+-    {{{   -21,      9,     33}, 0, {     0,      0}, {0x8a, 0xe1, 0x1f, 0xff}}},
+-    {{{   -15,     23,     43}, 0, {     0,      0}, {0xd6, 0x31, 0x6c, 0xff}}},
+-    {{{     0,    -35,     32}, 0, {     0,      0}, {0x9d, 0xba, 0x22, 0xff}}},
+-    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
+-    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
+-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0xce, 0x92, 0x24, 0xff}}},
+-    {{{     8,     58,     -2}, 0, {     0,      0}, {0xd0, 0x30, 0x96, 0xff}}},
+-    {{{    56,     80,      1}, 0, {     0,      0}, {0xfe, 0x41, 0x94, 0xff}}},
+-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+-};
+-
+-// 0x0401B5A0
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group4[] = {
+-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+-    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0x00}}},
+-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
+-    {{{    56,     80,      1}, 0, {     0,      0}, {0xfe, 0x41, 0x94, 0xff}}},
+-    {{{    84,     60,     -7}, 0, {     0,      0}, {0xfb, 0x44, 0x96, 0xff}}},
+-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+-    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
+-    {{{    98,     10,     29}, 0, {     0,      0}, {0x0a, 0x7a, 0x21, 0xff}}},
+-    {{{   153,      7,     24}, 0, {     0,      0}, {0x0c, 0x7a, 0x1e, 0xff}}},
+-    {{{    46,     49,     45}, 0, {     0,      0}, {0xf8, 0x44, 0x6a, 0xff}}},
+-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
+-    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
+-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
+-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0xbe, 0xe5, 0x98, 0xff}}},
+-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xb3, 0x18, 0x9f, 0xff}}},
+-};
+-
+-// 0x0401B6A0
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group5[] = {
+-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
+-    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0x00}}},
+-    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0x00}}},
+-    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
+-    {{{    23,    -29,     36}, 0, {     0,      0}, {0xe3, 0x8b, 0x25, 0xff}}},
+-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xeb, 0x89, 0x24, 0xff}}},
+-    {{{    32,    -43,      0}, 0, {     0,      0}, {0xdd, 0xba, 0x9d, 0xff}}},
+-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0xbe, 0xe5, 0x98, 0xff}}},
+-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x7a, 0x08, 0x21, 0xff}}},
+-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x79, 0x01, 0x25, 0xff}}},
+-    {{{   153,      7,     24}, 0, {     0,      0}, {0x7a, 0x08, 0x21, 0xff}}},
+-    {{{   155,    -15,     21}, 0, {     0,      0}, {0x79, 0x06, 0x23, 0xff}}},
+-    {{{    84,     60,     -7}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+-    {{{    84,     48,     24}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+-    {{{   126,     84,     -3}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+-};
+-
+-// 0x0401B7A0
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group6[] = {
+-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
+-    {{{   126,     84,     -3}, 0, {     0,      0}, {0x5f, 0x47, 0x2a, 0x00}}},
+-    {{{   123,     72,     21}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0x00}}},
+-    {{{   126,     84,     -3}, 0, {     0,      0}, {0xfd, 0x37, 0x8e, 0xff}}},
+-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+-    {{{    84,     60,     -7}, 0, {     0,      0}, {0xfb, 0x44, 0x96, 0xff}}},
+-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x15, 0x2a, 0x8b, 0xff}}},
+-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x0a, 0x7d, 0x0d, 0xff}}},
+-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x06, 0x7e, 0xff, 0xff}}},
+-    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
+-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x26, 0x1e, 0x8b, 0xff}}},
+-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x18, 0xf9, 0x84, 0xff}}},
+-    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
+-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
+-    {{{    84,     60,     -7}, 0, {     0,      0}, {0x4d, 0x5d, 0x24, 0xff}}},
+-};
+-
+-// 0x0401B890
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group7[] = {
+-    {{{   139,     53,     25}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
+-    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0x00}}},
+-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x57, 0xa6, 0xf0, 0x00}}},
+-    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
+-    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0xff}}},
+-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+-    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
+-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x1c, 0x85, 0x00, 0xff}}},
+-    {{{   155,    -15,     21}, 0, {     0,      0}, {0x19, 0x85, 0xf1, 0xff}}},
+-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x10, 0x83, 0x00, 0xff}}},
+-    {{{   101,    -29,     15}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+-    {{{   153,      7,     24}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+-    {{{    98,     10,     29}, 0, {     0,      0}, {0x07, 0xd6, 0x77, 0xff}}},
+-};
+-
+-// 0x0401B980
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group8[] = {
+-    {{{   139,     53,     25}, 0, {     0,      0}, {0xfc, 0x13, 0x7d, 0xff}}},
+-    {{{   123,     72,     21}, 0, {     0,      0}, {0xfc, 0x15, 0x7d, 0x00}}},
+-    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0x00}}},
+-    {{{    98,     10,     29}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+-    {{{   101,    -29,     15}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+-    {{{   155,    -15,     21}, 0, {     0,      0}, {0xf5, 0xef, 0x7d, 0xff}}},
+-    {{{   153,      7,     24}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+-    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
+-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x57, 0xa6, 0xf0, 0xff}}},
+-    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0xff}}},
+-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x51, 0xa6, 0xdd, 0xff}}},
+-    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x18, 0xf9, 0x84, 0xff}}},
+-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
+-    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+-};
+-
+-// 0x0401BA70
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group9[] = {
+-    {{{    84,     48,     24}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+-    {{{   123,     72,     21}, 0, {     0,      0}, {0xc3, 0x66, 0x29, 0x00}}},
+-    {{{   126,     84,     -3}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0x00}}},
+-    {{{   139,     53,     25}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
+-    {{{    98,     10,     29}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
+-    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0xff}}},
+-    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
+-    {{{   153,      7,     24}, 0, {     0,      0}, {0x0c, 0x7a, 0x1e, 0xff}}},
+-    {{{   162,     14,    -11}, 0, {     0,      0}, {0x0a, 0x7d, 0x0d, 0xff}}},
+-    {{{   123,     72,     21}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
+-    {{{   139,     53,     25}, 0, {     0,      0}, {0x5a, 0x52, 0x21, 0xff}}},
+-    {{{   146,     59,     -8}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
+-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0x68, 0xc7, 0x2c, 0xff}}},
+-    {{{    32,    -43,      0}, 0, {     0,      0}, {0x68, 0xc7, 0x2c, 0xff}}},
+-    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
+-    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
+-};
+-
+-// 0x0401BB70
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group10[] = {
+-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0xff}}},
+-    {{{    14,     -1,    -22}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0x00}}},
+-    {{{    32,    -43,      0}, 0, {     0,      0}, {0x52, 0xee, 0xa2, 0x00}}},
+-    {{{    24,    -59,     -3}, 0, {     0,      0}, {0x52, 0xee, 0xa2, 0xff}}},
+-    {{{     2,     -5,    -33}, 0, {     0,      0}, {0xad, 0xda, 0xa9, 0xff}}},
+-    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0xff}}},
+-    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0xff}}},
+-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x86, 0x10, 0xe4, 0xff}}},
+-    {{{   -15,     23,     43}, 0, {     0,      0}, {0xd6, 0x31, 0x6c, 0xff}}},
+-    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0xff}}},
+-    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
+-    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x1a, 0x72, 0x2f, 0xff}}},
+-    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
+-    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
+-};
+-
+-// 0x0401BC50
+-static const Vtx mario_right_hand_peace_shared_dl_vertex_group11[] = {
+-    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+-    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
+-    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x1c, 0x85, 0x00, 0x00}}},
+-};
+-
+-// 0x0401BC80 - 0x0401BF30
+-const Gfx mario_right_hand_peace_shared_dl[] = {
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+-    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+-    gsSP2Triangles( 8,  7,  9, 0x0,  7,  6, 10, 0x0),
+-    gsSP2Triangles( 7, 10,  9, 0x0, 11,  8,  9, 0x0),
+-    gsSP2Triangles( 7, 12,  5, 0x0, 10, 13, 14, 0x0),
+-    gsSP2Triangles( 6, 15, 10, 0x0, 10, 14,  9, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group2, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  6,  7, 0x0,  8,  0,  9, 0x0),
+-    gsSP2Triangles(10, 11, 12, 0x0, 10, 12, 13, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+-    gsSP2Triangles( 7,  6,  8, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 9,  8, 10, 0x0,  9, 10, 11, 0x0),
+-    gsSP1Triangle(12, 13, 14, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group4, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 2, 12, 13, 0x0,  3,  5, 12, 0x0),
+-    gsSP1Triangle(12, 14, 15, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group5, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles( 9, 11, 12, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group6, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 4,  3,  6, 0x0,  7,  8,  9, 0x0),
+-    gsSP2Triangles( 4, 10, 11, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group7, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
+-    gsSP2Triangles(10,  9, 11, 0x0, 12, 13, 14, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group8, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  3,  2,  7, 0x0),
+-    gsSP2Triangles( 8,  3,  7, 0x0,  9, 10, 11, 0x0),
+-    gsSP1Triangle(12, 13, 14, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group9, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles(12, 13, 14, 0x0, 12, 14, 15, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group10, 14, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+-    gsSP2Triangles( 8,  9, 10, 0x0,  8, 10, 11, 0x0),
+-    gsSP2Triangles(12, 13,  9, 0x0, 12,  9,  8, 0x0),
+-    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group11, 3, 0),
+-    gsSP1Triangle( 0,  1,  2, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401BF30 - 0x0401BF50
+-const Gfx mario_right_hand_peace[] = {
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_right_hand_peace_shared_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401BF50
+-static const Vtx mario_cap_unused_m_logo_dl_vertex[] = {
+-    {{{    33,     35,    118}, 0, {   728,    758}, {0x30, 0x26, 0x6e, 0xff}}},
+-    {{{    96,     22,     45}, 0, {  1240,    876}, {0x48, 0xa4, 0x31, 0xff}}},
+-    {{{    71,    101,    113}, 0, {  1028,    148}, {0x55, 0x16, 0x5b, 0xff}}},
+-    {{{     0,    110,    143}, 0, {   460,     68}, {0x00, 0x34, 0x73, 0xff}}},
+-    {{{   -31,     35,    118}, 0, {   206,    762}, {0xd0, 0x26, 0x6f, 0xff}}},
+-    {{{   -70,    101,    113}, 0, {  -106,    158}, {0xab, 0x16, 0x5b, 0xff}}},
+-    {{{   -95,     22,     46}, 0, {  -302,    890}, {0xa8, 0xb9, 0x38, 0xff}}},
+-};
+-
+-// 0x0401BFC0
+-static const Vtx mario_cap_unused_base_top_dl_vertex_group1[] = {
+-    {{{   -66,      2,    139}, 0, {     0,      0}, {0xb0, 0xbb, 0x45, 0xff}}},
+-    {{{     0,      0,    163}, 0, {     0,      0}, {0x00, 0xba, 0x69, 0xff}}},
+-    {{{   -31,     35,    118}, 0, {     0,      0}, {0xd0, 0x26, 0x6f, 0xff}}},
+-    {{{   -32,     17,    109}, 0, {     0,      0}, {0x00, 0x83, 0xf0, 0xff}}},
+-    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
+-    {{{   -95,     22,     46}, 0, {     0,      0}, {0xa8, 0xb9, 0x38, 0xff}}},
+-    {{{  -101,     10,     -7}, 0, {     0,      0}, {0xd8, 0x89, 0x11, 0xff}}},
+-    {{{   -70,    101,    113}, 0, {     0,      0}, {0xab, 0x16, 0x5b, 0xff}}},
+-    {{{  -135,     70,     23}, 0, {     0,      0}, {0x84, 0x15, 0x10, 0xff}}},
+-    {{{  -125,     38,    -45}, 0, {     0,      0}, {0x8d, 0xec, 0xd1, 0xff}}},
+-    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
+-    {{{   -41,    144,     64}, 0, {     0,      0}, {0xdc, 0x79, 0x00, 0xff}}},
+-    {{{   -76,     84,    -60}, 0, {     0,      0}, {0xd5, 0x6e, 0xd3, 0xff}}},
+-    {{{   136,     70,     22}, 0, {     0,      0}, {0x7b, 0x16, 0x10, 0xff}}},
+-    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+-    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
+-};
+-
+-// 0x0401C0C0
+-static const Vtx mario_cap_unused_base_top_dl_vertex_group2[] = {
+-    {{{    42,    144,     64}, 0, {     0,      0}, {0x2b, 0x76, 0x0d, 0xff}}},
+-    {{{   136,     70,     22}, 0, {     0,      0}, {0x7b, 0x16, 0x10, 0xff}}},
+-    {{{    76,     84,    -60}, 0, {     0,      0}, {0x2a, 0x6c, 0xcf, 0xff}}},
+-    {{{   103,     10,     -6}, 0, {     0,      0}, {0x42, 0x96, 0x12, 0xff}}},
+-    {{{   126,     38,    -46}, 0, {     0,      0}, {0x73, 0xec, 0xd0, 0xff}}},
+-    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+-    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
+-    {{{    67,      2,    139}, 0, {     0,      0}, {0x50, 0xba, 0x44, 0xff}}},
+-    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
+-    {{{    33,     35,    118}, 0, {     0,      0}, {0x30, 0x26, 0x6e, 0xff}}},
+-    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
+-    {{{     0,      0,    163}, 0, {     0,      0}, {0x00, 0xba, 0x69, 0xff}}},
+-    {{{   -31,     35,    118}, 0, {     0,      0}, {0xd0, 0x26, 0x6f, 0xff}}},
+-    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
+-    {{{    49,     62,   -139}, 0, {     0,      0}, {0x32, 0x49, 0xa6, 0xff}}},
+-};
+-
+-// 0x0401C1B0
+-static const Vtx mario_cap_unused_base_top_dl_vertex_group3[] = {
+-    {{{   -76,     84,    -60}, 0, {     0,      0}, {0xd5, 0x6e, 0xd3, 0xff}}},
+-    {{{   -41,    144,     64}, 0, {     0,      0}, {0xdc, 0x79, 0x00, 0xff}}},
+-    {{{    76,     84,    -60}, 0, {     0,      0}, {0x2a, 0x6c, 0xcf, 0xff}}},
+-    {{{     0,    110,    143}, 0, {     0,      0}, {0x00, 0x34, 0x73, 0xff}}},
+-    {{{    42,    144,     64}, 0, {     0,      0}, {0x2b, 0x76, 0x0d, 0xff}}},
+-    {{{   -70,    101,    113}, 0, {     0,      0}, {0xab, 0x16, 0x5b, 0xff}}},
+-    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+-    {{{    49,     62,   -139}, 0, {     0,      0}, {0x32, 0x49, 0xa6, 0xff}}},
+-    {{{   126,     38,    -46}, 0, {     0,      0}, {0x73, 0xec, 0xd0, 0xff}}},
+-    {{{   -52,      0,   -118}, 0, {     0,      0}, {0xd2, 0x9d, 0xc1, 0xff}}},
+-    {{{   -49,     62,   -138}, 0, {     0,      0}, {0xce, 0x1a, 0x8f, 0xff}}},
+-    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
+-    {{{  -125,     38,    -45}, 0, {     0,      0}, {0x8d, 0xec, 0xd1, 0xff}}},
+-    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
+-    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
+-};
+-
+-// 0x0401C2A0
+-static const Vtx mario_cap_unused_base_bottom_dl_vertex[] = {
+-    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
+-    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
+-    {{{   -52,      0,   -118}, 0, {     0,      0}, {0xd2, 0x9d, 0xc1, 0xff}}},
+-    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
+-    {{{   -32,     17,    109}, 0, {     0,      0}, {0x00, 0x83, 0xf0, 0xff}}},
+-    {{{  -101,     10,     -7}, 0, {     0,      0}, {0xd8, 0x89, 0x11, 0xff}}},
+-    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
+-    {{{   103,     10,     -6}, 0, {     0,      0}, {0x42, 0x96, 0x12, 0xff}}},
+-    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
+-};
+-
+-// 0x0401C330 - 0x0401C368
+-const Gfx mario_cap_unused_m_logo_dl[] = {
+-    gsSPVertex(mario_cap_unused_m_logo_dl_vertex, 7, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+-    gsSP2Triangles( 3,  5,  4, 0x0,  2,  3,  0, 0x0),
+-    gsSP1Triangle( 5,  6,  4, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C368 - 0x0401C4C8
+-const Gfx mario_cap_unused_base_top_dl[] = {
+-    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group1, 16, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 3,  1,  0, 0x0,  3,  5,  6, 0x0),
+-    gsSP2Triangles( 3,  0,  5, 0x0,  5,  7,  8, 0x0),
+-    gsSP2Triangles( 5,  8,  6, 0x0,  0,  2,  5, 0x0),
+-    gsSP2Triangles( 6,  9, 10, 0x0,  8,  9,  6, 0x0),
+-    gsSP2Triangles(11,  8,  7, 0x0,  8, 12,  9, 0x0),
+-    gsSP2Triangles(12,  8, 11, 0x0, 13, 14, 15, 0x0),
+-    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group2, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+-    gsSP2Triangles( 4,  2,  1, 0x0,  5,  1,  0, 0x0),
+-    gsSP2Triangles( 1,  6,  3, 0x0,  6,  7,  8, 0x0),
+-    gsSP2Triangles( 9,  7,  6, 0x0, 10,  4,  3, 0x0),
+-    gsSP2Triangles( 9, 11,  7, 0x0,  7, 11,  8, 0x0),
+-    gsSP2Triangles(12, 11,  9, 0x0, 13, 14,  4, 0x0),
+-    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group3, 15, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+-    gsSP2Triangles( 5,  3,  1, 0x0,  1,  4,  2, 0x0),
+-    gsSP2Triangles( 4,  3,  6, 0x0,  0,  2,  7, 0x0),
+-    gsSP2Triangles( 8,  7,  2, 0x0,  9, 10, 11, 0x0),
+-    gsSP2Triangles(12, 10,  9, 0x0,  7, 10,  0, 0x0),
+-    gsSP2Triangles(10,  7, 11, 0x0,  0, 10, 12, 0x0),
+-    gsSP2Triangles(11,  8, 13, 0x0, 14, 12,  9, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C4C8 - 0x0401C510
+-const Gfx mario_cap_unused_base_bottom_dl[] = {
+-    gsSPVertex(mario_cap_unused_base_bottom_dl_vertex, 9, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  3,  5, 0x0,  7,  6,  5, 0x0),
+-    gsSP2Triangles( 0,  7,  5, 0x0,  0,  5,  1, 0x0),
+-    gsSP1Triangle( 2,  8,  0, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C510 - 0x0401C538
+-const Gfx mario_cap_unused_base_dl[] = {
+-    gsSPDisplayList(mario_cap_unused_base_top_dl),
+-    gsSPLight(&mario_brown2_lights_group.l, 1),
+-    gsSPLight(&mario_brown2_lights_group.a, 2),
+-    gsSPDisplayList(mario_cap_unused_base_bottom_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C538
+-static const Vtx mario_wings_half_1_unused_dl_vertex[] = {
+-    {{{   199,    247,    -55}, 0, {   990,      0}, {0x59, 0xed, 0x58, 0xff}}},
+-    {{{   131,    274,     20}, 0, {     0,      0}, {0x59, 0xed, 0x58, 0xff}}},
+-    {{{    69,     71,     38}, 0, {     0,   2012}, {0x59, 0xed, 0x58, 0xff}}},
+-    {{{   199,    247,    -55}, 0, {   990,      0}, {0x58, 0xee, 0x58, 0xff}}},
+-    {{{    69,     71,     38}, 0, {     0,   2012}, {0x58, 0xee, 0x58, 0xff}}},
+-    {{{   138,     44,    -37}, 0, {   990,   2012}, {0x58, 0xee, 0x58, 0xff}}},
+-    {{{  -137,     44,    -37}, 0, {   990,   2012}, {0xa8, 0xee, 0x58, 0xff}}},
+-    {{{   -68,     71,     38}, 0, {     0,   2012}, {0xa8, 0xee, 0x58, 0xff}}},
+-    {{{  -198,    247,    -55}, 0, {   990,      0}, {0xa8, 0xee, 0x58, 0xff}}},
+-    {{{   -68,     71,     38}, 0, {     0,   2012}, {0xa7, 0xed, 0x58, 0xff}}},
+-    {{{  -130,    274,     20}, 0, {     0,      0}, {0xa7, 0xed, 0x58, 0xff}}},
+-    {{{  -198,    247,    -55}, 0, {   990,      0}, {0xa7, 0xed, 0x58, 0xff}}},
+-};
+-
+-// 0x0401C5F8
+-static const Vtx mario_wings_half_2_unused_dl_vertex[] = {
+-    {{{   268,    219,   -132}, 0, {   990,      0}, {0x59, 0xed, 0x57, 0xff}}},
+-    {{{   199,    247,    -55}, 0, {     0,      0}, {0x59, 0xed, 0x57, 0xff}}},
+-    {{{   138,     44,    -37}, 0, {     0,   2012}, {0x59, 0xed, 0x57, 0xff}}},
+-    {{{   207,     16,   -114}, 0, {   990,   2012}, {0x59, 0xed, 0x57, 0xff}}},
+-    {{{  -206,     16,   -114}, 0, {   990,   2012}, {0xa7, 0xed, 0x57, 0xff}}},
+-    {{{  -137,     44,    -37}, 0, {     0,   2012}, {0xa7, 0xed, 0x57, 0xff}}},
+-    {{{  -267,    219,   -132}, 0, {   990,      0}, {0xa7, 0xed, 0x57, 0xff}}},
+-    {{{  -198,    247,    -55}, 0, {     0,      0}, {0xa7, 0xed, 0x57, 0xff}}},
+-};
+-
+-// 0x0401C678 - 0x0401C6A8
+-const Gfx mario_wings_half_1_unused_dl[] = {
+-    gsSPVertex(mario_wings_half_1_unused_dl_vertex, 12, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+-    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C6A8 - 0x0401C6D8
+-const Gfx mario_wings_half_2_unused_dl[] = {
+-    gsSPVertex(mario_wings_half_2_unused_dl_vertex, 8, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C6D8 - 0x0401C730
+-const Gfx mario_cap_wings_unused_intial_dl[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_MODULATERGBA, G_CC_MODULATERGBA),
+-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C730 - 0x0401C758
+-const Gfx mario_cap_wings_unused_end_dl[] = {
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C758 - 0x0401C7E8 # Unreferenced, possibly a early duplicate of the cap object used in segment 03
+-const Gfx mario_cap_unused_dl[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_BLENDRGBA, G_CC_BLENDRGBA),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPLight(&mario_red_lights_group.l, 1),
+-    gsSPLight(&mario_red_lights_group.a, 2),
+-    gsSPDisplayList(mario_cap_unused_m_logo_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPDisplayList(mario_cap_unused_base_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C7E8 - 0x0401C890 # Unreferenced, possibly an early duplicate of the cap object used in segment 03
+-const Gfx mario_metal_cap_unused_dl[] = {
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsSPDisplayList(mario_cap_unused_m_logo_dl),
+-    gsSPDisplayList(mario_cap_unused_base_top_dl),
+-    gsSPDisplayList(mario_cap_unused_base_bottom_dl),
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C890 - 0x0401C8E8 # Unreferenced, unused like the duplicated cap, same case
+-const Gfx mario_cap_wings_unused[] = {
+-    gsSPDisplayList(mario_cap_wings_unused_intial_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_1_unused_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_2_unused_dl),
+-    gsSPDisplayList(mario_cap_wings_unused_end_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C8E8 - 0x0401C940 # Unreferenced, unused like the duplicated cap, same case
+-const Gfx mario_metal_cap_wings_unused[] = {
+-    gsSPDisplayList(mario_cap_wings_unused_intial_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_1_unused_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_2_unused_dl),
+-    gsSPDisplayList(mario_cap_wings_unused_end_dl),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C940
+-static const Vtx mario_wings_half_1_dl_vertex[] = {
+-    {{{  -105,    212,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+-    {{{  -105,      0,      0}, 0, {     0,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+-    {{{     0,      0,      0}, 0, {   990,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+-    {{{     0,    212,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+-};
+-
+-// 0x0401C980
+-static const Vtx mario_wings_half_2_dl_vertex[] = {
+-    {{{     0,      0,      0}, 0, {     0,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+-    {{{   106,    212,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+-    {{{     0,    212,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+-    {{{   106,      0,      0}, 0, {   990,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+-};
+-
+-// 0x0401C9C0 - 0x0401C9E0
+-const Gfx mario_wings_half_1_dl[] = {
+-    gsSPVertex(mario_wings_half_1_dl_vertex, 4, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401C9E0 - 0x0401CA00
+-const Gfx mario_wings_half_2_dl[] = {
+-    gsSPVertex(mario_wings_half_2_dl_vertex, 4, 0),
+-    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401CA00 - 0x0401CAB8
+-const Gfx mario_cap_wings[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_1_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_2_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401CAB8 - 0x0401CB70
+-const Gfx mario_cap_wings_transparent[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_DECALFADEA, G_CC_DECALFADEA),
+-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_1_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_2_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401CB70 - 0x0401CC28
+-const Gfx mario_metal_cap_wings[] = {
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsSPLight(&mario_white_lights_group.l, 1),
+-    gsSPLight(&mario_white_lights_group.a, 2),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_1_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_2_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+-    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsSPEndDisplayList(),
+-};
+-
+-// 0x0401CC28 - 0x0401CD20
+-const Gfx mario_metal_cap_wings_transparent[] = {
+-    gsDPPipeSync(),
+-    gsSPClearGeometryMode(G_TEXTURE_GEN),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPSetCombineMode(G_CC_DECALFADEA, G_CC_DECALFADEA),
+-    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+-    gsDPTileSync(),
+-    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+-    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_1_dl),
+-    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+-    gsDPLoadSync(),
+-    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+-    gsSPDisplayList(mario_wings_half_2_dl),
+-    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+-    gsDPPipeSync(),
+-    gsSPSetGeometryMode(G_TEXTURE_GEN | G_CULL_BACK | G_SHADING_SMOOTH),
+-    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+-    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+-    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+-    gsSPEndDisplayList(),
++Gfx mario_material_revert_render_settings[] = {
++	gsDPPipeSync(),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPClearGeometryMode(G_TEXTURE_GEN),
++    //gsSPClearGeometryMode(G_POINT_LIGHTING),
++    gsSPNumLights(NUMLIGHTS_1),
++	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 0),
++	gsDPSetEnvColor(255, 255, 255, 255),
++	gsDPSetAlphaCompare(G_AC_NONE),
++	gsSPEndDisplayList(),
+ };
+diff --git a/actors/mario/texscroll.inc.c b/actors/mario/texscroll.inc.c
+new file mode 100644
+index 0000000..fccb257
+--- /dev/null
++++ b/actors/mario/texscroll.inc.c
+@@ -0,0 +1,3 @@
++void scroll_actor_geo_mario() {
++	
++}
+diff --git a/actors/mario/texscroll.inc.h b/actors/mario/texscroll.inc.h
+new file mode 100644
+index 0000000..408565a
+--- /dev/null
++++ b/actors/mario/texscroll.inc.h
+@@ -0,0 +1,3 @@
++
++extern void scroll_actor_geo_mario();
++
+diff --git a/data/behavior_data.c b/data/behavior_data.c
+index 9d11492..8a6a828 100644
+--- a/data/behavior_data.c
++++ b/data/behavior_data.c
+@@ -4848,8 +4848,9 @@ const BehaviorScript bhvControllablePlatformSub[] = {
+ 
+ const BehaviorScript bhvBreakableBoxSmall[] = {
+     BEGIN(OBJ_LIST_DESTRUCTIVE),
+-    OR_INT(oFlags, (OBJ_FLAG_HOLDABLE | OBJ_FLAG_COMPUTE_DIST_TO_MARIO | OBJ_FLAG_SET_FACE_YAW_TO_MOVE_YAW | OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE)),
++    OR_INT(oFlags, (OBJ_FLAG_HOLDABLE | OBJ_FLAG_COMPUTE_DIST_TO_MARIO | OBJ_FLAG_SET_FACE_YAW_TO_MOVE_YAW | OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE | OBJ_FLAG_EMIT_LIGHT)),
+     DROP_TO_FLOOR(),
++    SET_FLOAT(oGraphYOffset, 25),
+     SET_HOME(),
+     CALL_NATIVE(bhv_breakable_box_small_init),
+     BEGIN_LOOP(),
+diff --git a/include/PR/gbi.h b/include/PR/gbi.h
+index ebfab07..1714a3b 100644
+--- a/include/PR/gbi.h
++++ b/include/PR/gbi.h
+@@ -365,6 +365,11 @@
+ #define G_TEXTURE_GEN		0x00040000
+ #define G_TEXTURE_GEN_LINEAR	0x00080000
+ #define G_LOD			0x00100000	/* NOT IMPLEMENTED */
++#if (defined(F3DZEX_GBI_2))
++# define G_POINT_LIGHTING 0x00400000
++#else
++# define G_POINT_LIGHTING 0x00000000
++#endif
+ #if	(defined(F3DEX_GBI)||defined(F3DLP_GBI))
+ # define G_CLIPPING		0x00800000
+ #else
+@@ -1404,6 +1409,15 @@ typedef struct {
+   char 		pad3;
+ } Light_t;
+ 
++typedef struct {
++  unsigned char	col[3];		/* diffuse light value (rgba) */
++  char 		is_point;
++  unsigned char	colc[3];	/* copy of diffuse light value (rgba) */
++  char 		linear_attenuation;
++  signed short	pos[3];		/* direction of light (normalized) */
++  char 		quadratic_attenuation;
++} PointLight_t;
++
+ typedef struct {
+   unsigned char	col[3];		/* ambient light value (rgba) */
+   char 		pad1;
+@@ -1417,6 +1431,7 @@ typedef struct {
+ 
+ typedef union {
+     Light_t	l;
++	PointLight_t pl;
+     long long int	force_structure_alignment[2];
+ } Light;
+ 
+diff --git a/include/PR/ucode.h b/include/PR/ucode.h
+index 37fd197..b47743a 100644
+--- a/include/PR/ucode.h
++++ b/include/PR/ucode.h
+@@ -2,7 +2,11 @@
+ #define _ULTRA64_UCODE_H_
+ 
+ #define SP_DRAM_STACK_SIZE8 0x400
++#ifdef F3DZEX_GBI_2
++#define SP_UCODE_SIZE       0x1630
++#else
+ #define SP_UCODE_SIZE       0x1000
++#endif
+ #define SP_UCODE_DATA_SIZE  0x800
+ 
+ // standard boot ucode
+diff --git a/include/geo_commands.h b/include/geo_commands.h
+index 432ec1f..57cfff8 100644
+--- a/include/geo_commands.h
++++ b/include/geo_commands.h
+@@ -429,4 +429,21 @@
+ #define GEO_CULLING_RADIUS(cullingRadius) \
+     CMD_BBH(0x20, 0x00, cullingRadius)
+ 
++/**
++ * Advanced lighting engine
++ * 0x21: Create a scene light node. Can be a regular light, point light, or ambient light.
++ *   0x01: u8 lightType (0 is regular, 1 is ambient, 2 is point, 3 is occluded point)
++ *   0x02: u8 red
++ *   0x03: u8 green
++ *   0x04: u8 blue
++ *   0x05: u8 x direction (directional light) or quadratic falloff (point light)
++ *   0x06: u8 y direction (directional light) or linear falloff (point light)
++ *   0x07: u8 z direction (directional light) or constant falloff (point light)
++ */
++#include "point_lights.h"
++
++#define GEO_SCENE_LIGHT(lightType, red, green, blue, a, b, c) \
++    CMD_BBBB(0x21, lightType, red, green), \
++    CMD_BBBB(blue, a, b, c)
++
+ #endif // GEO_COMMANDS_H
+diff --git a/include/model_ids.h b/include/model_ids.h
+index 1cd0a25..4c9c4c3 100644
+--- a/include/model_ids.h
++++ b/include/model_ids.h
+@@ -564,6 +564,8 @@
+ #define MODEL_WHITE_PUFF                  0xE0        // white_puff_geo
+ #define MODEL_TRAJECTORY_MARKER_BALL          0xE1        // bowling_ball_track_geo - duplicate used in SSL Pyramid small sized and as a track ball
+ 
++#define MODEL_LANTERN 0xF0
++
+ // Menu Models (overwrites Level Geometry IDs)
+ #define MODEL_MAIN_MENU_MARIO_SAVE_BUTTON         MODEL_LEVEL_GEOMETRY_03   // main_menu_geo_0001D0
+ #define MODEL_MAIN_MENU_RED_ERASE_BUTTON          MODEL_LEVEL_GEOMETRY_04   // main_menu_geo_000290
+diff --git a/include/object_constants.h b/include/object_constants.h
+index 95f5ce5..d4c9db7 100644
+--- a/include/object_constants.h
++++ b/include/object_constants.h
+@@ -40,12 +40,14 @@
+ #define OBJ_FLAG_TRANSFORM_RELATIVE_TO_PARENT     (1 <<  9) // 0x00000200
+ #define OBJ_FLAG_HOLDABLE                         (1 << 10) // 0x00000400
+ #define OBJ_FLAG_SET_THROW_MATRIX_FROM_TRANSFORM  (1 << 11) // 0x00000800
+-#define OBJ_FLAG_1000                             (1 << 12) // 0x00001000
+ #define OBJ_FLAG_COMPUTE_ANGLE_TO_MARIO           (1 << 13) // 0x00002000
+ #define OBJ_FLAG_PERSISTENT_RESPAWN               (1 << 14) // 0x00004000
+ #define OBJ_FLAG_8000                             (1 << 15) // 0x00008000
+ #define OBJ_FLAG_30                               (1 << 30) // 0x40000000
+ 
++// Flag to make objects emit a point light (was OBJ_FLAG_1000)
++#define OBJ_FLAG_EMIT_LIGHT                       (1 << 12) // 0x00001000
++
+ /* oHeldState */
+ #define HELD_FREE 0
+ #define HELD_HELD 1
+diff --git a/include/object_fields.h b/include/object_fields.h
+index 89939cc..3aa02d7 100644
+--- a/include/object_fields.h
++++ b/include/object_fields.h
+@@ -1157,4 +1157,12 @@
+ #define /*0x0FC*/ oYoshiChosenHome OBJECT_FIELD_S32(0x1D)
+ #define /*0x100*/ oYoshiTargetYaw  OBJECT_FIELD_S32(0x1E)
+ 
++
++// Advanced lighting engine
++// These use previously unused object fields outside of the normal range
++// for specific behaviors, so they shouldn't interfere with any custom ones
++#define /*0x148*/ oLightColor                 OBJECT_FIELD_S32(0x30) // 0xRRGGBB00
++#define /*0x1A4*/ oLightQuadraticFalloff      OBJECT_FIELD_S16(0x47, 0)
++#define /*0x1A6*/ oLightLinearFalloff         OBJECT_FIELD_S16(0x47, 1)
++
+ #endif // OBJECT_FIELDS_H
+diff --git a/include/point_lights.h b/include/point_lights.h
+new file mode 100644
+index 0000000..0378153
+--- /dev/null
++++ b/include/point_lights.h
+@@ -0,0 +1,39 @@
++#ifndef __POINT_LIGHTS_H__
++#define __POINT_LIGHTS_H__
++
++#include <PR/ultratypes.h>
++#include <PR/gbi.h>
++#include <macros.h>
++
++#define LIGHT_TYPE_AMBIENT       0
++#define LIGHT_TYPE_DIRECTIONAL   1
++#define LIGHT_TYPE_POINT         2
++#define LIGHT_TYPE_POINT_OCCLUDE 3
++
++#define LIGHT_FLAG_OCCLUDE (1 << 0)
++
++// The max number of point lights you can have in a scene (impacts RAM)
++#define MAX_POINT_LIGHTS 32
++// The max number of point lights that can be affecting a given model (impacts performance)
++#define MAX_POINT_LIGHTS_ACTIVE 3
++
++
++STATIC_ASSERT(MAX_POINT_LIGHTS_ACTIVE <= 6, "You cannot apply more than 6 point lights at a time!");
++
++struct SceneLight {
++    Light l;
++    Vec3s worldPos;
++    s16 flags;
++};
++
++extern int gPointLightCompatibilityMode;
++extern Lights1 gDirectionalLight;
++extern s8 gLightDir[3];
++extern u8 gLightDirTransformEnabled;
++extern struct SceneLight gPointLights[];
++extern u8 gAreaPointLightCount;
++extern u8 gPointLightCount;
++
++void emit_light(Vec3f pos, u32 color, u32 quadraticFalloff, u32 linearFalloff);
++
++#endif
+diff --git a/include/segments.h b/include/segments.h
+index a8c1bf9..611802f 100644
+--- a/include/segments.h
++++ b/include/segments.h
+@@ -11,6 +11,7 @@
+  * linker script syntax.
+ */
+ 
++#define USE_EXT_RAM
+ #ifndef USE_EXT_RAM /* Default: Runs out of memory quickly when importing custom assets. */
+ 
+ #define SEG_POOL_START   0x8005C000
+@@ -44,10 +45,10 @@
+  */
+ 
+ #define SEG_BUFFERS      0x8005C000 // 0x0085000 in size
+-#define SEG_MAIN         0x800E1000 // 0x0132800 in size
++#define SEG_MAIN         0x800E4000 // 0x0132800 in size
+ #define SEG_ENGINE       0x80213800 // 0x0017000 in size
+-#define SEG_FRAMEBUFFERS 0x8022A800 // 0x0070800 in size
+-#define SEG_POOL_START   0x8029B000 // 0x0165000 in size
++#define SEG_FRAMEBUFFERS 0x8022B800 // 0x0070800 in size
++#define SEG_POOL_START   0x8029C000 // 0x0165000 in size
+ #define SEG_POOL_END     0x80800000
+ #define SEG_POOL_END_4MB 0x80400000 // For the error message screen enhancement.
+ #define SEG_GODDARD      SEG_POOL_START + 0x113000
+diff --git a/levels/castle_grounds/area_1/collision.inc.c b/levels/castle_grounds/area_1/collision.inc.c
+new file mode 100644
+index 0000000..7871023
+--- /dev/null
++++ b/levels/castle_grounds/area_1/collision.inc.c
+@@ -0,0 +1,313 @@
++const Collision castle_grounds_area_1_collision[] = {
++	COL_INIT(),
++	COL_VERTEX_INIT(114),
++	COL_VERTEX(-526, 0, -493),
++	COL_VERTEX(-526, 600, -493),
++	COL_VERTEX(-497, 600, -422),
++	COL_VERTEX(-497, 0, -422),
++	COL_VERTEX(-526, 0, -351),
++	COL_VERTEX(-526, 600, -351),
++	COL_VERTEX(-597, 600, -322),
++	COL_VERTEX(-597, 0, -322),
++	COL_VERTEX(-668, 0, -351),
++	COL_VERTEX(-668, 600, -351),
++	COL_VERTEX(-697, 600, -422),
++	COL_VERTEX(-697, 0, -422),
++	COL_VERTEX(-668, 0, -493),
++	COL_VERTEX(-668, 600, -493),
++	COL_VERTEX(-597, 600, -522),
++	COL_VERTEX(-597, 0, -522),
++	COL_VERTEX(-455, 166, 430),
++	COL_VERTEX(-412, 181, 461),
++	COL_VERTEX(-471, 181, 480),
++	COL_VERTEX(-383, 221, 483),
++	COL_VERTEX(-370, 213, 430),
++	COL_VERTEX(-507, 181, 430),
++	COL_VERTEX(-471, 181, 380),
++	COL_VERTEX(-412, 181, 400),
++	COL_VERTEX(-360, 266, 461),
++	COL_VERTEX(-483, 221, 515),
++	COL_VERTEX(-429, 213, 511),
++	COL_VERTEX(-455, 266, 530),
++	COL_VERTEX(-544, 221, 430),
++	COL_VERTEX(-524, 213, 480),
++	COL_VERTEX(-550, 266, 461),
++	COL_VERTEX(-483, 221, 345),
++	COL_VERTEX(-524, 213, 380),
++	COL_VERTEX(-514, 266, 350),
++	COL_VERTEX(-383, 221, 378),
++	COL_VERTEX(-429, 213, 350),
++	COL_VERTEX(-396, 266, 350),
++	COL_VERTEX(-396, 266, 511),
++	COL_VERTEX(-514, 266, 511),
++	COL_VERTEX(-550, 266, 400),
++	COL_VERTEX(-455, 266, 330),
++	COL_VERTEX(-360, 266, 400),
++	COL_VERTEX(-427, 310, 515),
++	COL_VERTEX(-386, 318, 480),
++	COL_VERTEX(-439, 351, 480),
++	COL_VERTEX(-527, 310, 483),
++	COL_VERTEX(-481, 318, 511),
++	COL_VERTEX(-497, 351, 461),
++	COL_VERTEX(-527, 310, 378),
++	COL_VERTEX(-540, 318, 430),
++	COL_VERTEX(-497, 351, 400),
++	COL_VERTEX(-427, 310, 345),
++	COL_VERTEX(-481, 318, 350),
++	COL_VERTEX(-439, 351, 380),
++	COL_VERTEX(-365, 310, 430),
++	COL_VERTEX(-386, 318, 380),
++	COL_VERTEX(-402, 351, 430),
++	COL_VERTEX(-455, 366, 430),
++	COL_VERTEX(599, 17, -627),
++	COL_VERTEX(1012, -7, -634),
++	COL_VERTEX(993, -7, -990),
++	COL_VERTEX(589, -4, -1032),
++	COL_VERTEX(-981, -24, -604),
++	COL_VERTEX(-623, 24, -615),
++	COL_VERTEX(-642, 23, -997),
++	COL_VERTEX(-1002, -14, -1025),
++	COL_VERTEX(-196, -2, -582),
++	COL_VERTEX(-162, 6, -1014),
++	COL_VERTEX(230, 55, -585),
++	COL_VERTEX(189, 16, -989),
++	COL_VERTEX(570, 46, 623),
++	COL_VERTEX(565, 38, 1023),
++	COL_VERTEX(1034, -14, 971),
++	COL_VERTEX(1005, -19, 581),
++	COL_VERTEX(-1023, -50, 176),
++	COL_VERTEX(-585, 4, 214),
++	COL_VERTEX(-636, 0, -206),
++	COL_VERTEX(-990, 24, -190),
++	COL_VERTEX(-569, 4, 1025),
++	COL_VERTEX(-211, -10, 1029),
++	COL_VERTEX(-187, -35, 624),
++	COL_VERTEX(-601, -1, 621),
++	COL_VERTEX(-219, 13, 232),
++	COL_VERTEX(-188, -6, -197),
++	COL_VERTEX(220, 19, 1014),
++	COL_VERTEX(231, 4, 629),
++	COL_VERTEX(228, 22, 238),
++	COL_VERTEX(212, -14, -194),
++	COL_VERTEX(552, 32, 199),
++	COL_VERTEX(551, -37, -199),
++	COL_VERTEX(983, -37, 229),
++	COL_VERTEX(1028, 36, -232),
++	COL_VERTEX(1012, 725, -634),
++	COL_VERTEX(993, 725, -990),
++	COL_VERTEX(589, 728, -1032),
++	COL_VERTEX(189, 748, -989),
++	COL_VERTEX(-211, 722, 1029),
++	COL_VERTEX(220, 751, 1014),
++	COL_VERTEX(-642, 754, -997),
++	COL_VERTEX(-1002, 718, -1025),
++	COL_VERTEX(-162, 737, -1014),
++	COL_VERTEX(565, 770, 1023),
++	COL_VERTEX(-981, 708, -604),
++	COL_VERTEX(1034, 718, 971),
++	COL_VERTEX(1005, 712, 581),
++	COL_VERTEX(-990, 755, -190),
++	COL_VERTEX(983, 695, 229),
++	COL_VERTEX(-1023, 682, 176),
++	COL_VERTEX(1028, 767, -232),
++	COL_VERTEX(-1008, 10, 576),
++	COL_VERTEX(-1008, 741, 576),
++	COL_VERTEX(-987, 21, 975),
++	COL_VERTEX(-987, 753, 975),
++	COL_VERTEX(-569, 736, 1025),
++	COL_TRI_INIT(SURFACE_DEFAULT, 192),
++	COL_TRI(0, 1, 2),
++	COL_TRI(0, 2, 3),
++	COL_TRI(4, 5, 6),
++	COL_TRI(4, 6, 7),
++	COL_TRI(8, 9, 10),
++	COL_TRI(8, 10, 11),
++	COL_TRI(12, 13, 14),
++	COL_TRI(12, 14, 15),
++	COL_TRI(15, 14, 1),
++	COL_TRI(15, 1, 0),
++	COL_TRI(3, 2, 5),
++	COL_TRI(3, 5, 4),
++	COL_TRI(7, 6, 9),
++	COL_TRI(7, 9, 8),
++	COL_TRI(11, 10, 13),
++	COL_TRI(11, 13, 12),
++	COL_TRI(14, 13, 10),
++	COL_TRI(10, 9, 6),
++	COL_TRI(6, 5, 2),
++	COL_TRI(2, 1, 14),
++	COL_TRI(14, 10, 6),
++	COL_TRI(6, 2, 14),
++	COL_TRI(16, 17, 18),
++	COL_TRI(19, 17, 20),
++	COL_TRI(16, 18, 21),
++	COL_TRI(16, 21, 22),
++	COL_TRI(16, 22, 23),
++	COL_TRI(19, 20, 24),
++	COL_TRI(25, 26, 27),
++	COL_TRI(28, 29, 30),
++	COL_TRI(31, 32, 33),
++	COL_TRI(34, 35, 36),
++	COL_TRI(19, 24, 37),
++	COL_TRI(25, 27, 38),
++	COL_TRI(28, 30, 39),
++	COL_TRI(31, 33, 40),
++	COL_TRI(34, 36, 41),
++	COL_TRI(42, 43, 44),
++	COL_TRI(45, 46, 47),
++	COL_TRI(48, 49, 50),
++	COL_TRI(51, 52, 53),
++	COL_TRI(54, 55, 56),
++	COL_TRI(56, 53, 57),
++	COL_TRI(56, 55, 53),
++	COL_TRI(55, 51, 53),
++	COL_TRI(53, 50, 57),
++	COL_TRI(53, 52, 50),
++	COL_TRI(52, 48, 50),
++	COL_TRI(50, 47, 57),
++	COL_TRI(50, 49, 47),
++	COL_TRI(49, 45, 47),
++	COL_TRI(47, 44, 57),
++	COL_TRI(47, 46, 44),
++	COL_TRI(46, 42, 44),
++	COL_TRI(44, 56, 57),
++	COL_TRI(44, 43, 56),
++	COL_TRI(43, 54, 56),
++	COL_TRI(41, 55, 54),
++	COL_TRI(41, 36, 55),
++	COL_TRI(36, 51, 55),
++	COL_TRI(40, 52, 51),
++	COL_TRI(40, 33, 52),
++	COL_TRI(33, 48, 52),
++	COL_TRI(39, 49, 48),
++	COL_TRI(39, 30, 49),
++	COL_TRI(30, 45, 49),
++	COL_TRI(38, 46, 45),
++	COL_TRI(38, 27, 46),
++	COL_TRI(27, 42, 46),
++	COL_TRI(37, 43, 42),
++	COL_TRI(37, 24, 43),
++	COL_TRI(24, 54, 43),
++	COL_TRI(36, 40, 51),
++	COL_TRI(36, 35, 40),
++	COL_TRI(35, 31, 40),
++	COL_TRI(33, 39, 48),
++	COL_TRI(33, 32, 39),
++	COL_TRI(32, 28, 39),
++	COL_TRI(30, 38, 45),
++	COL_TRI(30, 29, 38),
++	COL_TRI(29, 25, 38),
++	COL_TRI(27, 37, 42),
++	COL_TRI(27, 26, 37),
++	COL_TRI(26, 19, 37),
++	COL_TRI(24, 41, 54),
++	COL_TRI(24, 20, 41),
++	COL_TRI(20, 34, 41),
++	COL_TRI(23, 35, 34),
++	COL_TRI(23, 22, 35),
++	COL_TRI(22, 31, 35),
++	COL_TRI(22, 32, 31),
++	COL_TRI(22, 21, 32),
++	COL_TRI(21, 28, 32),
++	COL_TRI(21, 29, 28),
++	COL_TRI(21, 18, 29),
++	COL_TRI(18, 25, 29),
++	COL_TRI(20, 23, 34),
++	COL_TRI(20, 17, 23),
++	COL_TRI(17, 16, 23),
++	COL_TRI(18, 26, 25),
++	COL_TRI(18, 17, 26),
++	COL_TRI(17, 19, 26),
++	COL_TRI(58, 59, 60),
++	COL_TRI(58, 60, 61),
++	COL_TRI(62, 63, 64),
++	COL_TRI(62, 64, 65),
++	COL_TRI(63, 66, 67),
++	COL_TRI(63, 67, 64),
++	COL_TRI(66, 68, 69),
++	COL_TRI(66, 69, 67),
++	COL_TRI(68, 58, 61),
++	COL_TRI(68, 61, 69),
++	COL_TRI(70, 71, 72),
++	COL_TRI(70, 72, 73),
++	COL_TRI(74, 75, 76),
++	COL_TRI(74, 76, 77),
++	COL_TRI(77, 76, 63),
++	COL_TRI(77, 63, 62),
++	COL_TRI(78, 79, 80),
++	COL_TRI(78, 80, 81),
++	COL_TRI(81, 80, 82),
++	COL_TRI(81, 82, 75),
++	COL_TRI(75, 82, 83),
++	COL_TRI(75, 83, 76),
++	COL_TRI(76, 83, 66),
++	COL_TRI(76, 66, 63),
++	COL_TRI(79, 84, 85),
++	COL_TRI(79, 85, 80),
++	COL_TRI(80, 85, 86),
++	COL_TRI(80, 86, 82),
++	COL_TRI(82, 86, 87),
++	COL_TRI(82, 87, 83),
++	COL_TRI(83, 87, 68),
++	COL_TRI(83, 68, 66),
++	COL_TRI(84, 71, 70),
++	COL_TRI(84, 70, 85),
++	COL_TRI(85, 70, 88),
++	COL_TRI(85, 88, 86),
++	COL_TRI(86, 88, 89),
++	COL_TRI(86, 89, 87),
++	COL_TRI(87, 89, 58),
++	COL_TRI(87, 58, 68),
++	COL_TRI(88, 90, 91),
++	COL_TRI(88, 91, 89),
++	COL_TRI(89, 91, 59),
++	COL_TRI(89, 59, 58),
++	COL_TRI(60, 59, 92),
++	COL_TRI(60, 92, 93),
++	COL_TRI(69, 61, 94),
++	COL_TRI(69, 94, 95),
++	COL_TRI(84, 79, 96),
++	COL_TRI(84, 96, 97),
++	COL_TRI(65, 64, 98),
++	COL_TRI(65, 98, 99),
++	COL_TRI(67, 69, 95),
++	COL_TRI(67, 95, 100),
++	COL_TRI(71, 84, 97),
++	COL_TRI(71, 97, 101),
++	COL_TRI(62, 65, 99),
++	COL_TRI(62, 99, 102),
++	COL_TRI(64, 67, 100),
++	COL_TRI(64, 100, 98),
++	COL_TRI(73, 72, 103),
++	COL_TRI(73, 103, 104),
++	COL_TRI(77, 62, 102),
++	COL_TRI(77, 102, 105),
++	COL_TRI(90, 73, 104),
++	COL_TRI(90, 104, 106),
++	COL_TRI(74, 77, 105),
++	COL_TRI(74, 105, 107),
++	COL_TRI(91, 90, 106),
++	COL_TRI(91, 106, 108),
++	COL_TRI(109, 74, 107),
++	COL_TRI(109, 107, 110),
++	COL_TRI(111, 109, 110),
++	COL_TRI(111, 110, 112),
++	COL_TRI(59, 91, 108),
++	COL_TRI(59, 108, 92),
++	COL_TRI(78, 111, 112),
++	COL_TRI(78, 112, 113),
++	COL_TRI(72, 71, 101),
++	COL_TRI(72, 101, 103),
++	COL_TRI(61, 60, 93),
++	COL_TRI(61, 93, 94),
++	COL_TRI(79, 78, 113),
++	COL_TRI(79, 113, 96),
++	COL_TRI(88, 70, 73),
++	COL_TRI(88, 73, 90),
++	COL_TRI(75, 74, 109),
++	COL_TRI(75, 109, 81),
++	COL_TRI(81, 109, 111),
++	COL_TRI(81, 111, 78),
++	COL_TRI_STOP(),
++	COL_END()
++};
+diff --git a/levels/castle_grounds/area_1/geo.inc.c b/levels/castle_grounds/area_1/geo.inc.c
+new file mode 100644
+index 0000000..8b6f2cc
+--- /dev/null
++++ b/levels/castle_grounds/area_1/geo.inc.c
+@@ -0,0 +1,43 @@
++#include "src/game/envfx_snow.h"
++
++const GeoLayout castle_grounds_area_1_geo[] = {
++	GEO_NODE_START(),
++	GEO_OPEN_NODE(),
++		GEO_SCENE_LIGHT(LIGHT_TYPE_DIRECTIONAL, 129, 129, 129, -83, -66, 68),
++		GEO_SCENE_LIGHT(LIGHT_TYPE_AMBIENT, 27, 27, 27, 0, 0, 0),
++		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -597, 300, -422, castle_grounds_dl_Column_mesh),
++		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -455, 266, 430, castle_grounds_dl_Icosphere_mesh),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_dl_Plane_mesh),
++		GEO_TRANSLATE_NODE(0, 800, 198, 802),
++		GEO_OPEN_NODE(),
++			GEO_SCENE_LIGHT(LIGHT_TYPE_POINT, 255, 40, 0, 1, 0, 8),
++		GEO_CLOSE_NODE(),
++	GEO_CLOSE_NODE(),
++	GEO_RETURN(),
++};
++const GeoLayout castle_grounds_area_1[] = {
++	GEO_NODE_SCREEN_AREA(10, SCREEN_WIDTH/2, SCREEN_HEIGHT/2, SCREEN_WIDTH/2, SCREEN_HEIGHT/2),
++	GEO_OPEN_NODE(),
++		GEO_ZBUFFER(0),
++		GEO_OPEN_NODE(),
++			GEO_NODE_ORTHO(100.0000),
++			GEO_OPEN_NODE(),
++				GEO_BACKGROUND_COLOR(0x0001),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++		GEO_ZBUFFER(1),
++		GEO_OPEN_NODE(),
++			GEO_CAMERA_FRUSTUM_WITH_FUNC(45.0000, 100, 30000, geo_camera_fov),
++			GEO_OPEN_NODE(),
++				GEO_CAMERA(CAMERA_MODE_8_DIRECTIONS, 0, 0, 0, 0, -100, 0, geo_camera_main),
++				GEO_OPEN_NODE(),
++					GEO_BRANCH(1, castle_grounds_area_1_geo),
++					GEO_RENDER_OBJ(),
++					GEO_ASM(ENVFX_MODE_NONE, geo_envfx_main),
++				GEO_CLOSE_NODE(),
++			GEO_CLOSE_NODE(),
++		GEO_CLOSE_NODE(),
++		GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_dl_material_revert_render_settings),
++	GEO_CLOSE_NODE(),
++	GEO_END(),
++};
+diff --git a/levels/castle_grounds/area_1/macro.inc.c b/levels/castle_grounds/area_1/macro.inc.c
+new file mode 100644
+index 0000000..c28274b
+--- /dev/null
++++ b/levels/castle_grounds/area_1/macro.inc.c
+@@ -0,0 +1,4 @@
++const MacroObject castle_grounds_area_1_macro_objs[] = {
++	MACRO_OBJECT_END(),
++};
++
+diff --git a/levels/castle_grounds/area_1/spline.inc.c b/levels/castle_grounds/area_1/spline.inc.c
+new file mode 100644
+index 0000000..e69de29
+diff --git a/levels/castle_grounds/geo.c b/levels/castle_grounds/geo.c
+index 31f7420..9943826 100644
+--- a/levels/castle_grounds/geo.c
++++ b/levels/castle_grounds/geo.c
+@@ -18,3 +18,4 @@
+ #include "levels/castle_grounds/areas/1/7/geo.inc.c"
+ #include "levels/castle_grounds/areas/1/8/geo.inc.c"
+ #include "levels/castle_grounds/areas/1/geo.inc.c"
++#include "levels/castle_grounds/geo.inc.c"
+diff --git a/levels/castle_grounds/geo.inc.c b/levels/castle_grounds/geo.inc.c
+new file mode 100644
+index 0000000..af9c4fa
+--- /dev/null
++++ b/levels/castle_grounds/geo.inc.c
+@@ -0,0 +1 @@
++#include "levels/castle_grounds/area_1/geo.inc.c"
+diff --git a/levels/castle_grounds/header.h b/levels/castle_grounds/header.h
+index 5e32ed9..9edf0e0 100644
+--- a/levels/castle_grounds/header.h
++++ b/levels/castle_grounds/header.h
+@@ -41,4 +41,6 @@ extern const Gfx castle_grounds_dl_waterfall[];
+ // script
+ extern const LevelScript level_castle_grounds_entry[];
+ 
++#include "levels/castle_grounds/header.inc.h"
++
+ #endif
+diff --git a/levels/castle_grounds/header.inc.h b/levels/castle_grounds/header.inc.h
+new file mode 100644
+index 0000000..95d1ba0
+--- /dev/null
++++ b/levels/castle_grounds/header.inc.h
+@@ -0,0 +1,27 @@
++extern const GeoLayout castle_grounds_area_1_geo[];
++extern const GeoLayout castle_grounds_area_1[];
++extern const Collision castle_grounds_area_1_collision[];
++extern const MacroObject castle_grounds_area_1_macro_objs[];
++extern u8 castle_grounds_dl_stripes_i4[];
++extern u8 castle_grounds_dl_checkerboard_ci4[];
++extern u8 castle_grounds_dl_checkerboard_ci4_pal_rgba16[];
++extern Vtx castle_grounds_dl_Column_mesh_vtx_cull[8];
++extern Vtx castle_grounds_dl_Column_mesh_vtx_0[26];
++extern Gfx castle_grounds_dl_Column_mesh_tri_0[];
++extern Vtx castle_grounds_dl_Icosphere_mesh_vtx_cull[8];
++extern Vtx castle_grounds_dl_Icosphere_mesh_vtx_0[90];
++extern Gfx castle_grounds_dl_Icosphere_mesh_tri_0[];
++extern Vtx castle_grounds_dl_Plane_mesh_vtx_cull[8];
++extern Vtx castle_grounds_dl_Plane_mesh_vtx_0[99];
++extern Gfx castle_grounds_dl_Plane_mesh_tri_0[];
++extern Vtx castle_grounds_dl_Plane_mesh_vtx_1[4];
++extern Gfx castle_grounds_dl_Plane_mesh_tri_1[];
++extern Gfx mat_castle_grounds_dl_column_v3[];
++extern Gfx mat_revert_castle_grounds_dl_column_v3[];
++extern Gfx mat_castle_grounds_dl_sm64_material[];
++extern Gfx mat_castle_grounds_dl_checkerboard_v3[];
++extern Gfx mat_revert_castle_grounds_dl_checkerboard_v3[];
++extern Gfx castle_grounds_dl_Column_mesh[];
++extern Gfx castle_grounds_dl_Icosphere_mesh[];
++extern Gfx castle_grounds_dl_Plane_mesh[];
++extern Gfx castle_grounds_dl_material_revert_render_settings[];
+diff --git a/levels/castle_grounds/leveldata.c b/levels/castle_grounds/leveldata.c
+index 1263f06..a4fa025 100644
+--- a/levels/castle_grounds/leveldata.c
++++ b/levels/castle_grounds/leveldata.c
+@@ -31,3 +31,4 @@
+ #include "levels/castle_grounds/areas/1/7/collision.inc.c"
+ #include "levels/castle_grounds/areas/1/8/collision.inc.c"
+ #include "levels/castle_grounds/areas/1/movtext.inc.c"
++#include "levels/castle_grounds/leveldata.inc.c"
+diff --git a/levels/castle_grounds/leveldata.inc.c b/levels/castle_grounds/leveldata.inc.c
+new file mode 100644
+index 0000000..13b2255
+--- /dev/null
++++ b/levels/castle_grounds/leveldata.inc.c
+@@ -0,0 +1,4 @@
++#include "levels/castle_grounds/area_1/collision.inc.c"
++#include "levels/castle_grounds/area_1/macro.inc.c"
++#include "levels/castle_grounds/area_1/spline.inc.c"
++#include "levels/castle_grounds/model.inc.c"
+diff --git a/levels/castle_grounds/model.inc.c b/levels/castle_grounds/model.inc.c
+new file mode 100644
+index 0000000..f50dc05
+--- /dev/null
++++ b/levels/castle_grounds/model.inc.c
+@@ -0,0 +1,569 @@
++Gfx castle_grounds_dl_stripes_i4_aligner[] = {gsSPEndDisplayList()};
++u8 castle_grounds_dl_stripes_i4[] = {
++	0xff, 0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x66, 
++	
++};
++
++Gfx castle_grounds_dl_checkerboard_ci4_aligner[] = {gsSPEndDisplayList()};
++u8 castle_grounds_dl_checkerboard_ci4[] = {
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
++	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
++	
++};
++
++Gfx castle_grounds_dl_checkerboard_ci4_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
++u8 castle_grounds_dl_checkerboard_ci4_pal_rgba16[] = {
++	0x82, 0x01, 0xbc, 0x57, 
++};
++
++Vtx castle_grounds_dl_Column_mesh_vtx_cull[8] = {
++	{{{-100, -300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-100, -300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-100, 300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-100, 300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{100, -300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{100, -300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{100, 300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{100, 300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++};
++
++Vtx castle_grounds_dl_Column_mesh_vtx_0[26] = {
++	{{{-71, -300, 71},0, {-219, 630},{0xA6, 0x0, 0x5A, 0xFF}}},
++	{{{-100, 300, 0},0, {-314, -502},{0x81, 0x0, 0x0, 0xFF}}},
++	{{{-100, -300, 0},0, {-314, 630},{0x81, 0x0, 0x0, 0xFF}}},
++	{{{-71, 300, 71},0, {-219, -502},{0xA6, 0x0, 0x5A, 0xFF}}},
++	{{{0, -300, 100},0, {-125, 630},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{0, 300, 100},0, {-125, -502},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{71, -300, 71},0, {-30, 630},{0x5A, 0x0, 0x5A, 0xFF}}},
++	{{{71, 300, 71},0, {-30, -502},{0x5A, 0x0, 0x5A, 0xFF}}},
++	{{{100, -300, 0},0, {64, 630},{0x7F, 0x0, 0x0, 0xFF}}},
++	{{{100, 300, 0},0, {64, -502},{0x7F, 0x0, 0x0, 0xFF}}},
++	{{{71, -300, -71},0, {158, 630},{0x5A, 0x0, 0xA6, 0xFF}}},
++	{{{71, 300, -71},0, {158, -502},{0x5A, 0x0, 0xA6, 0xFF}}},
++	{{{0, -300, -100},0, {253, 630},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{0, 300, -100},0, {253, -502},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{-71, -300, -71},0, {347, 630},{0xA6, 0x0, 0xA6, 0xFF}}},
++	{{{-71, 300, -71},0, {347, -502},{0xA6, 0x0, 0xA6, 0xFF}}},
++	{{{-100, -300, 0},0, {442, 630},{0x81, 0x0, 0x0, 0xFF}}},
++	{{{-100, 300, 0},0, {442, -502},{0x81, 0x0, 0x0, 0xFF}}},
++	{{{0, 300, -100},0, {54, 9},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-71, 300, -71},0, {41, 23},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-100, 300, 0},0, {41, 42},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{0, 300, 100},0, {74, 55},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-71, 300, 71},0, {54, 55},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{100, 300, 0},0, {87, 23},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{71, 300, 71},0, {87, 42},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{71, 300, -71},0, {74, 9},{0x0, 0x7F, 0x0, 0xFF}}},
++};
++
++Gfx castle_grounds_dl_Column_mesh_tri_0[] = {
++	gsSPVertex(castle_grounds_dl_Column_mesh_vtx_0 + 0, 26, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
++	gsSP2Triangles(6, 5, 4, 0, 6, 7, 5, 0),
++	gsSP2Triangles(8, 7, 6, 0, 8, 9, 7, 0),
++	gsSP2Triangles(10, 9, 8, 0, 10, 11, 9, 0),
++	gsSP2Triangles(12, 11, 10, 0, 12, 13, 11, 0),
++	gsSP2Triangles(14, 13, 12, 0, 14, 15, 13, 0),
++	gsSP2Triangles(16, 15, 14, 0, 16, 17, 15, 0),
++	gsSP2Triangles(18, 19, 20, 0, 18, 20, 21, 0),
++	gsSP2Triangles(20, 22, 21, 0, 21, 23, 18, 0),
++	gsSP2Triangles(21, 24, 23, 0, 23, 25, 18, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx castle_grounds_dl_Icosphere_mesh_vtx_cull[8] = {
++	{{{-95, -100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-95, -100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-95, 100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-95, 100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{95, -100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{95, -100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{95, 100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{95, 100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++};
++
++Vtx castle_grounds_dl_Icosphere_mesh_vtx_0[90] = {
++	{{{0, -100, 0},0, {822, 1008},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{43, -85, 31},0, {775, 927},{0x36, 0x94, 0x27, 0xFF}}},
++	{{{-16, -85, 50},0, {868, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
++	{{{26, -53, 81},0, {822, 847},{0x21, 0xBD, 0x67, 0xFF}}},
++	{{{72, -45, 53},0, {729, 847},{0x5C, 0xC7, 0x43, 0xFF}}},
++	{{{59, 0, 81},0, {775, 766},{0x4B, 0x0, 0x67, 0xFF}}},
++	{{{95, 0, 31},0, {682, 766},{0x79, 0x0, 0x27, 0xFF}}},
++	{{{85, -53, 0},0, {636, 847},{0x6C, 0xBD, 0x0, 0xFF}}},
++	{{{43, -85, 31},0, {682, 927},{0x36, 0x94, 0x27, 0xFF}}},
++	{{{43, -85, -31},0, {589, 927},{0x36, 0x94, 0xD9, 0xFF}}},
++	{{{0, -100, 0},0, {636, 1008},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{72, -45, -53},0, {543, 847},{0x5C, 0xC7, 0xBD, 0xFF}}},
++	{{{95, 0, -31},0, {589, 766},{0x79, 0x0, 0xD9, 0xFF}}},
++	{{{59, 0, -81},0, {496, 766},{0x4B, 0x0, 0x99, 0xFF}}},
++	{{{26, -53, -81},0, {449, 847},{0x21, 0xBD, 0x99, 0xFF}}},
++	{{{43, -85, -31},0, {496, 927},{0x36, 0x94, 0xD9, 0xFF}}},
++	{{{-16, -85, -50},0, {403, 927},{0xEC, 0x94, 0xC1, 0xFF}}},
++	{{{0, -100, 0},0, {449, 1008},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{-28, -45, -85},0, {356, 847},{0xDD, 0xC7, 0x94, 0xFF}}},
++	{{{0, 0, -100},0, {403, 766},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{-59, 0, -81},0, {310, 766},{0xB5, 0x0, 0x99, 0xFF}}},
++	{{{-69, -53, -50},0, {263, 847},{0xA8, 0xBD, 0xC1, 0xFF}}},
++	{{{-16, -85, -50},0, {310, 927},{0xEC, 0x94, 0xC1, 0xFF}}},
++	{{{-53, -85, 0},0, {217, 927},{0xBD, 0x94, 0x0, 0xFF}}},
++	{{{0, -100, 0},0, {263, 1008},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{-89, -45, 0},0, {170, 847},{0x8E, 0xC7, 0x0, 0xFF}}},
++	{{{-95, 0, -31},0, {217, 766},{0x87, 0x0, 0xD9, 0xFF}}},
++	{{{-95, 0, 31},0, {124, 766},{0x87, 0x0, 0x27, 0xFF}}},
++	{{{-69, -53, 50},0, {77, 847},{0xA8, 0xBD, 0x3F, 0xFF}}},
++	{{{-53, -85, 0},0, {124, 927},{0xBD, 0x94, 0x0, 0xFF}}},
++	{{{-16, -85, 50},0, {31, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
++	{{{0, -100, 0},0, {77, 1008},{0x0, 0x81, 0x0, 0xFF}}},
++	{{{-16, -85, 50},0, {31, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
++	{{{-28, -45, 85},0, {-16, 847},{0xDD, 0xC7, 0x6C, 0xFF}}},
++	{{{-69, -53, 50},0, {77, 847},{0xA8, 0xBD, 0x3F, 0xFF}}},
++	{{{-59, 0, 81},0, {31, 766},{0xB5, 0x0, 0x67, 0xFF}}},
++	{{{-95, 0, 31},0, {124, 766},{0x87, 0x0, 0x27, 0xFF}}},
++	{{{-72, 45, 53},0, {77, 686},{0xA4, 0x39, 0x43, 0xFF}}},
++	{{{-85, 53, 0},0, {170, 686},{0x94, 0x43, 0x0, 0xFF}}},
++	{{{-43, 85, 31},0, {124, 605},{0xCA, 0x6C, 0x27, 0xFF}}},
++	{{{-43, 85, -31},0, {217, 605},{0xCA, 0x6C, 0xD9, 0xFF}}},
++	{{{0, 100, 0},0, {170, 524},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-72, 45, -53},0, {263, 686},{0xA4, 0x39, 0xBD, 0xFF}}},
++	{{{-95, 0, -31},0, {217, 766},{0x87, 0x0, 0xD9, 0xFF}}},
++	{{{-59, 0, -81},0, {310, 766},{0xB5, 0x0, 0x99, 0xFF}}},
++	{{{-26, 53, -81},0, {356, 686},{0xDF, 0x43, 0x99, 0xFF}}},
++	{{{-43, 85, -31},0, {310, 605},{0xCA, 0x6C, 0xD9, 0xFF}}},
++	{{{16, 85, -50},0, {403, 605},{0x14, 0x6C, 0xC1, 0xFF}}},
++	{{{0, 100, 0},0, {356, 524},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{28, 45, -85},0, {449, 686},{0x23, 0x39, 0x94, 0xFF}}},
++	{{{0, 0, -100},0, {403, 766},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{59, 0, -81},0, {496, 766},{0x4B, 0x0, 0x99, 0xFF}}},
++	{{{69, 53, -50},0, {543, 686},{0x58, 0x43, 0xC1, 0xFF}}},
++	{{{16, 85, -50},0, {496, 605},{0x14, 0x6C, 0xC1, 0xFF}}},
++	{{{53, 85, 0},0, {589, 605},{0x43, 0x6C, 0x0, 0xFF}}},
++	{{{0, 100, 0},0, {543, 524},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{89, 45, 0},0, {636, 686},{0x72, 0x39, 0x0, 0xFF}}},
++	{{{95, 0, -31},0, {589, 766},{0x79, 0x0, 0xD9, 0xFF}}},
++	{{{95, 0, 31},0, {682, 766},{0x79, 0x0, 0x27, 0xFF}}},
++	{{{69, 53, 50},0, {729, 686},{0x58, 0x43, 0x3F, 0xFF}}},
++	{{{53, 85, 0},0, {682, 605},{0x43, 0x6C, 0x0, 0xFF}}},
++	{{{16, 85, 50},0, {775, 605},{0x14, 0x6C, 0x3F, 0xFF}}},
++	{{{0, 100, 0},0, {729, 524},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{28, 45, 85},0, {822, 686},{0x23, 0x39, 0x6C, 0xFF}}},
++	{{{59, 0, 81},0, {775, 766},{0x4B, 0x0, 0x67, 0xFF}}},
++	{{{69, 53, 50},0, {729, 686},{0x58, 0x43, 0x3F, 0xFF}}},
++	{{{28, 45, 85},0, {822, 686},{0x23, 0x39, 0x6C, 0xFF}}},
++	{{{0, 0, 100},0, {868, 766},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{-26, 53, 81},0, {915, 686},{0xDF, 0x43, 0x67, 0xFF}}},
++	{{{16, 85, 50},0, {868, 605},{0x14, 0x6C, 0x3F, 0xFF}}},
++	{{{-43, 85, 31},0, {961, 605},{0xCA, 0x6C, 0x27, 0xFF}}},
++	{{{0, 100, 0},0, {915, 524},{0x0, 0x7F, 0x0, 0xFF}}},
++	{{{-72, 45, 53},0, {1008, 686},{0xA4, 0x39, 0x43, 0xFF}}},
++	{{{-59, 0, 81},0, {961, 766},{0xB5, 0x0, 0x67, 0xFF}}},
++	{{{-28, -45, 85},0, {915, 847},{0xDD, 0xC7, 0x6C, 0xFF}}},
++	{{{26, -53, 81},0, {822, 847},{0x21, 0xBD, 0x67, 0xFF}}},
++	{{{-16, -85, 50},0, {868, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
++	{{{95, 0, -31},0, {589, 766},{0x79, 0x0, 0xD9, 0xFF}}},
++	{{{59, 0, -81},0, {496, 766},{0x4B, 0x0, 0x99, 0xFF}}},
++	{{{69, 53, -50},0, {543, 686},{0x58, 0x43, 0xC1, 0xFF}}},
++	{{{0, 0, -100},0, {403, 766},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{-59, 0, -81},0, {310, 766},{0xB5, 0x0, 0x99, 0xFF}}},
++	{{{-26, 53, -81},0, {356, 686},{0xDF, 0x43, 0x99, 0xFF}}},
++	{{{-95, 0, -31},0, {217, 766},{0x87, 0x0, 0xD9, 0xFF}}},
++	{{{-95, 0, 31},0, {124, 766},{0x87, 0x0, 0x27, 0xFF}}},
++	{{{-85, 53, 0},0, {170, 686},{0x94, 0x43, 0x0, 0xFF}}},
++	{{{95, 0, 31},0, {682, 766},{0x79, 0x0, 0x27, 0xFF}}},
++	{{{26, -53, -81},0, {449, 847},{0x21, 0xBD, 0x99, 0xFF}}},
++	{{{-69, -53, -50},0, {263, 847},{0xA8, 0xBD, 0xC1, 0xFF}}},
++	{{{85, -53, 0},0, {636, 847},{0x6C, 0xBD, 0x0, 0xFF}}},
++};
++
++Gfx castle_grounds_dl_Icosphere_mesh_tri_0[] = {
++	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(1, 4, 3, 0, 3, 4, 5, 0),
++	gsSP2Triangles(4, 6, 5, 0, 4, 7, 6, 0),
++	gsSP2Triangles(4, 8, 7, 0, 7, 8, 9, 0),
++	gsSP2Triangles(8, 10, 9, 0, 7, 9, 11, 0),
++	gsSP2Triangles(7, 11, 12, 0, 11, 13, 12, 0),
++	gsSP2Triangles(11, 14, 13, 0, 15, 14, 11, 0),
++	gsSP2Triangles(15, 16, 14, 0, 17, 16, 15, 0),
++	gsSP2Triangles(16, 18, 14, 0, 14, 18, 19, 0),
++	gsSP2Triangles(18, 20, 19, 0, 18, 21, 20, 0),
++	gsSP2Triangles(22, 21, 18, 0, 22, 23, 21, 0),
++	gsSP2Triangles(24, 23, 22, 0, 23, 25, 21, 0),
++	gsSP2Triangles(21, 25, 26, 0, 25, 27, 26, 0),
++	gsSP2Triangles(25, 28, 27, 0, 29, 28, 25, 0),
++	gsSP2Triangles(29, 30, 28, 0, 31, 30, 29, 0),
++	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_0 + 32, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
++	gsSP2Triangles(4, 2, 3, 0, 4, 3, 5, 0),
++	gsSP2Triangles(4, 5, 6, 0, 6, 5, 7, 0),
++	gsSP2Triangles(8, 6, 7, 0, 8, 7, 9, 0),
++	gsSP2Triangles(10, 6, 8, 0, 11, 6, 10, 0),
++	gsSP2Triangles(12, 11, 10, 0, 12, 10, 13, 0),
++	gsSP2Triangles(13, 10, 14, 0, 15, 13, 14, 0),
++	gsSP2Triangles(15, 14, 16, 0, 17, 13, 15, 0),
++	gsSP2Triangles(18, 13, 17, 0, 19, 18, 17, 0),
++	gsSP2Triangles(19, 17, 20, 0, 20, 17, 21, 0),
++	gsSP2Triangles(22, 20, 21, 0, 22, 21, 23, 0),
++	gsSP2Triangles(24, 20, 22, 0, 25, 20, 24, 0),
++	gsSP2Triangles(26, 25, 24, 0, 26, 24, 27, 0),
++	gsSP2Triangles(27, 24, 28, 0, 29, 27, 28, 0),
++	gsSP2Triangles(29, 28, 30, 0, 31, 27, 29, 0),
++	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_0 + 64, 26, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
++	gsSP2Triangles(3, 2, 4, 0, 4, 2, 5, 0),
++	gsSP2Triangles(6, 4, 5, 0, 6, 5, 7, 0),
++	gsSP2Triangles(8, 4, 6, 0, 9, 4, 8, 0),
++	gsSP2Triangles(9, 3, 4, 0, 10, 3, 9, 0),
++	gsSP2Triangles(10, 11, 3, 0, 12, 11, 10, 0),
++	gsSP2Triangles(3, 11, 0, 0, 13, 14, 15, 0),
++	gsSP2Triangles(16, 17, 18, 0, 19, 20, 21, 0),
++	gsSP2Triangles(0, 22, 1, 0, 14, 23, 16, 0),
++	gsSP2Triangles(17, 24, 19, 0, 22, 25, 13, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx castle_grounds_dl_Plane_mesh_vtx_cull[8] = {
++	{{{-1023, -50, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-1023, -50, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-1023, 770, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{-1023, 770, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{1034, -50, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{1034, -50, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{1034, 770, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++	{{{1034, 770, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
++};
++
++Vtx castle_grounds_dl_Plane_mesh_vtx_0[99] = {
++	{{{-981, -24, -604},0, {-2048, -1024},{0xF7, 0x7F, 0x0, 0xFF}}},
++	{{{-642, 23, -997},0, {-1024, -2048},{0xFC, 0x7F, 0x1, 0xFF}}},
++	{{{-1002, -14, -1025},0, {-2048, -2048},{0xF1, 0x7E, 0x2, 0xFF}}},
++	{{{-623, 24, -615},0, {-1024, -1024},{0xFE, 0x7F, 0x1, 0xFF}}},
++	{{{-990, 24, -190},0, {-2048, 0},{0xFC, 0x7F, 0x3, 0xFF}}},
++	{{{-636, 0, -206},0, {-1024, 0},{0xFF, 0x7F, 0x2, 0xFF}}},
++	{{{-1023, -50, 176},0, {-2048, 1024},{0xFB, 0x7F, 0x1, 0xFF}}},
++	{{{-585, 4, 214},0, {-1024, 1024},{0xFE, 0x7F, 0x1, 0xFF}}},
++	{{{-1008, 10, 576},0, {-2048, 2048},{0x0, 0x7F, 0xFB, 0xFF}}},
++	{{{-601, -1, 621},0, {-1024, 2048},{0x2, 0x7F, 0xFE, 0xFF}}},
++	{{{-987, 21, 975},0, {-2048, 3072},{0x4, 0x7F, 0xFE, 0xFF}}},
++	{{{-569, 4, 1025},0, {-1024, 3072},{0x6, 0x7F, 0xFD, 0xFF}}},
++	{{{-187, -35, 624},0, {0, 2048},{0xFF, 0x7F, 0x2, 0xFF}}},
++	{{{-211, -10, 1029},0, {0, 3072},{0xFF, 0x7F, 0xFB, 0xFF}}},
++	{{{231, 4, 629},0, {1024, 2048},{0xF7, 0x7F, 0x0, 0xFF}}},
++	{{{220, 19, 1014},0, {1024, 3072},{0xF6, 0x7F, 0xFC, 0xFF}}},
++	{{{570, 46, 623},0, {2048, 2048},{0x3, 0x7F, 0xFF, 0xFF}}},
++	{{{565, 38, 1023},0, {2048, 3072},{0x2, 0x7F, 0x0, 0xFF}}},
++	{{{1034, -14, 971},0, {3072, 3072},{0x10, 0x7E, 0x0, 0xFF}}},
++	{{{1005, -19, 581},0, {3072, 2048},{0x11, 0x7E, 0xFD, 0xFF}}},
++	{{{552, 32, 199},0, {2048, 1024},{0x2, 0x7F, 0xFB, 0xFF}}},
++	{{{983, -37, 229},0, {3072, 1024},{0x9, 0x7F, 0xFE, 0xFF}}},
++	{{{1028, 36, -232},0, {3072, 0},{0xFD, 0x7F, 0x1, 0xFF}}},
++	{{{551, -37, -199},0, {2048, 0},{0x1, 0x7F, 0x1, 0xFF}}},
++	{{{1012, -7, -634},0, {3072, -1024},{0xFF, 0x7F, 0xFF, 0xFF}}},
++	{{{599, 17, -627},0, {2048, -1024},{0x4, 0x7F, 0x1, 0xFF}}},
++	{{{993, -7, -990},0, {3072, -2048},{0x4, 0x7F, 0xFD, 0xFF}}},
++	{{{589, -4, -1032},0, {2048, -2048},{0x6, 0x7F, 0xFA, 0xFF}}},
++	{{{230, 55, -585},0, {1024, -1024},{0x0, 0x7F, 0x4, 0xFF}}},
++	{{{189, 16, -989},0, {1024, -2048},{0xFF, 0x7F, 0xF9, 0xFF}}},
++	{{{-196, -2, -582},0, {0, -1024},{0xFE, 0x7F, 0x3, 0xFF}}},
++	{{{-162, 6, -1014},0, {0, -2048},{0xFE, 0x7F, 0xFF, 0xFF}}},
++	{{{-636, 0, -206},0, {-1024, 0},{0xFF, 0x7F, 0x2, 0xFF}}},
++	{{{-188, -6, -197},0, {0, 0},{0x0, 0x7F, 0x1, 0xFF}}},
++	{{{-196, -2, -582},0, {0, -1024},{0xFE, 0x7F, 0x3, 0xFF}}},
++	{{{-585, 4, 214},0, {-1024, 1024},{0xFE, 0x7F, 0x1, 0xFF}}},
++	{{{-219, 13, 232},0, {0, 1024},{0x0, 0x7F, 0x1, 0xFF}}},
++	{{{-601, -1, 621},0, {-1024, 2048},{0x2, 0x7F, 0xFE, 0xFF}}},
++	{{{-187, -35, 624},0, {0, 2048},{0xFF, 0x7F, 0x2, 0xFF}}},
++	{{{228, 22, 238},0, {1024, 1024},{0xFC, 0x7F, 0xFD, 0xFF}}},
++	{{{231, 4, 629},0, {1024, 2048},{0xF7, 0x7F, 0x0, 0xFF}}},
++	{{{552, 32, 199},0, {2048, 1024},{0x2, 0x7F, 0xFB, 0xFF}}},
++	{{{570, 46, 623},0, {2048, 2048},{0x3, 0x7F, 0xFF, 0xFF}}},
++	{{{551, -37, -199},0, {2048, 0},{0x1, 0x7F, 0x1, 0xFF}}},
++	{{{212, -14, -194},0, {1024, 0},{0x1, 0x7F, 0x1, 0xFF}}},
++	{{{599, 17, -627},0, {2048, -1024},{0x4, 0x7F, 0x1, 0xFF}}},
++	{{{230, 55, -585},0, {1024, -1024},{0x0, 0x7F, 0x4, 0xFF}}},
++	{{{993, -7, -990},0, {2729, -2048},{0xA4, 0x0, 0x58, 0xFF}}},
++	{{{1012, 725, -634},0, {2729, -1024},{0x81, 0x0, 0x5, 0xFF}}},
++	{{{993, 725, -990},0, {2729, -2048},{0xA4, 0x0, 0x58, 0xFF}}},
++	{{{1012, -7, -634},0, {2729, -1024},{0x81, 0x0, 0x5, 0xFF}}},
++	{{{1028, 767, -232},0, {2729, 0},{0x81, 0x0, 0xFD, 0xFF}}},
++	{{{1028, 36, -232},0, {2729, 0},{0x81, 0x0, 0xFD, 0xFF}}},
++	{{{983, 695, 229},0, {2729, 1024},{0x81, 0x0, 0xFE, 0xFF}}},
++	{{{983, -37, 229},0, {2729, 1024},{0x81, 0x0, 0xFF, 0xFF}}},
++	{{{1005, 712, 581},0, {2729, 2048},{0x81, 0x0, 0x8, 0xFF}}},
++	{{{1005, -19, 581},0, {2729, 2048},{0x81, 0x0, 0x8, 0xFF}}},
++	{{{1034, 718, 971},0, {2729, 3072},{0xA1, 0x0, 0xAB, 0xFF}}},
++	{{{1034, -14, 971},0, {2729, 3072},{0x9B, 0x0, 0xB3, 0xFF}}},
++	{{{-1002, -14, -1025},0, {-2048, -1160},{0x5D, 0x0, 0x57, 0xFF}}},
++	{{{-642, 754, -997},0, {-1024, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
++	{{{-1002, 718, -1025},0, {-2048, -1160},{0x55, 0x0, 0x5F, 0xFF}}},
++	{{{-642, 23, -997},0, {-1024, -1160},{0xFD, 0x0, 0x7F, 0xFF}}},
++	{{{-162, 737, -1014},0, {0, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
++	{{{-642, 23, -997},0, {-1024, -1160},{0xFD, 0x0, 0x7F, 0xFF}}},
++	{{{-162, 6, -1014},0, {0, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
++	{{{-162, 737, -1014},0, {0, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
++	{{{189, 748, -989},0, {1024, -1160},{0x2, 0x0, 0x7F, 0xFF}}},
++	{{{189, 16, -989},0, {1024, -1160},{0x1, 0x0, 0x7F, 0xFF}}},
++	{{{589, 728, -1032},0, {2048, -1160},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{589, -4, -1032},0, {2048, -1160},{0x0, 0x0, 0x7F, 0xFF}}},
++	{{{993, 725, -990},0, {3072, -1160},{0xA4, 0x0, 0x58, 0xFF}}},
++	{{{993, -7, -990},0, {3072, -1160},{0xA4, 0x0, 0x58, 0xFF}}},
++	{{{-981, -24, -604},0, {-1794, -1024},{0x7F, 0x0, 0xFE, 0xFF}}},
++	{{{-1002, -14, -1025},0, {-1794, -2048},{0x5D, 0x0, 0x57, 0xFF}}},
++	{{{-1002, 718, -1025},0, {-1794, -2048},{0x55, 0x0, 0x5F, 0xFF}}},
++	{{{-981, 708, -604},0, {-1794, -1024},{0x7F, 0x0, 0xFF, 0xFF}}},
++	{{{-990, 24, -190},0, {-1794, 0},{0x7F, 0x0, 0x7, 0xFF}}},
++	{{{-990, 755, -190},0, {-1794, 0},{0x7F, 0x0, 0x6, 0xFF}}},
++	{{{-1023, -50, 176},0, {-1794, 1024},{0x7F, 0x0, 0x3, 0xFF}}},
++	{{{-1023, 682, 176},0, {-1794, 1024},{0x7F, 0x0, 0x3, 0xFF}}},
++	{{{-1008, 10, 576},0, {-1794, 2048},{0x7F, 0x0, 0xFA, 0xFF}}},
++	{{{-1008, 741, 576},0, {-1794, 2048},{0x7F, 0x0, 0xFB, 0xFF}}},
++	{{{-987, 21, 975},0, {-1794, 3072},{0x5D, 0x0, 0xA9, 0xFF}}},
++	{{{-987, 753, 975},0, {-1794, 3072},{0x5D, 0x0, 0xA9, 0xFF}}},
++	{{{-569, 4, 1025},0, {-1024, 2412},{0x8, 0x0, 0x81, 0xFF}}},
++	{{{-987, 21, 975},0, {-2048, 2412},{0x5D, 0x0, 0xA9, 0xFF}}},
++	{{{-987, 753, 975},0, {-2048, 2412},{0x5D, 0x0, 0xA9, 0xFF}}},
++	{{{-569, 736, 1025},0, {-1024, 2412},{0x8, 0x0, 0x81, 0xFF}}},
++	{{{-211, -10, 1029},0, {0, 2412},{0xFF, 0x0, 0x81, 0xFF}}},
++	{{{-211, 722, 1029},0, {0, 2412},{0xFF, 0x0, 0x81, 0xFF}}},
++	{{{220, 19, 1014},0, {1024, 2412},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{220, 751, 1014},0, {1024, 2412},{0x0, 0x0, 0x81, 0xFF}}},
++	{{{565, 38, 1023},0, {2048, 2412},{0xFB, 0x0, 0x81, 0xFF}}},
++	{{{565, 770, 1023},0, {2048, 2412},{0xFC, 0x0, 0x81, 0xFF}}},
++	{{{1034, -14, 971},0, {3072, 2412},{0x9B, 0x0, 0xB3, 0xFF}}},
++	{{{1034, -14, 971},0, {3072, 2412},{0x9B, 0x0, 0xB3, 0xFF}}},
++	{{{565, 770, 1023},0, {2048, 2412},{0xFC, 0x0, 0x81, 0xFF}}},
++	{{{1034, 718, 971},0, {3072, 2412},{0xA1, 0x0, 0xAB, 0xFF}}},
++};
++
++Gfx castle_grounds_dl_Plane_mesh_tri_0[] = {
++	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 0, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
++	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
++	gsSP2Triangles(6, 5, 4, 0, 6, 7, 5, 0),
++	gsSP2Triangles(7, 6, 8, 0, 7, 8, 9, 0),
++	gsSP2Triangles(9, 8, 10, 0, 9, 10, 11, 0),
++	gsSP2Triangles(11, 12, 9, 0, 11, 13, 12, 0),
++	gsSP2Triangles(13, 14, 12, 0, 13, 15, 14, 0),
++	gsSP2Triangles(15, 16, 14, 0, 15, 17, 16, 0),
++	gsSP2Triangles(16, 17, 18, 0, 16, 18, 19, 0),
++	gsSP2Triangles(20, 16, 19, 0, 20, 19, 21, 0),
++	gsSP2Triangles(20, 21, 22, 0, 20, 22, 23, 0),
++	gsSP2Triangles(23, 22, 24, 0, 23, 24, 25, 0),
++	gsSP2Triangles(25, 24, 26, 0, 25, 26, 27, 0),
++	gsSP2Triangles(28, 25, 27, 0, 28, 27, 29, 0),
++	gsSP2Triangles(30, 28, 29, 0, 30, 29, 31, 0),
++	gsSP2Triangles(3, 30, 31, 0, 3, 31, 1, 0),
++	gsSP1Triangle(5, 30, 3, 0),
++	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 32, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
++	gsSP2Triangles(3, 4, 1, 0, 5, 4, 3, 0),
++	gsSP2Triangles(5, 6, 4, 0, 6, 7, 4, 0),
++	gsSP2Triangles(6, 8, 7, 0, 8, 9, 7, 0),
++	gsSP2Triangles(8, 10, 9, 0, 7, 9, 11, 0),
++	gsSP2Triangles(7, 11, 12, 0, 12, 11, 13, 0),
++	gsSP2Triangles(12, 13, 14, 0, 1, 12, 14, 0),
++	gsSP2Triangles(1, 14, 2, 0, 4, 12, 1, 0),
++	gsSP2Triangles(4, 7, 12, 0, 15, 16, 17, 0),
++	gsSP2Triangles(15, 18, 16, 0, 18, 19, 16, 0),
++	gsSP2Triangles(18, 20, 19, 0, 20, 21, 19, 0),
++	gsSP2Triangles(20, 22, 21, 0, 22, 23, 21, 0),
++	gsSP2Triangles(22, 24, 23, 0, 24, 25, 23, 0),
++	gsSP2Triangles(24, 26, 25, 0, 27, 28, 29, 0),
++	gsSP2Triangles(27, 30, 28, 0, 30, 31, 28, 0),
++	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 64, 32, 0),
++	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
++	gsSP2Triangles(1, 4, 3, 0, 4, 5, 3, 0),
++	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
++	gsSP2Triangles(6, 8, 7, 0, 9, 10, 11, 0),
++	gsSP2Triangles(9, 11, 12, 0, 13, 9, 12, 0),
++	gsSP2Triangles(13, 12, 14, 0, 15, 13, 14, 0),
++	gsSP2Triangles(15, 14, 16, 0, 17, 15, 16, 0),
++	gsSP2Triangles(17, 16, 18, 0, 19, 17, 18, 0),
++	gsSP2Triangles(19, 18, 20, 0, 21, 22, 23, 0),
++	gsSP2Triangles(21, 23, 24, 0, 25, 21, 24, 0),
++	gsSP2Triangles(25, 24, 26, 0, 27, 25, 26, 0),
++	gsSP2Triangles(27, 26, 28, 0, 29, 27, 28, 0),
++	gsSP2Triangles(29, 28, 30, 0, 31, 29, 30, 0),
++	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 96, 3, 0),
++	gsSP1Triangle(0, 1, 2, 0),
++	gsSPEndDisplayList(),
++};
++
++Vtx castle_grounds_dl_Plane_mesh_vtx_1[4] = {
++	{{{-100, 349, 632},0, {1024, 0},{0xFF, 0xFF, 0xFF, 0xFF}}},
++	{{{100, 349, 632},0, {0, 0},{0xFF, 0xFF, 0xFF, 0xFF}}},
++	{{{100, 149, 632},0, {0, 1024},{0xFF, 0xFF, 0xFF, 0xFF}}},
++	{{{-100, 149, 632},0, {1024, 1024},{0xFF, 0xFF, 0xFF, 0xFF}}},
++};
++
++Gfx castle_grounds_dl_Plane_mesh_tri_1[] = {
++	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_1 + 0, 4, 0),
++	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_castle_grounds_dl_column_v3[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
++	gsDPSetTextureFilter(G_TF_POINT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_I, G_IM_SIZ_8b, 2, castle_grounds_dl_stripes_i4),
++	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_8b, 1, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 6, 12),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_4b, 1, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0),
++	gsDPSetTileSize(0, 0, 0, 12, 12),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_castle_grounds_dl_column_v3[] = {
++	gsDPPipeSync(),
++	gsDPSetTextureFilter(G_TF_BILERP),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_castle_grounds_dl_sm64_material[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_castle_grounds_dl_checkerboard_v3[] = {
++	gsDPPipeSync(),
++	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
++	gsDPSetTextureFilter(G_TF_POINT),
++	gsSPTexture(65535, 65535, 0, 0, 1),
++	gsDPSetTextureLUT(G_TT_RGBA16),
++	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, castle_grounds_dl_checkerboard_ci4_pal_rgba16),
++	gsDPTileSync(),
++	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
++	gsDPLoadSync(),
++	gsDPLoadTLUTCmd(7, 1),
++	gsDPPipeSync(),
++	gsDPTileSync(),
++	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 16, castle_grounds_dl_checkerboard_ci4),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 2, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
++	gsDPLoadSync(),
++	gsDPLoadTile(7, 0, 0, 62, 124),
++	gsDPPipeSync(),
++	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_4b, 2, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
++	gsDPSetTileSize(0, 0, 0, 124, 124),
++	gsSPEndDisplayList(),
++};
++
++Gfx mat_revert_castle_grounds_dl_checkerboard_v3[] = {
++	gsDPPipeSync(),
++	gsDPSetTextureFilter(G_TF_BILERP),
++	gsDPSetTextureLUT(G_TT_NONE),
++	gsSPEndDisplayList(),
++};
++
++Gfx castle_grounds_dl_Column_mesh[] = {
++	gsSPClearGeometryMode(G_LIGHTING),
++	gsSPVertex(castle_grounds_dl_Column_mesh_vtx_cull + 0, 8, 0),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPCullDisplayList(0, 7),
++	gsSPDisplayList(mat_castle_grounds_dl_column_v3),
++	gsSPDisplayList(castle_grounds_dl_Column_mesh_tri_0),
++	gsSPDisplayList(mat_revert_castle_grounds_dl_column_v3),
++	gsSPEndDisplayList(),
++};
++
++Gfx castle_grounds_dl_Icosphere_mesh[] = {
++	gsSPClearGeometryMode(G_LIGHTING),
++	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_cull + 0, 8, 0),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPCullDisplayList(0, 7),
++	gsSPDisplayList(mat_castle_grounds_dl_sm64_material),
++	gsSPDisplayList(castle_grounds_dl_Icosphere_mesh_tri_0),
++	gsSPEndDisplayList(),
++};
++
++Gfx castle_grounds_dl_Plane_mesh[] = {
++	gsSPClearGeometryMode(G_LIGHTING),
++	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_cull + 0, 8, 0),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPCullDisplayList(0, 7),
++	gsSPDisplayList(mat_castle_grounds_dl_checkerboard_v3),
++	gsSPDisplayList(castle_grounds_dl_Plane_mesh_tri_0),
++	gsSPDisplayList(mat_revert_castle_grounds_dl_checkerboard_v3),
++	gsSPEndDisplayList(),
++};
++
++Gfx castle_grounds_dl_material_revert_render_settings[] = {
++	gsDPPipeSync(),
++	gsSPSetGeometryMode(G_LIGHTING),
++	gsSPClearGeometryMode(G_TEXTURE_GEN),
++	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
++	gsSPTexture(65535, 65535, 0, 0, 0),
++	gsDPSetEnvColor(255, 255, 255, 255),
++	gsDPSetAlphaCompare(G_AC_NONE),
++	gsSPEndDisplayList(),
++};
++
+diff --git a/levels/castle_grounds/script.c b/levels/castle_grounds/script.c
+index 626bece..65060b0 100644
+--- a/levels/castle_grounds/script.c
++++ b/levels/castle_grounds/script.c
+@@ -3,6 +3,7 @@
+ #include "behavior_data.h"
+ #include "model_ids.h"
+ #include "seq_ids.h"
++#include "dialog_ids.h"
+ #include "segment_symbols.h"
+ #include "level_commands.h"
+ 
+@@ -15,125 +16,38 @@
+ #include "make_const_nonconst.h"
+ #include "levels/castle_grounds/header.h"
+ 
+-static const LevelScript script_func_local_1[] = {
+-    WARP_NODE(/*id*/ 0x00, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x00, /*flags*/ WARP_NO_CHECKPOINT),
+-    WARP_NODE(/*id*/ 0x01, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x01, /*flags*/ WARP_NO_CHECKPOINT),
+-    WARP_NODE(/*id*/ 0x02, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x03, /*destNode*/ 0x02, /*flags*/ WARP_NO_CHECKPOINT),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/     0,   900, -1710, /*angle*/ 0, 180, 0, /*behParam*/ 0x00030000, /*beh*/ bhvDeathWarp),
+-    WARP_NODE(/*id*/ 0x03, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -1328,   260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00040000, /*beh*/ bhvSpinAirborneCircleWarp),
+-    WARP_NODE(/*id*/ 0x04, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x04, /*flags*/ WARP_NO_CHECKPOINT),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -815, -2025, /*angle*/ 0,   0, 0, /*behParam*/ 0x3C050000, /*beh*/ bhvWarp),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00060000, /*beh*/ bhvLaunchDeathWarp),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3799, -1199, -5816, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvSwimmingWarp),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00080000, /*beh*/ bhvLaunchStarCollectWarp),
+-    WARP_NODE(/*id*/ 0x05, /*destLevel*/ LEVEL_VCUTM, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
+-    WARP_NODE(/*id*/ 0x06, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x06, /*flags*/ WARP_NO_CHECKPOINT),
+-    WARP_NODE(/*id*/ 0x07, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x07, /*flags*/ WARP_NO_CHECKPOINT),
+-    WARP_NODE(/*id*/ 0x08, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x08, /*flags*/ WARP_NO_CHECKPOINT),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/  5408,  4500,  3637, /*angle*/ 0, 225, 0, /*behParam*/ 0x000A0000, /*beh*/ bhvAirborneWarp),
+-    WARP_NODE(/*id*/ 0x0A, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -6901,  2376, -6509, /*angle*/ 0, 230, 0, /*behParam*/ 0x00140000, /*beh*/ bhvAirborneWarp),
+-    WARP_NODE(/*id*/ 0x14, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x14, /*flags*/ WARP_NO_CHECKPOINT),
+-    OBJECT(/*model*/ MODEL_NONE, /*pos*/  4997, -1250,  2258, /*angle*/ 0, 210, 0, /*behParam*/ 0x001E0000, /*beh*/ bhvSwimmingWarp),
+-    WARP_NODE(/*id*/ 0x1E, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x1E, /*flags*/ WARP_NO_CHECKPOINT),
+-    RETURN(),
+-};
+-
+-static const LevelScript script_func_local_2[] = {
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -5812,  100, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterfallSoundLoop),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500,   873, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvBirdsSoundLoop),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/   -80, 1500,  5004, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBirdsSoundLoop),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  7131, 1500, -2989, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvBirdsSoundLoop),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvAmbientSounds),
+-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMoatGrills),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvInvisibleObjectsUnderBridge),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4878, -787, -5690, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4996, -787, -5548, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5114, -787, -5406, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5212, -787, -5219, /*angle*/ 0,   0, 0, /*behParam*/ 0x00030000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5311, -787, -5033, /*angle*/ 0,   0, 0, /*behParam*/ 0x00040000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5419, -787, -4895, /*angle*/ 0,   0, 0, /*behParam*/ 0x00050000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5527, -787, -4757, /*angle*/ 0,   0, 0, /*behParam*/ 0x00060000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5686, -787, -4733, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5845, -787, -4710, /*angle*/ 0,   0, 0, /*behParam*/ 0x00080000, /*beh*/ bhvWaterMist2),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  5223, -975,  1667, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvManyBlueFishSpawner),
+-    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -5069,  850,  3221, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+-    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -4711,  742,   433, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+-    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/  5774,  913, -1114, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -1328,  260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00280000, /*beh*/ bhvIntroScene),
+-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_CANNON_GRILL, /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvHiddenAt120Stars),
+-    OBJECT(/*model*/ MODEL_LAKITU,                      /*pos*/    11,  803, -3015, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvCameraLakitu),
+-    RETURN(),
+-};
+-
+-static const LevelScript script_func_local_3[] = {
+-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+-    RETURN(),
+-};
+-
+-static const LevelScript script_func_local_4[] = {
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4508,  406,  4400, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4408,  406,  4500, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4708,  406,  4100, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2621, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2321, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6543,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6143,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5773,  775, -5722, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5873,  775, -5622, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5473,  775, -5322, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1504,  326,  3196, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1204,  326,  3296, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+-    OBJECT(/*model*/ MODEL_YOSHI,     /*pos*/     0, 3174, -5625, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvYoshi),
+-    RETURN(),
+-};
+-
+ const LevelScript level_castle_grounds_entry[] = {
+-    INIT_LEVEL(),
+-    LOAD_MIO0(        /*seg*/ 0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd),
+-    LOAD_MIO0(        /*seg*/ 0x0A, _water_skybox_mio0SegmentRomStart, _water_skybox_mio0SegmentRomEnd),
+-    LOAD_MIO0_TEXTURE(/*seg*/ 0x09, _outside_mio0SegmentRomStart, _outside_mio0SegmentRomEnd),
+-    LOAD_MIO0(        /*seg*/ 0x05, _group10_mio0SegmentRomStart, _group10_mio0SegmentRomEnd),
+-    LOAD_RAW(         /*seg*/ 0x0C, _group10_geoSegmentRomStart,  _group10_geoSegmentRomEnd),
+-    LOAD_MIO0(        /*seg*/ 0x06, _group15_mio0SegmentRomStart, _group15_mio0SegmentRomEnd),
+-    LOAD_RAW(         /*seg*/ 0x0D, _group15_geoSegmentRomStart,  _group15_geoSegmentRomEnd),
+-    LOAD_MIO0(        /*seg*/ 0x08, _common0_mio0SegmentRomStart, _common0_mio0SegmentRomEnd),
+-    LOAD_RAW(         /*seg*/ 0x0F, _common0_geoSegmentRomStart,  _common0_geoSegmentRomEnd),
+-    ALLOC_LEVEL_POOL(),
+-    MARIO(/*model*/ MODEL_MARIO, /*behParam*/ 0x00000001, /*beh*/ bhvMario),
+-    JUMP_LINK(script_func_global_1),
+-    JUMP_LINK(script_func_global_11),
+-    JUMP_LINK(script_func_global_16),
+-    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           castle_grounds_geo_0006F4),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_BUBBLY_TREE,  bubbly_tree_geo),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_WARP_PIPE,    warp_pipe_geo),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CASTLE_DOOR,  castle_door_geo),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_METAL_DOOR,   metal_door_geo),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  castle_grounds_geo_00070C),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_FLAG,         castle_grounds_geo_000660),
+-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CANNON_GRILL, castle_grounds_geo_000724),
+-
+-    AREA(/*index*/ 1, castle_grounds_geo_00073C),
+-        WARP_NODE(/*id*/ 0xF1, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
+-        JUMP_LINK(script_func_local_1),
+-        JUMP_LINK(script_func_local_2),
+-        JUMP_LINK(script_func_local_3),
+-        JUMP_LINK(script_func_local_4),
+-        TERRAIN(/*terrainData*/ castle_grounds_seg7_collision_level),
+-        MACRO_OBJECTS(/*objList*/ castle_grounds_seg7_macro_objs),
+-        SET_BACKGROUND_MUSIC(/*settingsPreset*/ 0x0000, /*seq*/ SEQ_SOUND_PLAYER),
+-        TERRAIN_TYPE(/*terrainType*/ TERRAIN_GRASS),
+-    END_AREA(),
+-
+-    FREE_LEVEL_POOL(),
+-    MARIO_POS(/*area*/ 1, /*yaw*/ 180, /*pos*/ -1328, 260, 4664),
+-    CALL(/*arg*/ 0, /*func*/ lvl_init_or_update),
+-    CALL_LOOP(/*arg*/ 1, /*func*/ lvl_init_or_update),
+-    CLEAR_LEVEL(),
+-    SLEEP_BEFORE_EXIT(/*frames*/ 1),
+-    EXIT(),
++	INIT_LEVEL(),
++	LOAD_MIO0(0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd), 
++	LOAD_MIO0(0x0A, _water_skybox_mio0SegmentRomStart, _water_skybox_mio0SegmentRomEnd), 
++	LOAD_MIO0_TEXTURE(0x09, _outside_mio0SegmentRomStart, _outside_mio0SegmentRomEnd), 
++	LOAD_MIO0(0x05, _group4_mio0SegmentRomStart, _group4_mio0SegmentRomEnd), 
++	LOAD_RAW(0x0C, _group4_geoSegmentRomStart, _group4_geoSegmentRomEnd), 
++	LOAD_MIO0(0x06, _group17_mio0SegmentRomStart, _group17_mio0SegmentRomEnd), 
++	LOAD_RAW(0x0D, _group17_geoSegmentRomStart, _group17_geoSegmentRomEnd), 
++	LOAD_MIO0(0x08, _common0_mio0SegmentRomStart, _common0_mio0SegmentRomEnd), 
++	LOAD_RAW(0x0F, _common0_geoSegmentRomStart, _common0_geoSegmentRomEnd), 
++	ALLOC_LEVEL_POOL(),
++	MARIO(MODEL_MARIO, 0x00000001, bhvMario), 
++	JUMP_LINK(script_func_global_1), 
++	JUMP_LINK(script_func_global_5), 
++	JUMP_LINK(script_func_global_18), 
++
++	AREA(1, castle_grounds_area_1),
++		OBJECT(MODEL_BREAKABLE_BOX_SMALL, -300, 100, 800, 0, 0, 0, 0x00000000, bhvBreakableBoxSmall),
++		MARIO_POS(0x01, 0, 0, 52, 0),
++		OBJECT(MODEL_RED_FLAME, 800, 198, 802, 0, 0, 0, 0x00000000, bhvFlame),
++		TERRAIN(castle_grounds_area_1_collision),
++		MACRO_OBJECTS(castle_grounds_area_1_macro_objs),
++		STOP_MUSIC(0),
++		TERRAIN_TYPE(TERRAIN_STONE),
++	END_AREA(),
++
++	FREE_LEVEL_POOL(),
++	MARIO_POS(0x01, 0, 0, 52, 0),
++	CALL(0, lvl_init_or_update),
++	CALL_LOOP(1, lvl_init_or_update),
++	CLEAR_LEVEL(),
++	SLEEP_BEFORE_EXIT(1),
++	EXIT(),
+ };
+diff --git a/levels/course_defines.h b/levels/course_defines.h
+index 600cead..d47d97d 100644
+--- a/levels/course_defines.h
++++ b/levels/course_defines.h
+@@ -10,30 +10,30 @@
+  *      3: Bowser keys and the grand star
+  *      4: Default, used for 100 coin stars, 8 red coin stars in bowser levels, and secret stars
+  */
+-DEFINE_COURSE(COURSE_NONE, 0x44444440)            // (0)  Course Hub (Castle Grounds)
+-DEFINE_COURSE(COURSE_BOB,  0x00022240)            // (1)  Bob Omb Battlefield
+-DEFINE_COURSE(COURSE_WF,   0x00002040)            // (2)  Whomp's Fortress
+-DEFINE_COURSE(COURSE_JRB,  0x22222240)            // (3)  Jolly Rodger's Bay
+-DEFINE_COURSE(COURSE_CCM,  0x00220040)            // (4)  Cool Cool Mountain
+-DEFINE_COURSE(COURSE_BBH,  0x22222240)            // (5)  Big Boo's Haunt
+-DEFINE_COURSE(COURSE_HMC,  0x22222240)            // (6)  Hazy Maze Cave
+-DEFINE_COURSE(COURSE_LLL,  0x21212140)            // (7)  Lethal Lava Land
+-DEFINE_COURSE(COURSE_SSL,  0x20222240)            // (8)  Shifting Sand Land
+-DEFINE_COURSE(COURSE_DDD,  0x22222240)            // (9)  Dire Dire Docks
+-DEFINE_COURSE(COURSE_SL,   0x02020240)            // (10) Snowman's Land
+-DEFINE_COURSE(COURSE_WDW,  0x22102240)            // (11) Wet Dry World
+-DEFINE_COURSE(COURSE_TTM,  0x00000040)            // (12) Tall Tall Mountain
+-DEFINE_COURSE(COURSE_THI,  0x11112140)            // (13) Tiny Huge Island
+-DEFINE_COURSE(COURSE_TTC,  0x22222240)            // (14) Tick Tock Clock
+-DEFINE_COURSE(COURSE_RR,   0x00000040)            // (15) Rainbow Ride
++DEFINE_COURSE(COURSE_NONE, 0x44444440) // (0)  Course Hub (Castle Grounds)
++DEFINE_COURSE(COURSE_BOB, 0x00022240) // (1)  Bob Omb Battlefield
++DEFINE_COURSE(COURSE_WF, 0x00002040) // (2)  Whomp's Fortress
++DEFINE_COURSE(COURSE_JRB, 0x44444440) // (3)  Jolly Rodger's Bay
++DEFINE_COURSE(COURSE_CCM, 0x00220040) // (4)  Cool Cool Mountain
++DEFINE_COURSE(COURSE_BBH, 0x22222240) // (5)  Big Boo's Haunt
++DEFINE_COURSE(COURSE_HMC, 0x22222240) // (6)  Hazy Maze Cave
++DEFINE_COURSE(COURSE_LLL, 0x21212140) // (7)  Lethal Lava Land
++DEFINE_COURSE(COURSE_SSL, 0x20222240) // (8)  Shifting Sand Land
++DEFINE_COURSE(COURSE_DDD, 0x22222240) // (9)  Dire Dire Docks
++DEFINE_COURSE(COURSE_SL, 0x02020240) // (10) Snowman's Land
++DEFINE_COURSE(COURSE_WDW, 0x22102240) // (11) Wet Dry World
++DEFINE_COURSE(COURSE_TTM, 0x00000040) // (12) Tall Tall Mountain
++DEFINE_COURSE(COURSE_THI, 0x11112140) // (13) Tiny Huge Island
++DEFINE_COURSE(COURSE_TTC, 0x22222240) // (14) Tick Tock Clock
++DEFINE_COURSE(COURSE_RR, 0x00000040) // (15) Rainbow Ride
+ DEFINE_COURSES_END()
+-DEFINE_BONUS_COURSE(COURSE_BITDW,    0x34444440) // (16) Bowser in the Dark World
+-DEFINE_BONUS_COURSE(COURSE_BITFS,    0x34444440) // (17) Bowser in the Fire Sea
+-DEFINE_BONUS_COURSE(COURSE_BITS,     0x34444440) // (18) Bowser in the Sky
+-DEFINE_BONUS_COURSE(COURSE_PSS,      0x24444440) // (19) Princess's Secret Slide
+-DEFINE_BONUS_COURSE(COURSE_COTMC,    0x44444440) // (20) Cavern of the Metal Cap
+-DEFINE_BONUS_COURSE(COURSE_TOTWC,    0x04444440) // (21) Tower of the Wing Cap
+-DEFINE_BONUS_COURSE(COURSE_VCUTM,    0x24444440) // (22) Vanish Cap Under the Moat
+-DEFINE_BONUS_COURSE(COURSE_WMOTR,    0x04444440) // (23) Winged Mario over the Rainbow
+-DEFINE_BONUS_COURSE(COURSE_SA,       0x24444440) // (24) Secret Aquarium
++DEFINE_BONUS_COURSE(COURSE_BITDW, 0x34444440) // (16) Bowser in the Dark World
++DEFINE_BONUS_COURSE(COURSE_BITFS, 0x34444440) // (17) Bowser in the Fire Sea
++DEFINE_BONUS_COURSE(COURSE_BITS, 0x34444440) // (18) Bowser in the Sky
++DEFINE_BONUS_COURSE(COURSE_PSS, 0x24444440) // (19) Princess's Secret Slide
++DEFINE_BONUS_COURSE(COURSE_COTMC, 0x44444440) // (20) Cavern of the Metal Cap
++DEFINE_BONUS_COURSE(COURSE_TOTWC, 0x04444440) // (21) Tower of the Wing Cap
++DEFINE_BONUS_COURSE(COURSE_VCUTM, 0x24444440) // (22) Vanish Cap Under the Moat
++DEFINE_BONUS_COURSE(COURSE_WMOTR, 0x04444440) // (23) Winged Mario over the Rainbow
++DEFINE_BONUS_COURSE(COURSE_SA, 0x24444440) // (24) Secret Aquarium
+ DEFINE_BONUS_COURSE(COURSE_CAKE_END, 0x44444440) // (25) The End (Cake Scene)
+diff --git a/levels/intro/script.c b/levels/intro/script.c
+index a130cc0..3a5cbbb 100644
+--- a/levels/intro/script.c
++++ b/levels/intro/script.c
+@@ -19,6 +19,8 @@
+ #include "levels/intro/header.h"
+ 
+ const LevelScript level_intro_splash_screen[] = {
++    // Skip straight to main menu
++    JUMP(script_intro_L1),
+     INIT_LEVEL(),
+     FIXED_LOAD(/*loadAddr*/ _goddardSegmentStart, /*romStart*/ _goddardSegmentRomStart, /*romEnd*/ _goddardSegmentRomEnd),
+     LOAD_RAW(/*seg*/ 0x13, _behaviorSegmentRomStart, _behaviorSegmentRomEnd),
+diff --git a/levels/level_defines.h b/levels/level_defines.h
+index c14f252..f45a077 100644
+--- a/levels/level_defines.h
++++ b/levels/level_defines.h
+@@ -17,41 +17,41 @@
+ 
+ // NOTE: Be sure to edit sZoomOutAreaMasks in camera.c, as there isnt a good way to macro those right now.
+ // TODO: Figure something out for sZoomOutAreaMasks?
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_1,        COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_2,        COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_3,        COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
+-DEFINE_LEVEL("TERESA OBAKE",   LEVEL_BBH,              COURSE_BBH,      bbh,              spooky,   28000,    0x28, 0x28, 0x28, sDynBbh,   sCamBBH)
+-DEFINE_LEVEL("YYAMA1 % YSLD1", LEVEL_CCM,              COURSE_CCM,      ccm,              snow,     17000,    0x10, 0x38, 0x38, _,         sCamCCM)
+-DEFINE_LEVEL("SELECT ROOM",    LEVEL_CASTLE,           COURSE_NONE,     castle_inside,    inside,   20000,    0x20, 0x20, 0x30, _,         sCamCastle)
+-DEFINE_LEVEL("HORROR DUNGEON", LEVEL_HMC,              COURSE_HMC,      hmc,              cave,     16000,    0x28, 0x28, 0x28, sDynHmc,   sCamHMC)
+-DEFINE_LEVEL("SABAKU % PYRMD", LEVEL_SSL,              COURSE_SSL,      ssl,              generic,  15000,    0x08, 0x30, 0x30, _,         sCamSSL)
+-DEFINE_LEVEL("BATTLE FIELD",   LEVEL_BOB,              COURSE_BOB,      bob,              generic,  15000,    0x08, 0x08, 0x08, _,         _)
+-DEFINE_LEVEL("YUKIYAMA2",      LEVEL_SL,               COURSE_SL,       sl,               snow,     14000,    0x10, 0x28, 0x28, _,         sCamSL)
+-DEFINE_LEVEL("POOL KAI",       LEVEL_WDW,              COURSE_WDW,      wdw,              grass,    17000,    0x10, 0x18, 0x18, sDynWdw,   _)
+-DEFINE_LEVEL("WTDG % TINBOTU", LEVEL_JRB,              COURSE_JRB,      jrb,              water,    20000,    0x10, 0x18, 0x18, sDynJrb,   _)
+-DEFINE_LEVEL("BIG WORLD",      LEVEL_THI,              COURSE_THI,      thi,              grass,    20000,    0x0c, 0x0c, 0x20, _,         sCamTHI)
+-DEFINE_LEVEL("CLOCK TOWER",    LEVEL_TTC,              COURSE_TTC,      ttc,              machine,  18000,    0x18, 0x18, 0x18, _,         _)
+-DEFINE_LEVEL("RAINBOW CRUISE", LEVEL_RR,               COURSE_RR,       rr,               sky,      20000,    0x20, 0x20, 0x20, _,         sCamRR)
+-DEFINE_LEVEL("MAIN MAP",       LEVEL_CASTLE_GROUNDS,   COURSE_NONE,     castle_grounds,   outside,  25000,    0x08, 0x08, 0x08, _,         _)
+-DEFINE_LEVEL("EXT1 YOKO SCRL", LEVEL_BITDW,            COURSE_BITDW,    bitdw,            sky,      16000,    0x28, 0x28, 0x28, _,         _)
+-DEFINE_LEVEL("EXT7 HORI MINI", LEVEL_VCUTM,            COURSE_VCUTM,    vcutm,            outside,  30000,    0x28, 0x28, 0x28, _,         _)
+-DEFINE_LEVEL("EXT2 TIKA LAVA", LEVEL_BITFS,            COURSE_BITFS,    bitfs,            sky,      16000,    0x28, 0x28, 0x28, _,         _)
+-DEFINE_LEVEL("EXT9 SUISOU",    LEVEL_SA,               COURSE_SA,       sa,               inside,   20000,    0x10, 0x10, 0x10, _,         _)
+-DEFINE_LEVEL("EXT3 HEAVEN",    LEVEL_BITS,             COURSE_BITS,     bits,             sky,      16000,    0x28, 0x28, 0x28, _,         _)
+-DEFINE_LEVEL("FIREB1 % INVLC", LEVEL_LLL,              COURSE_LLL,      lll,              fire,     22000,    0x08, 0x30, 0x30, _,         _)
+-DEFINE_LEVEL("WATER LAND",     LEVEL_DDD,              COURSE_DDD,      ddd,              water,    17000,    0x10, 0x20, 0x20, sDynDdd,   _)
+-DEFINE_LEVEL("MOUNTAIN",       LEVEL_WF,               COURSE_WF,       wf,               grass,    13000,    0x08, 0x08, 0x08, _,         _)
+-DEFINE_LEVEL("ENDING",         LEVEL_ENDING,           COURSE_CAKE_END, ending,           generic,  20000,    0x00, 0x00, 0x00, _,         _)
+-DEFINE_LEVEL("URANIWA",        LEVEL_CASTLE_COURTYARD, COURSE_NONE,     castle_courtyard, outside,  20000,    0x08, 0x08, 0x08, _,         _)
+-DEFINE_LEVEL("EXT4 MINI SLID", LEVEL_PSS,              COURSE_PSS,      pss,              mountain, 20000,    0x28, 0x28, 0x28, _,         _)
+-DEFINE_LEVEL("IN THE FALL",    LEVEL_COTMC,            COURSE_COTMC,    cotmc,            cave,     18000,    0x28, 0x28, 0x28, _,         sCamCotMC)
+-DEFINE_LEVEL("EXT6 MARIO FLY", LEVEL_TOTWC,            COURSE_TOTWC,    totwc,            sky,      20000,    0x20, 0x20, 0x20, _,         _)
+-DEFINE_LEVEL("KUPPA1",         LEVEL_BOWSER_1,         COURSE_BITDW,    bowser_1,         generic,  VAL_DIFF, 0x40, 0x40, 0x40, _,         _)
+-DEFINE_LEVEL("EXT8 BLUE SKY",  LEVEL_WMOTR,            COURSE_WMOTR,    wmotr,            generic,  20000,    0x28, 0x28, 0x28, _,         _)
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_32,       COURSE_NONE,                                 20000,    0x70, 0x00, 0x00, _,         _)
+-DEFINE_LEVEL("KUPPA2",         LEVEL_BOWSER_2,         COURSE_BITFS,    bowser_2,         fire,     VAL_DIFF, 0x40, 0x40, 0x40, _,         _)
+-DEFINE_LEVEL("KUPPA3",         LEVEL_BOWSER_3,         COURSE_BITS,     bowser_3,         generic,  VAL_DIFF, 0x40, 0x40, 0x40, _,         _)
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_35,       COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
+-DEFINE_LEVEL("DONKEY % SLID2", LEVEL_TTM,              COURSE_TTM,      ttm,              mountain, 15000,    0x08, 0x08, 0x08, _,         _)
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_37,       COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
+-STUB_LEVEL(  "",               LEVEL_UNKNOWN_38,       COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, sDynUnk38, _)
++STUB_LEVEL("", LEVEL_UNKNOWN_1, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
++STUB_LEVEL("", LEVEL_UNKNOWN_2, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
++STUB_LEVEL("", LEVEL_UNKNOWN_3, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
++DEFINE_LEVEL("TERESA OBAKE", LEVEL_BBH, COURSE_BBH, bbh, spooky, 28000, 0x28, 0x28, 0x28, sDynBbh, sCamBBH) 
++DEFINE_LEVEL("YYAMA1 % YSLD1", LEVEL_CCM, COURSE_CCM, ccm, snow, 17000, 0x10, 0x38, 0x38, _, sCamCCM) 
++DEFINE_LEVEL("SELECT ROOM", LEVEL_CASTLE, COURSE_NONE, castle_inside, inside, 20000, 0x20, 0x20, 0x30, _, sCamCastle) 
++DEFINE_LEVEL("HORROR DUNGEON", LEVEL_HMC, COURSE_HMC, hmc, cave, 16000, 0x28, 0x28, 0x28, sDynHmc, sCamHMC) 
++DEFINE_LEVEL("SABAKU % PYRMD", LEVEL_SSL, COURSE_SSL, ssl, generic, 15000, 0x08, 0x30, 0x30, _, sCamSSL) 
++DEFINE_LEVEL("BATTLE FIELD", LEVEL_BOB, COURSE_BOB, bob, generic, 15000, 0x08, 0x08, 0x08, _, _) 
++DEFINE_LEVEL("YUKIYAMA2", LEVEL_SL, COURSE_SL, sl, snow, 14000, 0x10, 0x28, 0x28, _, sCamSL) 
++DEFINE_LEVEL("POOL KAI", LEVEL_WDW, COURSE_WDW, wdw, grass, 17000, 0x10, 0x18, 0x18, sDynWdw, _) 
++DEFINE_LEVEL("WTDG % TINBOTU", LEVEL_JRB, COURSE_JRB, jrb, water, 15000, 0xff, 0x00, 0x00, sDynJrb, sCamJRB) 
++DEFINE_LEVEL("BIG WORLD", LEVEL_THI, COURSE_THI, thi, grass, 20000, 0x0c, 0x0c, 0x20, _, sCamTHI) 
++DEFINE_LEVEL("CLOCK TOWER", LEVEL_TTC, COURSE_TTC, ttc, machine, 18000, 0x18, 0x18, 0x18, _, _) 
++DEFINE_LEVEL("RAINBOW CRUISE", LEVEL_RR, COURSE_RR, rr, sky, 20000, 0x20, 0x20, 0x20, _, sCamRR) 
++DEFINE_LEVEL("MAIN MAP", LEVEL_CASTLE_GROUNDS, COURSE_NONE, castle_grounds, outside, 20000, 0x00, 0x00, 0x00, _, sCamCastleGrounds) 
++DEFINE_LEVEL("EXT1 YOKO SCRL", LEVEL_BITDW, COURSE_BITDW, bitdw, sky, 16000, 0x28, 0x28, 0x28, _, _) 
++DEFINE_LEVEL("EXT7 HORI MINI", LEVEL_VCUTM, COURSE_VCUTM, vcutm, outside, 30000, 0x28, 0x28, 0x28, _, _) 
++DEFINE_LEVEL("EXT2 TIKA LAVA", LEVEL_BITFS, COURSE_BITFS, bitfs, sky, 16000, 0x28, 0x28, 0x28, _, _) 
++DEFINE_LEVEL("EXT9 SUISOU", LEVEL_SA, COURSE_SA, sa, inside, 20000, 0x10, 0x10, 0x10, _, _) 
++DEFINE_LEVEL("EXT3 HEAVEN", LEVEL_BITS, COURSE_BITS, bits, sky, 16000, 0x28, 0x28, 0x28, _, _) 
++DEFINE_LEVEL("FIREB1 % INVLC", LEVEL_LLL, COURSE_LLL, lll, fire, 22000, 0x08, 0x30, 0x30, _, _) 
++DEFINE_LEVEL("WATER LAND", LEVEL_DDD, COURSE_DDD, ddd, water, 17000, 0x10, 0x20, 0x20, sDynDdd, _) 
++DEFINE_LEVEL("MOUNTAIN", LEVEL_WF, COURSE_WF, wf, grass, 13000, 0x08, 0x08, 0x08, _, _) 
++DEFINE_LEVEL("ENDING", LEVEL_ENDING, COURSE_CAKE_END, ending, generic, 20000, 0x00, 0x00, 0x00, _, _) 
++DEFINE_LEVEL("URANIWA", LEVEL_CASTLE_COURTYARD, COURSE_NONE, castle_courtyard, outside, 20000, 0x08, 0x08, 0x08, _, _) 
++DEFINE_LEVEL("EXT4 MINI SLID", LEVEL_PSS, COURSE_PSS, pss, mountain, 20000, 0x28, 0x28, 0x28, _, _) 
++DEFINE_LEVEL("IN THE FALL", LEVEL_COTMC, COURSE_COTMC, cotmc, cave, 18000, 0x28, 0x28, 0x28, _, sCamCotMC) 
++DEFINE_LEVEL("EXT6 MARIO FLY", LEVEL_TOTWC, COURSE_TOTWC, totwc, sky, 20000, 0x20, 0x20, 0x20, _, _) 
++DEFINE_LEVEL("KUPPA1", LEVEL_BOWSER_1, COURSE_BITDW, bowser_1, generic, VAL_DIFF, 0x40, 0x40, 0x40, _, _) 
++DEFINE_LEVEL("EXT8 BLUE SKY", LEVEL_WMOTR, COURSE_WMOTR, wmotr, generic, 20000, 0x28, 0x28, 0x28, _, _) 
++STUB_LEVEL("", LEVEL_UNKNOWN_32, COURSE_NONE, 20000, 0x70, 0x00, 0x00, _, _) 
++DEFINE_LEVEL("KUPPA2", LEVEL_BOWSER_2, COURSE_BITFS, bowser_2, fire, VAL_DIFF, 0x40, 0x40, 0x40, _, _) 
++DEFINE_LEVEL("KUPPA3", LEVEL_BOWSER_3, COURSE_BITS, bowser_3, generic, VAL_DIFF, 0x40, 0x40, 0x40, _, _) 
++STUB_LEVEL("", LEVEL_UNKNOWN_35, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
++DEFINE_LEVEL("DONKEY % SLID2", LEVEL_TTM, COURSE_TTM, ttm, mountain, 15000, 0x08, 0x08, 0x08, _, _) 
++STUB_LEVEL("", LEVEL_UNKNOWN_37, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
++STUB_LEVEL("", LEVEL_UNKNOWN_38, COURSE_NONE, 20000, 0x00, 0x00, 0x00, sDynUnk38, _) 
+diff --git a/levels/menu/script.c b/levels/menu/script.c
+index f6db65c..1ec2a61 100644
+--- a/levels/menu/script.c
++++ b/levels/menu/script.c
+@@ -53,7 +53,7 @@ const LevelScript level_main_menu_entry_1[] = {
+     SLEEP(/*frames*/ 16),
+     CLEAR_LEVEL(),
+     SLEEP_BEFORE_EXIT(/*frames*/ 1),
+-    SET_REG(/*value*/ LEVEL_CASTLE_GROUNDS),
++    SET_REG(LEVEL_CASTLE_GROUNDS),
+     EXIT_AND_EXECUTE(/*seg*/ 0x15, _scriptsSegmentRomStart, _scriptsSegmentRomEnd, level_main_scripts_entry),
+ };
+ 
+diff --git a/levels/scripts.c b/levels/scripts.c
+index 3067162..6de5d99 100644
+--- a/levels/scripts.c
++++ b/levels/scripts.c
+@@ -112,6 +112,7 @@ const LevelScript level_main_scripts_entry[] = {
+     LOAD_MODEL_FROM_GEO(MODEL_EXPLOSION,               explosion_geo),
+     LOAD_MODEL_FROM_GEO(MODEL_DIRT_ANIMATION,          dirt_animation_geo),
+     LOAD_MODEL_FROM_GEO(MODEL_CARTOON_STAR,            cartoon_star_geo),
++    LOAD_MODEL_FROM_GEO(MODEL_LANTERN,                 lantern_geo),
+     FREE_LEVEL_POOL(),
+     CALL(/*arg*/ 0, /*func*/ lvl_init_from_save_file),
+     LOOP_BEGIN(),
+diff --git a/lib/PR/f3dex2/F3DZEX_data.bin b/lib/PR/f3dex2/F3DZEX_data.bin
+new file mode 100644
+index 0000000..7a5275b
+Binary files /dev/null and b/lib/PR/f3dex2/F3DZEX_data.bin differ
+diff --git a/src/engine/behavior_script.c b/src/engine/behavior_script.c
+index cc39e5a..90b4fe7 100644
+--- a/src/engine/behavior_script.c
++++ b/src/engine/behavior_script.c
+@@ -902,6 +902,11 @@ static BhvCommandProc BehaviorCmdTable[] = {
+     bhv_cmd_spawn_water_droplet,
+ };
+ 
++#include <point_lights.h>
++#include <stdio.h>
++
++extern struct MarioState *gMarioState;
++
+ // Execute the behavior script of the current object, process the object flags, and other miscellaneous code for updating objects.
+ void cur_obj_update(void) {
+     UNUSED u32 unused;
+@@ -1000,4 +1005,25 @@ void cur_obj_update(void) {
+             }
+         }
+     }
++
++    // Advanced lighting engine
++    // If this object emits light, is active, is visible, and there are still scene point light slots available,
++    // create a point light at this object
++    if ((objFlags & OBJ_FLAG_EMIT_LIGHT) && gPointLightCount < MAX_POINT_LIGHTS)
++    {
++        if (gCurrentObject->header.gfx.node.flags & GRAPH_RENDER_ACTIVE)
++        {
++            emit_light(gCurrentObject->header.gfx.pos,
++                       gCurrentObject->oLightColor,
++                       gCurrentObject->oLightQuadraticFalloff,
++                       gCurrentObject->oLightLinearFalloff);
++        }
++        else if (gMarioState->heldObj == gCurrentObject)
++        {
++            emit_light(gMarioState->marioBodyState->heldObjLastPosition,
++                       gCurrentObject->oLightColor,
++                       gCurrentObject->oLightQuadraticFalloff,
++                       gCurrentObject->oLightLinearFalloff);
++        }
++    }
+ }
+diff --git a/src/engine/geo_layout.c b/src/engine/geo_layout.c
+index d071d1a..ba1bfde 100644
+--- a/src/engine/geo_layout.c
++++ b/src/engine/geo_layout.c
+@@ -42,6 +42,7 @@ GeoLayoutCommandProc GeoLayoutJumpTable[] = {
+     geo_layout_cmd_nop2,
+     geo_layout_cmd_nop3,
+     geo_layout_cmd_node_culling_radius,
++    geo_layout_cmd_scene_light, // Advanced lighting engine
+ };
+ 
+ struct GraphNode gObjParentGraphNode;
+@@ -767,6 +768,41 @@ void geo_layout_cmd_node_culling_radius(void) {
+     gGeoLayoutCommand += 0x04 << CMD_SIZE_SHIFT;
+ }
+ 
++/* Advanced lighting engine
++  0x21: Add a scene light to this area.
++   cmd+0x01: u8 lightType (0 is regular, 1 is point)
++   cmd+0x02: u8 red
++   cmd+0x03: u8 green
++   cmd+0x04: u8 blue
++   cmd+0x05: u8 x direction (directional light) or quadratic falloff (point light)
++   cmd+0x06: u8 y direction (directional light) or linear falloff (point light)
++   cmd+0x07: u8 z direction (directional light) or unused (point light)
++*/
++void geo_layout_cmd_scene_light(void) {
++    struct GraphNodeSceneLight *graphNode;
++    u8 lightType, a, b, c;
++    u8 color[3];
++
++    lightType = cur_geo_cmd_u8(0x01);
++    color[0] = cur_geo_cmd_u8(0x02);
++    color[1] = cur_geo_cmd_u8(0x03);
++    color[2] = cur_geo_cmd_u8(0x04);
++    a = cur_geo_cmd_u8(0x05);
++    b = cur_geo_cmd_u8(0x06);
++    c = cur_geo_cmd_u8(0x07);
++
++    graphNode = init_graph_node_scene_light(gGraphNodePool, graphNode, lightType, color, a, b, c);
++    register_scene_graph_node(&graphNode->node);
++
++    gGeoLayoutCommand += (
++        /* command Id */ sizeof(u8) +
++        /* light type */ sizeof(u8) +
++        /* color */ sizeof(u8) * 3 +
++        /* quadratic falloff */ sizeof(u8) +
++        /* linear falloff */ sizeof(u8) +
++        /* unused */ sizeof(u8)) << CMD_SIZE_SHIFT;
++}
++
+ struct GraphNode *process_geo_layout(struct AllocOnlyPool *pool, void *segptr) {
+     // set by register_scene_graph_node when gCurGraphNodeIndex is 0
+     // and gCurRootGraphNode is NULL
+diff --git a/src/engine/geo_layout.h b/src/engine/geo_layout.h
+index 6211e14..e5815dc 100644
+--- a/src/engine/geo_layout.h
++++ b/src/engine/geo_layout.h
+@@ -81,6 +81,7 @@ void geo_layout_cmd_nop(void);
+ void geo_layout_cmd_copy_view(void);
+ void geo_layout_cmd_node_held_obj(void);
+ void geo_layout_cmd_node_culling_radius(void);
++void geo_layout_cmd_scene_light(void); // Advanced lighting engine
+ 
+ struct GraphNode *process_geo_layout(struct AllocOnlyPool *a0, void *segptr);
+ 
+diff --git a/src/engine/graph_node.c b/src/engine/graph_node.c
+index 8edf7f8..1940571 100644
+--- a/src/engine/graph_node.c
++++ b/src/engine/graph_node.c
+@@ -519,6 +519,49 @@ struct GraphNodeHeldObject *init_graph_node_held_object(struct AllocOnlyPool *po
+     return graphNode;
+ }
+ 
++#include <point_lights.h>
++
++/**
++ * Advanced lighting engine
++ * Allocates and returns a newly created scene light node
++ */
++struct GraphNodeSceneLight *init_graph_node_scene_light(struct AllocOnlyPool *pool,
++                                                        struct GraphNodeSceneLight *graphNode,
++                                                        u8 lightType, u8 color[],
++                                                        u8 a, u8 b, u8 c)
++{
++    if (pool != NULL) {
++        graphNode = alloc_only_pool_alloc(pool, sizeof(struct GraphNodeSceneLight));
++    }
++
++    if (graphNode != NULL) {
++        init_scene_graph_node_links(&graphNode->node, GRAPH_NODE_TYPE_SCENE_LIGHT);
++        graphNode->lightType = lightType;
++        graphNode->color[0] = color[0];
++        graphNode->color[1] = color[1];
++        graphNode->color[2] = color[2];
++        graphNode->a = a;
++        graphNode->b = b;
++        graphNode->c = c;
++        if (lightType == LIGHT_TYPE_DIRECTIONAL)
++        {
++            gLightDirTransformEnabled = TRUE;
++        }
++        else if (lightType == LIGHT_TYPE_POINT || lightType == LIGHT_TYPE_POINT_OCCLUDE)
++        {
++            // Set this node's light pointer (used during rendering to set the position of the light)
++            graphNode->light = &gPointLights[gAreaPointLightCount];
++            if (lightType == LIGHT_TYPE_POINT_OCCLUDE)
++            {
++                gPointLights[gAreaPointLightCount].flags |= LIGHT_FLAG_OCCLUDE;
++            }
++            gAreaPointLightCount++;
++        }
++    }
++
++    return graphNode;
++}
++
+ /**
+  * Adds 'childNode' to the end of the list children from 'parent'
+  */
+diff --git a/src/engine/graph_node.h b/src/engine/graph_node.h
+index e20064c..117a2b4 100644
+--- a/src/engine/graph_node.h
++++ b/src/engine/graph_node.h
+@@ -43,6 +43,8 @@
+ #define GRAPH_NODE_TYPE_BACKGROUND           (0x02C | GRAPH_NODE_TYPE_FUNCTIONAL)
+ #define GRAPH_NODE_TYPE_HELD_OBJ             (0x02E | GRAPH_NODE_TYPE_FUNCTIONAL)
+ #define GRAPH_NODE_TYPE_CULLING_RADIUS        0x02F
++// Advanced lighting engine
++#define GRAPH_NODE_TYPE_SCENE_LIGHT           0x030
+ 
+ // The number of master lists. A master list determines the order and render
+ // mode with which display lists are drawn.
+@@ -346,6 +348,20 @@ struct GraphNodeCullingRadius
+     u8 pad1E[2];
+ };
+ 
++/** Advanced Lighting Engine
++ *  A node that sets up a scene light in the area's GeoLayout.
++ */
++struct GraphNodeSceneLight
++{
++    /*0x00*/ struct GraphNode node;
++    /*0x14*/ u8 lightType; // Type of light (0 is regular, 1 is point)
++    /*0x15*/ u8 color[3]; // Array of R,G,B colors of light
++    /*0x18*/ u8 a; // Dir x (directional light) or Inverse square falloff (point light)
++    /*0x19*/ u8 b; // Dir y (directional light) or Inverse linear falloff (point light)
++    /*0x1A*/ u8 c; // Dir z (directional light) or unused (point light)
++    /*0x1B*/ struct SceneLight* light; // Pointer to this light's scene light struct
++};
++
+ extern struct GraphNodeMasterList *gCurGraphNodeMasterList;
+ extern struct GraphNodePerspective *gCurGraphNodeCamFrustum;
+ extern struct GraphNodeCamera *gCurGraphNodeCamera;
+@@ -405,6 +421,12 @@ struct GraphNodeBackground *init_graph_node_background(struct AllocOnlyPool *poo
+ struct GraphNodeHeldObject *init_graph_node_held_object(struct AllocOnlyPool *pool, struct GraphNodeHeldObject *sp1c,
+                                                         struct Object *objNode, Vec3s translation,
+                                                         GraphNodeFunc nodeFunc, s32 playerIndex);
++// Advanced lighting engine
++struct GraphNodeSceneLight *init_graph_node_scene_light(struct AllocOnlyPool *pool, struct GraphNodeSceneLight *graphNode,
++                                                        u8 lightType, u8 color[],
++                                                        u8 quadraticFalloff, u8 linearFalloff,
++                                                        u8 unused);
++
+ struct GraphNode *geo_add_child(struct GraphNode *parent, struct GraphNode *childNode);
+ struct GraphNode *geo_remove_child(struct GraphNode *graphNode);
+ struct GraphNode *geo_make_first_child(struct GraphNode *newFirstChild);
+diff --git a/src/engine/level_script.c b/src/engine/level_script.c
+index 884e9b4..3a909d0 100644
+--- a/src/engine/level_script.c
++++ b/src/engine/level_script.c
+@@ -343,10 +343,15 @@ static void level_cmd_free_level_pool(void) {
+     sCurrentCmd = CMD_NEXT;
+ }
+ 
++#include <point_lights.h>
++
+ static void level_cmd_begin_area(void) {
+     u8 areaIndex = CMD_GET(u8, 2);
+     void *geoLayoutAddr = CMD_GET(void *, 4);
+ 
++    gAreaPointLightCount = 0;
++    gLightDirTransformEnabled = 0;
++
+     if (areaIndex < 8) {
+         struct GraphNodeRoot *screenArea =
+             (struct GraphNodeRoot *) process_geo_layout(sLevelPool, geoLayoutAddr);
+diff --git a/src/engine/surface_collision.c b/src/engine/surface_collision.c
+index 9a01f8b..fcd926d 100644
+--- a/src/engine/surface_collision.c
++++ b/src/engine/surface_collision.c
+@@ -7,6 +7,7 @@
+ #include "game/object_list_processor.h"
+ #include "surface_collision.h"
+ #include "surface_load.h"
++#include "math_util.h"
+ 
+ /**************************************************
+  *                      WALLS                     *
+@@ -775,3 +776,108 @@ s32 unused_resolve_floor_or_ceil_collisions(s32 checkCeil, f32 *px, f32 *py, f32
+ 
+     return 0;
+ }
++
++#define EPSILON 0.0001f
++#define VEC3_DOT(a,b) ((a)[0] * (b)[0] + (a)[1] * (b)[1] + (a)[2] * (b)[2])
++#define VEC3_COPY(out,a) \
++    {(out)[0] = (a)[0];           (out)[1] = (a)[1];           (out)[2] = (a)[2];}
++#define VEC3_SCALE(out,a,scale) \
++    {(out)[0] = (a)[0] * (scale); (out)[1] = (a)[1] * (scale); (out)[2] = (a)[2] * (scale);}
++#define VEC3_ADD(out,a,b)  \
++    {(out)[0] = (a)[0] + (b)[0];  (out)[1] = (a)[1] + (b)[1];  (out)[2] = (a)[2] + (b)[2];}
++#define VEC3_DIFF(out,a,b) \
++    {(out)[0] = (a)[0] - (b)[0];  (out)[1] = (a)[1] - (b)[1];  (out)[2] = (a)[2] - (b)[2];}
++#define ABSI(x) ((x) > 0 ? (x) : -(x))
++#define NORMAL_SCALE 1024
++
++f32 ray_surf_intersect(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersectionOut, struct Surface* surf)
++{
++    f32 denom;
++    f32 distOnRay;
++    s16 u[3], v[3]; // Edge vectors
++    s16 w[3]; // Intersection point - vertex1
++    f32 uu, uv, vv, wu, wv; // Dot products
++    f32 s, t; // Barycentric coordinates
++    // Intersect the ray with the plane that the surface lies in
++    // a = -(originOffset + normal dot rayStart) / (normal dot rayDir)
++
++    denom = VEC3_DOT(&surf->normal.x, rayDir);
++    // Prevent division by zero and throw out collision with backfaces (negative denominator)
++    if (denom != denom && denom > -EPSILON)
++    {
++        return -1;
++    }
++    distOnRay = -((surf->originOffset) + VEC3_DOT(&surf->normal.x, rayStart)) / denom;
++    if (distOnRay > rayDist)
++    {
++        return -2;
++    }
++    if (distOnRay < 0)
++    {
++        return -3;
++    }
++
++    // Calculate the intersection point from the calculated distance
++    VEC3_SCALE(intersectionOut, rayDir, distOnRay);
++    VEC3_ADD(intersectionOut, rayStart, intersectionOut);
++
++    // Calculate the barycentric coordinates of the triangle vertices and intersection point
++    VEC3_DIFF(u, surf->vertex2, surf->vertex1); // These 2 could be precalculated :(
++    VEC3_DIFF(v, surf->vertex3, surf->vertex1);
++
++    VEC3_DIFF(w, intersectionOut, surf->vertex1);
++
++    // Calculate the various dot products
++    uu = VEC3_DOT(u, u); // These 3 could also be precalculated :(
++    uv = VEC3_DOT(u, v);
++    vv = VEC3_DOT(v, v);
++    
++    wu = VEC3_DOT(w, u);
++    wv = VEC3_DOT(w, v);
++
++    // Calculate and check the barycentric coordinates
++    denom = (uv * uv - uu * vv); // Doesn't need to be checked for 0 (assuming non-degenerate triangles)
++    s = (uv * wv - vv * wu) / denom;
++    if (s < 0 || s > 1)
++    {
++        return -4;
++    }
++    t = (uv * wu - uu * wv) / denom;
++    if (t < 0 || (s + t) > 1)
++    {
++        return -5;
++    }
++    return distOnRay;
++}
++
++f32 raycast(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersection, struct Surface** surfHit)
++{
++    Vec3f dirNorm;
++    f32 intDist = -1.0f;
++    s32 cellX, cellZ;
++    struct SurfaceNode *node;
++    vec3f_copy(dirNorm, rayDir);
++    vec3f_normalize(dirNorm);
++    for (cellX = 0; cellX < 16; cellX++)
++    {
++        for (cellZ = 0; cellZ < 16; cellZ++)
++        {
++            node = gStaticSurfacePartition[cellZ][cellX][SPATIAL_PARTITION_WALLS].next;
++            while (node)
++            {
++                Vec3f curHit;
++                f32 curDist;
++                curDist = ray_surf_intersect(rayStart, dirNorm, rayDist, curHit, node->surface);
++                if (curDist >= 0 && (intDist < 0 || curDist < intDist))
++                {
++                    intDist = curDist;
++                    vec3f_copy(intersection, curHit);
++                    *surfHit = node->surface;
++                }
++                node = node->next;
++            }
++        }
++    }
++    return intDist;
++}
++
+diff --git a/src/engine/surface_collision.h b/src/engine/surface_collision.h
+index ad5e640..249caee 100644
+--- a/src/engine/surface_collision.h
++++ b/src/engine/surface_collision.h
+@@ -46,4 +46,7 @@ f32 find_water_level(f32 x, f32 z);
+ f32 find_poison_gas_level(f32 x, f32 z);
+ void debug_surface_list_info(f32 xPos, f32 zPos);
+ 
++f32 ray_surf_intersect(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersectionOut, struct Surface* surf);
++f32 raycast(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersection, struct Surface** surfHit);
++
+ #endif // SURFACE_COLLISION_H
+diff --git a/src/game/behaviors/breakable_box_small.inc.c b/src/game/behaviors/breakable_box_small.inc.c
+index bb9a4ed..9ab1aa7 100644
+--- a/src/game/behaviors/breakable_box_small.inc.c
++++ b/src/game/behaviors/breakable_box_small.inc.c
+@@ -20,6 +20,9 @@ void bhv_breakable_box_small_init(void) {
+     obj_set_hitbox(o, &sBreakableBoxSmallHitbox);
+     o->oAnimState = 1;
+     o->activeFlags |= ACTIVE_FLAG_UNK9;
++    o->oLightColor = 0xBC954E00;
++    o->oLightQuadraticFalloff = 15;
++    o->oLightLinearFalloff = 255;
+ }
+ 
+ void small_breakable_box_spawn_dust(void) {
+@@ -42,8 +45,8 @@ void small_breakable_box_act_move(void) {
+     }
+ 
+     if (sp1E & 2) {
+-        spawn_mist_particles();
+-        spawn_triangle_break_particles(20, 138, 0.7f, 3);
++        // spawn_mist_particles();
++        spawn_triangle_break_particles(7, 138, 0.7f, 3);
+         obj_spawn_yellow_coins(o, 3);
+         create_sound_spawner(SOUND_GENERAL_BREAK_BOX);
+         o->activeFlags = ACTIVE_FLAG_DEACTIVATED;
+diff --git a/src/game/camera.c b/src/game/camera.c
+index 2ae110c..f1c198a 100644
+--- a/src/game/camera.c
++++ b/src/game/camera.c
+@@ -3346,19 +3346,19 @@ void init_camera(struct Camera *c) {
+             break;
+ 
+         //! Hardcoded position checks determine which cutscene to play when Mario enters castle grounds.
+-        case LEVEL_CASTLE_GROUNDS:
+-            if (is_within_100_units_of_mario(-1328.f, 260.f, 4664.f) != 1) {
+-                marioOffset[0] = -400.f;
+-                marioOffset[2] = -800.f;
+-            }
+-            if (is_within_100_units_of_mario(-6901.f, 2376.f, -6509.f) == 1) {
+-                start_cutscene(c, CUTSCENE_EXIT_WATERFALL);
+-            }
+-            if (is_within_100_units_of_mario(5408.f, 4500.f, 3637.f) == 1) {
+-                start_cutscene(c, CUTSCENE_EXIT_FALL_WMOTR);
+-            }
+-            gLakituState.mode = CAMERA_MODE_FREE_ROAM;
+-            break;
++        // case LEVEL_CASTLE_GROUNDS:
++        //     if (is_within_100_units_of_mario(-1328.f, 260.f, 4664.f) != 1) {
++        //         marioOffset[0] = -400.f;
++        //         marioOffset[2] = -800.f;
++        //     }
++        //     if (is_within_100_units_of_mario(-6901.f, 2376.f, -6509.f) == 1) {
++        //         start_cutscene(c, CUTSCENE_EXIT_WATERFALL);
++        //     }
++        //     if (is_within_100_units_of_mario(5408.f, 4500.f, 3637.f) == 1) {
++        //         start_cutscene(c, CUTSCENE_EXIT_FALL_WMOTR);
++        //     }
++        //     gLakituState.mode = CAMERA_MODE_FREE_ROAM;
++        //     break;
+         case LEVEL_SA:
+             marioOffset[2] = 200.f;
+             break;
+@@ -6364,6 +6364,12 @@ struct CameraTrigger sCamBBH[] = {
+  *
+  * Each table is terminated with NULL_TRIGGER
+  */
++struct CameraTrigger sCamCastleGrounds[] = {
++	NULL_TRIGGER
++};
++struct CameraTrigger sCamJRB[] = {
++	NULL_TRIGGER
++};
+ struct CameraTrigger *sCameraTriggers[LEVEL_COUNT + 1] = {
+     NULL,
+     #include "levels/level_defines.h"
+@@ -6503,6 +6509,8 @@ s16 camera_course_processing(struct Camera *c) {
+     UNUSED struct CameraTrigger unused;
+     u8 oldMode = c->mode;
+ 
++    return oldMode;
++
+     if (c->mode == CAMERA_MODE_C_UP) {
+         c->mode = sModeInfo.lastMode;
+     }
+@@ -10798,26 +10806,26 @@ u8 sDanceCutsceneIndexTable[][4] = {
+  * and if the result is non-zero, the camera will zoom out.
+  */
+ u8 sZoomOutAreaMasks[] = {
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // BBH            | CCM
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // CASTLE_INSIDE  | HMC
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // SSL            | BOB
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // SL             | WDW
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,1,0,0), // JRB            | THI
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // TTC            | RR
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // CASTLE_GROUNDS | BITDW
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // VCUTM          | BITFS
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // SA             | BITS
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // LLL            | DDD
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // WF             | ENDING
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // COURTYARD      | PSS
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // COTMC          | TOTWC
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // BOWSER_1       | WMOTR
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // Unused         | BOWSER_2
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // BOWSER_3       | Unused
+-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // TTM            | Unused
+-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // BBH            | CCM
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // CASTLE_INSIDE  | HMC
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // SSL            | BOB
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // SL             | WDW
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 1, 0, 0), // JRB            | THI
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // TTC            | RR
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // CASTLE_GROUNDS | BITDW
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // VCUTM          | BITFS
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // SA             | BITS
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // LLL            | DDD
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // WF             | ENDING
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // COURTYARD      | PSS
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // COTMC          | TOTWC
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // BOWSER_1       | WMOTR
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // Unused         | BOWSER_2
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // BOWSER_3       | Unused
++	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // TTM            | Unused
++	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
+ };
+ 
+ STATIC_ASSERT(ARRAY_COUNT(sZoomOutAreaMasks) - 1 == LEVEL_MAX / 2, "Make sure you edit sZoomOutAreaMasks when adding / removing courses.");
+diff --git a/src/game/game_init.c b/src/game/game_init.c
+index b633468..350375e 100644
+--- a/src/game/game_init.c
++++ b/src/game/game_init.c
+@@ -21,6 +21,8 @@
+ #include "rumble_init.h"
+ #include <prevent_bss_reordering.h>
+ 
++#include <point_lights.h>
++
+ // FIXME: I'm not sure all of these variables belong in this file, but I don't
+ // know of a good way to split them
+ struct Controller gControllers[3];
+@@ -97,12 +99,12 @@ void my_rdp_init(void) {
+  * almost immediately overwritten.
+  */
+ void my_rsp_init(void) {
++
+     gSPClearGeometryMode(gDisplayListHead++, G_SHADE | G_SHADING_SMOOTH | G_CULL_BOTH | G_FOG
+                         | G_LIGHTING | G_TEXTURE_GEN | G_TEXTURE_GEN_LINEAR | G_LOD);
+ 
+     gSPSetGeometryMode(gDisplayListHead++, G_SHADE | G_SHADING_SMOOTH | G_CULL_BACK | G_LIGHTING);
+ 
+-    gSPNumLights(gDisplayListHead++, NUMLIGHTS_1);
+     gSPTexture(gDisplayListHead++, 0, 0, 0, G_TX_RENDERTILE, G_OFF);
+ 
+     // @bug Nintendo did not explicitly define the clipping ratio.
+@@ -623,6 +625,12 @@ void thread5_game_loop(UNUSED void *arg) {
+         audio_game_loop_tick();
+         config_gfx_pool();
+         read_controller_inputs();
++
++        // Reset the point light count before running the level script
++        // This is because the level script is responsible for calling the function
++        // that updates objects, which is where objects that emit light create their point lights
++        gPointLightCount = gAreaPointLightCount;
++
+         addr = level_script_execute(addr);
+ 
+         display_and_vsync();
+diff --git a/src/game/hud.c b/src/game/hud.c
+index 8d4daa5..1fe96560 100644
+--- a/src/game/hud.c
++++ b/src/game/hud.c
+@@ -414,6 +414,8 @@ void render_hud_camera_status(void) {
+     gSPDisplayList(gDisplayListHead++, dl_hud_img_end);
+ }
+ 
++extern int gPointLightCompatibilityMode;
++
+ /**
+  * Render HUD strings using hudDisplayFlags with it's render functions,
+  * excluding the cannon reticle which detects a camera preset for it.
+@@ -475,5 +477,7 @@ void render_hud(void) {
+         if (hudDisplayFlags & HUD_DISPLAY_FLAG_TIMER) {
+             render_hud_timer();
+         }
++
++        print_text_fmt_int(10, 10, "%d", gPointLightCompatibilityMode);
+     }
+ }
+diff --git a/src/game/level_update.c b/src/game/level_update.c
+index 4ecb902..3950b5b 100644
+--- a/src/game/level_update.c
++++ b/src/game/level_update.c
+@@ -1,3 +1,4 @@
++#include "texscroll.h"
+ #include <ultra64.h>
+ 
+ #include "sm64.h"
+@@ -1137,7 +1138,7 @@ s32 update_level(void) {
+ 
+     switch (sCurrPlayMode) {
+         case PLAY_MODE_NORMAL:
+-            changeLevel = play_mode_normal();
++            changeLevel = play_mode_normal(); scroll_textures();
+             break;
+         case PLAY_MODE_PAUSED:
+             changeLevel = play_mode_paused();
+@@ -1197,12 +1198,12 @@ s32 init_level(void) {
+                 set_mario_action(gMarioState, ACT_IDLE, 0);
+             } else if (!gDebugLevelSelect) {
+                 if (gMarioState->action != ACT_UNINITIALIZED) {
+-                    if (save_file_exists(gCurrSaveFileNum - 1)) {
++                    //if (save_file_exists(gCurrSaveFileNum - 1)) {
+                         set_mario_action(gMarioState, ACT_IDLE, 0);
+-                    } else {
+-                        set_mario_action(gMarioState, ACT_INTRO_CUTSCENE, 0);
+-                        val4 = 1;
+-                    }
++                    // } else {
++                    //     set_mario_action(gMarioState, ACT_INTRO_CUTSCENE, 0);
++                    //     val4 = 1;
++                    // }
+                 }
+             }
+         }
+@@ -1291,6 +1292,7 @@ s32 lvl_set_current_level(UNUSED s16 arg0, s32 levelNum) {
+     sWarpCheckpointActive = FALSE;
+     gCurrLevelNum = levelNum;
+     gCurrCourseNum = gLevelToCourseNumTable[levelNum - 1];
++		if (gCurrLevelNum == LEVEL_JRB) return 0;
+ 
+     if (gCurrDemoInput != NULL || gCurrCreditsEntry != NULL || gCurrCourseNum == COURSE_NONE) {
+         return 0;
+diff --git a/src/game/mario_misc.c b/src/game/mario_misc.c
+index 5184a80..b8c8f2c 100644
+--- a/src/game/mario_misc.c
++++ b/src/game/mario_misc.c
+@@ -554,9 +554,9 @@ Gfx *geo_switch_mario_hand_grab_pos(s32 callContext, struct GraphNode *b, Mat4 *
+             switch (marioState->marioBodyState->grabPos) {
+                 case GRAB_POS_LIGHT_OBJ:
+                     if (marioState->action & ACT_FLAG_THROWING) {
+-                        vec3s_set(asHeldObj->translation, 50, 0, 0);
++                        vec3s_set(asHeldObj->translation, 100, 0, 0);
+                     } else {
+-                        vec3s_set(asHeldObj->translation, 50, 0, 110);
++                        vec3s_set(asHeldObj->translation, 100, 0, 110);
+                     }
+                     break;
+                 case GRAB_POS_HEAVY_OBJ:
+diff --git a/src/game/memory.c b/src/game/memory.c
+index 5f3b329..326e24c 100644
+--- a/src/game/memory.c
++++ b/src/game/memory.c
+@@ -54,7 +54,9 @@ extern struct MainPoolBlock *sPoolListHeadR;
+  */
+ struct MemoryPool *gEffectsMemoryPool;
+ 
++
+ uintptr_t sSegmentTable[32];
++uintptr_t sSegmentROMTable[32];
+ u32 sPoolFreeSpace;
+ u8 *sPoolStart;
+ u8 *sPoolEnd;
+@@ -284,7 +286,7 @@ void *load_segment(s32 segment, u8 *srcStart, u8 *srcEnd, u32 side) {
+     void *addr = dynamic_dma_read(srcStart, srcEnd, side);
+ 
+     if (addr != NULL) {
+-        set_segment_base_addr(segment, addr);
++        set_segment_base_addr(segment, addr); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+     }
+     return addr;
+ }
+@@ -333,7 +335,7 @@ void *load_segment_decompress(s32 segment, u8 *srcStart, u8 *srcEnd) {
+         dest = main_pool_alloc(*size, MEMORY_POOL_LEFT);
+         if (dest != NULL) {
+             decompress(compressed, dest);
+-            set_segment_base_addr(segment, dest);
++            set_segment_base_addr(segment, dest); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+             main_pool_free(compressed);
+         } else {
+         }
+@@ -351,7 +353,7 @@ void *load_segment_decompress_heap(u32 segment, u8 *srcStart, u8 *srcEnd) {
+     if (compressed != NULL) {
+         dma_read(compressed, srcStart, srcEnd);
+         decompress(compressed, gDecompressionHeap);
+-        set_segment_base_addr(segment, gDecompressionHeap);
++        set_segment_base_addr(segment, gDecompressionHeap); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+         main_pool_free(compressed);
+     } else {
+     }
+diff --git a/src/game/memory.h b/src/game/memory.h
+index 7a51e59..90fa61b 100644
+--- a/src/game/memory.h
++++ b/src/game/memory.h
+@@ -66,4 +66,6 @@ void *alloc_display_list(u32 size);
+ void func_80278A78(struct MarioAnimation *a, void *b, struct Animation *target);
+ s32 load_patchable_table(struct MarioAnimation *a, u32 b);
+ 
++
++extern uintptr_t sSegmentROMTable[32];
+ #endif // MEMORY_H
+diff --git a/src/game/object_list_processor.c b/src/game/object_list_processor.c
+index d01f5eb..291adbe 100644
+--- a/src/game/object_list_processor.c
++++ b/src/game/object_list_processor.c
+@@ -261,16 +261,50 @@ void spawn_particle(u32 activeParticleFlag, s16 model, const BehaviorScript *beh
+     }
+ }
+ 
++#include "src/engine/math_util.h"
++#include <stdio.h>
++void print_text(s32, s32, char*);
++
++f32 intDist;
++Vec3f intersect;
++
+ /**
+  * Mario's primary behavior update function.
+  */
+ void bhv_mario_update(void) {
+     u32 particleFlags = 0;
+     s32 i;
++    Vec3f dir;
++    Vec3f rayStart;
++    struct SurfaceNode *node;
++    f32 intDist;
+ 
+     particleFlags = execute_mario_action(gCurrentObject);
++
+     gCurrentObject->oMarioParticleFlags = particleFlags;
+ 
++    rayStart[0] = gMarioState->pos[0];
++    rayStart[1] = gMarioState->pos[1] + 80;
++    rayStart[2] = gMarioState->pos[2];
++
++    dir[0] = sins(gMarioState->faceAngle[1]);
++    dir[1] = 0;
++    dir[2] = coss(gMarioState->faceAngle[1]);
++
++    // intDist = raycast(rayStart, dir, 1000.0f, intersect, &node);
++
++    // if (intDist >= 0.0f)
++    // {
++        // char text[20];
++        // struct Object* particle;
++        // sprintf(text, "hit: %4.0f %4.0f %4.0f %4.0f", intDist, intersect[0], intersect[1], intersect[2]);
++        // print_text(20, 20, text);
++        // particle = spawn_object(gMarioObject, MODEL_SPARKLES, bhvCoinSparkles);
++        // particle->oPosX = intersect[0] - dir[0] * 10;
++        // particle->oPosY = intersect[1] - dir[1] * 10;
++        // particle->oPosZ = intersect[2] - dir[2] * 10;
++    // }
++
+     // Mario code updates MarioState's versions of position etc, so we need
+     // to sync it with the Mario object
+     copy_mario_state_to_object();
+diff --git a/src/game/rendering_graph_node.c b/src/game/rendering_graph_node.c
+index 58238e8..b708281 100644
+--- a/src/game/rendering_graph_node.c
++++ b/src/game/rendering_graph_node.c
+@@ -11,6 +11,8 @@
+ #include "shadow.h"
+ #include "sm64.h"
+ 
++#include <point_lights.h>
++
+ /**
+  * This file contains the code that processes the scene graph for rendering.
+  * The scene graph is responsible for drawing everything except the HUD / text boxes.
+@@ -304,13 +306,253 @@ static void geo_process_switch(struct GraphNodeSwitchCase *node) {
+     }
+ }
+ 
++extern struct MarioState *gMarioState;
++
++struct SceneLight gPointLights[MAX_POINT_LIGHTS];
++s8 gLightDir[3] = {0x28, 0x28, 0x28};
++u8 gLightDirTransformEnabled = 0;
++u8 gPointLightCount = 0;
++u8 gAreaPointLightCount = 0;
++
++Lights1 gDirectionalLight = gdSPDefLights1(
++	0x7F, 0x7F, 0x7F,
++	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
++
++/**
++ * Gets the square of the distance between two vectors
++ * The first vector is of floats, the second is of s16
++ * All math operations are done on integers
++ */
++u32 vec3f_vec3s_dist_sq(Vec3f p1, Vec3s p2)
++{
++    s32 dx = p2[0] - (s32)p1[0];
++    s32 dy = p2[1] - (s32)p1[1];
++    s32 dz = p2[2] - (s32)p1[2];
++    return (u32)(dx * dx) + (u32)(dy * dy) + (u32)(dz * dz);
++}
++
++#define MAX_POINT_LIGHT_DIST (3000)
++
++#include "src/engine/surface_collision.h"
++
++int gPointLightCompatibilityMode = 0;
++Mat4 *viewMat;
++
++/**
++ * Creates a displaylist to set the active point lights closest to a given location
++ */
++Gfx* createPointLightsDl(Vec3f pos, f32 yOffset)
++{
++    Gfx *pointLightsDl, *pointLightsDlHead;
++
++    // The lights to be used for this object
++    struct SceneLight *lights[MAX_POINT_LIGHTS_ACTIVE];
++
++    // The number of lights selected to be active for this object
++    s32 numLightsPicked = 0;
++
++    // The square of the distances to each point light
++    u32 distancesSq[MAX_POINT_LIGHTS_ACTIVE];
++
++    // The distance of the furthest light selected
++    u32 maxDistanceSq;
++
++    // The index of the furthest away light from this object
++    // i.e. if index 1 in lights is the furthest light from this object, then this is 1
++    u32 maxIndex = 0;
++
++    // The square of the distance to the current light being checked
++    u32 curDistSq;
++
++    // The index of a point light being added (its position in Light *lights[])
++    s32 newIndex;
++
++    // Iterator variables
++    s32 i,j;
++    
++    // Raycast variables
++    Vec3f dir, hit;
++    struct Surface* surf;
++
++    if (gPointLightCount)
++    {
++        // Probe higher by the given offset (used since most objects have their origin at the bottom)
++        pos[1] += yOffset;
++    }
++
++    // Find the closest lights
++    for (i = 0; i < gPointLightCount; i++)
++    {
++        // Reset newIndex so we can use it to check if the current light was added
++        newIndex = -1;
++
++        // Get the distance to the current light from the object
++        curDistSq = vec3f_vec3s_dist_sq(pos, gPointLights[i].worldPos);
++
++        // Skip this point light if it is too far away to matter
++        if (curDistSq > MAX_POINT_LIGHT_DIST * MAX_POINT_LIGHT_DIST) continue;
++
++        // Skip this point light if it is set to occlude and is occluded
++        // If the object and the light are at the same position, skip the raycast
++        if (curDistSq != 0 && gPointLights[i].flags & LIGHT_FLAG_OCCLUDE)
++        {
++            dir[0] = gPointLights[i].worldPos[0] - pos[0];
++            dir[1] = gPointLights[i].worldPos[1] - pos[1];
++            dir[2] = gPointLights[i].worldPos[2] - pos[2];
++            // Raycast will return a nonnegative distance in the case of a hit
++            if (raycast(pos, dir, sqrtf(curDistSq), hit, &surf) >= 0)
++            {
++                continue;
++            }
++        }
++
++        // If we haven't filled all the active light slots, just add this one
++        if (numLightsPicked < MAX_POINT_LIGHTS_ACTIVE)
++        {
++            // Record the index this light was placed into and update the picked light count
++            newIndex = numLightsPicked;
++            numLightsPicked++;
++        }
++        // Otherwise, we need to check if this one is closer than any of the ones picked thus far
++        else
++        {
++            // Check if this light is closer than the furthest away one to be used
++            // If it is, then we remove the furthest light and add this one
++            if (curDistSq < distancesSq[maxIndex])
++            {
++                newIndex = maxIndex;
++            }
++        }
++
++        // If this light was added, add it to the lights array, update its distance,
++        // and update the distance order of the other lights
++        if (newIndex != -1)
++        {
++            // Place this light in the lights array
++            lights[newIndex] = &gPointLights[i];
++
++            // Update the distance to this light
++            distancesSq[newIndex] = curDistSq;
++
++            // Set this light to the be furthest one away
++            // This will get updated in the following loop
++            maxDistanceSq = curDistSq;
++            maxIndex = newIndex;
++
++            // Iterate over every light, checking to see if it is further than the current furthest
++            // If it is, then set it to be the furthest light instead
++            for (j = 0; j < MAX_POINT_LIGHTS_ACTIVE; j++)
++            {
++                // Skip checking the current light, since we assumed it was the furthest already
++                if (j == newIndex) continue;
++
++                // Check if the light being checked is further than current furthest
++                if (maxDistanceSq < distancesSq[j])
++                {
++                    maxDistanceSq = distancesSq[j];
++                    maxIndex = j;
++                }
++            }
++        }
++    }
++    
++    // Allocate a displaylist with room for each gSPLight and the gSPEndDisplayList
++    pointLightsDlHead = pointLightsDl = alloc_display_list(sizeof(Gfx) * (numLightsPicked + 4));
++
++    gSPNumLights(pointLightsDl++, NUMLIGHTS_1 + numLightsPicked);
++    
++    gSPLight(pointLightsDl++, &gDirectionalLight.l, LIGHT_1);
++
++    // Add the gSPLights to the display list
++    for (i = 0; i < numLightsPicked; i++)
++    {
++        if (gPointLightCompatibilityMode)
++        {
++            Light *curLight = alloc_display_list(sizeof(Light));
++            u8 color[3];
++            f32 lightDist;
++            f32 lightScale;
++
++            bzero(curLight, sizeof(Light));
++
++            color[0] = lights[i]->l.pl.col[0];
++            color[1] = lights[i]->l.pl.col[1];
++            color[2] = lights[i]->l.pl.col[2];
++
++            dir[0] = lights[i]->worldPos[0] - pos[0];
++            dir[1] = lights[i]->worldPos[1] - pos[1];
++            dir[2] = lights[i]->worldPos[2] - pos[2];
++
++            lightDist = sqrtf(distancesSq[i]);
++            lightScale = 1.0f / ((1.0f / 65536.0f) * (
++                0.25f * lights[i]->l.pl.is_point +
++                2.0f * lightDist * lights[i]->l.pl.linear_attenuation +
++                0.3f * lightDist * lightDist * lights[i]->l.pl.quadratic_attenuation) + 1.0f);
++
++            curLight->l.col[0] = curLight->l.colc[0] = (u8)(color[0] * lightScale + 0.5f);
++            curLight->l.col[1] = curLight->l.colc[1] = (u8)(color[1] * lightScale + 0.5f);
++            curLight->l.col[2] = curLight->l.colc[2] = (u8)(color[2] * lightScale + 0.5f);
++            
++            dir[0] *= 120.0f / (lightDist);
++            dir[1] *= 120.0f / (lightDist);
++            dir[2] *= 120.0f / (lightDist);
++
++            curLight->l.dir[0] = (s8)(dir[0] * (*viewMat)[0][0] + dir[1] * (*viewMat)[1][0] + dir[2] * (*viewMat)[2][0]);
++            curLight->l.dir[1] = (s8)(dir[0] * (*viewMat)[0][1] + dir[1] * (*viewMat)[1][1] + dir[2] * (*viewMat)[2][1]);
++            curLight->l.dir[2] = (s8)(dir[0] * (*viewMat)[0][2] + dir[1] * (*viewMat)[1][2] + dir[2] * (*viewMat)[2][2]);
++
++            gSPLight(pointLightsDl++, curLight, LIGHT_2 + i);
++        }
++        else
++        {
++            gSPLight(pointLightsDl++, &lights[i]->l, LIGHT_2 + i);
++        }
++    }
++
++    if (gPointLightCount)
++    {
++        // Restore the original position
++        pos[1] -= yOffset;
++    }
++
++    gSPLight(pointLightsDl++, &gDirectionalLight.a, LIGHT_2 + numLightsPicked);
++
++    // Terminate the display list
++    gSPEndDisplayList(pointLightsDl);
++
++    // Return the head of the created display list
++    return pointLightsDlHead;
++}
++
++void emit_light(Vec3f pos, u32 color, u32 quadraticFalloff, u32 linearFalloff)
++{
++    gPointLights[gPointLightCount].l.pl.colc[0] = gPointLights[gPointLightCount].l.pl.col[0] = (color >> 24) & 0xFF;
++    gPointLights[gPointLightCount].l.pl.colc[1] = gPointLights[gPointLightCount].l.pl.col[1] = (color >> 16) & 0xFF;
++    gPointLights[gPointLightCount].l.pl.colc[2] = gPointLights[gPointLightCount].l.pl.col[2] = (color >> 8)  & 0xFF;
++    gPointLights[gPointLightCount].l.pl.is_point = 0x08;
++    gPointLights[gPointLightCount].l.pl.linear_attenuation = linearFalloff;
++    gPointLights[gPointLightCount].l.pl.quadratic_attenuation = quadraticFalloff;
++    gPointLights[gPointLightCount].worldPos[0] = pos[0];
++    gPointLights[gPointLightCount].worldPos[1] = pos[1];
++    gPointLights[gPointLightCount].worldPos[2] = pos[2];
++    gPointLightCount++;
++}
++
++#include <stdio.h>
++
++extern void linear_mtxf_mul_vec3f(Mat4, Vec3f, Vec3f);
++
+ /**
+  * Process a camera node.
+  */
+-static void geo_process_camera(struct GraphNodeCamera *node) {
++void geo_process_camera(struct GraphNodeCamera *node) {
+     Mat4 cameraTransform;
+     Mtx *rollMtx = alloc_display_list(sizeof(*rollMtx));
+     Mtx *mtx = alloc_display_list(sizeof(*mtx));
++    Gfx *setLightsDL = alloc_display_list(sizeof(Gfx) * 3);
++    Gfx *levelLightsDL;
++    Vec3f probePos = {0, 0, 0};
++    s32 i;
+ 
+     if (node->fnNode.func != NULL) {
+         node->fnNode.func(GEO_CONTEXT_RENDER, &node->fnNode.node, gMatStack[gMatStackIndex]);
+@@ -318,11 +560,31 @@ static void geo_process_camera(struct GraphNodeCamera *node) {
+     mtxf_rotate_xy(rollMtx, node->rollScreen);
+ 
+     gSPMatrix(gDisplayListHead++, VIRTUAL_TO_PHYSICAL(rollMtx), G_MTX_PROJECTION | G_MTX_MUL | G_MTX_NOPUSH);
++    geo_append_display_list(setLightsDL, LAYER_OPAQUE);
++    // gSPNumLights(gDisplayListHead++, NUMLIGHTS_2);
++    // gSPLight(gDisplayListHead++, gDirectionalLight.l, LIGHT_1);
++    // gSPLight(gDisplayListHead++, &gPointLights[0].l, LIGHT_2);
++    // gSPLight(gDisplayListHead++, &gDirectionalLight.a, LIGHT_2);
++
++    // gPointLights[0].l.pl.is_point = 0x08;
++    // gPointLights[0].l.pl.pos[0] = 100;
++    // gPointLights[0].l.pl.pos[1] = 100;
++    // gPointLights[0].l.pl.pos[2] = -500;
++    // gPointLights[0].l.pl.colc[0] = gPointLights[0].l.pl.col[0] = 0xFF;
++    // gPointLights[0].l.pl.colc[1] = gPointLights[0].l.pl.col[1] = 0xFF;
++    // gPointLights[0].l.pl.colc[2] = gPointLights[0].l.pl.col[2] = 0xFF;
+ 
+     mtxf_lookat(cameraTransform, node->pos, node->focus, node->roll);
+     mtxf_mul(gMatStack[gMatStackIndex + 1], cameraTransform, gMatStack[gMatStackIndex]);
+     gMatStackIndex++;
+     mtxf_to_mtx(mtx, gMatStack[gMatStackIndex]);
++    
++
++    if (gPlayer1Controller->buttonPressed & L_TRIG)
++        gPointLightCompatibilityMode ^= 1;
++
++    viewMat = &gMatStack[gMatStackIndex];
++
+     gMatStackFixed[gMatStackIndex] = mtx;
+     if (node->fnNode.node.children != 0) {
+         gCurGraphNodeCamera = node;
+@@ -330,6 +592,50 @@ static void geo_process_camera(struct GraphNodeCamera *node) {
+         geo_process_node_and_siblings(node->fnNode.node.children);
+         gCurGraphNodeCamera = NULL;
+     }
++
++
++    // Transform the point light positions into screen space
++    for (i = 0; i < gPointLightCount; i++)
++    {
++        vec3s_copy(gPointLights[i].l.pl.pos, gPointLights[i].worldPos);
++        mtxf_mul_vec3s(gMatStack[gMatStackIndex], gPointLights[i].l.pl.pos);
++    }
++
++    // Transform the directional light if enabled
++    if (gLightDirTransformEnabled)
++    {
++        gDirectionalLight.l->l.dir[0] = -(s8)(gLightDir[0] * gMatStack[gMatStackIndex][0][0] + gLightDir[1] * gMatStack[gMatStackIndex][1][0] + gLightDir[2] * gMatStack[gMatStackIndex][2][0]);
++        gDirectionalLight.l->l.dir[1] = -(s8)(gLightDir[0] * gMatStack[gMatStackIndex][0][1] + gLightDir[1] * gMatStack[gMatStackIndex][1][1] + gLightDir[2] * gMatStack[gMatStackIndex][2][1]);
++        gDirectionalLight.l->l.dir[2] = -(s8)(gLightDir[0] * gMatStack[gMatStackIndex][0][2] + gLightDir[1] * gMatStack[gMatStackIndex][1][2] + gLightDir[2] * gMatStack[gMatStackIndex][2][2]);
++    }
++    else
++    {
++        gDirectionalLight.l->l.dir[0] = gLightDir[0];
++        gDirectionalLight.l->l.dir[1] = gLightDir[1];
++        gDirectionalLight.l->l.dir[2] = gLightDir[2];
++    }
++    
++    // Set up the light display list
++    // This has to be done after the area's GeoLayout is processed, as
++    // some point lights may be defined there instead of by objects
++    if (gPointLightCount > 0)
++    {
++        // Enable point lighting
++        gSPSetGeometryMode(setLightsDL++, G_POINT_LIGHTING);
++    }
++    else
++    {
++        // Disable point lighting (may not be required, but doesn't hurt)
++        gSPClearGeometryMode(setLightsDL++, G_POINT_LIGHTING);
++    }
++
++    // Enable the lights closes to the given probe position as the level's lighting
++    levelLightsDL = createPointLightsDl(probePos, 300.0f);
++    gSPDisplayList(setLightsDL++, levelLightsDL);
++
++    // Terminate the point lighting DL
++    gSPEndDisplayList(setLightsDL++);
++
+     gMatStackIndex--;
+ }
+ 
+@@ -804,6 +1110,7 @@ static s32 obj_is_in_view(struct GraphNodeObject *node, Mat4 matrix) {
+ static void geo_process_object(struct Object *node) {
+     Mat4 mtxf;
+     s32 hasAnimation = (node->header.gfx.node.flags & GRAPH_RENDER_HAS_ANIMATION) != 0;
++    u8 i;
+ 
+     if (node->header.gfx.areaIndex == gCurGraphNodeRoot->areaIndex) {
+         if (node->header.gfx.throwMatrix != NULL) {
+@@ -830,6 +1137,17 @@ static void geo_process_object(struct Object *node) {
+         }
+         if (obj_is_in_view(&node->header.gfx, gMatStack[gMatStackIndex])) {
+             Mtx *mtx = alloc_display_list(sizeof(*mtx));
++            
++            // Create the displaylist to set the active point lights
++            Gfx* pointLightsDl = createPointLightsDl(&node->oPosX, 80.0f);
++
++            // Put the lights on every layer, this can be optimized in the future
++            // It will require some geolayout command to specify which layers this object uses
++            // Maybe this can be implemented in a GEO_ASM call, where the parameter is a layer mask
++            for (i = LAYER_FORCE; i <= LAYER_TRANSPARENT_INTER; i++)
++            {
++                geo_append_display_list(pointLightsDl, i);
++            }
+ 
+             mtxf_to_mtx(mtx, gMatStack[gMatStackIndex]);
+             gMatStackFixed[gMatStackIndex] = mtx;
+@@ -932,6 +1250,64 @@ void geo_process_held_object(struct GraphNodeHeldObject *node) {
+     }
+ }
+ 
++#include <stdio.h>
++
++/**
++ * Advanced lighting engine
++ * Processes a scene light, setting its position and other properties
++ */
++void geo_process_scene_light(struct GraphNodeSceneLight *node)
++{
++    Vec3f pos;
++
++    
++    switch (node->lightType)
++    {
++        case LIGHT_TYPE_DIRECTIONAL:
++            // Set the directional light color
++            gDirectionalLight.l->l.colc[0] = gDirectionalLight.l->l.col[0] = node->color[0];
++            gDirectionalLight.l->l.colc[1] = gDirectionalLight.l->l.col[1] = node->color[1];
++            gDirectionalLight.l->l.colc[2] = gDirectionalLight.l->l.col[2] = node->color[2];
++
++            // Set the pre transformed light direction
++            gLightDir[0] = node->a;
++            gLightDir[1] = node->b;
++            gLightDir[2] = node->c;
++            break;
++        case LIGHT_TYPE_POINT:
++        case LIGHT_TYPE_POINT_OCCLUDE:
++            get_pos_from_transform_mtx(pos, gMatStack[gMatStackIndex],
++                                    *gCurGraphNodeCamera->matrixPtr);
++            // Set the given point light's color
++            node->light->l.pl.colc[0] = node->light->l.pl.col[0] = node->color[0];
++            node->light->l.pl.colc[1] = node->light->l.pl.col[1] = node->color[1];
++            node->light->l.pl.colc[2] = node->light->l.pl.col[2] = node->color[2];
++
++            // Floors, but is faster
++            node->light->worldPos[0] = (s16)(s32)pos[0];
++            node->light->worldPos[1] = (s16)(s32)pos[1];
++            node->light->worldPos[2] = (s16)(s32)pos[2];
++
++            // More accurate (rounding instead of flooring), but more costly
++            //vec3f_to_vec3s(node->light->worldPos, pos);
++
++            node->light->l.pl.quadratic_attenuation = node->a;
++            node->light->l.pl.linear_attenuation = node->b;
++            node->light->l.pl.is_point = node->c;
++            break;
++        case LIGHT_TYPE_AMBIENT:
++            // Set the ambient light color
++            gDirectionalLight.a.l.colc[0] = gDirectionalLight.a.l.col[0] = node->color[0];
++            gDirectionalLight.a.l.colc[1] = gDirectionalLight.a.l.col[1] = node->color[1];
++            gDirectionalLight.a.l.colc[2] = gDirectionalLight.a.l.col[2] = node->color[2];
++            break;
++    }
++
++    if (node->node.children != NULL) {
++        geo_process_node_and_siblings(node->node.children);
++    }
++}
++
+ /**
+  * Processes the children of the given GraphNode if it has any
+  */
+@@ -1021,6 +1397,10 @@ void geo_process_node_and_siblings(struct GraphNode *firstNode) {
+                     case GRAPH_NODE_TYPE_HELD_OBJ:
+                         geo_process_held_object((struct GraphNodeHeldObject *) curGraphNode);
+                         break;
++                    // Advanced lighting engine
++                    case GRAPH_NODE_TYPE_SCENE_LIGHT:
++                        geo_process_scene_light((struct GraphNodeSceneLight *) curGraphNode);
++                        break;
+                     default:
+                         geo_try_process_children((struct GraphNode *) curGraphNode);
+                         break;
+diff --git a/src/game/texscroll.c b/src/game/texscroll.c
+new file mode 100644
+index 0000000..cb59e13
+--- /dev/null
++++ b/src/game/texscroll.c
+@@ -0,0 +1,26 @@
++#include "types.h"
++#include "include/segment_symbols.h"
++#include "memory.h"
++#include "engine/math_util.h"
++#include "src/engine/behavior_script.h"
++#include "texscroll.h"
++
++#ifdef TARGET_N64
++#define SCROLL_CONDITION(condition) condition
++#else
++#define SCROLL_CONDITION(condition) 1
++#endif
++
++
++#include "src/game/texscroll/group0_texscroll.inc.c"
++#include "src/game/texscroll/castle_grounds_texscroll.inc.c"
++void scroll_textures() {
++	if(SCROLL_CONDITION(sSegmentROMTable[0x4] == (uintptr_t)_group0_mio0SegmentRomStart)) {
++		scroll_textures_group0();
++	}
++
++	if(SCROLL_CONDITION(sSegmentROMTable[0x7] == (uintptr_t)_castle_grounds_segment_7SegmentRomStart)) {
++		scroll_textures_castle_grounds();
++	}
++
++}
+diff --git a/src/game/texscroll.h b/src/game/texscroll.h
+new file mode 100644
+index 0000000..8b36406
+--- /dev/null
++++ b/src/game/texscroll.h
+@@ -0,0 +1,8 @@
++#ifndef TEXSCROLL_H
++#define TEXSCROLL_H
++
++#include "src/game/texscroll/group0_texscroll.inc.h"
++#include "src/game/texscroll/castle_grounds_texscroll.inc.h"
++extern void scroll_textures();
++
++#endif
+diff --git a/src/game/texscroll/castle_grounds_texscroll.inc.c b/src/game/texscroll/castle_grounds_texscroll.inc.c
+new file mode 100644
+index 0000000..e52a190
+--- /dev/null
++++ b/src/game/texscroll/castle_grounds_texscroll.inc.c
+@@ -0,0 +1,4 @@
++#include "levels/castle_grounds/header.h"
++void scroll_textures_castle_grounds() {
++	
++}
+diff --git a/src/game/texscroll/castle_grounds_texscroll.inc.h b/src/game/texscroll/castle_grounds_texscroll.inc.h
+new file mode 100644
+index 0000000..404d82f
+--- /dev/null
++++ b/src/game/texscroll/castle_grounds_texscroll.inc.h
+@@ -0,0 +1 @@
++extern void scroll_textures_castle_grounds();
+diff --git a/src/game/texscroll/group0_texscroll.inc.c b/src/game/texscroll/group0_texscroll.inc.c
+new file mode 100644
+index 0000000..39eb208
+--- /dev/null
++++ b/src/game/texscroll/group0_texscroll.inc.c
+@@ -0,0 +1,9 @@
++#include "actors/group0.h"
++#include "actors/mario/texscroll.inc.c"
++#include "actors/lantern/texscroll.inc.c"
++void scroll_textures_group0() {
++	scroll_actor_geo_mario();
++
++	scroll_actor_geo_lantern();
++
++}
+diff --git a/src/game/texscroll/group0_texscroll.inc.h b/src/game/texscroll/group0_texscroll.inc.h
+new file mode 100644
+index 0000000..a258083
+--- /dev/null
++++ b/src/game/texscroll/group0_texscroll.inc.h
+@@ -0,0 +1,3 @@
++#include "actors/lantern/texscroll.inc.h"
++#include "actors/mario/texscroll.inc.h"
++extern void scroll_textures_group0();
+diff --git a/src/menu/star_select.c b/src/menu/star_select.c
+index 025dbf2..69d9b66 100644
+--- a/src/menu/star_select.c
++++ b/src/menu/star_select.c
+@@ -1,3 +1,4 @@
++#include "src/game/texscroll.h"
+ #include <PR/ultratypes.h>
+ 
+ #include "audio/external.h"
+@@ -434,7 +435,7 @@ s32 lvl_update_obj_and_load_act_button_actions(UNUSED s32 arg, UNUSED s32 unused
+         }
+     }
+ 
+-    area_update_objects();
++    area_update_objects(); scroll_textures();
+     sActSelectorMenuTimer++;
+     return sLoadedActNum;
+ }
diff --git a/include/geo_commands.h b/include/geo_commands.h
index 432ec1f..57cfff8 100644
--- a/include/geo_commands.h
+++ b/include/geo_commands.h
@@ -429,4 +429,21 @@
 #define GEO_CULLING_RADIUS(cullingRadius) \
     CMD_BBH(0x20, 0x00, cullingRadius)
 
+/**
+ * Advanced lighting engine
+ * 0x21: Create a scene light node. Can be a regular light, point light, or ambient light.
+ *   0x01: u8 lightType (0 is regular, 1 is ambient, 2 is point, 3 is occluded point)
+ *   0x02: u8 red
+ *   0x03: u8 green
+ *   0x04: u8 blue
+ *   0x05: u8 x direction (directional light) or quadratic falloff (point light)
+ *   0x06: u8 y direction (directional light) or linear falloff (point light)
+ *   0x07: u8 z direction (directional light) or constant falloff (point light)
+ */
+#include "point_lights.h"
+
+#define GEO_SCENE_LIGHT(lightType, red, green, blue, a, b, c) \
+    CMD_BBBB(0x21, lightType, red, green), \
+    CMD_BBBB(blue, a, b, c)
+
 #endif // GEO_COMMANDS_H
diff --git a/include/model_ids.h b/include/model_ids.h
index 1cd0a25..4c9c4c3 100644
--- a/include/model_ids.h
+++ b/include/model_ids.h
@@ -564,6 +564,8 @@
 #define MODEL_WHITE_PUFF                  0xE0        // white_puff_geo
 #define MODEL_TRAJECTORY_MARKER_BALL          0xE1        // bowling_ball_track_geo - duplicate used in SSL Pyramid small sized and as a track ball
 
+#define MODEL_LANTERN 0xF0
+
 // Menu Models (overwrites Level Geometry IDs)
 #define MODEL_MAIN_MENU_MARIO_SAVE_BUTTON         MODEL_LEVEL_GEOMETRY_03   // main_menu_geo_0001D0
 #define MODEL_MAIN_MENU_RED_ERASE_BUTTON          MODEL_LEVEL_GEOMETRY_04   // main_menu_geo_000290
diff --git a/include/n64/PR/gbi.h b/include/n64/PR/gbi.h
index eea18d5..feebfab 100644
--- a/include/n64/PR/gbi.h
+++ b/include/n64/PR/gbi.h
@@ -365,6 +365,11 @@
 #define G_TEXTURE_GEN		0x00040000
 #define G_TEXTURE_GEN_LINEAR	0x00080000
 #define G_LOD			0x00100000	/* NOT IMPLEMENTED */
+#if (defined(F3DZEX_GBI_2))
+# define G_POINT_LIGHTING 0x00400000
+#else
+# define G_POINT_LIGHTING 0x00000000
+#endif
 #if	(defined(F3DEX_GBI)||defined(F3DLP_GBI))
 # define G_CLIPPING		0x00800000
 #else
@@ -1404,6 +1409,15 @@ typedef struct {
   char 		pad3;
 } Light_t;
 
+typedef struct {
+  unsigned char	col[3];		/* diffuse light value (rgba) */
+  char 		is_point;
+  unsigned char	colc[3];	/* copy of diffuse light value (rgba) */
+  char 		linear_attenuation;
+  signed short	pos[3];		/* direction of light (normalized) */
+  char 		quadratic_attenuation;
+} PointLight_t;
+
 typedef struct {
   unsigned char	col[3];		/* ambient light value (rgba) */
   char 		pad1;
@@ -1417,6 +1431,7 @@ typedef struct {
 
 typedef union {
     Light_t	l;
+	PointLight_t pl;
     long long int	force_structure_alignment[2];
 } Light;
 
diff --git a/include/n64/PR/ucode.h.orig b/include/n64/PR/ucode.h.orig
new file mode 100644
index 0000000..23b9410
--- /dev/null
+++ b/include/n64/PR/ucode.h.orig
@@ -0,0 +1,260 @@
+/**************************************************************************
+ *									  *
+ *		 Copyright (C) 1995, Silicon Graphics, Inc.		  *
+ *									  *
+ *  These coded instructions, statements, and computer programs  contain  *
+ *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
+ *  are protected by Federal copyright law.  They  may  not be disclosed  *
+ *  to  third  parties  or copied or duplicated in any form, in whole or  *
+ *  in part, without the prior written consent of Silicon Graphics, Inc.  *
+ *									  *
+ **************************************************************************/
+
+/**************************************************************************
+ *
+ *  $Revision: 1.15 $
+ *  $Date: 1998/03/31 07:58:57 $
+ *  $Source: /exdisk2/cvs/N64OS/Master/cvsmdev2/PR/include/ucode.h,v $
+ *
+ **************************************************************************/
+
+#ifndef _UCODE_H_
+#define	_UCODE_H_
+
+#ifdef _LANGUAGE_C_PLUS_PLUS
+extern "C" {
+#endif
+
+#include <PR/ultratypes.h>
+
+#if defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS)
+
+/**************************************************************************
+ *
+ * Macro definitions
+ *
+ */
+
+/*
+ * This is the recommended size of the SP DRAM stack area, used
+ * by the graphics ucode. This stack is used primarily for the
+ * matrix stack, so it needs to be AT LEAST (10 * 64bytes) in size.
+ */
+#define	SP_DRAM_STACK_SIZE8	(1024)
+#define	SP_DRAM_STACK_SIZE64	(SP_DRAM_STACK_SIZE8 >> 3)
+
+/*
+ * This is the size of the IMEM, which is also the size of the
+ * graphics microcode. (other ucode might be less)
+ * This value is used in apps to tell the OS how much ucode to
+ * load.
+ */
+#define SP_UCODE_SIZE           4096
+
+/*
+ * This is 1/2 the size of DMEM, which is the maximum amount of
+ * initialized DMEM data any of the ucode tasks need to start up.
+ * This value is dependent on all of the task ucodes, and is therefore
+ * fixed per release.
+ */
+#define SP_UCODE_DATA_SIZE      2048
+   
+
+/**************************************************************************
+ *
+ * Extern variables
+ *
+ */
+
+/*
+ * Symbols generated by "rsp2elf", included by "makerom" that indicate 
+ * the location and size of the SP microcode objects. The ucode objects
+ * are loaded as part of the codesegment (arbitrary, could do other
+ * ways)
+ *
+ */
+
+/* standard boot ucode: */
+extern u64	rspbootTextStart[], rspbootTextEnd[];
+
+/* standard 3D ucode: */
+extern u64	gspFast3DTextStart[], gspFast3DTextEnd[];
+extern u64	gspFast3DDataStart[], gspFast3DDataEnd[];
+
+/* 3D ucode with output to DRAM: */
+extern u64	gspFast3D_dramTextStart[], gspFast3D_dramTextEnd[];
+extern u64	gspFast3D_dramDataStart[], gspFast3D_dramDataEnd[];
+
+/* 3D ucode with output through DRAM FIFO to RDP: */
+extern u64	gspFast3D_fifoTextStart[], gspFast3D_fifoTextEnd[];
+extern u64	gspFast3D_fifoDataStart[], gspFast3D_fifoDataEnd[];
+
+/* 3D ucode without nearclip: */
+extern u64	gspF3DNoNTextStart[], gspF3DNoNTextEnd[];
+extern u64	gspF3DNoNDataStart[], gspF3DNoNDataEnd[];
+
+/* 3D ucode without nearclip with output to DRAM: */
+extern u64	gspF3DNoN_dramTextStart[];
+extern u64	gspF3DNoN_dramTextEnd[];
+extern u64	gspF3DNoN_dramDataStart[];
+extern u64	gspF3DNoN_dramDataEnd[];
+
+/* 3D ucode without nearclip with output through DRAM FIFO to RDP: */
+extern u64	gspF3DNoN_fifoTextStart[];
+extern u64	gspF3DNoN_fifoTextEnd[];
+extern u64	gspF3DNoN_fifoDataStart[];
+extern u64	gspF3DNoN_fifoDataEnd[];
+
+/* 3D line ucode: */
+extern u64	gspLine3DTextStart[], gspLine3DTextEnd[];
+extern u64	gspLine3DDataStart[], gspLine3DDataEnd[];
+
+/* 3D line ucode with output to DRAM: */
+extern u64	gspLine3D_dramTextStart[], gspLine3D_dramTextEnd[];
+extern u64	gspLine3D_dramDataStart[], gspLine3D_dramDataEnd[];
+
+/* 3D line ucode with output through DRAM FIFO to RDP: */
+extern u64	gspLine3D_fifoTextStart[], gspLine3D_fifoTextEnd[];
+extern u64	gspLine3D_fifoDataStart[], gspLine3D_fifoDataEnd[];
+
+/* super 3D ucode: */
+extern u64	gspSuper3DTextStart[], gspSuper3DTextEnd[];
+extern u64	gspSuper3DDataStart[], gspSuper3DDataEnd[];
+
+/* 3D ucode with output to DRAM: */
+extern u64	gspSuper3D_dramTextStart[], gspSuper3D_dramTextEnd[];
+extern u64	gspSuper3D_dramDataStart[], gspSuper3D_dramDataEnd[];
+
+/* 3D ucode with output through DRAM FIFO to RDP: */
+extern u64	gspSuper3D_fifoTextStart[], gspSuper3D_fifoTextEnd[];
+extern u64	gspSuper3D_fifoDataStart[], gspSuper3D_fifoDataEnd[];
+
+
+/* 2D sprite ucode: */
+extern u64	gspSprite2DTextStart[], gspSprite2DTextEnd[];
+extern u64	gspSprite2DDataStart[], gspSprite2DDataEnd[];
+
+/* 2D sprite ucode with output to DRAM: */
+extern u64	gspSprite2D_dramTextStart[], gspSprite2D_dramTextEnd[];
+extern u64	gspSprite2D_dramDataStart[], gspSprite2D_dramDataEnd[];
+
+/* 2D sprite ucode with output through DRAM FIFO to RDP: */
+extern u64	gspSprite2D_fifoTextStart[], gspSprite2D_fifoTextEnd[];
+extern u64	gspSprite2D_fifoDataStart[], gspSprite2D_fifoDataEnd[];
+
+/* basic audio ucode: */
+extern u64 	aspMainTextStart[], aspMainTextEnd[];
+extern u64 	aspMainDataStart[], aspMainDataEnd[];
+
+/*========== F3DEX/F3DLX/F3DLP/L3DEX ==========*/
+/* FIFO version only */
+extern u64  gspF3DEX_fifoTextStart[],     gspF3DEX_fifoTextEnd[];
+extern u64  gspF3DEX_fifoDataStart[],     gspF3DEX_fifoDataEnd[];
+extern u64  gspF3DEX_NoN_fifoTextStart[], gspF3DEX_NoN_fifoTextEnd[];
+extern u64  gspF3DEX_NoN_fifoDataStart[], gspF3DEX_NoN_fifoDataEnd[];
+
+extern u64  gspF3DLX_fifoTextStart[],     gspF3DLX_fifoTextEnd[];
+extern u64  gspF3DLX_fifoDataStart[],     gspF3DLX_fifoDataEnd[];
+extern u64  gspF3DLX_NoN_fifoTextStart[], gspF3DLX_NoN_fifoTextEnd[];
+extern u64  gspF3DLX_NoN_fifoDataStart[], gspF3DLX_NoN_fifoDataEnd[];
+extern u64  gspF3DLX_Rej_fifoTextStart[], gspF3DLX_Rej_fifoTextEnd[];
+extern u64  gspF3DLX_Rej_fifoDataStart[], gspF3DLX_Rej_fifoDataEnd[];
+
+extern u64  gspF3DLP_Rej_fifoTextStart[], gspF3DLP_Rej_fifoTextEnd[];
+extern u64  gspF3DLP_Rej_fifoDataStart[], gspF3DLP_Rej_fifoDataEnd[];
+extern u64  gspL3DEX_fifoTextStart[],     gspL3DEX_fifoTextEnd[];
+extern u64  gspL3DEX_fifoDataStart[],     gspL3DEX_fifoDataEnd[];
+
+/*========== F3DEX2/F3DLX2/F3DLP2/L3DEX2 ==========*/
+/* FIFO version */
+extern u64 gspF3DEX2_fifoTextStart[],    gspF3DEX2_fifoTextEnd[];
+extern u64 gspF3DEX2_fifoDataStart[],    gspF3DEX2_fifoDataEnd[];
+extern u64 gspF3DEX2_NoN_fifoTextStart[],gspF3DEX2_NoN_fifoTextEnd[];
+extern u64 gspF3DEX2_NoN_fifoDataStart[],gspF3DEX2_NoN_fifoDataEnd[];
+extern u64 gspF3DEX2_Rej_fifoTextStart[],gspF3DEX2_Rej_fifoTextEnd[];
+extern u64 gspF3DEX2_Rej_fifoDataStart[],gspF3DEX2_Rej_fifoDataEnd[];
+extern u64 gspF3DLX2_Rej_fifoTextStart[],gspF3DLX2_Rej_fifoTextEnd[];
+extern u64 gspF3DLX2_Rej_fifoDataStart[],gspF3DLX2_Rej_fifoDataEnd[];
+extern u64 gspL3DEX2_fifoTextStart[],    gspL3DEX2_fifoTextEnd[];
+extern u64 gspL3DEX2_fifoDataStart[],    gspL3DEX2_fifoDataEnd[];
+
+/* XBUS version */
+extern u64 gspF3DEX2_xbusTextStart[],    gspF3DEX2_xbusTextEnd[];
+extern u64 gspF3DEX2_xbusDataStart[],    gspF3DEX2_xbusDataEnd[];
+extern u64 gspF3DEX2_NoN_xbusTextStart[],gspF3DEX2_NoN_xbusTextEnd[];
+extern u64 gspF3DEX2_NoN_xbusDataStart[],gspF3DEX2_NoN_xbusDataEnd[];
+extern u64 gspF3DEX2_Rej_xbusTextStart[],gspF3DEX2_Rej_xbusTextEnd[];
+extern u64 gspF3DEX2_Rej_xbusDataStart[],gspF3DEX2_Rej_xbusDataEnd[];
+extern u64 gspF3DLX2_Rej_xbusTextStart[],gspF3DLX2_Rej_xbusTextEnd[];
+extern u64 gspF3DLX2_Rej_xbusDataStart[],gspF3DLX2_Rej_xbusDataEnd[];
+extern u64 gspL3DEX2_xbusTextStart[],    gspL3DEX2_xbusTextEnd[];
+extern u64 gspL3DEX2_xbusDataStart[],    gspL3DEX2_xbusDataEnd[];
+
+/*========== F3DZEX2/L3DZEX2 ==========*/
+/* FIFO version */
+extern u64 gspF3DZEX2_fifoTextStart[],
+                     gspF3DZEX2_fifoTextEnd[];
+extern u64 gspF3DZEX2_fifoDataStart[],
+                     gspF3DZEX2_fifoDataEnd[];
+extern u64 gspF3DZEX2_NoN_fifoTextStart[],
+                     gspF3DZEX2_NoN_fifoTextEnd[];
+extern u64 gspF3DZEX2_NoN_fifoDataStart[],
+                     gspF3DZEX2_NoN_fifoDataEnd[];
+extern u64 gspL3DZEX2_fifoTextStart[],
+                     gspL3DZEX2_fifoTextEnd[];
+extern u64 gspL3DZEX2_fifoDataStart[],
+                     gspL3DZEX2_fifoDataEnd[];
+/* XBUS version */
+extern u64 gspF3DZEX2_xbusTextStart[],
+                     gspF3DZEX2_xbusTextEnd[];
+extern u64 gspF3DZEX2_xbusDataStart[],
+                     gspF3DZEX2_xbusDataEnd[];
+extern u64 gspF3DZEX2_NoN_xbusTextStart[],
+                     gspF3DZEX2_NoN_xbusTextEnd[];
+extern u64 gspF3DZEX2_NoN_xbusDataStart[],
+                     gspF3DZEX2_NoN_xbusDataEnd[];
+extern u64 gspL3DZEX2_xbusTextStart[],
+                     gspL3DZEX2_xbusTextEnd[];
+extern u64 gspL3DZEX2_xbusDataStart[],
+                     gspL3DZEX2_xbusDataEnd[];
+
+/*========== F3DZEX2/L3DZEX2 ==========*/
+extern u64 gspF3DZEX2_PosLight_fifoTextStart[],
+           gspF3DZEX2_PosLight_fifoTextEnd[];
+extern u64 gspF3DZEX2_PosLight_fifoDataStart[],
+           gspF3DZEX2_PosLight_fifoDataEnd[];
+extern u64 gspF3DZEX2_NoN_PosLight_fifoTextStart[],
+           gspF3DZEX2_NoN_PosLight_fifoTextEnd[];
+extern u64 gspF3DZEX2_NoN_PosLight_fifoDataStart[],
+           gspF3DZEX2_NoN_PosLight_fifoDataEnd[];
+extern u64 gspL3DZEX2_PosLight_fifoTextStart[],
+           gspL3DZEX2_PosLight_fifoTextEnd[];
+extern u64 gspL3DZEX2_PosLight_fifoDataStart[],
+           gspL3DZEX2_PosLight_fifoDataEnd[];
+
+/**************************************************************************
+ *
+ * decomp ucode names
+ *
+ */
+
+// F3D ucode
+extern u64 rspF3DStart[], rspF3DEnd[];
+
+// F3D ucode data
+extern u64 rspF3DDataStart[], rspF3DDataEnd[];
+
+
+/**************************************************************************
+ *
+ * Function prototypes
+ *
+ */
+
+#endif /* _LANGUAGE_C */
+
+#ifdef _LANGUAGE_C_PLUS_PLUS
+}
+#endif
+
+#endif /* !_UCODE_H */
diff --git a/include/object_constants.h b/include/object_constants.h
index 95f5ce5..d4c9db7 100644
--- a/include/object_constants.h
+++ b/include/object_constants.h
@@ -40,12 +40,14 @@
 #define OBJ_FLAG_TRANSFORM_RELATIVE_TO_PARENT     (1 <<  9) // 0x00000200
 #define OBJ_FLAG_HOLDABLE                         (1 << 10) // 0x00000400
 #define OBJ_FLAG_SET_THROW_MATRIX_FROM_TRANSFORM  (1 << 11) // 0x00000800
-#define OBJ_FLAG_1000                             (1 << 12) // 0x00001000
 #define OBJ_FLAG_COMPUTE_ANGLE_TO_MARIO           (1 << 13) // 0x00002000
 #define OBJ_FLAG_PERSISTENT_RESPAWN               (1 << 14) // 0x00004000
 #define OBJ_FLAG_8000                             (1 << 15) // 0x00008000
 #define OBJ_FLAG_30                               (1 << 30) // 0x40000000
 
+// Flag to make objects emit a point light (was OBJ_FLAG_1000)
+#define OBJ_FLAG_EMIT_LIGHT                       (1 << 12) // 0x00001000
+
 /* oHeldState */
 #define HELD_FREE 0
 #define HELD_HELD 1
diff --git a/include/object_fields.h b/include/object_fields.h
index 89939cc..3aa02d7 100644
--- a/include/object_fields.h
+++ b/include/object_fields.h
@@ -1157,4 +1157,12 @@
 #define /*0x0FC*/ oYoshiChosenHome OBJECT_FIELD_S32(0x1D)
 #define /*0x100*/ oYoshiTargetYaw  OBJECT_FIELD_S32(0x1E)
 
+
+// Advanced lighting engine
+// These use previously unused object fields outside of the normal range
+// for specific behaviors, so they shouldn't interfere with any custom ones
+#define /*0x148*/ oLightColor                 OBJECT_FIELD_S32(0x30) // 0xRRGGBB00
+#define /*0x1A4*/ oLightQuadraticFalloff      OBJECT_FIELD_S16(0x47, 0)
+#define /*0x1A6*/ oLightLinearFalloff         OBJECT_FIELD_S16(0x47, 1)
+
 #endif // OBJECT_FIELDS_H
diff --git a/include/point_lights.h b/include/point_lights.h
new file mode 100644
index 0000000..0378153
--- /dev/null
+++ b/include/point_lights.h
@@ -0,0 +1,39 @@
+#ifndef __POINT_LIGHTS_H__
+#define __POINT_LIGHTS_H__
+
+#include <PR/ultratypes.h>
+#include <PR/gbi.h>
+#include <macros.h>
+
+#define LIGHT_TYPE_AMBIENT       0
+#define LIGHT_TYPE_DIRECTIONAL   1
+#define LIGHT_TYPE_POINT         2
+#define LIGHT_TYPE_POINT_OCCLUDE 3
+
+#define LIGHT_FLAG_OCCLUDE (1 << 0)
+
+// The max number of point lights you can have in a scene (impacts RAM)
+#define MAX_POINT_LIGHTS 32
+// The max number of point lights that can be affecting a given model (impacts performance)
+#define MAX_POINT_LIGHTS_ACTIVE 3
+
+
+STATIC_ASSERT(MAX_POINT_LIGHTS_ACTIVE <= 6, "You cannot apply more than 6 point lights at a time!");
+
+struct SceneLight {
+    Light l;
+    Vec3s worldPos;
+    s16 flags;
+};
+
+extern int gPointLightCompatibilityMode;
+extern Lights1 gDirectionalLight;
+extern s8 gLightDir[3];
+extern u8 gLightDirTransformEnabled;
+extern struct SceneLight gPointLights[];
+extern u8 gAreaPointLightCount;
+extern u8 gPointLightCount;
+
+void emit_light(Vec3f pos, u32 color, u32 quadraticFalloff, u32 linearFalloff);
+
+#endif
diff --git a/include/segments.h.orig b/include/segments.h.orig
new file mode 100644
index 0000000..d354f20
--- /dev/null
+++ b/include/segments.h.orig
@@ -0,0 +1,33 @@
+#ifndef SEGMENTS_H
+#define SEGMENTS_H
+
+#ifndef LINKER
+#include "segment_symbols.h"
+#endif
+/*
+ * Memory addresses for segments. Ideally, this header file would not be
+ * needed, and the addresses would be defined in sm64.ld and linker-inserted
+ * into C code. However, there are some cases where that would not match, where
+ * addresses are loaded using lui/ori rather than lui/addiu.
+ * To avoid duplication, this file is included from sm64.ld. We make sure not
+ * to cast the addresses to pointers in this file, since that would be invalid
+ * linker script syntax.
+*/
+
+#ifndef USE_EXT_RAM
+#define RAM_END          0x80400000
+#else
+#define RAM_END          0x80800000
+#endif
+
+/*
+ * Workaround for running out of pool space due to
+ * importing large custom content.
+ */
+
+#define SEG_POOL_START   _framebuffersSegmentBssEnd // 0x0165000 in size
+#define SEG_GODDARD      SEG_POOL_START + 0x113000
+
+#define POOL_SIZE        RAM_END - SEG_POOL_START
+
+#endif // SEGMENTS_H
diff --git a/levels/castle_grounds/area_1/collision.inc.c b/levels/castle_grounds/area_1/collision.inc.c
new file mode 100644
index 0000000..7871023
--- /dev/null
+++ b/levels/castle_grounds/area_1/collision.inc.c
@@ -0,0 +1,313 @@
+const Collision castle_grounds_area_1_collision[] = {
+	COL_INIT(),
+	COL_VERTEX_INIT(114),
+	COL_VERTEX(-526, 0, -493),
+	COL_VERTEX(-526, 600, -493),
+	COL_VERTEX(-497, 600, -422),
+	COL_VERTEX(-497, 0, -422),
+	COL_VERTEX(-526, 0, -351),
+	COL_VERTEX(-526, 600, -351),
+	COL_VERTEX(-597, 600, -322),
+	COL_VERTEX(-597, 0, -322),
+	COL_VERTEX(-668, 0, -351),
+	COL_VERTEX(-668, 600, -351),
+	COL_VERTEX(-697, 600, -422),
+	COL_VERTEX(-697, 0, -422),
+	COL_VERTEX(-668, 0, -493),
+	COL_VERTEX(-668, 600, -493),
+	COL_VERTEX(-597, 600, -522),
+	COL_VERTEX(-597, 0, -522),
+	COL_VERTEX(-455, 166, 430),
+	COL_VERTEX(-412, 181, 461),
+	COL_VERTEX(-471, 181, 480),
+	COL_VERTEX(-383, 221, 483),
+	COL_VERTEX(-370, 213, 430),
+	COL_VERTEX(-507, 181, 430),
+	COL_VERTEX(-471, 181, 380),
+	COL_VERTEX(-412, 181, 400),
+	COL_VERTEX(-360, 266, 461),
+	COL_VERTEX(-483, 221, 515),
+	COL_VERTEX(-429, 213, 511),
+	COL_VERTEX(-455, 266, 530),
+	COL_VERTEX(-544, 221, 430),
+	COL_VERTEX(-524, 213, 480),
+	COL_VERTEX(-550, 266, 461),
+	COL_VERTEX(-483, 221, 345),
+	COL_VERTEX(-524, 213, 380),
+	COL_VERTEX(-514, 266, 350),
+	COL_VERTEX(-383, 221, 378),
+	COL_VERTEX(-429, 213, 350),
+	COL_VERTEX(-396, 266, 350),
+	COL_VERTEX(-396, 266, 511),
+	COL_VERTEX(-514, 266, 511),
+	COL_VERTEX(-550, 266, 400),
+	COL_VERTEX(-455, 266, 330),
+	COL_VERTEX(-360, 266, 400),
+	COL_VERTEX(-427, 310, 515),
+	COL_VERTEX(-386, 318, 480),
+	COL_VERTEX(-439, 351, 480),
+	COL_VERTEX(-527, 310, 483),
+	COL_VERTEX(-481, 318, 511),
+	COL_VERTEX(-497, 351, 461),
+	COL_VERTEX(-527, 310, 378),
+	COL_VERTEX(-540, 318, 430),
+	COL_VERTEX(-497, 351, 400),
+	COL_VERTEX(-427, 310, 345),
+	COL_VERTEX(-481, 318, 350),
+	COL_VERTEX(-439, 351, 380),
+	COL_VERTEX(-365, 310, 430),
+	COL_VERTEX(-386, 318, 380),
+	COL_VERTEX(-402, 351, 430),
+	COL_VERTEX(-455, 366, 430),
+	COL_VERTEX(599, 17, -627),
+	COL_VERTEX(1012, -7, -634),
+	COL_VERTEX(993, -7, -990),
+	COL_VERTEX(589, -4, -1032),
+	COL_VERTEX(-981, -24, -604),
+	COL_VERTEX(-623, 24, -615),
+	COL_VERTEX(-642, 23, -997),
+	COL_VERTEX(-1002, -14, -1025),
+	COL_VERTEX(-196, -2, -582),
+	COL_VERTEX(-162, 6, -1014),
+	COL_VERTEX(230, 55, -585),
+	COL_VERTEX(189, 16, -989),
+	COL_VERTEX(570, 46, 623),
+	COL_VERTEX(565, 38, 1023),
+	COL_VERTEX(1034, -14, 971),
+	COL_VERTEX(1005, -19, 581),
+	COL_VERTEX(-1023, -50, 176),
+	COL_VERTEX(-585, 4, 214),
+	COL_VERTEX(-636, 0, -206),
+	COL_VERTEX(-990, 24, -190),
+	COL_VERTEX(-569, 4, 1025),
+	COL_VERTEX(-211, -10, 1029),
+	COL_VERTEX(-187, -35, 624),
+	COL_VERTEX(-601, -1, 621),
+	COL_VERTEX(-219, 13, 232),
+	COL_VERTEX(-188, -6, -197),
+	COL_VERTEX(220, 19, 1014),
+	COL_VERTEX(231, 4, 629),
+	COL_VERTEX(228, 22, 238),
+	COL_VERTEX(212, -14, -194),
+	COL_VERTEX(552, 32, 199),
+	COL_VERTEX(551, -37, -199),
+	COL_VERTEX(983, -37, 229),
+	COL_VERTEX(1028, 36, -232),
+	COL_VERTEX(1012, 725, -634),
+	COL_VERTEX(993, 725, -990),
+	COL_VERTEX(589, 728, -1032),
+	COL_VERTEX(189, 748, -989),
+	COL_VERTEX(-211, 722, 1029),
+	COL_VERTEX(220, 751, 1014),
+	COL_VERTEX(-642, 754, -997),
+	COL_VERTEX(-1002, 718, -1025),
+	COL_VERTEX(-162, 737, -1014),
+	COL_VERTEX(565, 770, 1023),
+	COL_VERTEX(-981, 708, -604),
+	COL_VERTEX(1034, 718, 971),
+	COL_VERTEX(1005, 712, 581),
+	COL_VERTEX(-990, 755, -190),
+	COL_VERTEX(983, 695, 229),
+	COL_VERTEX(-1023, 682, 176),
+	COL_VERTEX(1028, 767, -232),
+	COL_VERTEX(-1008, 10, 576),
+	COL_VERTEX(-1008, 741, 576),
+	COL_VERTEX(-987, 21, 975),
+	COL_VERTEX(-987, 753, 975),
+	COL_VERTEX(-569, 736, 1025),
+	COL_TRI_INIT(SURFACE_DEFAULT, 192),
+	COL_TRI(0, 1, 2),
+	COL_TRI(0, 2, 3),
+	COL_TRI(4, 5, 6),
+	COL_TRI(4, 6, 7),
+	COL_TRI(8, 9, 10),
+	COL_TRI(8, 10, 11),
+	COL_TRI(12, 13, 14),
+	COL_TRI(12, 14, 15),
+	COL_TRI(15, 14, 1),
+	COL_TRI(15, 1, 0),
+	COL_TRI(3, 2, 5),
+	COL_TRI(3, 5, 4),
+	COL_TRI(7, 6, 9),
+	COL_TRI(7, 9, 8),
+	COL_TRI(11, 10, 13),
+	COL_TRI(11, 13, 12),
+	COL_TRI(14, 13, 10),
+	COL_TRI(10, 9, 6),
+	COL_TRI(6, 5, 2),
+	COL_TRI(2, 1, 14),
+	COL_TRI(14, 10, 6),
+	COL_TRI(6, 2, 14),
+	COL_TRI(16, 17, 18),
+	COL_TRI(19, 17, 20),
+	COL_TRI(16, 18, 21),
+	COL_TRI(16, 21, 22),
+	COL_TRI(16, 22, 23),
+	COL_TRI(19, 20, 24),
+	COL_TRI(25, 26, 27),
+	COL_TRI(28, 29, 30),
+	COL_TRI(31, 32, 33),
+	COL_TRI(34, 35, 36),
+	COL_TRI(19, 24, 37),
+	COL_TRI(25, 27, 38),
+	COL_TRI(28, 30, 39),
+	COL_TRI(31, 33, 40),
+	COL_TRI(34, 36, 41),
+	COL_TRI(42, 43, 44),
+	COL_TRI(45, 46, 47),
+	COL_TRI(48, 49, 50),
+	COL_TRI(51, 52, 53),
+	COL_TRI(54, 55, 56),
+	COL_TRI(56, 53, 57),
+	COL_TRI(56, 55, 53),
+	COL_TRI(55, 51, 53),
+	COL_TRI(53, 50, 57),
+	COL_TRI(53, 52, 50),
+	COL_TRI(52, 48, 50),
+	COL_TRI(50, 47, 57),
+	COL_TRI(50, 49, 47),
+	COL_TRI(49, 45, 47),
+	COL_TRI(47, 44, 57),
+	COL_TRI(47, 46, 44),
+	COL_TRI(46, 42, 44),
+	COL_TRI(44, 56, 57),
+	COL_TRI(44, 43, 56),
+	COL_TRI(43, 54, 56),
+	COL_TRI(41, 55, 54),
+	COL_TRI(41, 36, 55),
+	COL_TRI(36, 51, 55),
+	COL_TRI(40, 52, 51),
+	COL_TRI(40, 33, 52),
+	COL_TRI(33, 48, 52),
+	COL_TRI(39, 49, 48),
+	COL_TRI(39, 30, 49),
+	COL_TRI(30, 45, 49),
+	COL_TRI(38, 46, 45),
+	COL_TRI(38, 27, 46),
+	COL_TRI(27, 42, 46),
+	COL_TRI(37, 43, 42),
+	COL_TRI(37, 24, 43),
+	COL_TRI(24, 54, 43),
+	COL_TRI(36, 40, 51),
+	COL_TRI(36, 35, 40),
+	COL_TRI(35, 31, 40),
+	COL_TRI(33, 39, 48),
+	COL_TRI(33, 32, 39),
+	COL_TRI(32, 28, 39),
+	COL_TRI(30, 38, 45),
+	COL_TRI(30, 29, 38),
+	COL_TRI(29, 25, 38),
+	COL_TRI(27, 37, 42),
+	COL_TRI(27, 26, 37),
+	COL_TRI(26, 19, 37),
+	COL_TRI(24, 41, 54),
+	COL_TRI(24, 20, 41),
+	COL_TRI(20, 34, 41),
+	COL_TRI(23, 35, 34),
+	COL_TRI(23, 22, 35),
+	COL_TRI(22, 31, 35),
+	COL_TRI(22, 32, 31),
+	COL_TRI(22, 21, 32),
+	COL_TRI(21, 28, 32),
+	COL_TRI(21, 29, 28),
+	COL_TRI(21, 18, 29),
+	COL_TRI(18, 25, 29),
+	COL_TRI(20, 23, 34),
+	COL_TRI(20, 17, 23),
+	COL_TRI(17, 16, 23),
+	COL_TRI(18, 26, 25),
+	COL_TRI(18, 17, 26),
+	COL_TRI(17, 19, 26),
+	COL_TRI(58, 59, 60),
+	COL_TRI(58, 60, 61),
+	COL_TRI(62, 63, 64),
+	COL_TRI(62, 64, 65),
+	COL_TRI(63, 66, 67),
+	COL_TRI(63, 67, 64),
+	COL_TRI(66, 68, 69),
+	COL_TRI(66, 69, 67),
+	COL_TRI(68, 58, 61),
+	COL_TRI(68, 61, 69),
+	COL_TRI(70, 71, 72),
+	COL_TRI(70, 72, 73),
+	COL_TRI(74, 75, 76),
+	COL_TRI(74, 76, 77),
+	COL_TRI(77, 76, 63),
+	COL_TRI(77, 63, 62),
+	COL_TRI(78, 79, 80),
+	COL_TRI(78, 80, 81),
+	COL_TRI(81, 80, 82),
+	COL_TRI(81, 82, 75),
+	COL_TRI(75, 82, 83),
+	COL_TRI(75, 83, 76),
+	COL_TRI(76, 83, 66),
+	COL_TRI(76, 66, 63),
+	COL_TRI(79, 84, 85),
+	COL_TRI(79, 85, 80),
+	COL_TRI(80, 85, 86),
+	COL_TRI(80, 86, 82),
+	COL_TRI(82, 86, 87),
+	COL_TRI(82, 87, 83),
+	COL_TRI(83, 87, 68),
+	COL_TRI(83, 68, 66),
+	COL_TRI(84, 71, 70),
+	COL_TRI(84, 70, 85),
+	COL_TRI(85, 70, 88),
+	COL_TRI(85, 88, 86),
+	COL_TRI(86, 88, 89),
+	COL_TRI(86, 89, 87),
+	COL_TRI(87, 89, 58),
+	COL_TRI(87, 58, 68),
+	COL_TRI(88, 90, 91),
+	COL_TRI(88, 91, 89),
+	COL_TRI(89, 91, 59),
+	COL_TRI(89, 59, 58),
+	COL_TRI(60, 59, 92),
+	COL_TRI(60, 92, 93),
+	COL_TRI(69, 61, 94),
+	COL_TRI(69, 94, 95),
+	COL_TRI(84, 79, 96),
+	COL_TRI(84, 96, 97),
+	COL_TRI(65, 64, 98),
+	COL_TRI(65, 98, 99),
+	COL_TRI(67, 69, 95),
+	COL_TRI(67, 95, 100),
+	COL_TRI(71, 84, 97),
+	COL_TRI(71, 97, 101),
+	COL_TRI(62, 65, 99),
+	COL_TRI(62, 99, 102),
+	COL_TRI(64, 67, 100),
+	COL_TRI(64, 100, 98),
+	COL_TRI(73, 72, 103),
+	COL_TRI(73, 103, 104),
+	COL_TRI(77, 62, 102),
+	COL_TRI(77, 102, 105),
+	COL_TRI(90, 73, 104),
+	COL_TRI(90, 104, 106),
+	COL_TRI(74, 77, 105),
+	COL_TRI(74, 105, 107),
+	COL_TRI(91, 90, 106),
+	COL_TRI(91, 106, 108),
+	COL_TRI(109, 74, 107),
+	COL_TRI(109, 107, 110),
+	COL_TRI(111, 109, 110),
+	COL_TRI(111, 110, 112),
+	COL_TRI(59, 91, 108),
+	COL_TRI(59, 108, 92),
+	COL_TRI(78, 111, 112),
+	COL_TRI(78, 112, 113),
+	COL_TRI(72, 71, 101),
+	COL_TRI(72, 101, 103),
+	COL_TRI(61, 60, 93),
+	COL_TRI(61, 93, 94),
+	COL_TRI(79, 78, 113),
+	COL_TRI(79, 113, 96),
+	COL_TRI(88, 70, 73),
+	COL_TRI(88, 73, 90),
+	COL_TRI(75, 74, 109),
+	COL_TRI(75, 109, 81),
+	COL_TRI(81, 109, 111),
+	COL_TRI(81, 111, 78),
+	COL_TRI_STOP(),
+	COL_END()
+};
diff --git a/levels/castle_grounds/area_1/geo.inc.c b/levels/castle_grounds/area_1/geo.inc.c
new file mode 100644
index 0000000..8b6f2cc
--- /dev/null
+++ b/levels/castle_grounds/area_1/geo.inc.c
@@ -0,0 +1,43 @@
+#include "src/game/envfx_snow.h"
+
+const GeoLayout castle_grounds_area_1_geo[] = {
+	GEO_NODE_START(),
+	GEO_OPEN_NODE(),
+		GEO_SCENE_LIGHT(LIGHT_TYPE_DIRECTIONAL, 129, 129, 129, -83, -66, 68),
+		GEO_SCENE_LIGHT(LIGHT_TYPE_AMBIENT, 27, 27, 27, 0, 0, 0),
+		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -597, 300, -422, castle_grounds_dl_Column_mesh),
+		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -455, 266, 430, castle_grounds_dl_Icosphere_mesh),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_dl_Plane_mesh),
+		GEO_TRANSLATE_NODE(0, 800, 198, 802),
+		GEO_OPEN_NODE(),
+			GEO_SCENE_LIGHT(LIGHT_TYPE_POINT, 255, 40, 0, 1, 0, 8),
+		GEO_CLOSE_NODE(),
+	GEO_CLOSE_NODE(),
+	GEO_RETURN(),
+};
+const GeoLayout castle_grounds_area_1[] = {
+	GEO_NODE_SCREEN_AREA(10, SCREEN_WIDTH/2, SCREEN_HEIGHT/2, SCREEN_WIDTH/2, SCREEN_HEIGHT/2),
+	GEO_OPEN_NODE(),
+		GEO_ZBUFFER(0),
+		GEO_OPEN_NODE(),
+			GEO_NODE_ORTHO(100.0000),
+			GEO_OPEN_NODE(),
+				GEO_BACKGROUND_COLOR(0x0001),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+		GEO_ZBUFFER(1),
+		GEO_OPEN_NODE(),
+			GEO_CAMERA_FRUSTUM_WITH_FUNC(45.0000, 100, 30000, geo_camera_fov),
+			GEO_OPEN_NODE(),
+				GEO_CAMERA(CAMERA_MODE_8_DIRECTIONS, 0, 0, 0, 0, -100, 0, geo_camera_main),
+				GEO_OPEN_NODE(),
+					GEO_BRANCH(1, castle_grounds_area_1_geo),
+					GEO_RENDER_OBJ(),
+					GEO_ASM(ENVFX_MODE_NONE, geo_envfx_main),
+				GEO_CLOSE_NODE(),
+			GEO_CLOSE_NODE(),
+		GEO_CLOSE_NODE(),
+		GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_dl_material_revert_render_settings),
+	GEO_CLOSE_NODE(),
+	GEO_END(),
+};
diff --git a/levels/castle_grounds/area_1/macro.inc.c b/levels/castle_grounds/area_1/macro.inc.c
new file mode 100644
index 0000000..c28274b
--- /dev/null
+++ b/levels/castle_grounds/area_1/macro.inc.c
@@ -0,0 +1,4 @@
+const MacroObject castle_grounds_area_1_macro_objs[] = {
+	MACRO_OBJECT_END(),
+};
+
diff --git a/levels/castle_grounds/area_1/spline.inc.c b/levels/castle_grounds/area_1/spline.inc.c
new file mode 100644
index 0000000..e69de29
diff --git a/levels/castle_grounds/geo.c b/levels/castle_grounds/geo.c
index 31f7420..9943826 100644
--- a/levels/castle_grounds/geo.c
+++ b/levels/castle_grounds/geo.c
@@ -18,3 +18,4 @@
 #include "levels/castle_grounds/areas/1/7/geo.inc.c"
 #include "levels/castle_grounds/areas/1/8/geo.inc.c"
 #include "levels/castle_grounds/areas/1/geo.inc.c"
+#include "levels/castle_grounds/geo.inc.c"
diff --git a/levels/castle_grounds/geo.inc.c b/levels/castle_grounds/geo.inc.c
new file mode 100644
index 0000000..af9c4fa
--- /dev/null
+++ b/levels/castle_grounds/geo.inc.c
@@ -0,0 +1 @@
+#include "levels/castle_grounds/area_1/geo.inc.c"
diff --git a/levels/castle_grounds/header.h b/levels/castle_grounds/header.h
index 5e32ed9..9edf0e0 100644
--- a/levels/castle_grounds/header.h
+++ b/levels/castle_grounds/header.h
@@ -41,4 +41,6 @@ extern const Gfx castle_grounds_dl_waterfall[];
 // script
 extern const LevelScript level_castle_grounds_entry[];
 
+#include "levels/castle_grounds/header.inc.h"
+
 #endif
diff --git a/levels/castle_grounds/header.inc.h b/levels/castle_grounds/header.inc.h
new file mode 100644
index 0000000..95d1ba0
--- /dev/null
+++ b/levels/castle_grounds/header.inc.h
@@ -0,0 +1,27 @@
+extern const GeoLayout castle_grounds_area_1_geo[];
+extern const GeoLayout castle_grounds_area_1[];
+extern const Collision castle_grounds_area_1_collision[];
+extern const MacroObject castle_grounds_area_1_macro_objs[];
+extern u8 castle_grounds_dl_stripes_i4[];
+extern u8 castle_grounds_dl_checkerboard_ci4[];
+extern u8 castle_grounds_dl_checkerboard_ci4_pal_rgba16[];
+extern Vtx castle_grounds_dl_Column_mesh_vtx_cull[8];
+extern Vtx castle_grounds_dl_Column_mesh_vtx_0[26];
+extern Gfx castle_grounds_dl_Column_mesh_tri_0[];
+extern Vtx castle_grounds_dl_Icosphere_mesh_vtx_cull[8];
+extern Vtx castle_grounds_dl_Icosphere_mesh_vtx_0[90];
+extern Gfx castle_grounds_dl_Icosphere_mesh_tri_0[];
+extern Vtx castle_grounds_dl_Plane_mesh_vtx_cull[8];
+extern Vtx castle_grounds_dl_Plane_mesh_vtx_0[99];
+extern Gfx castle_grounds_dl_Plane_mesh_tri_0[];
+extern Vtx castle_grounds_dl_Plane_mesh_vtx_1[4];
+extern Gfx castle_grounds_dl_Plane_mesh_tri_1[];
+extern Gfx mat_castle_grounds_dl_column_v3[];
+extern Gfx mat_revert_castle_grounds_dl_column_v3[];
+extern Gfx mat_castle_grounds_dl_sm64_material[];
+extern Gfx mat_castle_grounds_dl_checkerboard_v3[];
+extern Gfx mat_revert_castle_grounds_dl_checkerboard_v3[];
+extern Gfx castle_grounds_dl_Column_mesh[];
+extern Gfx castle_grounds_dl_Icosphere_mesh[];
+extern Gfx castle_grounds_dl_Plane_mesh[];
+extern Gfx castle_grounds_dl_material_revert_render_settings[];
diff --git a/levels/castle_grounds/leveldata.c b/levels/castle_grounds/leveldata.c
index 1263f06..a4fa025 100644
--- a/levels/castle_grounds/leveldata.c
+++ b/levels/castle_grounds/leveldata.c
@@ -31,3 +31,4 @@
 #include "levels/castle_grounds/areas/1/7/collision.inc.c"
 #include "levels/castle_grounds/areas/1/8/collision.inc.c"
 #include "levels/castle_grounds/areas/1/movtext.inc.c"
+#include "levels/castle_grounds/leveldata.inc.c"
diff --git a/levels/castle_grounds/leveldata.inc.c b/levels/castle_grounds/leveldata.inc.c
new file mode 100644
index 0000000..13b2255
--- /dev/null
+++ b/levels/castle_grounds/leveldata.inc.c
@@ -0,0 +1,4 @@
+#include "levels/castle_grounds/area_1/collision.inc.c"
+#include "levels/castle_grounds/area_1/macro.inc.c"
+#include "levels/castle_grounds/area_1/spline.inc.c"
+#include "levels/castle_grounds/model.inc.c"
diff --git a/levels/castle_grounds/model.inc.c b/levels/castle_grounds/model.inc.c
new file mode 100644
index 0000000..f50dc05
--- /dev/null
+++ b/levels/castle_grounds/model.inc.c
@@ -0,0 +1,569 @@
+Gfx castle_grounds_dl_stripes_i4_aligner[] = {gsSPEndDisplayList()};
+u8 castle_grounds_dl_stripes_i4[] = {
+	0xff, 0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x66, 
+	
+};
+
+Gfx castle_grounds_dl_checkerboard_ci4_aligner[] = {gsSPEndDisplayList()};
+u8 castle_grounds_dl_checkerboard_ci4[] = {
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+	
+};
+
+Gfx castle_grounds_dl_checkerboard_ci4_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
+u8 castle_grounds_dl_checkerboard_ci4_pal_rgba16[] = {
+	0x82, 0x01, 0xbc, 0x57, 
+};
+
+Vtx castle_grounds_dl_Column_mesh_vtx_cull[8] = {
+	{{{-100, -300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-100, -300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-100, 300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-100, 300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{100, -300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{100, -300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{100, 300, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{100, 300, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+};
+
+Vtx castle_grounds_dl_Column_mesh_vtx_0[26] = {
+	{{{-71, -300, 71},0, {-219, 630},{0xA6, 0x0, 0x5A, 0xFF}}},
+	{{{-100, 300, 0},0, {-314, -502},{0x81, 0x0, 0x0, 0xFF}}},
+	{{{-100, -300, 0},0, {-314, 630},{0x81, 0x0, 0x0, 0xFF}}},
+	{{{-71, 300, 71},0, {-219, -502},{0xA6, 0x0, 0x5A, 0xFF}}},
+	{{{0, -300, 100},0, {-125, 630},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{0, 300, 100},0, {-125, -502},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{71, -300, 71},0, {-30, 630},{0x5A, 0x0, 0x5A, 0xFF}}},
+	{{{71, 300, 71},0, {-30, -502},{0x5A, 0x0, 0x5A, 0xFF}}},
+	{{{100, -300, 0},0, {64, 630},{0x7F, 0x0, 0x0, 0xFF}}},
+	{{{100, 300, 0},0, {64, -502},{0x7F, 0x0, 0x0, 0xFF}}},
+	{{{71, -300, -71},0, {158, 630},{0x5A, 0x0, 0xA6, 0xFF}}},
+	{{{71, 300, -71},0, {158, -502},{0x5A, 0x0, 0xA6, 0xFF}}},
+	{{{0, -300, -100},0, {253, 630},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{0, 300, -100},0, {253, -502},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{-71, -300, -71},0, {347, 630},{0xA6, 0x0, 0xA6, 0xFF}}},
+	{{{-71, 300, -71},0, {347, -502},{0xA6, 0x0, 0xA6, 0xFF}}},
+	{{{-100, -300, 0},0, {442, 630},{0x81, 0x0, 0x0, 0xFF}}},
+	{{{-100, 300, 0},0, {442, -502},{0x81, 0x0, 0x0, 0xFF}}},
+	{{{0, 300, -100},0, {54, 9},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-71, 300, -71},0, {41, 23},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-100, 300, 0},0, {41, 42},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{0, 300, 100},0, {74, 55},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-71, 300, 71},0, {54, 55},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{100, 300, 0},0, {87, 23},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{71, 300, 71},0, {87, 42},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{71, 300, -71},0, {74, 9},{0x0, 0x7F, 0x0, 0xFF}}},
+};
+
+Gfx castle_grounds_dl_Column_mesh_tri_0[] = {
+	gsSPVertex(castle_grounds_dl_Column_mesh_vtx_0 + 0, 26, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
+	gsSP2Triangles(6, 5, 4, 0, 6, 7, 5, 0),
+	gsSP2Triangles(8, 7, 6, 0, 8, 9, 7, 0),
+	gsSP2Triangles(10, 9, 8, 0, 10, 11, 9, 0),
+	gsSP2Triangles(12, 11, 10, 0, 12, 13, 11, 0),
+	gsSP2Triangles(14, 13, 12, 0, 14, 15, 13, 0),
+	gsSP2Triangles(16, 15, 14, 0, 16, 17, 15, 0),
+	gsSP2Triangles(18, 19, 20, 0, 18, 20, 21, 0),
+	gsSP2Triangles(20, 22, 21, 0, 21, 23, 18, 0),
+	gsSP2Triangles(21, 24, 23, 0, 23, 25, 18, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx castle_grounds_dl_Icosphere_mesh_vtx_cull[8] = {
+	{{{-95, -100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-95, -100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-95, 100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-95, 100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{95, -100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{95, -100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{95, 100, 100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{95, 100, -100},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+};
+
+Vtx castle_grounds_dl_Icosphere_mesh_vtx_0[90] = {
+	{{{0, -100, 0},0, {822, 1008},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{43, -85, 31},0, {775, 927},{0x36, 0x94, 0x27, 0xFF}}},
+	{{{-16, -85, 50},0, {868, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
+	{{{26, -53, 81},0, {822, 847},{0x21, 0xBD, 0x67, 0xFF}}},
+	{{{72, -45, 53},0, {729, 847},{0x5C, 0xC7, 0x43, 0xFF}}},
+	{{{59, 0, 81},0, {775, 766},{0x4B, 0x0, 0x67, 0xFF}}},
+	{{{95, 0, 31},0, {682, 766},{0x79, 0x0, 0x27, 0xFF}}},
+	{{{85, -53, 0},0, {636, 847},{0x6C, 0xBD, 0x0, 0xFF}}},
+	{{{43, -85, 31},0, {682, 927},{0x36, 0x94, 0x27, 0xFF}}},
+	{{{43, -85, -31},0, {589, 927},{0x36, 0x94, 0xD9, 0xFF}}},
+	{{{0, -100, 0},0, {636, 1008},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{72, -45, -53},0, {543, 847},{0x5C, 0xC7, 0xBD, 0xFF}}},
+	{{{95, 0, -31},0, {589, 766},{0x79, 0x0, 0xD9, 0xFF}}},
+	{{{59, 0, -81},0, {496, 766},{0x4B, 0x0, 0x99, 0xFF}}},
+	{{{26, -53, -81},0, {449, 847},{0x21, 0xBD, 0x99, 0xFF}}},
+	{{{43, -85, -31},0, {496, 927},{0x36, 0x94, 0xD9, 0xFF}}},
+	{{{-16, -85, -50},0, {403, 927},{0xEC, 0x94, 0xC1, 0xFF}}},
+	{{{0, -100, 0},0, {449, 1008},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{-28, -45, -85},0, {356, 847},{0xDD, 0xC7, 0x94, 0xFF}}},
+	{{{0, 0, -100},0, {403, 766},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{-59, 0, -81},0, {310, 766},{0xB5, 0x0, 0x99, 0xFF}}},
+	{{{-69, -53, -50},0, {263, 847},{0xA8, 0xBD, 0xC1, 0xFF}}},
+	{{{-16, -85, -50},0, {310, 927},{0xEC, 0x94, 0xC1, 0xFF}}},
+	{{{-53, -85, 0},0, {217, 927},{0xBD, 0x94, 0x0, 0xFF}}},
+	{{{0, -100, 0},0, {263, 1008},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{-89, -45, 0},0, {170, 847},{0x8E, 0xC7, 0x0, 0xFF}}},
+	{{{-95, 0, -31},0, {217, 766},{0x87, 0x0, 0xD9, 0xFF}}},
+	{{{-95, 0, 31},0, {124, 766},{0x87, 0x0, 0x27, 0xFF}}},
+	{{{-69, -53, 50},0, {77, 847},{0xA8, 0xBD, 0x3F, 0xFF}}},
+	{{{-53, -85, 0},0, {124, 927},{0xBD, 0x94, 0x0, 0xFF}}},
+	{{{-16, -85, 50},0, {31, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
+	{{{0, -100, 0},0, {77, 1008},{0x0, 0x81, 0x0, 0xFF}}},
+	{{{-16, -85, 50},0, {31, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
+	{{{-28, -45, 85},0, {-16, 847},{0xDD, 0xC7, 0x6C, 0xFF}}},
+	{{{-69, -53, 50},0, {77, 847},{0xA8, 0xBD, 0x3F, 0xFF}}},
+	{{{-59, 0, 81},0, {31, 766},{0xB5, 0x0, 0x67, 0xFF}}},
+	{{{-95, 0, 31},0, {124, 766},{0x87, 0x0, 0x27, 0xFF}}},
+	{{{-72, 45, 53},0, {77, 686},{0xA4, 0x39, 0x43, 0xFF}}},
+	{{{-85, 53, 0},0, {170, 686},{0x94, 0x43, 0x0, 0xFF}}},
+	{{{-43, 85, 31},0, {124, 605},{0xCA, 0x6C, 0x27, 0xFF}}},
+	{{{-43, 85, -31},0, {217, 605},{0xCA, 0x6C, 0xD9, 0xFF}}},
+	{{{0, 100, 0},0, {170, 524},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-72, 45, -53},0, {263, 686},{0xA4, 0x39, 0xBD, 0xFF}}},
+	{{{-95, 0, -31},0, {217, 766},{0x87, 0x0, 0xD9, 0xFF}}},
+	{{{-59, 0, -81},0, {310, 766},{0xB5, 0x0, 0x99, 0xFF}}},
+	{{{-26, 53, -81},0, {356, 686},{0xDF, 0x43, 0x99, 0xFF}}},
+	{{{-43, 85, -31},0, {310, 605},{0xCA, 0x6C, 0xD9, 0xFF}}},
+	{{{16, 85, -50},0, {403, 605},{0x14, 0x6C, 0xC1, 0xFF}}},
+	{{{0, 100, 0},0, {356, 524},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{28, 45, -85},0, {449, 686},{0x23, 0x39, 0x94, 0xFF}}},
+	{{{0, 0, -100},0, {403, 766},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{59, 0, -81},0, {496, 766},{0x4B, 0x0, 0x99, 0xFF}}},
+	{{{69, 53, -50},0, {543, 686},{0x58, 0x43, 0xC1, 0xFF}}},
+	{{{16, 85, -50},0, {496, 605},{0x14, 0x6C, 0xC1, 0xFF}}},
+	{{{53, 85, 0},0, {589, 605},{0x43, 0x6C, 0x0, 0xFF}}},
+	{{{0, 100, 0},0, {543, 524},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{89, 45, 0},0, {636, 686},{0x72, 0x39, 0x0, 0xFF}}},
+	{{{95, 0, -31},0, {589, 766},{0x79, 0x0, 0xD9, 0xFF}}},
+	{{{95, 0, 31},0, {682, 766},{0x79, 0x0, 0x27, 0xFF}}},
+	{{{69, 53, 50},0, {729, 686},{0x58, 0x43, 0x3F, 0xFF}}},
+	{{{53, 85, 0},0, {682, 605},{0x43, 0x6C, 0x0, 0xFF}}},
+	{{{16, 85, 50},0, {775, 605},{0x14, 0x6C, 0x3F, 0xFF}}},
+	{{{0, 100, 0},0, {729, 524},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{28, 45, 85},0, {822, 686},{0x23, 0x39, 0x6C, 0xFF}}},
+	{{{59, 0, 81},0, {775, 766},{0x4B, 0x0, 0x67, 0xFF}}},
+	{{{69, 53, 50},0, {729, 686},{0x58, 0x43, 0x3F, 0xFF}}},
+	{{{28, 45, 85},0, {822, 686},{0x23, 0x39, 0x6C, 0xFF}}},
+	{{{0, 0, 100},0, {868, 766},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{-26, 53, 81},0, {915, 686},{0xDF, 0x43, 0x67, 0xFF}}},
+	{{{16, 85, 50},0, {868, 605},{0x14, 0x6C, 0x3F, 0xFF}}},
+	{{{-43, 85, 31},0, {961, 605},{0xCA, 0x6C, 0x27, 0xFF}}},
+	{{{0, 100, 0},0, {915, 524},{0x0, 0x7F, 0x0, 0xFF}}},
+	{{{-72, 45, 53},0, {1008, 686},{0xA4, 0x39, 0x43, 0xFF}}},
+	{{{-59, 0, 81},0, {961, 766},{0xB5, 0x0, 0x67, 0xFF}}},
+	{{{-28, -45, 85},0, {915, 847},{0xDD, 0xC7, 0x6C, 0xFF}}},
+	{{{26, -53, 81},0, {822, 847},{0x21, 0xBD, 0x67, 0xFF}}},
+	{{{-16, -85, 50},0, {868, 927},{0xEC, 0x94, 0x3F, 0xFF}}},
+	{{{95, 0, -31},0, {589, 766},{0x79, 0x0, 0xD9, 0xFF}}},
+	{{{59, 0, -81},0, {496, 766},{0x4B, 0x0, 0x99, 0xFF}}},
+	{{{69, 53, -50},0, {543, 686},{0x58, 0x43, 0xC1, 0xFF}}},
+	{{{0, 0, -100},0, {403, 766},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{-59, 0, -81},0, {310, 766},{0xB5, 0x0, 0x99, 0xFF}}},
+	{{{-26, 53, -81},0, {356, 686},{0xDF, 0x43, 0x99, 0xFF}}},
+	{{{-95, 0, -31},0, {217, 766},{0x87, 0x0, 0xD9, 0xFF}}},
+	{{{-95, 0, 31},0, {124, 766},{0x87, 0x0, 0x27, 0xFF}}},
+	{{{-85, 53, 0},0, {170, 686},{0x94, 0x43, 0x0, 0xFF}}},
+	{{{95, 0, 31},0, {682, 766},{0x79, 0x0, 0x27, 0xFF}}},
+	{{{26, -53, -81},0, {449, 847},{0x21, 0xBD, 0x99, 0xFF}}},
+	{{{-69, -53, -50},0, {263, 847},{0xA8, 0xBD, 0xC1, 0xFF}}},
+	{{{85, -53, 0},0, {636, 847},{0x6C, 0xBD, 0x0, 0xFF}}},
+};
+
+Gfx castle_grounds_dl_Icosphere_mesh_tri_0[] = {
+	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(1, 4, 3, 0, 3, 4, 5, 0),
+	gsSP2Triangles(4, 6, 5, 0, 4, 7, 6, 0),
+	gsSP2Triangles(4, 8, 7, 0, 7, 8, 9, 0),
+	gsSP2Triangles(8, 10, 9, 0, 7, 9, 11, 0),
+	gsSP2Triangles(7, 11, 12, 0, 11, 13, 12, 0),
+	gsSP2Triangles(11, 14, 13, 0, 15, 14, 11, 0),
+	gsSP2Triangles(15, 16, 14, 0, 17, 16, 15, 0),
+	gsSP2Triangles(16, 18, 14, 0, 14, 18, 19, 0),
+	gsSP2Triangles(18, 20, 19, 0, 18, 21, 20, 0),
+	gsSP2Triangles(22, 21, 18, 0, 22, 23, 21, 0),
+	gsSP2Triangles(24, 23, 22, 0, 23, 25, 21, 0),
+	gsSP2Triangles(21, 25, 26, 0, 25, 27, 26, 0),
+	gsSP2Triangles(25, 28, 27, 0, 29, 28, 25, 0),
+	gsSP2Triangles(29, 30, 28, 0, 31, 30, 29, 0),
+	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_0 + 32, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 2, 1, 3, 0),
+	gsSP2Triangles(4, 2, 3, 0, 4, 3, 5, 0),
+	gsSP2Triangles(4, 5, 6, 0, 6, 5, 7, 0),
+	gsSP2Triangles(8, 6, 7, 0, 8, 7, 9, 0),
+	gsSP2Triangles(10, 6, 8, 0, 11, 6, 10, 0),
+	gsSP2Triangles(12, 11, 10, 0, 12, 10, 13, 0),
+	gsSP2Triangles(13, 10, 14, 0, 15, 13, 14, 0),
+	gsSP2Triangles(15, 14, 16, 0, 17, 13, 15, 0),
+	gsSP2Triangles(18, 13, 17, 0, 19, 18, 17, 0),
+	gsSP2Triangles(19, 17, 20, 0, 20, 17, 21, 0),
+	gsSP2Triangles(22, 20, 21, 0, 22, 21, 23, 0),
+	gsSP2Triangles(24, 20, 22, 0, 25, 20, 24, 0),
+	gsSP2Triangles(26, 25, 24, 0, 26, 24, 27, 0),
+	gsSP2Triangles(27, 24, 28, 0, 29, 27, 28, 0),
+	gsSP2Triangles(29, 28, 30, 0, 31, 27, 29, 0),
+	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_0 + 64, 26, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 0, 2, 0),
+	gsSP2Triangles(3, 2, 4, 0, 4, 2, 5, 0),
+	gsSP2Triangles(6, 4, 5, 0, 6, 5, 7, 0),
+	gsSP2Triangles(8, 4, 6, 0, 9, 4, 8, 0),
+	gsSP2Triangles(9, 3, 4, 0, 10, 3, 9, 0),
+	gsSP2Triangles(10, 11, 3, 0, 12, 11, 10, 0),
+	gsSP2Triangles(3, 11, 0, 0, 13, 14, 15, 0),
+	gsSP2Triangles(16, 17, 18, 0, 19, 20, 21, 0),
+	gsSP2Triangles(0, 22, 1, 0, 14, 23, 16, 0),
+	gsSP2Triangles(17, 24, 19, 0, 22, 25, 13, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx castle_grounds_dl_Plane_mesh_vtx_cull[8] = {
+	{{{-1023, -50, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-1023, -50, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-1023, 770, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{-1023, 770, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{1034, -50, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{1034, -50, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{1034, 770, 1029},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+	{{{1034, 770, -1032},0, {-16, -16},{0x0, 0x0, 0x0, 0x0}}},
+};
+
+Vtx castle_grounds_dl_Plane_mesh_vtx_0[99] = {
+	{{{-981, -24, -604},0, {-2048, -1024},{0xF7, 0x7F, 0x0, 0xFF}}},
+	{{{-642, 23, -997},0, {-1024, -2048},{0xFC, 0x7F, 0x1, 0xFF}}},
+	{{{-1002, -14, -1025},0, {-2048, -2048},{0xF1, 0x7E, 0x2, 0xFF}}},
+	{{{-623, 24, -615},0, {-1024, -1024},{0xFE, 0x7F, 0x1, 0xFF}}},
+	{{{-990, 24, -190},0, {-2048, 0},{0xFC, 0x7F, 0x3, 0xFF}}},
+	{{{-636, 0, -206},0, {-1024, 0},{0xFF, 0x7F, 0x2, 0xFF}}},
+	{{{-1023, -50, 176},0, {-2048, 1024},{0xFB, 0x7F, 0x1, 0xFF}}},
+	{{{-585, 4, 214},0, {-1024, 1024},{0xFE, 0x7F, 0x1, 0xFF}}},
+	{{{-1008, 10, 576},0, {-2048, 2048},{0x0, 0x7F, 0xFB, 0xFF}}},
+	{{{-601, -1, 621},0, {-1024, 2048},{0x2, 0x7F, 0xFE, 0xFF}}},
+	{{{-987, 21, 975},0, {-2048, 3072},{0x4, 0x7F, 0xFE, 0xFF}}},
+	{{{-569, 4, 1025},0, {-1024, 3072},{0x6, 0x7F, 0xFD, 0xFF}}},
+	{{{-187, -35, 624},0, {0, 2048},{0xFF, 0x7F, 0x2, 0xFF}}},
+	{{{-211, -10, 1029},0, {0, 3072},{0xFF, 0x7F, 0xFB, 0xFF}}},
+	{{{231, 4, 629},0, {1024, 2048},{0xF7, 0x7F, 0x0, 0xFF}}},
+	{{{220, 19, 1014},0, {1024, 3072},{0xF6, 0x7F, 0xFC, 0xFF}}},
+	{{{570, 46, 623},0, {2048, 2048},{0x3, 0x7F, 0xFF, 0xFF}}},
+	{{{565, 38, 1023},0, {2048, 3072},{0x2, 0x7F, 0x0, 0xFF}}},
+	{{{1034, -14, 971},0, {3072, 3072},{0x10, 0x7E, 0x0, 0xFF}}},
+	{{{1005, -19, 581},0, {3072, 2048},{0x11, 0x7E, 0xFD, 0xFF}}},
+	{{{552, 32, 199},0, {2048, 1024},{0x2, 0x7F, 0xFB, 0xFF}}},
+	{{{983, -37, 229},0, {3072, 1024},{0x9, 0x7F, 0xFE, 0xFF}}},
+	{{{1028, 36, -232},0, {3072, 0},{0xFD, 0x7F, 0x1, 0xFF}}},
+	{{{551, -37, -199},0, {2048, 0},{0x1, 0x7F, 0x1, 0xFF}}},
+	{{{1012, -7, -634},0, {3072, -1024},{0xFF, 0x7F, 0xFF, 0xFF}}},
+	{{{599, 17, -627},0, {2048, -1024},{0x4, 0x7F, 0x1, 0xFF}}},
+	{{{993, -7, -990},0, {3072, -2048},{0x4, 0x7F, 0xFD, 0xFF}}},
+	{{{589, -4, -1032},0, {2048, -2048},{0x6, 0x7F, 0xFA, 0xFF}}},
+	{{{230, 55, -585},0, {1024, -1024},{0x0, 0x7F, 0x4, 0xFF}}},
+	{{{189, 16, -989},0, {1024, -2048},{0xFF, 0x7F, 0xF9, 0xFF}}},
+	{{{-196, -2, -582},0, {0, -1024},{0xFE, 0x7F, 0x3, 0xFF}}},
+	{{{-162, 6, -1014},0, {0, -2048},{0xFE, 0x7F, 0xFF, 0xFF}}},
+	{{{-636, 0, -206},0, {-1024, 0},{0xFF, 0x7F, 0x2, 0xFF}}},
+	{{{-188, -6, -197},0, {0, 0},{0x0, 0x7F, 0x1, 0xFF}}},
+	{{{-196, -2, -582},0, {0, -1024},{0xFE, 0x7F, 0x3, 0xFF}}},
+	{{{-585, 4, 214},0, {-1024, 1024},{0xFE, 0x7F, 0x1, 0xFF}}},
+	{{{-219, 13, 232},0, {0, 1024},{0x0, 0x7F, 0x1, 0xFF}}},
+	{{{-601, -1, 621},0, {-1024, 2048},{0x2, 0x7F, 0xFE, 0xFF}}},
+	{{{-187, -35, 624},0, {0, 2048},{0xFF, 0x7F, 0x2, 0xFF}}},
+	{{{228, 22, 238},0, {1024, 1024},{0xFC, 0x7F, 0xFD, 0xFF}}},
+	{{{231, 4, 629},0, {1024, 2048},{0xF7, 0x7F, 0x0, 0xFF}}},
+	{{{552, 32, 199},0, {2048, 1024},{0x2, 0x7F, 0xFB, 0xFF}}},
+	{{{570, 46, 623},0, {2048, 2048},{0x3, 0x7F, 0xFF, 0xFF}}},
+	{{{551, -37, -199},0, {2048, 0},{0x1, 0x7F, 0x1, 0xFF}}},
+	{{{212, -14, -194},0, {1024, 0},{0x1, 0x7F, 0x1, 0xFF}}},
+	{{{599, 17, -627},0, {2048, -1024},{0x4, 0x7F, 0x1, 0xFF}}},
+	{{{230, 55, -585},0, {1024, -1024},{0x0, 0x7F, 0x4, 0xFF}}},
+	{{{993, -7, -990},0, {2729, -2048},{0xA4, 0x0, 0x58, 0xFF}}},
+	{{{1012, 725, -634},0, {2729, -1024},{0x81, 0x0, 0x5, 0xFF}}},
+	{{{993, 725, -990},0, {2729, -2048},{0xA4, 0x0, 0x58, 0xFF}}},
+	{{{1012, -7, -634},0, {2729, -1024},{0x81, 0x0, 0x5, 0xFF}}},
+	{{{1028, 767, -232},0, {2729, 0},{0x81, 0x0, 0xFD, 0xFF}}},
+	{{{1028, 36, -232},0, {2729, 0},{0x81, 0x0, 0xFD, 0xFF}}},
+	{{{983, 695, 229},0, {2729, 1024},{0x81, 0x0, 0xFE, 0xFF}}},
+	{{{983, -37, 229},0, {2729, 1024},{0x81, 0x0, 0xFF, 0xFF}}},
+	{{{1005, 712, 581},0, {2729, 2048},{0x81, 0x0, 0x8, 0xFF}}},
+	{{{1005, -19, 581},0, {2729, 2048},{0x81, 0x0, 0x8, 0xFF}}},
+	{{{1034, 718, 971},0, {2729, 3072},{0xA1, 0x0, 0xAB, 0xFF}}},
+	{{{1034, -14, 971},0, {2729, 3072},{0x9B, 0x0, 0xB3, 0xFF}}},
+	{{{-1002, -14, -1025},0, {-2048, -1160},{0x5D, 0x0, 0x57, 0xFF}}},
+	{{{-642, 754, -997},0, {-1024, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
+	{{{-1002, 718, -1025},0, {-2048, -1160},{0x55, 0x0, 0x5F, 0xFF}}},
+	{{{-642, 23, -997},0, {-1024, -1160},{0xFD, 0x0, 0x7F, 0xFF}}},
+	{{{-162, 737, -1014},0, {0, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
+	{{{-642, 23, -997},0, {-1024, -1160},{0xFD, 0x0, 0x7F, 0xFF}}},
+	{{{-162, 6, -1014},0, {0, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
+	{{{-162, 737, -1014},0, {0, -1160},{0xFE, 0x0, 0x7F, 0xFF}}},
+	{{{189, 748, -989},0, {1024, -1160},{0x2, 0x0, 0x7F, 0xFF}}},
+	{{{189, 16, -989},0, {1024, -1160},{0x1, 0x0, 0x7F, 0xFF}}},
+	{{{589, 728, -1032},0, {2048, -1160},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{589, -4, -1032},0, {2048, -1160},{0x0, 0x0, 0x7F, 0xFF}}},
+	{{{993, 725, -990},0, {3072, -1160},{0xA4, 0x0, 0x58, 0xFF}}},
+	{{{993, -7, -990},0, {3072, -1160},{0xA4, 0x0, 0x58, 0xFF}}},
+	{{{-981, -24, -604},0, {-1794, -1024},{0x7F, 0x0, 0xFE, 0xFF}}},
+	{{{-1002, -14, -1025},0, {-1794, -2048},{0x5D, 0x0, 0x57, 0xFF}}},
+	{{{-1002, 718, -1025},0, {-1794, -2048},{0x55, 0x0, 0x5F, 0xFF}}},
+	{{{-981, 708, -604},0, {-1794, -1024},{0x7F, 0x0, 0xFF, 0xFF}}},
+	{{{-990, 24, -190},0, {-1794, 0},{0x7F, 0x0, 0x7, 0xFF}}},
+	{{{-990, 755, -190},0, {-1794, 0},{0x7F, 0x0, 0x6, 0xFF}}},
+	{{{-1023, -50, 176},0, {-1794, 1024},{0x7F, 0x0, 0x3, 0xFF}}},
+	{{{-1023, 682, 176},0, {-1794, 1024},{0x7F, 0x0, 0x3, 0xFF}}},
+	{{{-1008, 10, 576},0, {-1794, 2048},{0x7F, 0x0, 0xFA, 0xFF}}},
+	{{{-1008, 741, 576},0, {-1794, 2048},{0x7F, 0x0, 0xFB, 0xFF}}},
+	{{{-987, 21, 975},0, {-1794, 3072},{0x5D, 0x0, 0xA9, 0xFF}}},
+	{{{-987, 753, 975},0, {-1794, 3072},{0x5D, 0x0, 0xA9, 0xFF}}},
+	{{{-569, 4, 1025},0, {-1024, 2412},{0x8, 0x0, 0x81, 0xFF}}},
+	{{{-987, 21, 975},0, {-2048, 2412},{0x5D, 0x0, 0xA9, 0xFF}}},
+	{{{-987, 753, 975},0, {-2048, 2412},{0x5D, 0x0, 0xA9, 0xFF}}},
+	{{{-569, 736, 1025},0, {-1024, 2412},{0x8, 0x0, 0x81, 0xFF}}},
+	{{{-211, -10, 1029},0, {0, 2412},{0xFF, 0x0, 0x81, 0xFF}}},
+	{{{-211, 722, 1029},0, {0, 2412},{0xFF, 0x0, 0x81, 0xFF}}},
+	{{{220, 19, 1014},0, {1024, 2412},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{220, 751, 1014},0, {1024, 2412},{0x0, 0x0, 0x81, 0xFF}}},
+	{{{565, 38, 1023},0, {2048, 2412},{0xFB, 0x0, 0x81, 0xFF}}},
+	{{{565, 770, 1023},0, {2048, 2412},{0xFC, 0x0, 0x81, 0xFF}}},
+	{{{1034, -14, 971},0, {3072, 2412},{0x9B, 0x0, 0xB3, 0xFF}}},
+	{{{1034, -14, 971},0, {3072, 2412},{0x9B, 0x0, 0xB3, 0xFF}}},
+	{{{565, 770, 1023},0, {2048, 2412},{0xFC, 0x0, 0x81, 0xFF}}},
+	{{{1034, 718, 971},0, {3072, 2412},{0xA1, 0x0, 0xAB, 0xFF}}},
+};
+
+Gfx castle_grounds_dl_Plane_mesh_tri_0[] = {
+	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 0, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 3, 1, 0),
+	gsSP2Triangles(4, 3, 0, 0, 4, 5, 3, 0),
+	gsSP2Triangles(6, 5, 4, 0, 6, 7, 5, 0),
+	gsSP2Triangles(7, 6, 8, 0, 7, 8, 9, 0),
+	gsSP2Triangles(9, 8, 10, 0, 9, 10, 11, 0),
+	gsSP2Triangles(11, 12, 9, 0, 11, 13, 12, 0),
+	gsSP2Triangles(13, 14, 12, 0, 13, 15, 14, 0),
+	gsSP2Triangles(15, 16, 14, 0, 15, 17, 16, 0),
+	gsSP2Triangles(16, 17, 18, 0, 16, 18, 19, 0),
+	gsSP2Triangles(20, 16, 19, 0, 20, 19, 21, 0),
+	gsSP2Triangles(20, 21, 22, 0, 20, 22, 23, 0),
+	gsSP2Triangles(23, 22, 24, 0, 23, 24, 25, 0),
+	gsSP2Triangles(25, 24, 26, 0, 25, 26, 27, 0),
+	gsSP2Triangles(28, 25, 27, 0, 28, 27, 29, 0),
+	gsSP2Triangles(30, 28, 29, 0, 30, 29, 31, 0),
+	gsSP2Triangles(3, 30, 31, 0, 3, 31, 1, 0),
+	gsSP1Triangle(5, 30, 3, 0),
+	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 32, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 3, 1, 0, 0),
+	gsSP2Triangles(3, 4, 1, 0, 5, 4, 3, 0),
+	gsSP2Triangles(5, 6, 4, 0, 6, 7, 4, 0),
+	gsSP2Triangles(6, 8, 7, 0, 8, 9, 7, 0),
+	gsSP2Triangles(8, 10, 9, 0, 7, 9, 11, 0),
+	gsSP2Triangles(7, 11, 12, 0, 12, 11, 13, 0),
+	gsSP2Triangles(12, 13, 14, 0, 1, 12, 14, 0),
+	gsSP2Triangles(1, 14, 2, 0, 4, 12, 1, 0),
+	gsSP2Triangles(4, 7, 12, 0, 15, 16, 17, 0),
+	gsSP2Triangles(15, 18, 16, 0, 18, 19, 16, 0),
+	gsSP2Triangles(18, 20, 19, 0, 20, 21, 19, 0),
+	gsSP2Triangles(20, 22, 21, 0, 22, 23, 21, 0),
+	gsSP2Triangles(22, 24, 23, 0, 24, 25, 23, 0),
+	gsSP2Triangles(24, 26, 25, 0, 27, 28, 29, 0),
+	gsSP2Triangles(27, 30, 28, 0, 30, 31, 28, 0),
+	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 64, 32, 0),
+	gsSP2Triangles(0, 1, 2, 0, 1, 3, 2, 0),
+	gsSP2Triangles(1, 4, 3, 0, 4, 5, 3, 0),
+	gsSP2Triangles(4, 6, 5, 0, 6, 7, 5, 0),
+	gsSP2Triangles(6, 8, 7, 0, 9, 10, 11, 0),
+	gsSP2Triangles(9, 11, 12, 0, 13, 9, 12, 0),
+	gsSP2Triangles(13, 12, 14, 0, 15, 13, 14, 0),
+	gsSP2Triangles(15, 14, 16, 0, 17, 15, 16, 0),
+	gsSP2Triangles(17, 16, 18, 0, 19, 17, 18, 0),
+	gsSP2Triangles(19, 18, 20, 0, 21, 22, 23, 0),
+	gsSP2Triangles(21, 23, 24, 0, 25, 21, 24, 0),
+	gsSP2Triangles(25, 24, 26, 0, 27, 25, 26, 0),
+	gsSP2Triangles(27, 26, 28, 0, 29, 27, 28, 0),
+	gsSP2Triangles(29, 28, 30, 0, 31, 29, 30, 0),
+	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_0 + 96, 3, 0),
+	gsSP1Triangle(0, 1, 2, 0),
+	gsSPEndDisplayList(),
+};
+
+Vtx castle_grounds_dl_Plane_mesh_vtx_1[4] = {
+	{{{-100, 349, 632},0, {1024, 0},{0xFF, 0xFF, 0xFF, 0xFF}}},
+	{{{100, 349, 632},0, {0, 0},{0xFF, 0xFF, 0xFF, 0xFF}}},
+	{{{100, 149, 632},0, {0, 1024},{0xFF, 0xFF, 0xFF, 0xFF}}},
+	{{{-100, 149, 632},0, {1024, 1024},{0xFF, 0xFF, 0xFF, 0xFF}}},
+};
+
+Gfx castle_grounds_dl_Plane_mesh_tri_1[] = {
+	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_1 + 0, 4, 0),
+	gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_castle_grounds_dl_column_v3[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, 1, TEXEL0, 0, SHADE, 0, 0, 0, 0, 1),
+	gsDPSetTextureFilter(G_TF_POINT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_I, G_IM_SIZ_8b, 2, castle_grounds_dl_stripes_i4),
+	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_8b, 1, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 6, 12),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_I, G_IM_SIZ_4b, 1, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0, G_TX_WRAP | G_TX_NOMIRROR, 2, 0),
+	gsDPSetTileSize(0, 0, 0, 12, 12),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_castle_grounds_dl_column_v3[] = {
+	gsDPPipeSync(),
+	gsDPSetTextureFilter(G_TF_BILERP),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_castle_grounds_dl_sm64_material[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_castle_grounds_dl_checkerboard_v3[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
+	gsDPSetTextureFilter(G_TF_POINT),
+	gsSPTexture(65535, 65535, 0, 0, 1),
+	gsDPSetTextureLUT(G_TT_RGBA16),
+	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, castle_grounds_dl_checkerboard_ci4_pal_rgba16),
+	gsDPTileSync(),
+	gsDPSetTile(0, 0, 0, 256, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
+	gsDPLoadSync(),
+	gsDPLoadTLUTCmd(7, 1),
+	gsDPPipeSync(),
+	gsDPTileSync(),
+	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b, 16, castle_grounds_dl_checkerboard_ci4),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 2, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
+	gsDPLoadSync(),
+	gsDPLoadTile(7, 0, 0, 62, 124),
+	gsDPPipeSync(),
+	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_4b, 2, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
+	gsDPSetTileSize(0, 0, 0, 124, 124),
+	gsSPEndDisplayList(),
+};
+
+Gfx mat_revert_castle_grounds_dl_checkerboard_v3[] = {
+	gsDPPipeSync(),
+	gsDPSetTextureFilter(G_TF_BILERP),
+	gsDPSetTextureLUT(G_TT_NONE),
+	gsSPEndDisplayList(),
+};
+
+Gfx castle_grounds_dl_Column_mesh[] = {
+	gsSPClearGeometryMode(G_LIGHTING),
+	gsSPVertex(castle_grounds_dl_Column_mesh_vtx_cull + 0, 8, 0),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPCullDisplayList(0, 7),
+	gsSPDisplayList(mat_castle_grounds_dl_column_v3),
+	gsSPDisplayList(castle_grounds_dl_Column_mesh_tri_0),
+	gsSPDisplayList(mat_revert_castle_grounds_dl_column_v3),
+	gsSPEndDisplayList(),
+};
+
+Gfx castle_grounds_dl_Icosphere_mesh[] = {
+	gsSPClearGeometryMode(G_LIGHTING),
+	gsSPVertex(castle_grounds_dl_Icosphere_mesh_vtx_cull + 0, 8, 0),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPCullDisplayList(0, 7),
+	gsSPDisplayList(mat_castle_grounds_dl_sm64_material),
+	gsSPDisplayList(castle_grounds_dl_Icosphere_mesh_tri_0),
+	gsSPEndDisplayList(),
+};
+
+Gfx castle_grounds_dl_Plane_mesh[] = {
+	gsSPClearGeometryMode(G_LIGHTING),
+	gsSPVertex(castle_grounds_dl_Plane_mesh_vtx_cull + 0, 8, 0),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPCullDisplayList(0, 7),
+	gsSPDisplayList(mat_castle_grounds_dl_checkerboard_v3),
+	gsSPDisplayList(castle_grounds_dl_Plane_mesh_tri_0),
+	gsSPDisplayList(mat_revert_castle_grounds_dl_checkerboard_v3),
+	gsSPEndDisplayList(),
+};
+
+Gfx castle_grounds_dl_material_revert_render_settings[] = {
+	gsDPPipeSync(),
+	gsSPSetGeometryMode(G_LIGHTING),
+	gsSPClearGeometryMode(G_TEXTURE_GEN),
+	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+	gsSPTexture(65535, 65535, 0, 0, 0),
+	gsDPSetEnvColor(255, 255, 255, 255),
+	gsDPSetAlphaCompare(G_AC_NONE),
+	gsSPEndDisplayList(),
+};
+
diff --git a/levels/castle_grounds/script.c b/levels/castle_grounds/script.c
index 6e44620..9415753 100644
--- a/levels/castle_grounds/script.c
+++ b/levels/castle_grounds/script.c
@@ -3,6 +3,7 @@
 #include "behavior_data.h"
 #include "model_ids.h"
 #include "seq_ids.h"
+#include "dialog_ids.h"
 #include "segment_symbols.h"
 #include "level_commands.h"
 
@@ -15,125 +16,38 @@
 #include "make_const_nonconst.h"
 #include "levels/castle_grounds/header.h"
 
-static const LevelScript script_func_local_1[] = {
-    WARP_NODE(/*id*/ 0x00, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x00, /*flags*/ WARP_NO_CHECKPOINT),
-    WARP_NODE(/*id*/ 0x01, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x01, /*flags*/ WARP_NO_CHECKPOINT),
-    WARP_NODE(/*id*/ 0x02, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x03, /*destNode*/ 0x02, /*flags*/ WARP_NO_CHECKPOINT),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/     0,   900, -1710, /*angle*/ 0, 180, 0, /*behParam*/ 0x00030000, /*beh*/ bhvDeathWarp),
-    WARP_NODE(/*id*/ 0x03, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -1328,   260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00040000, /*beh*/ bhvSpinAirborneCircleWarp),
-    WARP_NODE(/*id*/ 0x04, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x04, /*flags*/ WARP_NO_CHECKPOINT),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -815, -2025, /*angle*/ 0,   0, 0, /*behParam*/ 0x3C050000, /*beh*/ bhvWarp),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00060000, /*beh*/ bhvLaunchDeathWarp),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3799, -1199, -5816, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvSwimmingWarp),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00080000, /*beh*/ bhvLaunchStarCollectWarp),
-    WARP_NODE(/*id*/ 0x05, /*destLevel*/ LEVEL_VCUTM, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
-    WARP_NODE(/*id*/ 0x06, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x06, /*flags*/ WARP_NO_CHECKPOINT),
-    WARP_NODE(/*id*/ 0x07, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x07, /*flags*/ WARP_NO_CHECKPOINT),
-    WARP_NODE(/*id*/ 0x08, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x08, /*flags*/ WARP_NO_CHECKPOINT),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/  5408,  4500,  3637, /*angle*/ 0, 225, 0, /*behParam*/ 0x000A0000, /*beh*/ bhvAirborneWarp),
-    WARP_NODE(/*id*/ 0x0A, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -6901,  2376, -6509, /*angle*/ 0, 230, 0, /*behParam*/ 0x00140000, /*beh*/ bhvAirborneWarp),
-    WARP_NODE(/*id*/ 0x14, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x14, /*flags*/ WARP_NO_CHECKPOINT),
-    OBJECT(/*model*/ MODEL_NONE, /*pos*/  4997, -1250,  2258, /*angle*/ 0, 210, 0, /*behParam*/ 0x001E0000, /*beh*/ bhvSwimmingWarp),
-    WARP_NODE(/*id*/ 0x1E, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x1E, /*flags*/ WARP_NO_CHECKPOINT),
-    RETURN(),
-};
-
-static const LevelScript script_func_local_2[] = {
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -5812,  100, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterfallSoundLoop),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500,   873, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvBirdsSoundLoop),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/   -80, 1500,  5004, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBirdsSoundLoop),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  7131, 1500, -2989, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvBirdsSoundLoop),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvAmbientSounds),
-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMoatGrills),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvInvisibleObjectsUnderBridge),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4878, -787, -5690, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4996, -787, -5548, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5114, -787, -5406, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5212, -787, -5219, /*angle*/ 0,   0, 0, /*behParam*/ 0x00030000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5311, -787, -5033, /*angle*/ 0,   0, 0, /*behParam*/ 0x00040000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5419, -787, -4895, /*angle*/ 0,   0, 0, /*behParam*/ 0x00050000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5527, -787, -4757, /*angle*/ 0,   0, 0, /*behParam*/ 0x00060000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5686, -787, -4733, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5845, -787, -4710, /*angle*/ 0,   0, 0, /*behParam*/ 0x00080000, /*beh*/ bhvWaterMist2),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  5223, -975,  1667, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvManyBlueFishSpawner),
-    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -5069,  850,  3221, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
-    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -4711,  742,   433, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
-    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/  5774,  913, -1114, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
-    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -1328,  260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00280000, /*beh*/ bhvIntroScene),
-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_CANNON_GRILL, /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvHiddenAt120Stars),
-    OBJECT(/*model*/ MODEL_LAKITU,                      /*pos*/    11,  803, -3015, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvCameraLakitu),
-    RETURN(),
-};
-
-static const LevelScript script_func_local_3[] = {
-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
-    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
-    RETURN(),
-};
-
-static const LevelScript script_func_local_4[] = {
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4508,  406,  4400, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4408,  406,  4500, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4708,  406,  4100, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2621, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2321, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6543,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6143,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5773,  775, -5722, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5873,  775, -5622, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5473,  775, -5322, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1504,  326,  3196, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1204,  326,  3296, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
-    OBJECT(/*model*/ MODEL_YOSHI,     /*pos*/     0, 3174, -5625, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvYoshi),
-    RETURN(),
-};
-
 const LevelScript level_castle_grounds_entry[] = {
-    INIT_LEVEL(),
-    LOAD_YAY0(        /*seg*/ 0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd),
-    LOAD_YAY0(        /*seg*/ 0x0A, _water_skybox_yay0SegmentRomStart, _water_skybox_yay0SegmentRomEnd),
-    LOAD_YAY0_TEXTURE(/*seg*/ 0x09, _outside_yay0SegmentRomStart, _outside_yay0SegmentRomEnd),
-    LOAD_YAY0(        /*seg*/ 0x05, _group10_yay0SegmentRomStart, _group10_yay0SegmentRomEnd),
-    LOAD_RAW(         /*seg*/ 0x0C, _group10_geoSegmentRomStart,  _group10_geoSegmentRomEnd),
-    LOAD_YAY0(        /*seg*/ 0x06, _group15_yay0SegmentRomStart, _group15_yay0SegmentRomEnd),
-    LOAD_RAW(         /*seg*/ 0x0D, _group15_geoSegmentRomStart,  _group15_geoSegmentRomEnd),
-    LOAD_YAY0(        /*seg*/ 0x08, _common0_yay0SegmentRomStart, _common0_yay0SegmentRomEnd),
-    LOAD_RAW(         /*seg*/ 0x0F, _common0_geoSegmentRomStart,  _common0_geoSegmentRomEnd),
-    ALLOC_LEVEL_POOL(),
-    MARIO(/*model*/ MODEL_MARIO, /*behParam*/ 0x00000001, /*beh*/ bhvMario),
-    JUMP_LINK(script_func_global_1),
-    JUMP_LINK(script_func_global_11),
-    JUMP_LINK(script_func_global_16),
-    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           castle_grounds_geo_0006F4),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_BUBBLY_TREE,  bubbly_tree_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_WARP_PIPE,    warp_pipe_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CASTLE_DOOR,  castle_door_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_METAL_DOOR,   metal_door_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  castle_grounds_geo_00070C),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_FLAG,         castle_grounds_geo_000660),
-    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CANNON_GRILL, castle_grounds_geo_000724),
-
-    AREA(/*index*/ 1, castle_grounds_geo_00073C),
-        WARP_NODE(/*id*/ 0xF1, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
-        JUMP_LINK(script_func_local_1),
-        JUMP_LINK(script_func_local_2),
-        JUMP_LINK(script_func_local_3),
-        JUMP_LINK(script_func_local_4),
-        TERRAIN(/*terrainData*/ castle_grounds_seg7_collision_level),
-        MACRO_OBJECTS(/*objList*/ castle_grounds_seg7_macro_objs),
-        SET_BACKGROUND_MUSIC(/*settingsPreset*/ 0x0000, /*seq*/ SEQ_SOUND_PLAYER),
-        TERRAIN_TYPE(/*terrainType*/ TERRAIN_GRASS),
-    END_AREA(),
-
-    FREE_LEVEL_POOL(),
-    MARIO_POS(/*area*/ 1, /*yaw*/ 180, /*pos*/ -1328, 260, 4664),
-    CALL(/*arg*/ 0, /*func*/ lvl_init_or_update),
-    CALL_LOOP(/*arg*/ 1, /*func*/ lvl_init_or_update),
-    CLEAR_LEVEL(),
-    SLEEP_BEFORE_EXIT(/*frames*/ 1),
-    EXIT(),
-};
+	INIT_LEVEL(),
+	LOAD_MIO0(0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd), 
+	LOAD_MIO0(0x0A, _water_skybox_yay0SegmentRomStart, _water_skybox_yay0SegmentRomEnd), 
+	LOAD_YAY0_TEXTURE(0x09, _outside_yay0SegmentRomStart, _outside_yay0SegmentRomEnd), 
+	LOAD_MIO0(0x05, _group4_yay0SegmentRomStart, _group4_yay0SegmentRomEnd), 
+	LOAD_RAW(0x0C, _group4_geoSegmentRomStart, _group4_geoSegmentRomEnd), 
+	LOAD_MIO0(0x06, _group17_yay0SegmentRomStart, _group17_yay0SegmentRomEnd), 
+	LOAD_RAW(0x0D, _group17_geoSegmentRomStart, _group17_geoSegmentRomEnd), 
+	LOAD_MIO0(0x08, _common0_yay0SegmentRomStart, _common0_yay0SegmentRomEnd), 
+	LOAD_RAW(0x0F, _common0_geoSegmentRomStart, _common0_geoSegmentRomEnd), 
+	ALLOC_LEVEL_POOL(),
+	MARIO(MODEL_MARIO, 0x00000001, bhvMario), 
+	JUMP_LINK(script_func_global_1), 
+	JUMP_LINK(script_func_global_5), 
+	JUMP_LINK(script_func_global_18), 
+
+	AREA(1, castle_grounds_area_1),
+		OBJECT(MODEL_BREAKABLE_BOX_SMALL, -300, 100, 800, 0, 0, 0, 0x00000000, bhvBreakableBoxSmall),
+		MARIO_POS(0x01, 0, 0, 52, 0),
+		OBJECT(MODEL_RED_FLAME, 800, 198, 802, 0, 0, 0, 0x00000000, bhvFlame),
+		TERRAIN(castle_grounds_area_1_collision),
+		MACRO_OBJECTS(castle_grounds_area_1_macro_objs),
+		STOP_MUSIC(0),
+		TERRAIN_TYPE(TERRAIN_STONE),
+	END_AREA(),
+
+	FREE_LEVEL_POOL(),
+	MARIO_POS(0x01, 0, 0, 52, 0),
+	CALL(0, lvl_init_or_update),
+	CALL_LOOP(1, lvl_init_or_update),
+	CLEAR_LEVEL(),
+	SLEEP_BEFORE_EXIT(1),
+	EXIT(),
+};
\ No newline at end of file
diff --git a/levels/castle_grounds/script.c.orig b/levels/castle_grounds/script.c.orig
new file mode 100644
index 0000000..6e44620
--- /dev/null
+++ b/levels/castle_grounds/script.c.orig
@@ -0,0 +1,139 @@
+#include <ultra64.h>
+#include "sm64.h"
+#include "behavior_data.h"
+#include "model_ids.h"
+#include "seq_ids.h"
+#include "segment_symbols.h"
+#include "level_commands.h"
+
+#include "game/level_update.h"
+
+#include "levels/scripts.h"
+
+#include "actors/common1.h"
+
+#include "make_const_nonconst.h"
+#include "levels/castle_grounds/header.h"
+
+static const LevelScript script_func_local_1[] = {
+    WARP_NODE(/*id*/ 0x00, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x00, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x01, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x01, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x02, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x03, /*destNode*/ 0x02, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/     0,   900, -1710, /*angle*/ 0, 180, 0, /*behParam*/ 0x00030000, /*beh*/ bhvDeathWarp),
+    WARP_NODE(/*id*/ 0x03, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -1328,   260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00040000, /*beh*/ bhvSpinAirborneCircleWarp),
+    WARP_NODE(/*id*/ 0x04, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x04, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -815, -2025, /*angle*/ 0,   0, 0, /*behParam*/ 0x3C050000, /*beh*/ bhvWarp),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00060000, /*beh*/ bhvLaunchDeathWarp),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3799, -1199, -5816, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvSwimmingWarp),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00080000, /*beh*/ bhvLaunchStarCollectWarp),
+    WARP_NODE(/*id*/ 0x05, /*destLevel*/ LEVEL_VCUTM, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x06, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x06, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x07, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x07, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x08, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x08, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/  5408,  4500,  3637, /*angle*/ 0, 225, 0, /*behParam*/ 0x000A0000, /*beh*/ bhvAirborneWarp),
+    WARP_NODE(/*id*/ 0x0A, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -6901,  2376, -6509, /*angle*/ 0, 230, 0, /*behParam*/ 0x00140000, /*beh*/ bhvAirborneWarp),
+    WARP_NODE(/*id*/ 0x14, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x14, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/  4997, -1250,  2258, /*angle*/ 0, 210, 0, /*behParam*/ 0x001E0000, /*beh*/ bhvSwimmingWarp),
+    WARP_NODE(/*id*/ 0x1E, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x1E, /*flags*/ WARP_NO_CHECKPOINT),
+    RETURN(),
+};
+
+static const LevelScript script_func_local_2[] = {
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -5812,  100, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterfallSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500,   873, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvBirdsSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/   -80, 1500,  5004, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBirdsSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  7131, 1500, -2989, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvBirdsSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvAmbientSounds),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMoatGrills),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvInvisibleObjectsUnderBridge),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4878, -787, -5690, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4996, -787, -5548, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5114, -787, -5406, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5212, -787, -5219, /*angle*/ 0,   0, 0, /*behParam*/ 0x00030000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5311, -787, -5033, /*angle*/ 0,   0, 0, /*behParam*/ 0x00040000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5419, -787, -4895, /*angle*/ 0,   0, 0, /*behParam*/ 0x00050000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5527, -787, -4757, /*angle*/ 0,   0, 0, /*behParam*/ 0x00060000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5686, -787, -4733, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5845, -787, -4710, /*angle*/ 0,   0, 0, /*behParam*/ 0x00080000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  5223, -975,  1667, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvManyBlueFishSpawner),
+    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -5069,  850,  3221, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -4711,  742,   433, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/  5774,  913, -1114, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -1328,  260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00280000, /*beh*/ bhvIntroScene),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_CANNON_GRILL, /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvHiddenAt120Stars),
+    OBJECT(/*model*/ MODEL_LAKITU,                      /*pos*/    11,  803, -3015, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvCameraLakitu),
+    RETURN(),
+};
+
+static const LevelScript script_func_local_3[] = {
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    RETURN(),
+};
+
+static const LevelScript script_func_local_4[] = {
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4508,  406,  4400, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4408,  406,  4500, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4708,  406,  4100, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2621, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2321, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6543,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6143,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5773,  775, -5722, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5873,  775, -5622, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5473,  775, -5322, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1504,  326,  3196, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1204,  326,  3296, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_YOSHI,     /*pos*/     0, 3174, -5625, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvYoshi),
+    RETURN(),
+};
+
+const LevelScript level_castle_grounds_entry[] = {
+    INIT_LEVEL(),
+    LOAD_YAY0(        /*seg*/ 0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x0A, _water_skybox_yay0SegmentRomStart, _water_skybox_yay0SegmentRomEnd),
+    LOAD_YAY0_TEXTURE(/*seg*/ 0x09, _outside_yay0SegmentRomStart, _outside_yay0SegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x05, _group10_yay0SegmentRomStart, _group10_yay0SegmentRomEnd),
+    LOAD_RAW(         /*seg*/ 0x0C, _group10_geoSegmentRomStart,  _group10_geoSegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x06, _group15_yay0SegmentRomStart, _group15_yay0SegmentRomEnd),
+    LOAD_RAW(         /*seg*/ 0x0D, _group15_geoSegmentRomStart,  _group15_geoSegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x08, _common0_yay0SegmentRomStart, _common0_yay0SegmentRomEnd),
+    LOAD_RAW(         /*seg*/ 0x0F, _common0_geoSegmentRomStart,  _common0_geoSegmentRomEnd),
+    ALLOC_LEVEL_POOL(),
+    MARIO(/*model*/ MODEL_MARIO, /*behParam*/ 0x00000001, /*beh*/ bhvMario),
+    JUMP_LINK(script_func_global_1),
+    JUMP_LINK(script_func_global_11),
+    JUMP_LINK(script_func_global_16),
+    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           castle_grounds_geo_0006F4),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_BUBBLY_TREE,  bubbly_tree_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_WARP_PIPE,    warp_pipe_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CASTLE_DOOR,  castle_door_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_METAL_DOOR,   metal_door_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  castle_grounds_geo_00070C),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_FLAG,         castle_grounds_geo_000660),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CANNON_GRILL, castle_grounds_geo_000724),
+
+    AREA(/*index*/ 1, castle_grounds_geo_00073C),
+        WARP_NODE(/*id*/ 0xF1, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
+        JUMP_LINK(script_func_local_1),
+        JUMP_LINK(script_func_local_2),
+        JUMP_LINK(script_func_local_3),
+        JUMP_LINK(script_func_local_4),
+        TERRAIN(/*terrainData*/ castle_grounds_seg7_collision_level),
+        MACRO_OBJECTS(/*objList*/ castle_grounds_seg7_macro_objs),
+        SET_BACKGROUND_MUSIC(/*settingsPreset*/ 0x0000, /*seq*/ SEQ_SOUND_PLAYER),
+        TERRAIN_TYPE(/*terrainType*/ TERRAIN_GRASS),
+    END_AREA(),
+
+    FREE_LEVEL_POOL(),
+    MARIO_POS(/*area*/ 1, /*yaw*/ 180, /*pos*/ -1328, 260, 4664),
+    CALL(/*arg*/ 0, /*func*/ lvl_init_or_update),
+    CALL_LOOP(/*arg*/ 1, /*func*/ lvl_init_or_update),
+    CLEAR_LEVEL(),
+    SLEEP_BEFORE_EXIT(/*frames*/ 1),
+    EXIT(),
+};
diff --git a/levels/course_defines.h b/levels/course_defines.h
index 600cead..d47d97d 100644
--- a/levels/course_defines.h
+++ b/levels/course_defines.h
@@ -10,30 +10,30 @@
  *      3: Bowser keys and the grand star
  *      4: Default, used for 100 coin stars, 8 red coin stars in bowser levels, and secret stars
  */
-DEFINE_COURSE(COURSE_NONE, 0x44444440)            // (0)  Course Hub (Castle Grounds)
-DEFINE_COURSE(COURSE_BOB,  0x00022240)            // (1)  Bob Omb Battlefield
-DEFINE_COURSE(COURSE_WF,   0x00002040)            // (2)  Whomp's Fortress
-DEFINE_COURSE(COURSE_JRB,  0x22222240)            // (3)  Jolly Rodger's Bay
-DEFINE_COURSE(COURSE_CCM,  0x00220040)            // (4)  Cool Cool Mountain
-DEFINE_COURSE(COURSE_BBH,  0x22222240)            // (5)  Big Boo's Haunt
-DEFINE_COURSE(COURSE_HMC,  0x22222240)            // (6)  Hazy Maze Cave
-DEFINE_COURSE(COURSE_LLL,  0x21212140)            // (7)  Lethal Lava Land
-DEFINE_COURSE(COURSE_SSL,  0x20222240)            // (8)  Shifting Sand Land
-DEFINE_COURSE(COURSE_DDD,  0x22222240)            // (9)  Dire Dire Docks
-DEFINE_COURSE(COURSE_SL,   0x02020240)            // (10) Snowman's Land
-DEFINE_COURSE(COURSE_WDW,  0x22102240)            // (11) Wet Dry World
-DEFINE_COURSE(COURSE_TTM,  0x00000040)            // (12) Tall Tall Mountain
-DEFINE_COURSE(COURSE_THI,  0x11112140)            // (13) Tiny Huge Island
-DEFINE_COURSE(COURSE_TTC,  0x22222240)            // (14) Tick Tock Clock
-DEFINE_COURSE(COURSE_RR,   0x00000040)            // (15) Rainbow Ride
+DEFINE_COURSE(COURSE_NONE, 0x44444440) // (0)  Course Hub (Castle Grounds)
+DEFINE_COURSE(COURSE_BOB, 0x00022240) // (1)  Bob Omb Battlefield
+DEFINE_COURSE(COURSE_WF, 0x00002040) // (2)  Whomp's Fortress
+DEFINE_COURSE(COURSE_JRB, 0x44444440) // (3)  Jolly Rodger's Bay
+DEFINE_COURSE(COURSE_CCM, 0x00220040) // (4)  Cool Cool Mountain
+DEFINE_COURSE(COURSE_BBH, 0x22222240) // (5)  Big Boo's Haunt
+DEFINE_COURSE(COURSE_HMC, 0x22222240) // (6)  Hazy Maze Cave
+DEFINE_COURSE(COURSE_LLL, 0x21212140) // (7)  Lethal Lava Land
+DEFINE_COURSE(COURSE_SSL, 0x20222240) // (8)  Shifting Sand Land
+DEFINE_COURSE(COURSE_DDD, 0x22222240) // (9)  Dire Dire Docks
+DEFINE_COURSE(COURSE_SL, 0x02020240) // (10) Snowman's Land
+DEFINE_COURSE(COURSE_WDW, 0x22102240) // (11) Wet Dry World
+DEFINE_COURSE(COURSE_TTM, 0x00000040) // (12) Tall Tall Mountain
+DEFINE_COURSE(COURSE_THI, 0x11112140) // (13) Tiny Huge Island
+DEFINE_COURSE(COURSE_TTC, 0x22222240) // (14) Tick Tock Clock
+DEFINE_COURSE(COURSE_RR, 0x00000040) // (15) Rainbow Ride
 DEFINE_COURSES_END()
-DEFINE_BONUS_COURSE(COURSE_BITDW,    0x34444440) // (16) Bowser in the Dark World
-DEFINE_BONUS_COURSE(COURSE_BITFS,    0x34444440) // (17) Bowser in the Fire Sea
-DEFINE_BONUS_COURSE(COURSE_BITS,     0x34444440) // (18) Bowser in the Sky
-DEFINE_BONUS_COURSE(COURSE_PSS,      0x24444440) // (19) Princess's Secret Slide
-DEFINE_BONUS_COURSE(COURSE_COTMC,    0x44444440) // (20) Cavern of the Metal Cap
-DEFINE_BONUS_COURSE(COURSE_TOTWC,    0x04444440) // (21) Tower of the Wing Cap
-DEFINE_BONUS_COURSE(COURSE_VCUTM,    0x24444440) // (22) Vanish Cap Under the Moat
-DEFINE_BONUS_COURSE(COURSE_WMOTR,    0x04444440) // (23) Winged Mario over the Rainbow
-DEFINE_BONUS_COURSE(COURSE_SA,       0x24444440) // (24) Secret Aquarium
+DEFINE_BONUS_COURSE(COURSE_BITDW, 0x34444440) // (16) Bowser in the Dark World
+DEFINE_BONUS_COURSE(COURSE_BITFS, 0x34444440) // (17) Bowser in the Fire Sea
+DEFINE_BONUS_COURSE(COURSE_BITS, 0x34444440) // (18) Bowser in the Sky
+DEFINE_BONUS_COURSE(COURSE_PSS, 0x24444440) // (19) Princess's Secret Slide
+DEFINE_BONUS_COURSE(COURSE_COTMC, 0x44444440) // (20) Cavern of the Metal Cap
+DEFINE_BONUS_COURSE(COURSE_TOTWC, 0x04444440) // (21) Tower of the Wing Cap
+DEFINE_BONUS_COURSE(COURSE_VCUTM, 0x24444440) // (22) Vanish Cap Under the Moat
+DEFINE_BONUS_COURSE(COURSE_WMOTR, 0x04444440) // (23) Winged Mario over the Rainbow
+DEFINE_BONUS_COURSE(COURSE_SA, 0x24444440) // (24) Secret Aquarium
 DEFINE_BONUS_COURSE(COURSE_CAKE_END, 0x44444440) // (25) The End (Cake Scene)
diff --git a/levels/intro/script.c b/levels/intro/script.c
index 59978a0..9e9bb2b 100644
--- a/levels/intro/script.c
+++ b/levels/intro/script.c
@@ -19,6 +19,8 @@
 #include "levels/intro/header.h"
 
 const LevelScript level_intro_splash_screen[] = {
+    // Skip straight to main menu
+    JUMP(script_intro_L1),
     INIT_LEVEL(),
     FIXED_LOAD(/*loadAddr*/ _goddardSegmentStart, /*romStart*/ _goddardSegmentRomStart, /*romEnd*/ _goddardSegmentRomEnd),
     LOAD_RAW(/*seg*/ 0x13, _behaviorSegmentRomStart, _behaviorSegmentRomEnd),
diff --git a/levels/level_defines.h b/levels/level_defines.h
index c14f252..f45a077 100644
--- a/levels/level_defines.h
+++ b/levels/level_defines.h
@@ -17,41 +17,41 @@
 
 // NOTE: Be sure to edit sZoomOutAreaMasks in camera.c, as there isnt a good way to macro those right now.
 // TODO: Figure something out for sZoomOutAreaMasks?
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_1,        COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_2,        COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_3,        COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
-DEFINE_LEVEL("TERESA OBAKE",   LEVEL_BBH,              COURSE_BBH,      bbh,              spooky,   28000,    0x28, 0x28, 0x28, sDynBbh,   sCamBBH)
-DEFINE_LEVEL("YYAMA1 % YSLD1", LEVEL_CCM,              COURSE_CCM,      ccm,              snow,     17000,    0x10, 0x38, 0x38, _,         sCamCCM)
-DEFINE_LEVEL("SELECT ROOM",    LEVEL_CASTLE,           COURSE_NONE,     castle_inside,    inside,   20000,    0x20, 0x20, 0x30, _,         sCamCastle)
-DEFINE_LEVEL("HORROR DUNGEON", LEVEL_HMC,              COURSE_HMC,      hmc,              cave,     16000,    0x28, 0x28, 0x28, sDynHmc,   sCamHMC)
-DEFINE_LEVEL("SABAKU % PYRMD", LEVEL_SSL,              COURSE_SSL,      ssl,              generic,  15000,    0x08, 0x30, 0x30, _,         sCamSSL)
-DEFINE_LEVEL("BATTLE FIELD",   LEVEL_BOB,              COURSE_BOB,      bob,              generic,  15000,    0x08, 0x08, 0x08, _,         _)
-DEFINE_LEVEL("YUKIYAMA2",      LEVEL_SL,               COURSE_SL,       sl,               snow,     14000,    0x10, 0x28, 0x28, _,         sCamSL)
-DEFINE_LEVEL("POOL KAI",       LEVEL_WDW,              COURSE_WDW,      wdw,              grass,    17000,    0x10, 0x18, 0x18, sDynWdw,   _)
-DEFINE_LEVEL("WTDG % TINBOTU", LEVEL_JRB,              COURSE_JRB,      jrb,              water,    20000,    0x10, 0x18, 0x18, sDynJrb,   _)
-DEFINE_LEVEL("BIG WORLD",      LEVEL_THI,              COURSE_THI,      thi,              grass,    20000,    0x0c, 0x0c, 0x20, _,         sCamTHI)
-DEFINE_LEVEL("CLOCK TOWER",    LEVEL_TTC,              COURSE_TTC,      ttc,              machine,  18000,    0x18, 0x18, 0x18, _,         _)
-DEFINE_LEVEL("RAINBOW CRUISE", LEVEL_RR,               COURSE_RR,       rr,               sky,      20000,    0x20, 0x20, 0x20, _,         sCamRR)
-DEFINE_LEVEL("MAIN MAP",       LEVEL_CASTLE_GROUNDS,   COURSE_NONE,     castle_grounds,   outside,  25000,    0x08, 0x08, 0x08, _,         _)
-DEFINE_LEVEL("EXT1 YOKO SCRL", LEVEL_BITDW,            COURSE_BITDW,    bitdw,            sky,      16000,    0x28, 0x28, 0x28, _,         _)
-DEFINE_LEVEL("EXT7 HORI MINI", LEVEL_VCUTM,            COURSE_VCUTM,    vcutm,            outside,  30000,    0x28, 0x28, 0x28, _,         _)
-DEFINE_LEVEL("EXT2 TIKA LAVA", LEVEL_BITFS,            COURSE_BITFS,    bitfs,            sky,      16000,    0x28, 0x28, 0x28, _,         _)
-DEFINE_LEVEL("EXT9 SUISOU",    LEVEL_SA,               COURSE_SA,       sa,               inside,   20000,    0x10, 0x10, 0x10, _,         _)
-DEFINE_LEVEL("EXT3 HEAVEN",    LEVEL_BITS,             COURSE_BITS,     bits,             sky,      16000,    0x28, 0x28, 0x28, _,         _)
-DEFINE_LEVEL("FIREB1 % INVLC", LEVEL_LLL,              COURSE_LLL,      lll,              fire,     22000,    0x08, 0x30, 0x30, _,         _)
-DEFINE_LEVEL("WATER LAND",     LEVEL_DDD,              COURSE_DDD,      ddd,              water,    17000,    0x10, 0x20, 0x20, sDynDdd,   _)
-DEFINE_LEVEL("MOUNTAIN",       LEVEL_WF,               COURSE_WF,       wf,               grass,    13000,    0x08, 0x08, 0x08, _,         _)
-DEFINE_LEVEL("ENDING",         LEVEL_ENDING,           COURSE_CAKE_END, ending,           generic,  20000,    0x00, 0x00, 0x00, _,         _)
-DEFINE_LEVEL("URANIWA",        LEVEL_CASTLE_COURTYARD, COURSE_NONE,     castle_courtyard, outside,  20000,    0x08, 0x08, 0x08, _,         _)
-DEFINE_LEVEL("EXT4 MINI SLID", LEVEL_PSS,              COURSE_PSS,      pss,              mountain, 20000,    0x28, 0x28, 0x28, _,         _)
-DEFINE_LEVEL("IN THE FALL",    LEVEL_COTMC,            COURSE_COTMC,    cotmc,            cave,     18000,    0x28, 0x28, 0x28, _,         sCamCotMC)
-DEFINE_LEVEL("EXT6 MARIO FLY", LEVEL_TOTWC,            COURSE_TOTWC,    totwc,            sky,      20000,    0x20, 0x20, 0x20, _,         _)
-DEFINE_LEVEL("KUPPA1",         LEVEL_BOWSER_1,         COURSE_BITDW,    bowser_1,         generic,  VAL_DIFF, 0x40, 0x40, 0x40, _,         _)
-DEFINE_LEVEL("EXT8 BLUE SKY",  LEVEL_WMOTR,            COURSE_WMOTR,    wmotr,            generic,  20000,    0x28, 0x28, 0x28, _,         _)
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_32,       COURSE_NONE,                                 20000,    0x70, 0x00, 0x00, _,         _)
-DEFINE_LEVEL("KUPPA2",         LEVEL_BOWSER_2,         COURSE_BITFS,    bowser_2,         fire,     VAL_DIFF, 0x40, 0x40, 0x40, _,         _)
-DEFINE_LEVEL("KUPPA3",         LEVEL_BOWSER_3,         COURSE_BITS,     bowser_3,         generic,  VAL_DIFF, 0x40, 0x40, 0x40, _,         _)
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_35,       COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
-DEFINE_LEVEL("DONKEY % SLID2", LEVEL_TTM,              COURSE_TTM,      ttm,              mountain, 15000,    0x08, 0x08, 0x08, _,         _)
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_37,       COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, _,         _)
-STUB_LEVEL(  "",               LEVEL_UNKNOWN_38,       COURSE_NONE,                                 20000,    0x00, 0x00, 0x00, sDynUnk38, _)
+STUB_LEVEL("", LEVEL_UNKNOWN_1, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
+STUB_LEVEL("", LEVEL_UNKNOWN_2, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
+STUB_LEVEL("", LEVEL_UNKNOWN_3, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
+DEFINE_LEVEL("TERESA OBAKE", LEVEL_BBH, COURSE_BBH, bbh, spooky, 28000, 0x28, 0x28, 0x28, sDynBbh, sCamBBH) 
+DEFINE_LEVEL("YYAMA1 % YSLD1", LEVEL_CCM, COURSE_CCM, ccm, snow, 17000, 0x10, 0x38, 0x38, _, sCamCCM) 
+DEFINE_LEVEL("SELECT ROOM", LEVEL_CASTLE, COURSE_NONE, castle_inside, inside, 20000, 0x20, 0x20, 0x30, _, sCamCastle) 
+DEFINE_LEVEL("HORROR DUNGEON", LEVEL_HMC, COURSE_HMC, hmc, cave, 16000, 0x28, 0x28, 0x28, sDynHmc, sCamHMC) 
+DEFINE_LEVEL("SABAKU % PYRMD", LEVEL_SSL, COURSE_SSL, ssl, generic, 15000, 0x08, 0x30, 0x30, _, sCamSSL) 
+DEFINE_LEVEL("BATTLE FIELD", LEVEL_BOB, COURSE_BOB, bob, generic, 15000, 0x08, 0x08, 0x08, _, _) 
+DEFINE_LEVEL("YUKIYAMA2", LEVEL_SL, COURSE_SL, sl, snow, 14000, 0x10, 0x28, 0x28, _, sCamSL) 
+DEFINE_LEVEL("POOL KAI", LEVEL_WDW, COURSE_WDW, wdw, grass, 17000, 0x10, 0x18, 0x18, sDynWdw, _) 
+DEFINE_LEVEL("WTDG % TINBOTU", LEVEL_JRB, COURSE_JRB, jrb, water, 15000, 0xff, 0x00, 0x00, sDynJrb, sCamJRB) 
+DEFINE_LEVEL("BIG WORLD", LEVEL_THI, COURSE_THI, thi, grass, 20000, 0x0c, 0x0c, 0x20, _, sCamTHI) 
+DEFINE_LEVEL("CLOCK TOWER", LEVEL_TTC, COURSE_TTC, ttc, machine, 18000, 0x18, 0x18, 0x18, _, _) 
+DEFINE_LEVEL("RAINBOW CRUISE", LEVEL_RR, COURSE_RR, rr, sky, 20000, 0x20, 0x20, 0x20, _, sCamRR) 
+DEFINE_LEVEL("MAIN MAP", LEVEL_CASTLE_GROUNDS, COURSE_NONE, castle_grounds, outside, 20000, 0x00, 0x00, 0x00, _, sCamCastleGrounds) 
+DEFINE_LEVEL("EXT1 YOKO SCRL", LEVEL_BITDW, COURSE_BITDW, bitdw, sky, 16000, 0x28, 0x28, 0x28, _, _) 
+DEFINE_LEVEL("EXT7 HORI MINI", LEVEL_VCUTM, COURSE_VCUTM, vcutm, outside, 30000, 0x28, 0x28, 0x28, _, _) 
+DEFINE_LEVEL("EXT2 TIKA LAVA", LEVEL_BITFS, COURSE_BITFS, bitfs, sky, 16000, 0x28, 0x28, 0x28, _, _) 
+DEFINE_LEVEL("EXT9 SUISOU", LEVEL_SA, COURSE_SA, sa, inside, 20000, 0x10, 0x10, 0x10, _, _) 
+DEFINE_LEVEL("EXT3 HEAVEN", LEVEL_BITS, COURSE_BITS, bits, sky, 16000, 0x28, 0x28, 0x28, _, _) 
+DEFINE_LEVEL("FIREB1 % INVLC", LEVEL_LLL, COURSE_LLL, lll, fire, 22000, 0x08, 0x30, 0x30, _, _) 
+DEFINE_LEVEL("WATER LAND", LEVEL_DDD, COURSE_DDD, ddd, water, 17000, 0x10, 0x20, 0x20, sDynDdd, _) 
+DEFINE_LEVEL("MOUNTAIN", LEVEL_WF, COURSE_WF, wf, grass, 13000, 0x08, 0x08, 0x08, _, _) 
+DEFINE_LEVEL("ENDING", LEVEL_ENDING, COURSE_CAKE_END, ending, generic, 20000, 0x00, 0x00, 0x00, _, _) 
+DEFINE_LEVEL("URANIWA", LEVEL_CASTLE_COURTYARD, COURSE_NONE, castle_courtyard, outside, 20000, 0x08, 0x08, 0x08, _, _) 
+DEFINE_LEVEL("EXT4 MINI SLID", LEVEL_PSS, COURSE_PSS, pss, mountain, 20000, 0x28, 0x28, 0x28, _, _) 
+DEFINE_LEVEL("IN THE FALL", LEVEL_COTMC, COURSE_COTMC, cotmc, cave, 18000, 0x28, 0x28, 0x28, _, sCamCotMC) 
+DEFINE_LEVEL("EXT6 MARIO FLY", LEVEL_TOTWC, COURSE_TOTWC, totwc, sky, 20000, 0x20, 0x20, 0x20, _, _) 
+DEFINE_LEVEL("KUPPA1", LEVEL_BOWSER_1, COURSE_BITDW, bowser_1, generic, VAL_DIFF, 0x40, 0x40, 0x40, _, _) 
+DEFINE_LEVEL("EXT8 BLUE SKY", LEVEL_WMOTR, COURSE_WMOTR, wmotr, generic, 20000, 0x28, 0x28, 0x28, _, _) 
+STUB_LEVEL("", LEVEL_UNKNOWN_32, COURSE_NONE, 20000, 0x70, 0x00, 0x00, _, _) 
+DEFINE_LEVEL("KUPPA2", LEVEL_BOWSER_2, COURSE_BITFS, bowser_2, fire, VAL_DIFF, 0x40, 0x40, 0x40, _, _) 
+DEFINE_LEVEL("KUPPA3", LEVEL_BOWSER_3, COURSE_BITS, bowser_3, generic, VAL_DIFF, 0x40, 0x40, 0x40, _, _) 
+STUB_LEVEL("", LEVEL_UNKNOWN_35, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
+DEFINE_LEVEL("DONKEY % SLID2", LEVEL_TTM, COURSE_TTM, ttm, mountain, 15000, 0x08, 0x08, 0x08, _, _) 
+STUB_LEVEL("", LEVEL_UNKNOWN_37, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
+STUB_LEVEL("", LEVEL_UNKNOWN_38, COURSE_NONE, 20000, 0x00, 0x00, 0x00, sDynUnk38, _) 
diff --git a/levels/menu/script.c b/levels/menu/script.c
index 00d8d95..1492e1f 100644
--- a/levels/menu/script.c
+++ b/levels/menu/script.c
@@ -53,7 +53,7 @@ const LevelScript level_main_menu_entry_1[] = {
     SLEEP(/*frames*/ 16),
     CLEAR_LEVEL(),
     SLEEP_BEFORE_EXIT(/*frames*/ 1),
-    SET_REG(/*value*/ LEVEL_CASTLE_GROUNDS),
+    SET_REG(LEVEL_CASTLE_GROUNDS),
     EXIT_AND_EXECUTE(/*seg*/ 0x15, _scriptsSegmentRomStart, _scriptsSegmentRomEnd, level_main_scripts_entry),
 };
 
diff --git a/levels/scripts.c b/levels/scripts.c
index 66197cb..cec9a2b 100644
--- a/levels/scripts.c
+++ b/levels/scripts.c
@@ -112,6 +112,7 @@ const LevelScript level_main_scripts_entry[] = {
     LOAD_MODEL_FROM_GEO(MODEL_EXPLOSION,               explosion_geo),
     LOAD_MODEL_FROM_GEO(MODEL_DIRT_ANIMATION,          dirt_animation_geo),
     LOAD_MODEL_FROM_GEO(MODEL_CARTOON_STAR,            cartoon_star_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_LANTERN,                 lantern_geo),
     FREE_LEVEL_POOL(),
     CALL(/*arg*/ 0, /*func*/ lvl_init_from_save_file),
     LOOP_BEGIN(),
diff --git a/lib/PR/f3dex2/F3DZEX_data.bin b/lib/PR/f3dex2/F3DZEX_data.bin
new file mode 100644
index 0000000..e69de29
diff --git a/src/engine/behavior_script.c b/src/engine/behavior_script.c
index cc39e5a..90b4fe7 100644
--- a/src/engine/behavior_script.c
+++ b/src/engine/behavior_script.c
@@ -902,6 +902,11 @@ static BhvCommandProc BehaviorCmdTable[] = {
     bhv_cmd_spawn_water_droplet,
 };
 
+#include <point_lights.h>
+#include <stdio.h>
+
+extern struct MarioState *gMarioState;
+
 // Execute the behavior script of the current object, process the object flags, and other miscellaneous code for updating objects.
 void cur_obj_update(void) {
     UNUSED u32 unused;
@@ -1000,4 +1005,25 @@ void cur_obj_update(void) {
             }
         }
     }
+
+    // Advanced lighting engine
+    // If this object emits light, is active, is visible, and there are still scene point light slots available,
+    // create a point light at this object
+    if ((objFlags & OBJ_FLAG_EMIT_LIGHT) && gPointLightCount < MAX_POINT_LIGHTS)
+    {
+        if (gCurrentObject->header.gfx.node.flags & GRAPH_RENDER_ACTIVE)
+        {
+            emit_light(gCurrentObject->header.gfx.pos,
+                       gCurrentObject->oLightColor,
+                       gCurrentObject->oLightQuadraticFalloff,
+                       gCurrentObject->oLightLinearFalloff);
+        }
+        else if (gMarioState->heldObj == gCurrentObject)
+        {
+            emit_light(gMarioState->marioBodyState->heldObjLastPosition,
+                       gCurrentObject->oLightColor,
+                       gCurrentObject->oLightQuadraticFalloff,
+                       gCurrentObject->oLightLinearFalloff);
+        }
+    }
 }
diff --git a/src/engine/geo_layout.c b/src/engine/geo_layout.c
index d071d1a..ba1bfde 100644
--- a/src/engine/geo_layout.c
+++ b/src/engine/geo_layout.c
@@ -42,6 +42,7 @@ GeoLayoutCommandProc GeoLayoutJumpTable[] = {
     geo_layout_cmd_nop2,
     geo_layout_cmd_nop3,
     geo_layout_cmd_node_culling_radius,
+    geo_layout_cmd_scene_light, // Advanced lighting engine
 };
 
 struct GraphNode gObjParentGraphNode;
@@ -767,6 +768,41 @@ void geo_layout_cmd_node_culling_radius(void) {
     gGeoLayoutCommand += 0x04 << CMD_SIZE_SHIFT;
 }
 
+/* Advanced lighting engine
+  0x21: Add a scene light to this area.
+   cmd+0x01: u8 lightType (0 is regular, 1 is point)
+   cmd+0x02: u8 red
+   cmd+0x03: u8 green
+   cmd+0x04: u8 blue
+   cmd+0x05: u8 x direction (directional light) or quadratic falloff (point light)
+   cmd+0x06: u8 y direction (directional light) or linear falloff (point light)
+   cmd+0x07: u8 z direction (directional light) or unused (point light)
+*/
+void geo_layout_cmd_scene_light(void) {
+    struct GraphNodeSceneLight *graphNode;
+    u8 lightType, a, b, c;
+    u8 color[3];
+
+    lightType = cur_geo_cmd_u8(0x01);
+    color[0] = cur_geo_cmd_u8(0x02);
+    color[1] = cur_geo_cmd_u8(0x03);
+    color[2] = cur_geo_cmd_u8(0x04);
+    a = cur_geo_cmd_u8(0x05);
+    b = cur_geo_cmd_u8(0x06);
+    c = cur_geo_cmd_u8(0x07);
+
+    graphNode = init_graph_node_scene_light(gGraphNodePool, graphNode, lightType, color, a, b, c);
+    register_scene_graph_node(&graphNode->node);
+
+    gGeoLayoutCommand += (
+        /* command Id */ sizeof(u8) +
+        /* light type */ sizeof(u8) +
+        /* color */ sizeof(u8) * 3 +
+        /* quadratic falloff */ sizeof(u8) +
+        /* linear falloff */ sizeof(u8) +
+        /* unused */ sizeof(u8)) << CMD_SIZE_SHIFT;
+}
+
 struct GraphNode *process_geo_layout(struct AllocOnlyPool *pool, void *segptr) {
     // set by register_scene_graph_node when gCurGraphNodeIndex is 0
     // and gCurRootGraphNode is NULL
diff --git a/src/engine/geo_layout.h b/src/engine/geo_layout.h
index 6211e14..e5815dc 100644
--- a/src/engine/geo_layout.h
+++ b/src/engine/geo_layout.h
@@ -81,6 +81,7 @@ void geo_layout_cmd_nop(void);
 void geo_layout_cmd_copy_view(void);
 void geo_layout_cmd_node_held_obj(void);
 void geo_layout_cmd_node_culling_radius(void);
+void geo_layout_cmd_scene_light(void); // Advanced lighting engine
 
 struct GraphNode *process_geo_layout(struct AllocOnlyPool *a0, void *segptr);
 
diff --git a/src/engine/graph_node.c b/src/engine/graph_node.c
index 8edf7f8..1940571 100644
--- a/src/engine/graph_node.c
+++ b/src/engine/graph_node.c
@@ -519,6 +519,49 @@ struct GraphNodeHeldObject *init_graph_node_held_object(struct AllocOnlyPool *po
     return graphNode;
 }
 
+#include <point_lights.h>
+
+/**
+ * Advanced lighting engine
+ * Allocates and returns a newly created scene light node
+ */
+struct GraphNodeSceneLight *init_graph_node_scene_light(struct AllocOnlyPool *pool,
+                                                        struct GraphNodeSceneLight *graphNode,
+                                                        u8 lightType, u8 color[],
+                                                        u8 a, u8 b, u8 c)
+{
+    if (pool != NULL) {
+        graphNode = alloc_only_pool_alloc(pool, sizeof(struct GraphNodeSceneLight));
+    }
+
+    if (graphNode != NULL) {
+        init_scene_graph_node_links(&graphNode->node, GRAPH_NODE_TYPE_SCENE_LIGHT);
+        graphNode->lightType = lightType;
+        graphNode->color[0] = color[0];
+        graphNode->color[1] = color[1];
+        graphNode->color[2] = color[2];
+        graphNode->a = a;
+        graphNode->b = b;
+        graphNode->c = c;
+        if (lightType == LIGHT_TYPE_DIRECTIONAL)
+        {
+            gLightDirTransformEnabled = TRUE;
+        }
+        else if (lightType == LIGHT_TYPE_POINT || lightType == LIGHT_TYPE_POINT_OCCLUDE)
+        {
+            // Set this node's light pointer (used during rendering to set the position of the light)
+            graphNode->light = &gPointLights[gAreaPointLightCount];
+            if (lightType == LIGHT_TYPE_POINT_OCCLUDE)
+            {
+                gPointLights[gAreaPointLightCount].flags |= LIGHT_FLAG_OCCLUDE;
+            }
+            gAreaPointLightCount++;
+        }
+    }
+
+    return graphNode;
+}
+
 /**
  * Adds 'childNode' to the end of the list children from 'parent'
  */
diff --git a/src/engine/graph_node.h b/src/engine/graph_node.h
index e20064c..117a2b4 100644
--- a/src/engine/graph_node.h
+++ b/src/engine/graph_node.h
@@ -43,6 +43,8 @@
 #define GRAPH_NODE_TYPE_BACKGROUND           (0x02C | GRAPH_NODE_TYPE_FUNCTIONAL)
 #define GRAPH_NODE_TYPE_HELD_OBJ             (0x02E | GRAPH_NODE_TYPE_FUNCTIONAL)
 #define GRAPH_NODE_TYPE_CULLING_RADIUS        0x02F
+// Advanced lighting engine
+#define GRAPH_NODE_TYPE_SCENE_LIGHT           0x030
 
 // The number of master lists. A master list determines the order and render
 // mode with which display lists are drawn.
@@ -346,6 +348,20 @@ struct GraphNodeCullingRadius
     u8 pad1E[2];
 };
 
+/** Advanced Lighting Engine
+ *  A node that sets up a scene light in the area's GeoLayout.
+ */
+struct GraphNodeSceneLight
+{
+    /*0x00*/ struct GraphNode node;
+    /*0x14*/ u8 lightType; // Type of light (0 is regular, 1 is point)
+    /*0x15*/ u8 color[3]; // Array of R,G,B colors of light
+    /*0x18*/ u8 a; // Dir x (directional light) or Inverse square falloff (point light)
+    /*0x19*/ u8 b; // Dir y (directional light) or Inverse linear falloff (point light)
+    /*0x1A*/ u8 c; // Dir z (directional light) or unused (point light)
+    /*0x1B*/ struct SceneLight* light; // Pointer to this light's scene light struct
+};
+
 extern struct GraphNodeMasterList *gCurGraphNodeMasterList;
 extern struct GraphNodePerspective *gCurGraphNodeCamFrustum;
 extern struct GraphNodeCamera *gCurGraphNodeCamera;
@@ -405,6 +421,12 @@ struct GraphNodeBackground *init_graph_node_background(struct AllocOnlyPool *poo
 struct GraphNodeHeldObject *init_graph_node_held_object(struct AllocOnlyPool *pool, struct GraphNodeHeldObject *sp1c,
                                                         struct Object *objNode, Vec3s translation,
                                                         GraphNodeFunc nodeFunc, s32 playerIndex);
+// Advanced lighting engine
+struct GraphNodeSceneLight *init_graph_node_scene_light(struct AllocOnlyPool *pool, struct GraphNodeSceneLight *graphNode,
+                                                        u8 lightType, u8 color[],
+                                                        u8 quadraticFalloff, u8 linearFalloff,
+                                                        u8 unused);
+
 struct GraphNode *geo_add_child(struct GraphNode *parent, struct GraphNode *childNode);
 struct GraphNode *geo_remove_child(struct GraphNode *graphNode);
 struct GraphNode *geo_make_first_child(struct GraphNode *newFirstChild);
diff --git a/src/engine/level_script.c b/src/engine/level_script.c
index 5971781..87a0fab 100644
--- a/src/engine/level_script.c
+++ b/src/engine/level_script.c
@@ -344,10 +344,15 @@ static void level_cmd_free_level_pool(void) {
     sCurrentCmd = CMD_NEXT;
 }
 
+#include <point_lights.h>
+
 static void level_cmd_begin_area(void) {
     u8 areaIndex = CMD_GET(u8, 2);
     void *geoLayoutAddr = CMD_GET(void *, 4);
 
+    gAreaPointLightCount = 0;
+    gLightDirTransformEnabled = 0;
+
     if (areaIndex < 8) {
         struct GraphNodeRoot *screenArea =
             (struct GraphNodeRoot *) process_geo_layout(sLevelPool, geoLayoutAddr);
diff --git a/src/engine/level_script.c.orig b/src/engine/level_script.c.orig
new file mode 100644
index 0000000..5971781
--- /dev/null
+++ b/src/engine/level_script.c.orig
@@ -0,0 +1,837 @@
+#include <ultra64.h>
+#ifdef NO_SEGMENTED_MEMORY
+#include <string.h>
+#endif
+
+#include "sm64.h"
+#include "audio/external.h"
+#include "buffers/framebuffers.h"
+#include "buffers/zbuffer.h"
+#include "game/area.h"
+#include "game/game_init.h"
+#include "game/mario.h"
+#include "game/memory.h"
+#include "game/object_helpers.h"
+#include "game/object_list_processor.h"
+#include "game/profiler.h"
+#include "game/save_file.h"
+#include "game/sound_init.h"
+#include "goddard/renderer.h"
+#include "geo_layout.h"
+#include "graph_node.h"
+#include "level_script.h"
+#include "level_misc_macros.h"
+#include "math_util.h"
+#include "surface_collision.h"
+#include "surface_load.h"
+
+#define CMD_GET(type, offset) (*(type *) (CMD_PROCESS_OFFSET(offset) + (u8 *) sCurrentCmd))
+
+// These are equal
+#define CMD_NEXT ((struct LevelCommand *) ((u8 *) sCurrentCmd + (sCurrentCmd->size << CMD_SIZE_SHIFT)))
+#define NEXT_CMD ((struct LevelCommand *) ((sCurrentCmd->size << CMD_SIZE_SHIFT) + (u8 *) sCurrentCmd))
+
+struct LevelCommand {
+    /*00*/ u8 type;
+    /*01*/ u8 size;
+    /*02*/ // variable sized argument data
+};
+
+enum ScriptStatus { SCRIPT_RUNNING = 1, SCRIPT_PAUSED = 0, SCRIPT_PAUSED2 = -1 };
+
+static uintptr_t sStack[32];
+
+static struct AllocOnlyPool *sLevelPool = NULL;
+
+static u16 sDelayFrames = 0;
+static u16 sDelayFrames2 = 0;
+
+static s16 sCurrAreaIndex = -1;
+
+static uintptr_t *sStackTop = sStack;
+static uintptr_t *sStackBase = NULL;
+
+static s16 sScriptStatus;
+static s32 sRegister;
+static struct LevelCommand *sCurrentCmd;
+
+static s32 eval_script_op(s8 op, s32 arg) {
+    s32 result = 0;
+
+    switch (op) {
+        case 0:
+            result = sRegister & arg;
+            break;
+        case 1:
+            result = !(sRegister & arg);
+            break;
+        case 2:
+            result = sRegister == arg;
+            break;
+        case 3:
+            result = sRegister != arg;
+            break;
+        case 4:
+            result = sRegister < arg;
+            break;
+        case 5:
+            result = sRegister <= arg;
+            break;
+        case 6:
+            result = sRegister > arg;
+            break;
+        case 7:
+            result = sRegister >= arg;
+            break;
+    }
+
+    return result;
+}
+
+static void level_cmd_load_and_execute(void) {
+    main_pool_push_state();
+    load_segment(CMD_GET(s16, 2), CMD_GET(void *, 4), CMD_GET(void *, 8), MEMORY_POOL_LEFT);
+
+    *sStackTop++ = (uintptr_t) NEXT_CMD;
+    *sStackTop++ = (uintptr_t) sStackBase;
+    sStackBase = sStackTop;
+
+    sCurrentCmd = segmented_to_virtual(CMD_GET(void *, 12));
+}
+
+static void level_cmd_exit_and_execute(void) {
+    void *targetAddr = CMD_GET(void *, 12);
+
+    main_pool_pop_state();
+    main_pool_push_state();
+
+    load_segment(CMD_GET(s16, 2), CMD_GET(void *, 4), CMD_GET(void *, 8),
+            MEMORY_POOL_LEFT);
+
+    sStackTop = sStackBase;
+    sCurrentCmd = segmented_to_virtual(targetAddr);
+}
+
+static void level_cmd_exit(void) {
+    main_pool_pop_state();
+
+    sStackTop = sStackBase;
+    sStackBase = (uintptr_t *) *(--sStackTop);
+    sCurrentCmd = (struct LevelCommand *) *(--sStackTop);
+}
+
+static void level_cmd_sleep(void) {
+    sScriptStatus = SCRIPT_PAUSED;
+
+    if (sDelayFrames == 0) {
+        sDelayFrames = CMD_GET(s16, 2);
+    } else if (--sDelayFrames == 0) {
+        sCurrentCmd = CMD_NEXT;
+        sScriptStatus = SCRIPT_RUNNING;
+    }
+}
+
+static void level_cmd_sleep2(void) {
+    sScriptStatus = SCRIPT_PAUSED2;
+
+    if (sDelayFrames2 == 0) {
+        sDelayFrames2 = CMD_GET(s16, 2);
+    } else if (--sDelayFrames2 == 0) {
+        sCurrentCmd = CMD_NEXT;
+        sScriptStatus = SCRIPT_RUNNING;
+    }
+}
+
+static void level_cmd_jump(void) {
+    sCurrentCmd = segmented_to_virtual(CMD_GET(void *, 4));
+}
+
+static void level_cmd_jump_and_link(void) {
+    *sStackTop++ = (uintptr_t) NEXT_CMD;
+    sCurrentCmd = segmented_to_virtual(CMD_GET(void *, 4));
+}
+
+static void level_cmd_return(void) {
+    sCurrentCmd = (struct LevelCommand *) *(--sStackTop);
+}
+
+static void level_cmd_jump_and_link_push_arg(void) {
+    *sStackTop++ = (uintptr_t) NEXT_CMD;
+    *sStackTop++ = CMD_GET(s16, 2);
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_jump_repeat(void) {
+    s32 val = *(sStackTop - 1);
+
+    if (val == 0) {
+        sCurrentCmd = (struct LevelCommand *) *(sStackTop - 2);
+    } else if (--val != 0) {
+        *(sStackTop - 1) = val;
+        sCurrentCmd = (struct LevelCommand *) *(sStackTop - 2);
+    } else {
+        sCurrentCmd = CMD_NEXT;
+        sStackTop -= 2;
+    }
+}
+
+static void level_cmd_loop_begin(void) {
+    *sStackTop++ = (uintptr_t) NEXT_CMD;
+    *sStackTop++ = 0;
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_loop_until(void) {
+    if (eval_script_op(CMD_GET(u8, 2), CMD_GET(s32, 4)) != 0) {
+        sCurrentCmd = CMD_NEXT;
+        sStackTop -= 2;
+    } else {
+        sCurrentCmd = (struct LevelCommand *) *(sStackTop - 2);
+    }
+}
+
+static void level_cmd_jump_if(void) {
+    if (eval_script_op(CMD_GET(u8, 2), CMD_GET(s32, 4)) != 0) {
+        sCurrentCmd = segmented_to_virtual(CMD_GET(void *, 8));
+    } else {
+        sCurrentCmd = CMD_NEXT;
+    }
+}
+
+static void level_cmd_jump_and_link_if(void) {
+    if (eval_script_op(CMD_GET(u8, 2), CMD_GET(s32, 4)) != 0) {
+        *sStackTop++ = (uintptr_t) NEXT_CMD;
+        sCurrentCmd = segmented_to_virtual(CMD_GET(void *, 8));
+    } else {
+        sCurrentCmd = CMD_NEXT;
+    }
+}
+
+static void level_cmd_skip_if(void) {
+    if (eval_script_op(CMD_GET(u8, 2), CMD_GET(s32, 4)) == 0) {
+        do {
+            sCurrentCmd = CMD_NEXT;
+        } while (sCurrentCmd->type == 0x0F || sCurrentCmd->type == 0x10);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_skip(void) {
+    do {
+        sCurrentCmd = CMD_NEXT;
+    } while (sCurrentCmd->type == 0x10);
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_skippable_nop(void) {
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_call(void) {
+    typedef s32 (*Func)(s16, s32);
+    Func func = CMD_GET(Func, 4);
+    sRegister = func(CMD_GET(s16, 2), sRegister);
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_call_loop(void) {
+    typedef s32 (*Func)(s16, s32);
+    Func func = CMD_GET(Func, 4);
+    sRegister = func(CMD_GET(s16, 2), sRegister);
+
+    if (sRegister == 0) {
+        sScriptStatus = SCRIPT_PAUSED;
+    } else {
+        sScriptStatus = SCRIPT_RUNNING;
+        sCurrentCmd = CMD_NEXT;
+    }
+}
+
+static void level_cmd_set_register(void) {
+    sRegister = CMD_GET(s16, 2);
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_push_pool_state(void) {
+    main_pool_push_state();
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_pop_pool_state(void) {
+    main_pool_pop_state();
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_to_fixed_address(void) {
+    load_to_fixed_pool_addr(CMD_GET(void *, 4), CMD_GET(void *, 8), CMD_GET(void *, 12));
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_raw(void) {
+    load_segment(CMD_GET(s16, 2), CMD_GET(void *, 4), CMD_GET(void *, 8),
+            MEMORY_POOL_LEFT);
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_yay0(void) {
+    load_segment_decompress(CMD_GET(s16, 2), CMD_GET(void *, 4), CMD_GET(void *, 8));
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_mario_head(void) {
+#ifdef GODDARD
+    // TODO: Fix these hardcoded sizes
+    void *addr = main_pool_alloc(DOUBLE_SIZE_ON_64_BIT(0xE1000), MEMORY_POOL_LEFT);
+    if (addr != NULL) {
+        gdm_init(addr, DOUBLE_SIZE_ON_64_BIT(0xE1000));
+        gd_add_to_heap(gZBuffer, sizeof(gZBuffer)); // 0x25800
+        gd_add_to_heap(gFrameBuffer0, 3 * sizeof(gFrameBuffer0)); // 0x70800
+        gdm_setup();
+        gdm_maketestdl(CMD_GET(s16, 2));
+    } else {
+    }
+#endif
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_yay0_texture(void) {
+    load_segment_decompress_heap(CMD_GET(s16, 2), CMD_GET(void *, 4), CMD_GET(void *, 8));
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_init_level(void) {
+    init_graph_node_start(NULL, (struct GraphNodeStart *) &gObjParentGraphNode);
+    clear_objects();
+    clear_areas();
+    main_pool_push_state();
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_clear_level(void) {
+    clear_objects();
+    clear_area_graph_nodes();
+    clear_areas();
+    main_pool_pop_state();
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_alloc_level_pool(void) {
+    if (sLevelPool == NULL) {
+        sLevelPool = alloc_only_pool_init(main_pool_available() - sizeof(struct AllocOnlyPool),
+                                          MEMORY_POOL_LEFT);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_free_level_pool(void) {
+    s32 i;
+
+    alloc_only_pool_resize(sLevelPool, sLevelPool->usedSpace);
+    sLevelPool = NULL;
+
+    for (i = 0; i < 8; i++) {
+        if (gAreaData[i].terrainData != NULL) {
+            alloc_surface_pools();
+            break;
+        }
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_begin_area(void) {
+    u8 areaIndex = CMD_GET(u8, 2);
+    void *geoLayoutAddr = CMD_GET(void *, 4);
+
+    if (areaIndex < 8) {
+        struct GraphNodeRoot *screenArea =
+            (struct GraphNodeRoot *) process_geo_layout(sLevelPool, geoLayoutAddr);
+        struct GraphNodeCamera *node = (struct GraphNodeCamera *) screenArea->views[0];
+
+        sCurrAreaIndex = areaIndex;
+        screenArea->areaIndex = areaIndex;
+        gAreas[areaIndex].unk04 = screenArea;
+
+        if (node != NULL) {
+            gAreas[areaIndex].camera = (struct Camera *) node->config.camera;
+        } else {
+            gAreas[areaIndex].camera = NULL;
+        }
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_end_area(void) {
+    sCurrAreaIndex = -1;
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_model_from_dl(void) {
+    s16 val1 = CMD_GET(s16, 2) & 0x0FFF;
+    s16 val2 = ((u16)CMD_GET(s16, 2)) >> 12;
+    void *val3 = CMD_GET(void *, 4);
+
+    if (val1 < 256) {
+        gLoadedGraphNodes[val1] =
+            (struct GraphNode *) init_graph_node_display_list(sLevelPool, 0, val2, val3);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_model_from_geo(void) {
+    s16 arg0 = CMD_GET(s16, 2);
+    void *arg1 = CMD_GET(void *, 4);
+
+    if (arg0 < 256) {
+        gLoadedGraphNodes[arg0] = process_geo_layout(sLevelPool, arg1);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_23(void) {
+    union {
+        s32 i;
+        f32 f;
+    } arg2;
+
+    s16 model = CMD_GET(s16, 2) & 0x0FFF;
+    s16 arg0H = ((u16)CMD_GET(s16, 2)) >> 12;
+    void *arg1 = CMD_GET(void *, 4);
+    // load an f32, but using an integer load instruction for some reason (hence the union)
+    arg2.i = CMD_GET(s32, 8);
+
+    if (model < 256) {
+        // GraphNodeScale has a GraphNode at the top. This
+        // is being stored to the array, so cast the pointer.
+        gLoadedGraphNodes[model] =
+            (struct GraphNode *) init_graph_node_scale(sLevelPool, 0, arg0H, arg1, arg2.f);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_init_mario(void) {
+    vec3s_set(gMarioSpawnInfo->startPos, 0, 0, 0);
+    vec3s_set(gMarioSpawnInfo->startAngle, 0, 0, 0);
+
+    gMarioSpawnInfo->activeAreaIndex = -1;
+    gMarioSpawnInfo->areaIndex = 0;
+    gMarioSpawnInfo->behaviorArg = CMD_GET(u32, 4);
+    gMarioSpawnInfo->behaviorScript = CMD_GET(void *, 8);
+    gMarioSpawnInfo->unk18 = gLoadedGraphNodes[CMD_GET(u8, 3)];
+    gMarioSpawnInfo->next = NULL;
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_place_object(void) {
+    u8 val7 = 1 << (gCurrActNum - 1);
+    u16 model;
+    struct SpawnInfo *spawnInfo;
+
+    if (sCurrAreaIndex != -1 && ((CMD_GET(u8, 2) & val7) || CMD_GET(u8, 2) == 0x1F)) {
+        model = CMD_GET(u8, 3);
+        spawnInfo = alloc_only_pool_alloc(sLevelPool, sizeof(struct SpawnInfo));
+
+        spawnInfo->startPos[0] = CMD_GET(s16, 4);
+        spawnInfo->startPos[1] = CMD_GET(s16, 6);
+        spawnInfo->startPos[2] = CMD_GET(s16, 8);
+
+        spawnInfo->startAngle[0] = CMD_GET(s16, 10) * 0x8000 / 180;
+        spawnInfo->startAngle[1] = CMD_GET(s16, 12) * 0x8000 / 180;
+        spawnInfo->startAngle[2] = CMD_GET(s16, 14) * 0x8000 / 180;
+
+        spawnInfo->areaIndex = sCurrAreaIndex;
+        spawnInfo->activeAreaIndex = sCurrAreaIndex;
+
+        spawnInfo->behaviorArg = CMD_GET(u32, 16);
+        spawnInfo->behaviorScript = CMD_GET(void *, 20);
+        spawnInfo->unk18 = gLoadedGraphNodes[model];
+        spawnInfo->next = gAreas[sCurrAreaIndex].objectSpawnInfos;
+
+        gAreas[sCurrAreaIndex].objectSpawnInfos = spawnInfo;
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_create_warp_node(void) {
+    if (sCurrAreaIndex != -1) {
+        struct ObjectWarpNode *warpNode =
+            alloc_only_pool_alloc(sLevelPool, sizeof(struct ObjectWarpNode));
+
+        warpNode->node.id = CMD_GET(u8, 2);
+        warpNode->node.destLevel = CMD_GET(u8, 3) + CMD_GET(u8, 6);
+        warpNode->node.destArea = CMD_GET(u8, 4);
+        warpNode->node.destNode = CMD_GET(u8, 5);
+
+        warpNode->object = NULL;
+
+        warpNode->next = gAreas[sCurrAreaIndex].warpNodes;
+        gAreas[sCurrAreaIndex].warpNodes = warpNode;
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_create_instant_warp(void) {
+    s32 i;
+    struct InstantWarp *warp;
+
+    if (sCurrAreaIndex != -1) {
+        if (gAreas[sCurrAreaIndex].instantWarps == NULL) {
+            gAreas[sCurrAreaIndex].instantWarps =
+                alloc_only_pool_alloc(sLevelPool, 4 * sizeof(struct InstantWarp));
+
+            for (i = INSTANT_WARP_INDEX_START; i < INSTANT_WARP_INDEX_STOP; i++) {
+                gAreas[sCurrAreaIndex].instantWarps[i].id = 0;
+            }
+        }
+
+        warp = gAreas[sCurrAreaIndex].instantWarps + CMD_GET(u8, 2);
+
+        warp[0].id = 1;
+        warp[0].area = CMD_GET(u8, 3);
+
+        warp[0].displacement[0] = CMD_GET(s16, 4);
+        warp[0].displacement[1] = CMD_GET(s16, 6);
+        warp[0].displacement[2] = CMD_GET(s16, 8);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_terrain_type(void) {
+    if (sCurrAreaIndex != -1) {
+        gAreas[sCurrAreaIndex].terrainType |= CMD_GET(s16, 2);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_create_painting_warp_node(void) {
+    s32 i;
+    struct WarpNode *node;
+
+    if (sCurrAreaIndex != -1) {
+        if (gAreas[sCurrAreaIndex].paintingWarpNodes == NULL) {
+            gAreas[sCurrAreaIndex].paintingWarpNodes =
+                alloc_only_pool_alloc(sLevelPool, 45 * sizeof(struct WarpNode));
+
+            for (i = 0; i < 45; i++) {
+                gAreas[sCurrAreaIndex].paintingWarpNodes[i].id = 0;
+            }
+        }
+
+        node = &gAreas[sCurrAreaIndex].paintingWarpNodes[CMD_GET(u8, 2)];
+
+        node->id = 1;
+        node->destLevel = CMD_GET(u8, 3) + CMD_GET(u8, 6);
+        node->destArea = CMD_GET(u8, 4);
+        node->destNode = CMD_GET(u8, 5);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_3A(void) {
+    struct UnusedArea28 *val4;
+
+    if (sCurrAreaIndex != -1) {
+        if ((val4 = gAreas[sCurrAreaIndex].unused28) == NULL) {
+            val4 = gAreas[sCurrAreaIndex].unused28 =
+                alloc_only_pool_alloc(sLevelPool, sizeof(struct UnusedArea28));
+        }
+
+        val4->unk00 = CMD_GET(s16, 2);
+        val4->unk02 = CMD_GET(s16, 4);
+        val4->unk04 = CMD_GET(s16, 6);
+        val4->unk06 = CMD_GET(s16, 8);
+        val4->unk08 = CMD_GET(s16, 10);
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_create_whirlpool(void) {
+    struct Whirlpool *whirlpool;
+    s32 index = CMD_GET(u8, 2);
+    s32 beatBowser2 =
+        (save_file_get_flags() & (SAVE_FLAG_HAVE_KEY_2 | SAVE_FLAG_UNLOCKED_UPSTAIRS_DOOR)) != 0;
+
+    if (CMD_GET(u8, 3) == 0 || (CMD_GET(u8, 3) == 1 && !beatBowser2)
+        || (CMD_GET(u8, 3) == 2 && beatBowser2) || (CMD_GET(u8, 3) == 3 && gCurrActNum >= 2)) {
+        if (sCurrAreaIndex != -1 && index < 2) {
+            if ((whirlpool = gAreas[sCurrAreaIndex].whirlpools[index]) == NULL) {
+                whirlpool = alloc_only_pool_alloc(sLevelPool, sizeof(struct Whirlpool));
+                gAreas[sCurrAreaIndex].whirlpools[index] = whirlpool;
+            }
+
+            vec3s_set(whirlpool->pos, CMD_GET(s16, 4), CMD_GET(s16, 6), CMD_GET(s16, 8));
+            whirlpool->strength = CMD_GET(s16, 10);
+        }
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_blackout(void) {
+    osViBlack(CMD_GET(u8, 2));
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_gamma(void) {
+    osViSetSpecialFeatures(CMD_GET(u8, 2) == 0 ? OS_VI_GAMMA_OFF : OS_VI_GAMMA_ON);
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_terrain_data(void) {
+    if (sCurrAreaIndex != -1) {
+#ifndef NO_SEGMENTED_MEMORY
+        gAreas[sCurrAreaIndex].terrainData = segmented_to_virtual(CMD_GET(void *, 4));
+#else
+        Collision *data;
+        u32 size;
+
+        // The game modifies the terrain data and must be reset upon level reload.
+        data = segmented_to_virtual(CMD_GET(void *, 4));
+        size = get_area_terrain_size(data) * sizeof(Collision);
+        gAreas[sCurrAreaIndex].terrainData = alloc_only_pool_alloc(sLevelPool, size);
+        memcpy(gAreas[sCurrAreaIndex].terrainData, data, size);
+#endif
+    }
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_rooms(void) {
+    if (sCurrAreaIndex != -1) {
+        gAreas[sCurrAreaIndex].surfaceRooms = segmented_to_virtual(CMD_GET(void *, 4));
+    }
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_macro_objects(void) {
+    if (sCurrAreaIndex != -1) {
+#ifndef NO_SEGMENTED_MEMORY
+        gAreas[sCurrAreaIndex].macroObjects = segmented_to_virtual(CMD_GET(void *, 4));
+#else
+        // The game modifies the macro object data (for example marking coins as taken),
+        // so it must be reset when the level reloads.
+        MacroObject *data = segmented_to_virtual(CMD_GET(void *, 4));
+        s32 len = 0;
+        while (data[len++] != MACRO_OBJECT_END()) {
+            len += 4;
+        }
+        gAreas[sCurrAreaIndex].macroObjects = alloc_only_pool_alloc(sLevelPool, len * sizeof(MacroObject));
+        memcpy(gAreas[sCurrAreaIndex].macroObjects, data, len * sizeof(MacroObject));
+#endif
+    }
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_load_area(void) {
+    s16 areaIndex = CMD_GET(u8, 2);
+    UNUSED void *unused = (u8 *) sCurrentCmd + 4;
+
+    stop_sounds_in_continuous_banks();
+    load_area(areaIndex);
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_unload_area(void) {
+    unload_area();
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_mario_start_pos(void) {
+    gMarioSpawnInfo->areaIndex = CMD_GET(u8, 2);
+
+#if IS_64_BIT
+    vec3s_set(gMarioSpawnInfo->startPos, CMD_GET(s16, 6), CMD_GET(s16, 8), CMD_GET(s16, 10));
+#else
+    vec3s_copy(gMarioSpawnInfo->startPos, CMD_GET(Vec3s, 6));
+#endif
+    vec3s_set(gMarioSpawnInfo->startAngle, 0, CMD_GET(s16, 4) * 0x8000 / 180, 0);
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_2C(void) {
+    unload_mario_area();
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_2D(void) {
+    area_update_objects();
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_transition(void) {
+    if (gCurrentArea != NULL) {
+        play_transition(CMD_GET(u8, 2), CMD_GET(u8, 3), CMD_GET(u8, 4), CMD_GET(u8, 5), CMD_GET(u8, 6));
+    }
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_nop(void) {
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_show_dialog(void) {
+    if (sCurrAreaIndex != -1) {
+        if (CMD_GET(u8, 2) < 2) {
+            gAreas[sCurrAreaIndex].dialog[CMD_GET(u8, 2)] = CMD_GET(u8, 3);
+        }
+    }
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_music(void) {
+    if (sCurrAreaIndex != -1) {
+        gAreas[sCurrAreaIndex].musicParam = CMD_GET(s16, 2);
+        gAreas[sCurrAreaIndex].musicParam2 = CMD_GET(s16, 4);
+    }
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_set_menu_music(void) {
+    set_background_music(0, CMD_GET(s16, 2), 0);
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_38(void) {
+    fadeout_music(CMD_GET(s16, 2));
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void level_cmd_get_or_set_var(void) {
+    if (CMD_GET(u8, 2) == 0) {
+        switch (CMD_GET(u8, 3)) {
+            case 0:
+                gCurrSaveFileNum = sRegister;
+                break;
+            case 1:
+                gCurrCourseNum = sRegister;
+                break;
+            case 2:
+                gCurrActNum = sRegister;
+                break;
+            case 3:
+                gCurrLevelNum = sRegister;
+                break;
+            case 4:
+                gCurrAreaIndex = sRegister;
+                break;
+        }
+    } else {
+        switch (CMD_GET(u8, 3)) {
+            case 0:
+                sRegister = gCurrSaveFileNum;
+                break;
+            case 1:
+                sRegister = gCurrCourseNum;
+                break;
+            case 2:
+                sRegister = gCurrActNum;
+                break;
+            case 3:
+                sRegister = gCurrLevelNum;
+                break;
+            case 4:
+                sRegister = gCurrAreaIndex;
+                break;
+        }
+    }
+
+    sCurrentCmd = CMD_NEXT;
+}
+
+static void (*LevelScriptJumpTable[])(void) = {
+    /*00*/ level_cmd_load_and_execute,
+    /*01*/ level_cmd_exit_and_execute,
+    /*02*/ level_cmd_exit,
+    /*03*/ level_cmd_sleep,
+    /*04*/ level_cmd_sleep2,
+    /*05*/ level_cmd_jump,
+    /*06*/ level_cmd_jump_and_link,
+    /*07*/ level_cmd_return,
+    /*08*/ level_cmd_jump_and_link_push_arg,
+    /*09*/ level_cmd_jump_repeat,
+    /*0A*/ level_cmd_loop_begin,
+    /*0B*/ level_cmd_loop_until,
+    /*0C*/ level_cmd_jump_if,
+    /*0D*/ level_cmd_jump_and_link_if,
+    /*0E*/ level_cmd_skip_if,
+    /*0F*/ level_cmd_skip,
+    /*10*/ level_cmd_skippable_nop,
+    /*11*/ level_cmd_call,
+    /*12*/ level_cmd_call_loop,
+    /*13*/ level_cmd_set_register,
+    /*14*/ level_cmd_push_pool_state,
+    /*15*/ level_cmd_pop_pool_state,
+    /*16*/ level_cmd_load_to_fixed_address,
+    /*17*/ level_cmd_load_raw,
+    /*18*/ level_cmd_load_yay0,
+    /*19*/ level_cmd_load_mario_head,
+    /*1A*/ level_cmd_load_yay0_texture,
+    /*1B*/ level_cmd_init_level,
+    /*1C*/ level_cmd_clear_level,
+    /*1D*/ level_cmd_alloc_level_pool,
+    /*1E*/ level_cmd_free_level_pool,
+    /*1F*/ level_cmd_begin_area,
+    /*20*/ level_cmd_end_area,
+    /*21*/ level_cmd_load_model_from_dl,
+    /*22*/ level_cmd_load_model_from_geo,
+    /*23*/ level_cmd_23,
+    /*24*/ level_cmd_place_object,
+    /*25*/ level_cmd_init_mario,
+    /*26*/ level_cmd_create_warp_node,
+    /*27*/ level_cmd_create_painting_warp_node,
+    /*28*/ level_cmd_create_instant_warp,
+    /*29*/ level_cmd_load_area,
+    /*2A*/ level_cmd_unload_area,
+    /*2B*/ level_cmd_set_mario_start_pos,
+    /*2C*/ level_cmd_2C,
+    /*2D*/ level_cmd_2D,
+    /*2E*/ level_cmd_set_terrain_data,
+    /*2F*/ level_cmd_set_rooms,
+    /*30*/ level_cmd_show_dialog,
+    /*31*/ level_cmd_set_terrain_type,
+    /*32*/ level_cmd_nop,
+    /*33*/ level_cmd_set_transition,
+    /*34*/ level_cmd_set_blackout,
+    /*35*/ level_cmd_set_gamma,
+    /*36*/ level_cmd_set_music,
+    /*37*/ level_cmd_set_menu_music,
+    /*38*/ level_cmd_38,
+    /*39*/ level_cmd_set_macro_objects,
+    /*3A*/ level_cmd_3A,
+    /*3B*/ level_cmd_create_whirlpool,
+    /*3C*/ level_cmd_get_or_set_var,
+};
+
+struct LevelCommand *level_script_execute(struct LevelCommand *cmd) {
+    sScriptStatus = SCRIPT_RUNNING;
+    sCurrentCmd = cmd;
+
+    while (sScriptStatus == SCRIPT_RUNNING) {
+        LevelScriptJumpTable[sCurrentCmd->type]();
+    }
+
+    profiler_log_thread5_time(LEVEL_SCRIPT_EXECUTE);
+    init_render_image();
+    render_game();
+    end_master_display_list();
+    alloc_display_list(0);
+
+    return sCurrentCmd;
+}
diff --git a/src/engine/surface_collision.c b/src/engine/surface_collision.c
index 9a01f8b..fcd926d 100644
--- a/src/engine/surface_collision.c
+++ b/src/engine/surface_collision.c
@@ -7,6 +7,7 @@
 #include "game/object_list_processor.h"
 #include "surface_collision.h"
 #include "surface_load.h"
+#include "math_util.h"
 
 /**************************************************
  *                      WALLS                     *
@@ -775,3 +776,108 @@ s32 unused_resolve_floor_or_ceil_collisions(s32 checkCeil, f32 *px, f32 *py, f32
 
     return 0;
 }
+
+#define EPSILON 0.0001f
+#define VEC3_DOT(a,b) ((a)[0] * (b)[0] + (a)[1] * (b)[1] + (a)[2] * (b)[2])
+#define VEC3_COPY(out,a) \
+    {(out)[0] = (a)[0];           (out)[1] = (a)[1];           (out)[2] = (a)[2];}
+#define VEC3_SCALE(out,a,scale) \
+    {(out)[0] = (a)[0] * (scale); (out)[1] = (a)[1] * (scale); (out)[2] = (a)[2] * (scale);}
+#define VEC3_ADD(out,a,b)  \
+    {(out)[0] = (a)[0] + (b)[0];  (out)[1] = (a)[1] + (b)[1];  (out)[2] = (a)[2] + (b)[2];}
+#define VEC3_DIFF(out,a,b) \
+    {(out)[0] = (a)[0] - (b)[0];  (out)[1] = (a)[1] - (b)[1];  (out)[2] = (a)[2] - (b)[2];}
+#define ABSI(x) ((x) > 0 ? (x) : -(x))
+#define NORMAL_SCALE 1024
+
+f32 ray_surf_intersect(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersectionOut, struct Surface* surf)
+{
+    f32 denom;
+    f32 distOnRay;
+    s16 u[3], v[3]; // Edge vectors
+    s16 w[3]; // Intersection point - vertex1
+    f32 uu, uv, vv, wu, wv; // Dot products
+    f32 s, t; // Barycentric coordinates
+    // Intersect the ray with the plane that the surface lies in
+    // a = -(originOffset + normal dot rayStart) / (normal dot rayDir)
+
+    denom = VEC3_DOT(&surf->normal.x, rayDir);
+    // Prevent division by zero and throw out collision with backfaces (negative denominator)
+    if (denom != denom && denom > -EPSILON)
+    {
+        return -1;
+    }
+    distOnRay = -((surf->originOffset) + VEC3_DOT(&surf->normal.x, rayStart)) / denom;
+    if (distOnRay > rayDist)
+    {
+        return -2;
+    }
+    if (distOnRay < 0)
+    {
+        return -3;
+    }
+
+    // Calculate the intersection point from the calculated distance
+    VEC3_SCALE(intersectionOut, rayDir, distOnRay);
+    VEC3_ADD(intersectionOut, rayStart, intersectionOut);
+
+    // Calculate the barycentric coordinates of the triangle vertices and intersection point
+    VEC3_DIFF(u, surf->vertex2, surf->vertex1); // These 2 could be precalculated :(
+    VEC3_DIFF(v, surf->vertex3, surf->vertex1);
+
+    VEC3_DIFF(w, intersectionOut, surf->vertex1);
+
+    // Calculate the various dot products
+    uu = VEC3_DOT(u, u); // These 3 could also be precalculated :(
+    uv = VEC3_DOT(u, v);
+    vv = VEC3_DOT(v, v);
+    
+    wu = VEC3_DOT(w, u);
+    wv = VEC3_DOT(w, v);
+
+    // Calculate and check the barycentric coordinates
+    denom = (uv * uv - uu * vv); // Doesn't need to be checked for 0 (assuming non-degenerate triangles)
+    s = (uv * wv - vv * wu) / denom;
+    if (s < 0 || s > 1)
+    {
+        return -4;
+    }
+    t = (uv * wu - uu * wv) / denom;
+    if (t < 0 || (s + t) > 1)
+    {
+        return -5;
+    }
+    return distOnRay;
+}
+
+f32 raycast(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersection, struct Surface** surfHit)
+{
+    Vec3f dirNorm;
+    f32 intDist = -1.0f;
+    s32 cellX, cellZ;
+    struct SurfaceNode *node;
+    vec3f_copy(dirNorm, rayDir);
+    vec3f_normalize(dirNorm);
+    for (cellX = 0; cellX < 16; cellX++)
+    {
+        for (cellZ = 0; cellZ < 16; cellZ++)
+        {
+            node = gStaticSurfacePartition[cellZ][cellX][SPATIAL_PARTITION_WALLS].next;
+            while (node)
+            {
+                Vec3f curHit;
+                f32 curDist;
+                curDist = ray_surf_intersect(rayStart, dirNorm, rayDist, curHit, node->surface);
+                if (curDist >= 0 && (intDist < 0 || curDist < intDist))
+                {
+                    intDist = curDist;
+                    vec3f_copy(intersection, curHit);
+                    *surfHit = node->surface;
+                }
+                node = node->next;
+            }
+        }
+    }
+    return intDist;
+}
+
diff --git a/src/engine/surface_collision.h b/src/engine/surface_collision.h
index ad5e640..249caee 100644
--- a/src/engine/surface_collision.h
+++ b/src/engine/surface_collision.h
@@ -46,4 +46,7 @@ f32 find_water_level(f32 x, f32 z);
 f32 find_poison_gas_level(f32 x, f32 z);
 void debug_surface_list_info(f32 xPos, f32 zPos);
 
+f32 ray_surf_intersect(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersectionOut, struct Surface* surf);
+f32 raycast(Vec3f rayStart, Vec3f rayDir, f32 rayDist, Vec3f intersection, struct Surface** surfHit);
+
 #endif // SURFACE_COLLISION_H
diff --git a/src/game/behaviors/breakable_box_small.inc.c b/src/game/behaviors/breakable_box_small.inc.c
index bb9a4ed..9ab1aa7 100644
--- a/src/game/behaviors/breakable_box_small.inc.c
+++ b/src/game/behaviors/breakable_box_small.inc.c
@@ -20,6 +20,9 @@ void bhv_breakable_box_small_init(void) {
     obj_set_hitbox(o, &sBreakableBoxSmallHitbox);
     o->oAnimState = 1;
     o->activeFlags |= ACTIVE_FLAG_UNK9;
+    o->oLightColor = 0xBC954E00;
+    o->oLightQuadraticFalloff = 15;
+    o->oLightLinearFalloff = 255;
 }
 
 void small_breakable_box_spawn_dust(void) {
@@ -42,8 +45,8 @@ void small_breakable_box_act_move(void) {
     }
 
     if (sp1E & 2) {
-        spawn_mist_particles();
-        spawn_triangle_break_particles(20, 138, 0.7f, 3);
+        // spawn_mist_particles();
+        spawn_triangle_break_particles(7, 138, 0.7f, 3);
         obj_spawn_yellow_coins(o, 3);
         create_sound_spawner(SOUND_GENERAL_BREAK_BOX);
         o->activeFlags = ACTIVE_FLAG_DEACTIVATED;
diff --git a/src/game/camera.c b/src/game/camera.c
index 2ae110c..f1c198a 100644
--- a/src/game/camera.c
+++ b/src/game/camera.c
@@ -3346,19 +3346,19 @@ void init_camera(struct Camera *c) {
             break;
 
         //! Hardcoded position checks determine which cutscene to play when Mario enters castle grounds.
-        case LEVEL_CASTLE_GROUNDS:
-            if (is_within_100_units_of_mario(-1328.f, 260.f, 4664.f) != 1) {
-                marioOffset[0] = -400.f;
-                marioOffset[2] = -800.f;
-            }
-            if (is_within_100_units_of_mario(-6901.f, 2376.f, -6509.f) == 1) {
-                start_cutscene(c, CUTSCENE_EXIT_WATERFALL);
-            }
-            if (is_within_100_units_of_mario(5408.f, 4500.f, 3637.f) == 1) {
-                start_cutscene(c, CUTSCENE_EXIT_FALL_WMOTR);
-            }
-            gLakituState.mode = CAMERA_MODE_FREE_ROAM;
-            break;
+        // case LEVEL_CASTLE_GROUNDS:
+        //     if (is_within_100_units_of_mario(-1328.f, 260.f, 4664.f) != 1) {
+        //         marioOffset[0] = -400.f;
+        //         marioOffset[2] = -800.f;
+        //     }
+        //     if (is_within_100_units_of_mario(-6901.f, 2376.f, -6509.f) == 1) {
+        //         start_cutscene(c, CUTSCENE_EXIT_WATERFALL);
+        //     }
+        //     if (is_within_100_units_of_mario(5408.f, 4500.f, 3637.f) == 1) {
+        //         start_cutscene(c, CUTSCENE_EXIT_FALL_WMOTR);
+        //     }
+        //     gLakituState.mode = CAMERA_MODE_FREE_ROAM;
+        //     break;
         case LEVEL_SA:
             marioOffset[2] = 200.f;
             break;
@@ -6364,6 +6364,12 @@ struct CameraTrigger sCamBBH[] = {
  *
  * Each table is terminated with NULL_TRIGGER
  */
+struct CameraTrigger sCamCastleGrounds[] = {
+	NULL_TRIGGER
+};
+struct CameraTrigger sCamJRB[] = {
+	NULL_TRIGGER
+};
 struct CameraTrigger *sCameraTriggers[LEVEL_COUNT + 1] = {
     NULL,
     #include "levels/level_defines.h"
@@ -6503,6 +6509,8 @@ s16 camera_course_processing(struct Camera *c) {
     UNUSED struct CameraTrigger unused;
     u8 oldMode = c->mode;
 
+    return oldMode;
+
     if (c->mode == CAMERA_MODE_C_UP) {
         c->mode = sModeInfo.lastMode;
     }
@@ -10798,26 +10806,26 @@ u8 sDanceCutsceneIndexTable[][4] = {
  * and if the result is non-zero, the camera will zoom out.
  */
 u8 sZoomOutAreaMasks[] = {
-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // BBH            | CCM
-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // CASTLE_INSIDE  | HMC
-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // SSL            | BOB
-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // SL             | WDW
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,1,0,0), // JRB            | THI
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // TTC            | RR
-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // CASTLE_GROUNDS | BITDW
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // VCUTM          | BITFS
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // SA             | BITS
-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // LLL            | DDD
-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // WF             | ENDING
-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // COURTYARD      | PSS
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // COTMC          | TOTWC
-    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // BOWSER_1       | WMOTR
-    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // Unused         | BOWSER_2
-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // BOWSER_3       | Unused
-    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // TTM            | Unused
-    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // BBH            | CCM
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // CASTLE_INSIDE  | HMC
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // SSL            | BOB
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // SL             | WDW
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 1, 0, 0), // JRB            | THI
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // TTC            | RR
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // CASTLE_GROUNDS | BITDW
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // VCUTM          | BITFS
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // SA             | BITS
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // LLL            | DDD
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // WF             | ENDING
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // COURTYARD      | PSS
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // COTMC          | TOTWC
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // BOWSER_1       | WMOTR
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // Unused         | BOWSER_2
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // BOWSER_3       | Unused
+	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // TTM            | Unused
+	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
 };
 
 STATIC_ASSERT(ARRAY_COUNT(sZoomOutAreaMasks) - 1 == LEVEL_MAX / 2, "Make sure you edit sZoomOutAreaMasks when adding / removing courses.");
diff --git a/src/game/game_init.c b/src/game/game_init.c
index 35ec669..30c78cd 100644
--- a/src/game/game_init.c
+++ b/src/game/game_init.c
@@ -31,6 +31,8 @@
 #endif
 #include <prevent_bss_reordering.h>
 
+#include <point_lights.h>
+
 // FIXME: I'm not sure all of these variables belong in this file, but I don't
 // know of a good way to split them
 struct Controller gControllers[3];
@@ -112,12 +114,12 @@ void my_rdp_init(void) {
  * almost immediately overwritten.
  */
 void my_rsp_init(void) {
+
     gSPClearGeometryMode(gDisplayListHead++, G_SHADE | G_SHADING_SMOOTH | G_CULL_BOTH | G_FOG
                         | G_LIGHTING | G_TEXTURE_GEN | G_TEXTURE_GEN_LINEAR | G_LOD);
 
     gSPSetGeometryMode(gDisplayListHead++, G_SHADE | G_SHADING_SMOOTH | G_CULL_BACK | G_LIGHTING);
 
-    gSPNumLights(gDisplayListHead++, NUMLIGHTS_1);
     gSPTexture(gDisplayListHead++, 0, 0, 0, G_TX_RENDERTILE, G_OFF);
 
     // @bug Nintendo did not explicitly define the clipping ratio.
@@ -660,6 +662,12 @@ void thread5_game_loop(UNUSED void *arg) {
         audio_game_loop_tick();
         config_gfx_pool();
         read_controller_inputs();
+
+        // Reset the point light count before running the level script
+        // This is because the level script is responsible for calling the function
+        // that updates objects, which is where objects that emit light create their point lights
+        gPointLightCount = gAreaPointLightCount;
+
         addr = level_script_execute(addr);
 
         display_and_vsync();
diff --git a/src/game/game_init.c.orig b/src/game/game_init.c.orig
new file mode 100644
index 0000000..35ec669
--- /dev/null
+++ b/src/game/game_init.c.orig
@@ -0,0 +1,680 @@
+#include <ultra64.h>
+
+#include "sm64.h"
+#include "gfx_dimensions.h"
+#include "audio/external.h"
+#include "buffers/buffers.h"
+#include "buffers/gfx_output_buffer.h"
+#include "buffers/framebuffers.h"
+#include "buffers/zbuffer.h"
+#include "engine/level_script.h"
+#include "game_init.h"
+#include "main.h"
+#include "memory.h"
+#include "profiler.h"
+#include "save_file.h"
+#include "seq_ids.h"
+#include "sound_init.h"
+#include "print.h"
+#include "segment2.h"
+#include "segment_symbols.h"
+#include "rumble_init.h"
+#ifdef HVQM
+#include <hvqm/hvqm.h>
+#endif
+#ifdef UNF
+#include "usb/usb.h"
+#include "usb/debug.h"
+#endif
+#ifdef SRAM
+#include "sram.h"
+#endif
+#include <prevent_bss_reordering.h>
+
+// FIXME: I'm not sure all of these variables belong in this file, but I don't
+// know of a good way to split them
+struct Controller gControllers[3];
+struct SPTask *gGfxSPTask;
+Gfx *gDisplayListHead;
+u8 *gGfxPoolEnd;
+struct GfxPool *gGfxPool;
+OSContStatus gControllerStatuses[4];
+OSContPad gControllerPads[4];
+u8 gControllerBits;
+#ifdef EEP
+s8 gEepromProbe;
+#endif
+#ifdef SRAM
+s8 gSramProbe;
+#endif
+OSMesgQueue gGameVblankQueue;
+OSMesgQueue D_80339CB8;
+OSMesg D_80339CD0;
+OSMesg D_80339CD4;
+struct VblankHandler gGameVblankHandler;
+uintptr_t gPhysicalFrameBuffers[3];
+uintptr_t gPhysicalZBuffer;
+void *D_80339CF0;
+void *D_80339CF4;
+struct MarioAnimation D_80339D10;
+struct MarioAnimation gDemo;
+UNUSED u8 filler80339D30[0x90];
+
+s32 unused8032C690 = 0;
+u32 gGlobalTimer = 0;
+
+u16 sCurrFBNum = 0;
+u16 frameBufferIndex = 0;
+void (*gGoddardVblankCallback)(void) = NULL;
+struct Controller *gPlayer1Controller = &gControllers[0];
+struct Controller *gPlayer2Controller = &gControllers[1];
+// probably debug only, see note below
+struct Controller *gPlayer3Controller = &gControllers[2];
+struct DemoInput *gCurrDemoInput = NULL; // demo input sequence
+u16 gDemoInputListID = 0;
+struct DemoInput gRecordedDemoInput = { 0 }; // possibly removed in EU. TODO: Check
+
+/**
+ * Initializes the Reality Display Processor (RDP).
+ * This function initializes settings such as texture filtering mode,
+ * scissoring, and render mode (although keep in mind that this render
+ * mode is not used in-game, where it is set in render_graph_node.c).
+ */
+void my_rdp_init(void) {
+    gDPPipeSync(gDisplayListHead++);
+    gDPPipelineMode(gDisplayListHead++, G_PM_1PRIMITIVE);
+
+    gDPSetScissor(gDisplayListHead++, G_SC_NON_INTERLACE, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
+    gDPSetCombineMode(gDisplayListHead++, G_CC_SHADE, G_CC_SHADE);
+
+    gDPSetTextureLOD(gDisplayListHead++, G_TL_TILE);
+    gDPSetTextureLUT(gDisplayListHead++, G_TT_NONE);
+    gDPSetTextureDetail(gDisplayListHead++, G_TD_CLAMP);
+    gDPSetTexturePersp(gDisplayListHead++, G_TP_PERSP);
+    gDPSetTextureFilter(gDisplayListHead++, G_TF_BILERP);
+    gDPSetTextureConvert(gDisplayListHead++, G_TC_FILT);
+
+    gDPSetCombineKey(gDisplayListHead++, G_CK_NONE);
+    gDPSetAlphaCompare(gDisplayListHead++, G_AC_NONE);
+    gDPSetRenderMode(gDisplayListHead++, G_RM_OPA_SURF, G_RM_OPA_SURF2);
+    gDPSetColorDither(gDisplayListHead++, G_CD_MAGICSQ);
+    gDPSetCycleType(gDisplayListHead++, G_CYC_FILL);
+
+#ifdef VERSION_SH
+    gDPSetAlphaDither(gDisplayListHead++, G_AD_PATTERN);
+#endif
+    gDPPipeSync(gDisplayListHead++);
+}
+
+/**
+ * Initializes the RSP's built-in geometry and lighting engines.
+ * Most of these (with the notable exception of gSPNumLights), are
+ * almost immediately overwritten.
+ */
+void my_rsp_init(void) {
+    gSPClearGeometryMode(gDisplayListHead++, G_SHADE | G_SHADING_SMOOTH | G_CULL_BOTH | G_FOG
+                        | G_LIGHTING | G_TEXTURE_GEN | G_TEXTURE_GEN_LINEAR | G_LOD);
+
+    gSPSetGeometryMode(gDisplayListHead++, G_SHADE | G_SHADING_SMOOTH | G_CULL_BACK | G_LIGHTING);
+
+    gSPNumLights(gDisplayListHead++, NUMLIGHTS_1);
+    gSPTexture(gDisplayListHead++, 0, 0, 0, G_TX_RENDERTILE, G_OFF);
+
+    // @bug Nintendo did not explicitly define the clipping ratio.
+    // For Fast3DEX2, this causes the dreaded warped vertices issue
+    // unless the clipping ratio is changed back to the intended value,
+    // as Fast3DEX2 uses a different initial value than Fast3D(EX).
+#ifdef F3DEX_GBI_2
+    gSPClipRatio(gDisplayListHead++, FRUSTRATIO_1);
+#endif
+}
+
+/** Clear the Z buffer. */
+void clear_z_buffer(void) {
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetDepthSource(gDisplayListHead++, G_ZS_PIXEL);
+    gDPSetDepthImage(gDisplayListHead++, gPhysicalZBuffer);
+
+    gDPSetColorImage(gDisplayListHead++, G_IM_FMT_RGBA, G_IM_SIZ_16b, SCREEN_WIDTH, gPhysicalZBuffer);
+    gDPSetFillColor(gDisplayListHead++,
+                    GPACK_ZDZ(G_MAXFBZ, 0) << 16 | GPACK_ZDZ(G_MAXFBZ, 0));
+
+    gDPFillRectangle(gDisplayListHead++, 0, BORDER_HEIGHT, SCREEN_WIDTH - 1,
+                     SCREEN_HEIGHT - 1 - BORDER_HEIGHT);
+}
+
+/** Sets up the final framebuffer image. */
+void display_frame_buffer(void) {
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetCycleType(gDisplayListHead++, G_CYC_1CYCLE);
+    gDPSetColorImage(gDisplayListHead++, G_IM_FMT_RGBA, G_IM_SIZ_16b, SCREEN_WIDTH,
+                     gPhysicalFrameBuffers[frameBufferIndex]);
+    gDPSetScissor(gDisplayListHead++, G_SC_NON_INTERLACE, 0, BORDER_HEIGHT, SCREEN_WIDTH,
+                  SCREEN_HEIGHT - BORDER_HEIGHT);
+}
+
+/** Clears the framebuffer, allowing it to be overwritten. */
+void clear_frame_buffer(s32 color) {
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetRenderMode(gDisplayListHead++, G_RM_OPA_SURF, G_RM_OPA_SURF2);
+    gDPSetCycleType(gDisplayListHead++, G_CYC_FILL);
+
+    gDPSetFillColor(gDisplayListHead++, color);
+    gDPFillRectangle(gDisplayListHead++,
+                     GFX_DIMENSIONS_RECT_FROM_LEFT_EDGE(0), BORDER_HEIGHT,
+                     GFX_DIMENSIONS_RECT_FROM_RIGHT_EDGE(0) - 1, SCREEN_HEIGHT - BORDER_HEIGHT - 1);
+
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetCycleType(gDisplayListHead++, G_CYC_1CYCLE);
+}
+
+/** Clears and initializes the viewport. */
+void clear_viewport(Vp *viewport, s32 color) {
+    s16 vpUlx = (viewport->vp.vtrans[0] - viewport->vp.vscale[0]) / 4 + 1;
+    s16 vpUly = (viewport->vp.vtrans[1] - viewport->vp.vscale[1]) / 4 + 1;
+    s16 vpLrx = (viewport->vp.vtrans[0] + viewport->vp.vscale[0]) / 4 - 2;
+    s16 vpLry = (viewport->vp.vtrans[1] + viewport->vp.vscale[1]) / 4 - 2;
+
+#ifdef WIDESCREEN
+    vpUlx = GFX_DIMENSIONS_RECT_FROM_LEFT_EDGE(vpUlx);
+    vpLrx = GFX_DIMENSIONS_RECT_FROM_RIGHT_EDGE(SCREEN_WIDTH - vpLrx);
+#endif
+
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetRenderMode(gDisplayListHead++, G_RM_OPA_SURF, G_RM_OPA_SURF2);
+    gDPSetCycleType(gDisplayListHead++, G_CYC_FILL);
+
+    gDPSetFillColor(gDisplayListHead++, color);
+    gDPFillRectangle(gDisplayListHead++, vpUlx, vpUly, vpLrx, vpLry);
+
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetCycleType(gDisplayListHead++, G_CYC_1CYCLE);
+}
+
+/** Draws the horizontal screen borders */
+void draw_screen_borders(void) {
+    gDPPipeSync(gDisplayListHead++);
+
+    gDPSetScissor(gDisplayListHead++, G_SC_NON_INTERLACE, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
+    gDPSetRenderMode(gDisplayListHead++, G_RM_OPA_SURF, G_RM_OPA_SURF2);
+    gDPSetCycleType(gDisplayListHead++, G_CYC_FILL);
+
+    gDPSetFillColor(gDisplayListHead++, GPACK_RGBA5551(0, 0, 0, 0) << 16 | GPACK_RGBA5551(0, 0, 0, 0));
+
+#if BORDER_HEIGHT != 0
+    gDPFillRectangle(gDisplayListHead++, GFX_DIMENSIONS_RECT_FROM_LEFT_EDGE(0), 0,
+                     GFX_DIMENSIONS_RECT_FROM_RIGHT_EDGE(0) - 1, BORDER_HEIGHT - 1);
+    gDPFillRectangle(gDisplayListHead++,
+                     GFX_DIMENSIONS_RECT_FROM_LEFT_EDGE(0), SCREEN_HEIGHT - BORDER_HEIGHT,
+                     GFX_DIMENSIONS_RECT_FROM_RIGHT_EDGE(0) - 1, SCREEN_HEIGHT - 1);
+#endif
+}
+
+void make_viewport_clip_rect(Vp *viewport) {
+    s16 vpUlx = (viewport->vp.vtrans[0] - viewport->vp.vscale[0]) / 4 + 1;
+    s16 vpPly = (viewport->vp.vtrans[1] - viewport->vp.vscale[1]) / 4 + 1;
+    s16 vpLrx = (viewport->vp.vtrans[0] + viewport->vp.vscale[0]) / 4 - 1;
+    s16 vpLry = (viewport->vp.vtrans[1] + viewport->vp.vscale[1]) / 4 - 1;
+
+    gDPSetScissor(gDisplayListHead++, G_SC_NON_INTERLACE, vpUlx, vpPly, vpLrx, vpLry);
+}
+
+/**
+ * Loads the F3D microcodes.
+ * Refer to this function if you would like to load
+ * other microcodes (i.e. S2DEX).
+ */
+void create_task_structure(void) {
+    s32 entries = gDisplayListHead - gGfxPool->buffer;
+
+    gGfxSPTask->msgqueue = &D_80339CB8;
+    gGfxSPTask->msg = (OSMesg) 2;
+    gGfxSPTask->task.t.type = M_GFXTASK;
+    gGfxSPTask->task.t.ucode_boot = rspbootTextStart;
+    gGfxSPTask->task.t.ucode_boot_size = ((u8 *) rspbootTextEnd - (u8 *) rspbootTextStart);
+    gGfxSPTask->task.t.flags = 0;
+#ifdef  F3DZEX_GBI_2
+    gGfxSPTask->task.t.ucode = gspF3DZEX2_PosLight_fifoTextStart;
+    gGfxSPTask->task.t.ucode_data = gspF3DZEX2_PosLight_fifoDataStart;
+#elif   F3DEX_GBI_2
+    gGfxSPTask->task.t.ucode = gspF3DEX2_fifoTextStart;
+    gGfxSPTask->task.t.ucode_data = gspF3DEX2_fifoDataStart;
+#elif   F3DEX_GBI
+    gGfxSPTask->task.t.ucode = gspF3DEX_fifoTextStart;
+    gGfxSPTask->task.t.ucode_data = gspF3DEX_fifoDataStart;
+#elif   SUPER3D_GBI
+    gGfxSPTask->task.t.ucode = gspSuper3D_fifoTextStart;
+    gGfxSPTask->task.t.ucode_data = gspSuper3D_fifoDataStart; 
+#else
+    gGfxSPTask->task.t.ucode = gspFast3D_fifoTextStart;
+    gGfxSPTask->task.t.ucode_data = gspFast3D_fifoDataStart;
+#endif
+    gGfxSPTask->task.t.ucode_size = SP_UCODE_SIZE; // (this size is ignored)
+    gGfxSPTask->task.t.ucode_data_size = SP_UCODE_DATA_SIZE;
+    gGfxSPTask->task.t.dram_stack = (u64 *) gGfxSPTaskStack;
+    gGfxSPTask->task.t.dram_stack_size = SP_DRAM_STACK_SIZE8;
+    gGfxSPTask->task.t.output_buff = gGfxSPTaskOutputBuffer;
+    gGfxSPTask->task.t.output_buff_size =
+        (u64 *)((u8 *) gGfxSPTaskOutputBuffer + sizeof(gGfxSPTaskOutputBuffer));
+    gGfxSPTask->task.t.data_ptr = (u64 *) &gGfxPool->buffer;
+    gGfxSPTask->task.t.data_size = entries * sizeof(Gfx);
+    gGfxSPTask->task.t.yield_data_ptr = (u64 *) gGfxSPTaskYieldBuffer;
+    gGfxSPTask->task.t.yield_data_size = OS_YIELD_DATA_SIZE;
+}
+
+/** Starts rendering the scene. */
+void init_render_image(void) {
+    move_segment_table_to_dmem();
+    my_rdp_init();
+    my_rsp_init();
+    clear_z_buffer();
+    display_frame_buffer();
+}
+
+/** Ends the master display list. */
+void end_master_display_list(void) {
+    draw_screen_borders();
+    if (gShowProfiler) {
+        draw_profiler();
+    }
+
+    gDPFullSync(gDisplayListHead++);
+    gSPEndDisplayList(gDisplayListHead++);
+
+    create_task_structure();
+}
+
+void draw_reset_bars(void) {
+    s32 sp24;
+    s32 sp20;
+    s32 fbNum;
+    u64 *sp18;
+
+    if (gResetTimer != 0 && D_8032C648 < 15) {
+        if (sCurrFBNum == 0) {
+            fbNum = 2;
+        } else {
+            fbNum = sCurrFBNum - 1;
+        }
+
+        sp18 = (u64 *) PHYSICAL_TO_VIRTUAL(gPhysicalFrameBuffers[fbNum]);
+        sp18 += D_8032C648++ * (SCREEN_WIDTH / 4);
+
+        for (sp24 = 0; sp24 < ((SCREEN_HEIGHT / 16) + 1); sp24++) {
+            // Loop must be one line to match on -O2
+            for (sp20 = 0; sp20 < (SCREEN_WIDTH / 4); sp20++) *sp18++ = 0;
+            sp18 += ((SCREEN_WIDTH / 4) * 14);
+        }
+    }
+
+    osWritebackDCacheAll();
+    osRecvMesg(&gGameVblankQueue, &D_80339BEC, OS_MESG_BLOCK);
+    osRecvMesg(&gGameVblankQueue, &D_80339BEC, OS_MESG_BLOCK);
+}
+
+void rendering_init(void) {
+    gGfxPool = &gGfxPools[0];
+    set_segment_base_addr(1, gGfxPool->buffer);
+    gGfxSPTask = &gGfxPool->spTask;
+    gDisplayListHead = gGfxPool->buffer;
+    gGfxPoolEnd = (u8 *) (gGfxPool->buffer + GFX_POOL_SIZE);
+    init_render_image();
+    clear_frame_buffer(0);
+    end_master_display_list();
+    send_display_list(&gGfxPool->spTask);
+
+    frameBufferIndex++;
+    gGlobalTimer++;
+}
+
+void config_gfx_pool(void) {
+    gGfxPool = &gGfxPools[gGlobalTimer % 2];
+    set_segment_base_addr(1, gGfxPool->buffer);
+    gGfxSPTask = &gGfxPool->spTask;
+    gDisplayListHead = gGfxPool->buffer;
+    gGfxPoolEnd = (u8 *) (gGfxPool->buffer + GFX_POOL_SIZE);
+}
+
+/** Handles vsync. */
+void display_and_vsync(void) {
+    profiler_log_thread5_time(BEFORE_DISPLAY_LISTS);
+    osRecvMesg(&D_80339CB8, &D_80339BEC, OS_MESG_BLOCK);
+    if (gGoddardVblankCallback != NULL) {
+        gGoddardVblankCallback();
+        gGoddardVblankCallback = NULL;
+    }
+    send_display_list(&gGfxPool->spTask);
+    profiler_log_thread5_time(AFTER_DISPLAY_LISTS);
+    osRecvMesg(&gGameVblankQueue, &D_80339BEC, OS_MESG_BLOCK);
+    osViSwapBuffer((void *) PHYSICAL_TO_VIRTUAL(gPhysicalFrameBuffers[sCurrFBNum]));
+    profiler_log_thread5_time(THREAD5_END);
+    osRecvMesg(&gGameVblankQueue, &D_80339BEC, OS_MESG_BLOCK);
+    if (++sCurrFBNum == 3) {
+        sCurrFBNum = 0;
+    }
+    if (++frameBufferIndex == 3) {
+        frameBufferIndex = 0;
+    }
+    gGlobalTimer++;
+}
+
+// this function records distinct inputs over a 255-frame interval to RAM locations and was likely
+// used to record the demo sequences seen in the final game. This function is unused.
+UNUSED static void record_demo(void) {
+    // record the player's button mask and current rawStickX and rawStickY.
+    u8 buttonMask =
+        ((gPlayer1Controller->buttonDown & (A_BUTTON | B_BUTTON | Z_TRIG | START_BUTTON)) >> 8)
+        | (gPlayer1Controller->buttonDown & (U_CBUTTONS | D_CBUTTONS | L_CBUTTONS | R_CBUTTONS));
+    s8 rawStickX = gPlayer1Controller->rawStickX;
+    s8 rawStickY = gPlayer1Controller->rawStickY;
+
+    // if the stick is in deadzone, set its value to 0 to
+    // nullify the effects. We do not record deadzone inputs.
+    if (rawStickX > -8 && rawStickX < 8) {
+        rawStickX = 0;
+    }
+
+    if (rawStickY > -8 && rawStickY < 8) {
+        rawStickY = 0;
+    }
+
+    // record the distinct input and timer so long as they
+    // are unique. If the timer hits 0xFF, reset the timer
+    // for the next demo input.
+    if (gRecordedDemoInput.timer == 0xFF || buttonMask != gRecordedDemoInput.buttonMask
+        || rawStickX != gRecordedDemoInput.rawStickX || rawStickY != gRecordedDemoInput.rawStickY) {
+        gRecordedDemoInput.timer = 0;
+        gRecordedDemoInput.buttonMask = buttonMask;
+        gRecordedDemoInput.rawStickX = rawStickX;
+        gRecordedDemoInput.rawStickY = rawStickY;
+    }
+    gRecordedDemoInput.timer++;
+}
+
+// take the updated controller struct and calculate
+// the new x, y, and distance floats.
+void adjust_analog_stick(struct Controller *controller) {
+    UNUSED u8 pad[8];
+
+    // reset the controller's x and y floats.
+    controller->stickX = 0;
+    controller->stickY = 0;
+
+    // modulate the rawStickX and rawStickY to be the new f32 values by adding/subtracting 6.
+    if (controller->rawStickX <= -8) {
+        controller->stickX = controller->rawStickX + 6;
+    }
+
+    if (controller->rawStickX >= 8) {
+        controller->stickX = controller->rawStickX - 6;
+    }
+
+    if (controller->rawStickY <= -8) {
+        controller->stickY = controller->rawStickY + 6;
+    }
+
+    if (controller->rawStickY >= 8) {
+        controller->stickY = controller->rawStickY - 6;
+    }
+
+    // calculate f32 magnitude from the center by vector length.
+    controller->stickMag =
+        sqrtf(controller->stickX * controller->stickX + controller->stickY * controller->stickY);
+
+    // magnitude cannot exceed 64.0f: if it does, modify the values appropriately to
+    // flatten the values down to the allowed maximum value.
+    if (controller->stickMag > 64) {
+        controller->stickX *= 64 / controller->stickMag;
+        controller->stickY *= 64 / controller->stickMag;
+        controller->stickMag = 64;
+    }
+}
+
+// if a demo sequence exists, this will run the demo
+// input list until it is complete. called every frame.
+void run_demo_inputs(void) {
+    // eliminate the unused bits.
+    gControllers[0].controllerData->button &= VALID_BUTTONS;
+
+    /*
+        Check if a demo inputs list
+        exists and if so, run the
+        active demo input list.
+    */
+    if (gCurrDemoInput != NULL) {
+        /*
+            clear player 2's inputs if they exist. Player 2's controller
+            cannot be used to influence a demo. At some point, Nintendo
+            may have planned for there to be a demo where 2 players moved
+            around instead of just one, so clearing player 2's influence from
+            the demo had to have been necessary to perform this. Co-op mode, perhaps?
+        */
+        if (gControllers[1].controllerData != NULL) {
+            gControllers[1].controllerData->stick_x = 0;
+            gControllers[1].controllerData->stick_y = 0;
+            gControllers[1].controllerData->button = 0;
+        }
+
+        // the timer variable being 0 at the current input means the demo is over.
+        // set the button to the END_DEMO mask to end the demo.
+        if (gCurrDemoInput->timer == 0) {
+            gControllers[0].controllerData->stick_x = 0;
+            gControllers[0].controllerData->stick_y = 0;
+            gControllers[0].controllerData->button = END_DEMO;
+        } else {
+            // backup the start button if it is pressed, since we don't want the
+            // demo input to override the mask where start may have been pressed.
+            u16 startPushed = gControllers[0].controllerData->button & START_BUTTON;
+
+            // perform the demo inputs by assigning the current button mask and the stick inputs.
+            gControllers[0].controllerData->stick_x = gCurrDemoInput->rawStickX;
+            gControllers[0].controllerData->stick_y = gCurrDemoInput->rawStickY;
+
+            /*
+                to assign the demo input, the button information is stored in
+                an 8-bit mask rather than a 16-bit mask. this is because only
+                A, B, Z, Start, and the C-Buttons are used in a demo, as bits
+                in that order. In order to assign the mask, we need to take the
+                upper 4 bits (A, B, Z, and Start) and shift then left by 8 to
+                match the correct input mask. We then add this to the masked
+                lower 4 bits to get the correct button mask.
+            */
+            gControllers[0].controllerData->button =
+                ((gCurrDemoInput->buttonMask & 0xF0) << 8) + ((gCurrDemoInput->buttonMask & 0xF));
+
+            // if start was pushed, put it into the demo sequence being input to
+            // end the demo.
+            gControllers[0].controllerData->button |= startPushed;
+
+            // run the current demo input's timer down. if it hits 0, advance the
+            // demo input list.
+            if (--gCurrDemoInput->timer == 0) {
+                gCurrDemoInput++;
+            }
+        }
+    }
+}
+
+// update the controller struct with available inputs if present.
+void read_controller_inputs(void) {
+    s32 i;
+
+    // if any controllers are plugged in, update the
+    // controller information.
+    if (gControllerBits) {
+        osRecvMesg(&gSIEventMesgQueue, &D_80339BEC, OS_MESG_BLOCK);
+        osContGetReadData(&gControllerPads[0]);
+#if ENABLE_RUMBLE
+        release_rumble_pak_control();
+#endif
+    }
+    run_demo_inputs();
+
+    for (i = 0; i < 2; i++) {
+        struct Controller *controller = &gControllers[i];
+
+        // if we're receiving inputs, update the controller struct
+        // with the new button info.
+        if (controller->controllerData != NULL) {
+            controller->rawStickX = controller->controllerData->stick_x;
+            controller->rawStickY = controller->controllerData->stick_y;
+            controller->buttonPressed = controller->controllerData->button
+                                        & (controller->controllerData->button ^ controller->buttonDown);
+            // 0.5x A presses are a good meme
+            controller->buttonDown = controller->controllerData->button;
+            adjust_analog_stick(controller);
+        } else // otherwise, if the controllerData is NULL, 0 out all of the inputs.
+        {
+            controller->rawStickX = 0;
+            controller->rawStickY = 0;
+            controller->buttonPressed = 0;
+            controller->buttonDown = 0;
+            controller->stickX = 0;
+            controller->stickY = 0;
+            controller->stickMag = 0;
+        }
+    }
+
+    // For some reason, player 1's inputs are copied to player 3's port. This
+    // potentially may have been a way the developers "recorded" the inputs
+    // for demos, despite record_demo existing.
+    gPlayer3Controller->rawStickX = gPlayer1Controller->rawStickX;
+    gPlayer3Controller->rawStickY = gPlayer1Controller->rawStickY;
+    gPlayer3Controller->stickX = gPlayer1Controller->stickX;
+    gPlayer3Controller->stickY = gPlayer1Controller->stickY;
+    gPlayer3Controller->stickMag = gPlayer1Controller->stickMag;
+    gPlayer3Controller->buttonPressed = gPlayer1Controller->buttonPressed;
+    gPlayer3Controller->buttonDown = gPlayer1Controller->buttonDown;
+}
+
+// initialize the controller structs to point at the OSCont information.
+void init_controllers(void) {
+    s16 port, cont;
+
+    // set controller 1 to point to the set of status/pads for input 1 and
+    // init the controllers.
+    gControllers[0].statusData = &gControllerStatuses[0];
+    gControllers[0].controllerData = &gControllerPads[0];
+    osContInit(&gSIEventMesgQueue, &gControllerBits, &gControllerStatuses[0]);
+
+#ifdef EEP
+    // strangely enough, the EEPROM probe for save data is done in this function.
+    // save pak detection?
+    gEepromProbe = osEepromProbe(&gSIEventMesgQueue);
+#endif
+#ifdef SRAM
+    gSramProbe = nuPiInitSram();
+#endif
+
+    // loop over the 4 ports and link the controller structs to the appropriate
+    // status and pad. Interestingly, although there are pointers to 3 controllers,
+    // only 2 are connected here. The third seems to have been reserved for debug
+    // purposes and was never connected in the retail ROM, thus gPlayer3Controller
+    // cannot be used, despite being referenced in various code.
+    for (cont = 0, port = 0; port < 4 && cont < 2; port++) {
+        // is controller plugged in?
+        if (gControllerBits & (1 << port)) {
+            // the game allows you to have just 1 controller plugged
+            // into any port in order to play the game. this was probably
+            // so if any of the ports didn't work, you can have controllers
+            // plugged into any of them and it will work.
+#if ENABLE_RUMBLE
+            gControllers[cont].port = port;
+#endif
+            gControllers[cont].statusData = &gControllerStatuses[port];
+            gControllers[cont++].controllerData = &gControllerPads[port];
+        }
+    }
+}
+
+void setup_game_memory(void) {
+    UNUSED u8 pad[8];
+
+    set_segment_base_addr(0, (void *) 0x80000000);
+    osCreateMesgQueue(&D_80339CB8, &D_80339CD4, 1);
+    osCreateMesgQueue(&gGameVblankQueue, &D_80339CD0, 1);
+    gPhysicalZBuffer = VIRTUAL_TO_PHYSICAL(gZBuffer);
+    gPhysicalFrameBuffers[0] = VIRTUAL_TO_PHYSICAL(gFrameBuffer0);
+    gPhysicalFrameBuffers[1] = VIRTUAL_TO_PHYSICAL(gFrameBuffer1);
+    gPhysicalFrameBuffers[2] = VIRTUAL_TO_PHYSICAL(gFrameBuffer2);
+    D_80339CF0 = main_pool_alloc(0x4000, MEMORY_POOL_LEFT);
+    set_segment_base_addr(17, (void *) D_80339CF0);
+    func_80278A78(&D_80339D10, gMarioAnims, D_80339CF0);
+    D_80339CF4 = main_pool_alloc(2048, MEMORY_POOL_LEFT);
+    set_segment_base_addr(24, (void *) D_80339CF4);
+    func_80278A78(&gDemo, gDemoInputs, D_80339CF4);
+    load_segment(0x10, _entrySegmentRomStart, _entrySegmentRomEnd, MEMORY_POOL_LEFT);
+    load_segment_decompress(2, _segment2_yay0SegmentRomStart, _segment2_yay0SegmentRomEnd);
+}
+
+// main game loop thread. runs forever as long as the game
+// continues.
+void thread5_game_loop(UNUSED void *arg) {
+    struct LevelCommand *addr;
+
+    setup_game_memory();
+#if ENABLE_RUMBLE
+    init_rumble_pak_scheduler_queue();
+#endif
+    init_controllers();
+#if ENABLE_RUMBLE
+    create_thread_6();
+#endif
+#ifdef HVQM
+    createHvqmThread();
+#endif
+    save_file_load_all();
+
+    set_vblank_handler(2, &gGameVblankHandler, &gGameVblankQueue, (OSMesg) 1);
+
+    // point addr to the entry point into the level script data.
+    addr = segmented_to_virtual(level_script_entry);
+
+    play_music(SEQ_PLAYER_SFX, SEQUENCE_ARGS(0, SEQ_SOUND_PLAYER), 0);
+    set_sound_mode(save_file_get_sound_mode());
+    rendering_init();
+
+    while (TRUE) {
+        // if the reset timer is active, run the process to reset the game.
+        if (gResetTimer) {
+            draw_reset_bars();
+            continue;
+        }
+        profiler_log_thread5_time(THREAD5_START);
+
+        // if any controllers are plugged in, start read the data for when
+        // read_controller_inputs is called later.
+        if (gControllerBits) {
+#if ENABLE_RUMBLE
+            block_until_rumble_pak_free();
+#endif
+            osContStartReadData(&gSIEventMesgQueue);
+        }
+
+        audio_game_loop_tick();
+        config_gfx_pool();
+        read_controller_inputs();
+        addr = level_script_execute(addr);
+
+        display_and_vsync();
+
+        // when debug info is enabled, print the "BUF %d" information.
+        if (gShowDebugText) {
+            // subtract the end of the gfx pool with the display list to obtain the
+            // amount of free space remaining.
+            print_text_fmt_int(180, 20, "BUF %d", gGfxPoolEnd - (u8 *) gDisplayListHead);
+        }
+#if 0
+        if (gPlayer1Controller->buttonPressed & L_TRIG) {
+            osStartThread(&hvqmThread);
+            osRecvMesg(&gDmaMesgQueue, NULL, OS_MESG_BLOCK);
+        }
+#endif
+    }
+}
diff --git a/src/game/hud.c b/src/game/hud.c
index 8d4daa5..1fe96560 100644
--- a/src/game/hud.c
+++ b/src/game/hud.c
@@ -414,6 +414,8 @@ void render_hud_camera_status(void) {
     gSPDisplayList(gDisplayListHead++, dl_hud_img_end);
 }
 
+extern int gPointLightCompatibilityMode;
+
 /**
  * Render HUD strings using hudDisplayFlags with it's render functions,
  * excluding the cannon reticle which detects a camera preset for it.
@@ -475,5 +477,7 @@ void render_hud(void) {
         if (hudDisplayFlags & HUD_DISPLAY_FLAG_TIMER) {
             render_hud_timer();
         }
+
+        print_text_fmt_int(10, 10, "%d", gPointLightCompatibilityMode);
     }
 }
diff --git a/src/game/level_update.c b/src/game/level_update.c
index 8f313c3..456ab5c 100644
--- a/src/game/level_update.c
+++ b/src/game/level_update.c
@@ -1,3 +1,4 @@
+
 #include <ultra64.h>
 
 #include "sm64.h"
@@ -1197,12 +1198,12 @@ s32 init_level(void) {
                 set_mario_action(gMarioState, ACT_IDLE, 0);
             } else if (!gDebugLevelSelect) {
                 if (gMarioState->action != ACT_UNINITIALIZED) {
-                    if (save_file_exists(gCurrSaveFileNum - 1)) {
+                    //if (save_file_exists(gCurrSaveFileNum - 1)) {
                         set_mario_action(gMarioState, ACT_IDLE, 0);
-                    } else {
-                        set_mario_action(gMarioState, ACT_INTRO_CUTSCENE, 0);
-                        val4 = 1;
-                    }
+                    // } else {
+                    //     set_mario_action(gMarioState, ACT_INTRO_CUTSCENE, 0);
+                    //     val4 = 1;
+                    // }
                 }
             }
         }
@@ -1291,6 +1292,7 @@ s32 lvl_set_current_level(UNUSED s16 arg0, s32 levelNum) {
     sWarpCheckpointActive = FALSE;
     gCurrLevelNum = levelNum;
     gCurrCourseNum = gLevelToCourseNumTable[levelNum - 1];
+		if (gCurrLevelNum == LEVEL_JRB) return 0;
 
     if (gCurrDemoInput != NULL || gCurrCreditsEntry != NULL || gCurrCourseNum == COURSE_NONE) {
         return 0;
diff --git a/src/game/mario_misc.c b/src/game/mario_misc.c
index d7ed03a..c0edadd 100644
--- a/src/game/mario_misc.c
+++ b/src/game/mario_misc.c
@@ -556,9 +556,9 @@ Gfx *geo_switch_mario_hand_grab_pos(s32 callContext, struct GraphNode *b, Mat4 *
             switch (marioState->marioBodyState->grabPos) {
                 case GRAB_POS_LIGHT_OBJ:
                     if (marioState->action & ACT_FLAG_THROWING) {
-                        vec3s_set(asHeldObj->translation, 50, 0, 0);
+                        vec3s_set(asHeldObj->translation, 100, 0, 0);
                     } else {
-                        vec3s_set(asHeldObj->translation, 50, 0, 110);
+                        vec3s_set(asHeldObj->translation, 100, 0, 110);
                     }
                     break;
                 case GRAB_POS_HEAVY_OBJ:
diff --git a/src/game/mario_misc.c.orig b/src/game/mario_misc.c.orig
new file mode 100644
index 0000000..d7ed03a
--- /dev/null
+++ b/src/game/mario_misc.c.orig
@@ -0,0 +1,649 @@
+#include <PR/ultratypes.h>
+
+#include "sm64.h"
+#include "area.h"
+#include "audio/external.h"
+#include "behavior_actions.h"
+#include "behavior_data.h"
+#include "camera.h"
+#include "dialog_ids.h"
+#include "engine/behavior_script.h"
+#include "engine/graph_node.h"
+#include "engine/math_util.h"
+#include "envfx_snow.h"
+#include "game_init.h"
+#include "goddard/renderer.h"
+#include "interaction.h"
+#include "level_update.h"
+#include "mario_misc.h"
+#include "memory.h"
+#include "object_helpers.h"
+#include "object_list_processor.h"
+#include "rendering_graph_node.h"
+#include "save_file.h"
+#include "skybox.h"
+#include "sound_init.h"
+
+#define TOAD_STAR_1_REQUIREMENT 12
+#define TOAD_STAR_2_REQUIREMENT 25
+#define TOAD_STAR_3_REQUIREMENT 35
+
+#define TOAD_STAR_1_DIALOG DIALOG_082
+#define TOAD_STAR_2_DIALOG DIALOG_076
+#define TOAD_STAR_3_DIALOG DIALOG_083
+
+#define TOAD_STAR_1_DIALOG_AFTER DIALOG_154
+#define TOAD_STAR_2_DIALOG_AFTER DIALOG_155
+#define TOAD_STAR_3_DIALOG_AFTER DIALOG_156
+
+enum ToadMessageStates {
+    TOAD_MESSAGE_FADED,
+    TOAD_MESSAGE_OPAQUE,
+    TOAD_MESSAGE_OPACIFYING,
+    TOAD_MESSAGE_FADING,
+    TOAD_MESSAGE_TALKING
+};
+
+enum UnlockDoorStarStates {
+    UNLOCK_DOOR_STAR_RISING,
+    UNLOCK_DOOR_STAR_WAITING,
+    UNLOCK_DOOR_STAR_SPAWNING_PARTICLES,
+    UNLOCK_DOOR_STAR_DONE
+};
+
+/**
+ * The eye texture on succesive frames of Mario's blink animation.
+ * He intentionally blinks twice each time.
+ */
+static s8 gMarioBlinkAnimation[7] = { 1, 2, 1, 0, 1, 2, 1 };
+
+/**
+ * The scale values per frame for Mario's foot/hand for his attack animation
+ * There are 3 scale animations in groups of 6 frames.
+ * The first animation starts at frame index 3 and goes down, the others start at frame index 5.
+ * The values get divided by 10 before assigning, so e.g. 12 gives a scale factor 1.2.
+ * All combined, this means e.g. the first animation scales Mario's fist by {2.4, 1.6, 1.2, 1.0} on
+ * successive frames.
+ */
+static s8 gMarioAttackScaleAnimation[3 * 6] = {
+    10, 12, 16, 24, 10, 10, 10, 14, 20, 30, 10, 10, 10, 16, 20, 26, 26, 20,
+};
+
+struct MarioBodyState gBodyStates[2]; // 2nd is never accessed in practice, most likely Luigi related
+struct GraphNodeObject gMirrorMario;  // copy of Mario's geo node for drawing mirror Mario
+
+// This whole file is weirdly organized. It has to be the same file due
+// to rodata boundaries and function aligns, which means the programmer
+// treated this like a "misc" file for vaguely Mario related things
+// (message NPC related things, the Mario head geo, and Mario geo
+// functions)
+
+#ifdef GODDARD
+/**
+ * Geo node script that draws Mario's head on the title screen.
+ */
+Gfx *geo_draw_mario_head_goddard(s32 callContext, struct GraphNode *node, Mat4 *c) {
+    Gfx *gfx = NULL;
+    s16 sfx = 0;
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+    UNUSED Mat4 *transform = c;
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        if (gPlayer1Controller->controllerData != NULL && !gWarpTransition.isActive) {
+            gd_copy_p1_contpad(gPlayer1Controller->controllerData);
+        }
+        gfx = (Gfx *) PHYSICAL_TO_VIRTUAL(gdm_gettestdl(asGenerated->parameter));
+        gGoddardVblankCallback = gd_vblank;
+        sfx = gd_sfx_to_play();
+        play_menu_sounds(sfx);
+    }
+    return gfx;
+}
+#endif
+
+static void toad_message_faded(void) {
+    if (gCurrentObject->oDistanceToMario > 700.0f) {
+        gCurrentObject->oToadMessageRecentlyTalked = FALSE;
+    }
+    if (!gCurrentObject->oToadMessageRecentlyTalked && gCurrentObject->oDistanceToMario < 600.0f) {
+        gCurrentObject->oToadMessageState = TOAD_MESSAGE_OPACIFYING;
+    }
+}
+
+static void toad_message_opaque(void) {
+    if (gCurrentObject->oDistanceToMario > 700.0f) {
+        gCurrentObject->oToadMessageState = TOAD_MESSAGE_FADING;
+    } else if (!gCurrentObject->oToadMessageRecentlyTalked) {
+        gCurrentObject->oInteractionSubtype = INT_SUBTYPE_NPC;
+        if (gCurrentObject->oInteractStatus & INT_STATUS_INTERACTED) {
+            gCurrentObject->oInteractStatus = 0;
+            gCurrentObject->oToadMessageState = TOAD_MESSAGE_TALKING;
+            play_toads_jingle();
+        }
+    }
+}
+
+static void toad_message_talking(void) {
+    if (cur_obj_update_dialog_with_cutscene(3, 1, CUTSCENE_DIALOG, gCurrentObject->oToadMessageDialogId)
+        != 0) {
+        gCurrentObject->oToadMessageRecentlyTalked = TRUE;
+        gCurrentObject->oToadMessageState = TOAD_MESSAGE_FADING;
+        switch (gCurrentObject->oToadMessageDialogId) {
+            case TOAD_STAR_1_DIALOG:
+                gCurrentObject->oToadMessageDialogId = TOAD_STAR_1_DIALOG_AFTER;
+                bhv_spawn_star_no_level_exit(0);
+                break;
+            case TOAD_STAR_2_DIALOG:
+                gCurrentObject->oToadMessageDialogId = TOAD_STAR_2_DIALOG_AFTER;
+                bhv_spawn_star_no_level_exit(1);
+                break;
+            case TOAD_STAR_3_DIALOG:
+                gCurrentObject->oToadMessageDialogId = TOAD_STAR_3_DIALOG_AFTER;
+                bhv_spawn_star_no_level_exit(2);
+                break;
+        }
+    }
+}
+
+static void toad_message_opacifying(void) {
+    if ((gCurrentObject->oOpacity += 6) == 255) {
+        gCurrentObject->oToadMessageState = TOAD_MESSAGE_OPAQUE;
+    }
+}
+
+static void toad_message_fading(void) {
+    if ((gCurrentObject->oOpacity -= 6) == 81) {
+        gCurrentObject->oToadMessageState = TOAD_MESSAGE_FADED;
+    }
+}
+
+void bhv_toad_message_loop(void) {
+    if (gCurrentObject->header.gfx.node.flags & GRAPH_RENDER_ACTIVE) {
+        gCurrentObject->oInteractionSubtype = 0;
+        switch (gCurrentObject->oToadMessageState) {
+            case TOAD_MESSAGE_FADED:
+                toad_message_faded();
+                break;
+            case TOAD_MESSAGE_OPAQUE:
+                toad_message_opaque();
+                break;
+            case TOAD_MESSAGE_OPACIFYING:
+                toad_message_opacifying();
+                break;
+            case TOAD_MESSAGE_FADING:
+                toad_message_fading();
+                break;
+            case TOAD_MESSAGE_TALKING:
+                toad_message_talking();
+                break;
+        }
+    }
+}
+
+void bhv_toad_message_init(void) {
+    s32 saveFlags = save_file_get_flags();
+    s32 starCount = save_file_get_total_star_count(gCurrSaveFileNum - 1, COURSE_MIN - 1, COURSE_MAX - 1);
+    s32 dialogId = (gCurrentObject->oBehParams >> 24) & 0xFF;
+    s32 enoughStars = TRUE;
+
+    switch (dialogId) {
+        case TOAD_STAR_1_DIALOG:
+            enoughStars = (starCount >= TOAD_STAR_1_REQUIREMENT);
+            if (saveFlags & SAVE_FLAG_COLLECTED_TOAD_STAR_1) {
+                dialogId = TOAD_STAR_1_DIALOG_AFTER;
+            }
+            break;
+        case TOAD_STAR_2_DIALOG:
+            enoughStars = (starCount >= TOAD_STAR_2_REQUIREMENT);
+            if (saveFlags & SAVE_FLAG_COLLECTED_TOAD_STAR_2) {
+                dialogId = TOAD_STAR_2_DIALOG_AFTER;
+            }
+            break;
+        case TOAD_STAR_3_DIALOG:
+            enoughStars = (starCount >= TOAD_STAR_3_REQUIREMENT);
+            if (saveFlags & SAVE_FLAG_COLLECTED_TOAD_STAR_3) {
+                dialogId = TOAD_STAR_3_DIALOG_AFTER;
+            }
+            break;
+    }
+    if (enoughStars) {
+        gCurrentObject->oToadMessageDialogId = dialogId;
+        gCurrentObject->oToadMessageRecentlyTalked = FALSE;
+        gCurrentObject->oToadMessageState = TOAD_MESSAGE_FADED;
+        gCurrentObject->oOpacity = 81;
+    } else {
+        obj_mark_for_deletion(gCurrentObject);
+    }
+}
+
+static void star_door_unlock_spawn_particles(s16 angleOffset) {
+    struct Object *sparkleParticle = spawn_object(gCurrentObject, 0, bhvSparkleSpawn);
+
+    sparkleParticle->oPosX +=
+        100.0f * sins((gCurrentObject->oUnlockDoorStarTimer * 0x2800) + angleOffset);
+    sparkleParticle->oPosZ +=
+        100.0f * coss((gCurrentObject->oUnlockDoorStarTimer * 0x2800) + angleOffset);
+    // Particles are spawned lower each frame
+    sparkleParticle->oPosY -= gCurrentObject->oUnlockDoorStarTimer * 10.0f;
+}
+
+void bhv_unlock_door_star_init(void) {
+    gCurrentObject->oUnlockDoorStarState = UNLOCK_DOOR_STAR_RISING;
+    gCurrentObject->oUnlockDoorStarTimer = 0;
+    gCurrentObject->oUnlockDoorStarYawVel = 0x1000;
+    gCurrentObject->oPosX += 30.0f * sins(gMarioState->faceAngle[1] - 0x4000);
+    gCurrentObject->oPosY += 160.0f;
+    gCurrentObject->oPosZ += 30.0f * coss(gMarioState->faceAngle[1] - 0x4000);
+    gCurrentObject->oMoveAngleYaw = 0x7800;
+    obj_scale(gCurrentObject, 0.5f);
+}
+
+void bhv_unlock_door_star_loop(void) {
+    UNUSED u8 unused1[4];
+    s16 prevYaw = gCurrentObject->oMoveAngleYaw;
+    UNUSED u8 unused2[4];
+
+    // Speed up the star every frame
+    if (gCurrentObject->oUnlockDoorStarYawVel < 0x2400) {
+        gCurrentObject->oUnlockDoorStarYawVel += 0x60;
+    }
+    switch (gCurrentObject->oUnlockDoorStarState) {
+        case UNLOCK_DOOR_STAR_RISING:
+            gCurrentObject->oPosY += 3.4f; // Raise the star up in the air
+            gCurrentObject->oMoveAngleYaw +=
+                gCurrentObject->oUnlockDoorStarYawVel; // Apply yaw velocity
+            obj_scale(gCurrentObject, gCurrentObject->oUnlockDoorStarTimer / 50.0f
+                                             + 0.5f); // Scale the star to be bigger
+            if (++gCurrentObject->oUnlockDoorStarTimer == 30) {
+                gCurrentObject->oUnlockDoorStarTimer = 0;
+                gCurrentObject->oUnlockDoorStarState++; // Sets state to UNLOCK_DOOR_STAR_WAITING
+            }
+            break;
+        case UNLOCK_DOOR_STAR_WAITING:
+            gCurrentObject->oMoveAngleYaw +=
+                gCurrentObject->oUnlockDoorStarYawVel; // Apply yaw velocity
+            if (++gCurrentObject->oUnlockDoorStarTimer == 30) {
+                play_sound(SOUND_MENU_STAR_SOUND,
+                           gCurrentObject->header.gfx.cameraToObject); // Play final sound
+                cur_obj_hide();                                            // Hide the object
+                gCurrentObject->oUnlockDoorStarTimer = 0;
+                gCurrentObject
+                    ->oUnlockDoorStarState++; // Sets state to UNLOCK_DOOR_STAR_SPAWNING_PARTICLES
+            }
+            break;
+        case UNLOCK_DOOR_STAR_SPAWNING_PARTICLES:
+            // Spawn two particles, opposite sides of the star.
+            star_door_unlock_spawn_particles(0);
+            star_door_unlock_spawn_particles(0x8000);
+            if (gCurrentObject->oUnlockDoorStarTimer++ == 20) {
+                gCurrentObject->oUnlockDoorStarTimer = 0;
+                gCurrentObject->oUnlockDoorStarState++; // Sets state to UNLOCK_DOOR_STAR_DONE
+            }
+            break;
+        case UNLOCK_DOOR_STAR_DONE: // The object stays loaded for an additional 50 frames so that the
+                                    // sound doesn't immediately stop.
+            if (gCurrentObject->oUnlockDoorStarTimer++ == 50) {
+                obj_mark_for_deletion(gCurrentObject);
+            }
+            break;
+    }
+    // Checks if the angle has cycled back to 0.
+    // This means that the code will execute when the star completes a full revolution.
+    if (prevYaw > (s16) gCurrentObject->oMoveAngleYaw) {
+        play_sound(
+            SOUND_GENERAL_SHORT_STAR,
+            gCurrentObject->header.gfx.cameraToObject); // Play a sound every time the star spins once
+    }
+}
+
+/**
+ * Generate a display list that sets the correct blend mode and color for mirror Mario.
+ */
+static Gfx *make_gfx_mario_alpha(struct GraphNodeGenerated *node, s16 alpha) {
+    Gfx *gfx;
+    Gfx *gfxHead = NULL;
+
+    if (alpha == 255) {
+        node->fnNode.node.flags = (node->fnNode.node.flags & 0xFF) | (LAYER_OPAQUE << 8);
+        gfxHead = alloc_display_list(2 * sizeof(*gfxHead));
+        gfx = gfxHead;
+    } else {
+        node->fnNode.node.flags = (node->fnNode.node.flags & 0xFF) | (LAYER_TRANSPARENT << 8);
+        gfxHead = alloc_display_list(3 * sizeof(*gfxHead));
+        gfx = gfxHead;
+        gDPSetAlphaCompare(gfx++, G_AC_DITHER);
+    }
+    gDPSetEnvColor(gfx++, 255, 255, 255, alpha);
+    gSPEndDisplayList(gfx);
+    return gfxHead;
+}
+
+/**
+ * Sets the correct blend mode and color for mirror Mario.
+ */
+Gfx *geo_mirror_mario_set_alpha(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    UNUSED u8 unused1[4];
+    Gfx *gfx = NULL;
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[asGenerated->parameter];
+    s16 alpha;
+    UNUSED u8 unused2[4];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        alpha = (bodyState->modelState & 0x100) ? (bodyState->modelState & 0xFF) : 255;
+        gfx = make_gfx_mario_alpha(asGenerated, alpha);
+    }
+    return gfx;
+}
+
+/**
+ * Determines if Mario is standing or running for the level of detail of his model.
+ * If Mario is standing still, he is always high poly. If he is running,
+ * his level of detail depends on the distance to the camera.
+ */
+Gfx *geo_switch_mario_stand_run(s32 callContext, struct GraphNode *node, UNUSED Mat4 *mtx) {
+    struct GraphNodeSwitchCase *switchCase = (struct GraphNodeSwitchCase *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[switchCase->numCases];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        // assign result. 0 if moving, 1 if stationary.
+        switchCase->selectedCase = ((bodyState->action & ACT_FLAG_STATIONARY) == 0);
+    }
+    return NULL;
+}
+
+/**
+ * Geo node script that makes Mario blink
+ */
+Gfx *geo_switch_mario_eyes(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNodeSwitchCase *switchCase = (struct GraphNodeSwitchCase *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[switchCase->numCases];
+    s16 blinkFrame;
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        if (bodyState->eyeState == 0) {
+            blinkFrame = ((switchCase->numCases * 32 + gAreaUpdateCounter) >> 1) & 0x1F;
+            if (blinkFrame < 7) {
+                switchCase->selectedCase = gMarioBlinkAnimation[blinkFrame];
+            } else {
+                switchCase->selectedCase = 0;
+            }
+        } else {
+            switchCase->selectedCase = bodyState->eyeState - 1;
+        }
+    }
+    return NULL;
+}
+
+/**
+ * Makes Mario's upper body tilt depending on the rotation stored in his bodyState
+ */
+Gfx *geo_mario_tilt_torso(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[asGenerated->parameter];
+    s32 action = bodyState->action;
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        struct GraphNodeRotation *rotNode = (struct GraphNodeRotation *) node->next;
+
+        if (action != ACT_BUTT_SLIDE && action != ACT_HOLD_BUTT_SLIDE && action != ACT_WALKING
+            && action != ACT_RIDING_SHELL_GROUND) {
+            vec3s_copy(bodyState->torsoAngle, gVec3sZero);
+        }
+        rotNode->rotation[0] = bodyState->torsoAngle[1];
+        rotNode->rotation[1] = bodyState->torsoAngle[2];
+        rotNode->rotation[2] = bodyState->torsoAngle[0];
+    }
+    return NULL;
+}
+
+/**
+ * Makes Mario's head rotate with the camera angle when in C-up mode
+ */
+Gfx *geo_mario_head_rotation(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[asGenerated->parameter];
+    s32 action = bodyState->action;
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        struct GraphNodeRotation *rotNode = (struct GraphNodeRotation *) node->next;
+        struct Camera *camera = gCurGraphNodeCamera->config.camera;
+
+        if (camera->mode == CAMERA_MODE_C_UP) {
+            rotNode->rotation[0] = gPlayerCameraState->headRotation[1];
+            rotNode->rotation[2] = gPlayerCameraState->headRotation[0];
+        } else if (action & ACT_FLAG_WATER_OR_TEXT) {
+            rotNode->rotation[0] = bodyState->headAngle[1];
+            rotNode->rotation[1] = bodyState->headAngle[2];
+            rotNode->rotation[2] = bodyState->headAngle[0];
+        } else {
+            vec3s_set(bodyState->headAngle, 0, 0, 0);
+            vec3s_set(rotNode->rotation, 0, 0, 0);
+        }
+    }
+    return NULL;
+}
+
+/**
+ * Switch between hand models.
+ * Possible options are described in the MarioHandGSCId enum.
+ */
+Gfx *geo_switch_mario_hand(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNodeSwitchCase *switchCase = (struct GraphNodeSwitchCase *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[0];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        if (bodyState->handState == MARIO_HAND_FISTS) {
+            // switch between fists (0) and open (1)
+            switchCase->selectedCase = ((bodyState->action & ACT_FLAG_SWIMMING_OR_FLYING) != 0);
+        } else {
+            if (switchCase->numCases == 0) {
+                switchCase->selectedCase =
+                    (bodyState->handState < 5) ? bodyState->handState : MARIO_HAND_OPEN;
+            } else {
+                switchCase->selectedCase =
+                    (bodyState->handState < 2) ? bodyState->handState : MARIO_HAND_FISTS;
+            }
+        }
+    }
+    return NULL;
+}
+
+/**
+ * Increase Mario's hand / foot size when he punches / kicks.
+ * Since animation geo nodes only support rotation, this scaling animation
+ * was scripted separately. The node with this script should be placed before
+ * a scaling node containing the hand / foot geo layout.
+ * ! Since the animation gets updated in GEO_CONTEXT_RENDER, drawing Mario multiple times
+ * (such as in the mirror room) results in a faster and desynced punch / kick animation.
+ */
+Gfx *geo_mario_hand_foot_scaler(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    static s16 sMarioAttackAnimCounter = 0;
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+    struct GraphNodeScale *scaleNode = (struct GraphNodeScale *) node->next;
+    struct MarioBodyState *bodyState = &gBodyStates[0];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        scaleNode->scale = 1.0f;
+        if (asGenerated->parameter == bodyState->punchState >> 6) {
+            if (sMarioAttackAnimCounter != gAreaUpdateCounter && (bodyState->punchState & 0x3F) > 0) {
+                bodyState->punchState -= 1;
+                sMarioAttackAnimCounter = gAreaUpdateCounter;
+            }
+            scaleNode->scale =
+                gMarioAttackScaleAnimation[asGenerated->parameter * 6 + (bodyState->punchState & 0x3F)]
+                / 10.0f;
+        }
+    }
+    return NULL;
+}
+
+/**
+ * Switch between normal cap, wing cap, vanish cap and metal cap.
+ */
+Gfx *geo_switch_mario_cap_effect(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNodeSwitchCase *switchCase = (struct GraphNodeSwitchCase *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[switchCase->numCases];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        switchCase->selectedCase = bodyState->modelState >> 8;
+    }
+    return NULL;
+}
+
+/**
+ * Determine whether Mario's head is drawn with or without a cap on.
+ * Also sets the visibility of the wing cap wings on or off.
+ */
+Gfx *geo_switch_mario_cap_on_off(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNode *next = node->next;
+    struct GraphNodeSwitchCase *switchCase = (struct GraphNodeSwitchCase *) node;
+    struct MarioBodyState *bodyState = &gBodyStates[switchCase->numCases];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        switchCase->selectedCase = bodyState->capState & 1;
+        while (next != node) {
+            if (next->type == GRAPH_NODE_TYPE_TRANSLATION_ROTATION) {
+                if (bodyState->capState & 2) {
+                    next->flags |= GRAPH_RENDER_ACTIVE;
+                } else {
+                    next->flags &= ~GRAPH_RENDER_ACTIVE;
+                }
+            }
+            next = next->next;
+        }
+    }
+    return NULL;
+}
+
+/**
+ * Geo node script that makes the wings on Mario's wing cap flap.
+ * Should be placed before a rotation node.
+ */
+Gfx *geo_mario_rotate_wing_cap_wings(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    s16 rotX;
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        struct GraphNodeRotation *rotNode = (struct GraphNodeRotation *) node->next;
+
+        if (!gBodyStates[asGenerated->parameter >> 1].wingFlutter) {
+            rotX = (coss((gAreaUpdateCounter & 0xF) << 12) + 1.0f) * 4096.0f;
+        } else {
+            rotX = (coss((gAreaUpdateCounter & 7) << 13) + 1.0f) * 6144.0f;
+        }
+        if (!(asGenerated->parameter & 1)) {
+            rotNode->rotation[0] = -rotX;
+        } else {
+            rotNode->rotation[0] = rotX;
+        }
+    }
+    return NULL;
+}
+
+/**
+ * Geo node that updates the held object node and the HOLP.
+ */
+Gfx *geo_switch_mario_hand_grab_pos(s32 callContext, struct GraphNode *b, Mat4 *mtx) {
+    struct GraphNodeHeldObject *asHeldObj = (struct GraphNodeHeldObject *) b;
+    Mat4 *curTransform = mtx;
+    struct MarioState *marioState = &gMarioStates[asHeldObj->playerIndex];
+
+    if (callContext == GEO_CONTEXT_RENDER) {
+        asHeldObj->objNode = NULL;
+        if (marioState->heldObj != NULL) {
+            asHeldObj->objNode = marioState->heldObj;
+            switch (marioState->marioBodyState->grabPos) {
+                case GRAB_POS_LIGHT_OBJ:
+                    if (marioState->action & ACT_FLAG_THROWING) {
+                        vec3s_set(asHeldObj->translation, 50, 0, 0);
+                    } else {
+                        vec3s_set(asHeldObj->translation, 50, 0, 110);
+                    }
+                    break;
+                case GRAB_POS_HEAVY_OBJ:
+                    vec3s_set(asHeldObj->translation, 145, -173, 180);
+                    break;
+                case GRAB_POS_BOWSER:
+                    vec3s_set(asHeldObj->translation, 80, -270, 1260);
+                    break;
+            }
+        }
+    } else if (callContext == GEO_CONTEXT_HELD_OBJ) {
+        // ! The HOLP is set here, which is why it only updates when the held object is drawn.
+        // This is why it won't update during a pause buffered hitstun or when the camera is very far
+        // away.
+        get_pos_from_transform_mtx(marioState->marioBodyState->heldObjLastPosition, *curTransform,
+                                   *gCurGraphNodeCamera->matrixPtr);
+    }
+    return NULL;
+}
+
+// X position of the mirror
+#define MIRROR_X 4331.53
+
+/**
+ * Geo node that creates a clone of Mario's geo node and updates it to becomes
+ * a mirror image of the player.
+ */
+Gfx *geo_render_mirror_mario(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    f32 mirroredX;
+    struct Object *mario = gMarioStates[0].marioObj;
+
+    switch (callContext) {
+        case GEO_CONTEXT_CREATE:
+            init_graph_node_object(NULL, &gMirrorMario, NULL, gVec3fZero, gVec3sZero, gVec3fOne);
+            break;
+        case GEO_CONTEXT_AREA_LOAD:
+            geo_add_child(node, &gMirrorMario.node);
+            break;
+        case GEO_CONTEXT_AREA_UNLOAD:
+            geo_remove_child(&gMirrorMario.node);
+            break;
+        case GEO_CONTEXT_RENDER:
+            if (mario->header.gfx.pos[0] > 1700.0f) {
+                // TODO: Is this a geo layout copy or a graph node copy?
+                gMirrorMario.sharedChild = mario->header.gfx.sharedChild;
+                gMirrorMario.areaIndex = mario->header.gfx.areaIndex;
+                vec3s_copy(gMirrorMario.angle, mario->header.gfx.angle);
+                vec3f_copy(gMirrorMario.pos, mario->header.gfx.pos);
+                vec3f_copy(gMirrorMario.scale, mario->header.gfx.scale);
+
+                gMirrorMario.animInfo = mario->header.gfx.animInfo;
+                mirroredX = MIRROR_X - gMirrorMario.pos[0];
+                gMirrorMario.pos[0] = mirroredX + MIRROR_X;
+                gMirrorMario.angle[1] = -gMirrorMario.angle[1];
+                gMirrorMario.scale[0] *= -1.0f;
+                ((struct GraphNode *) &gMirrorMario)->flags |= 1;
+            } else {
+                ((struct GraphNode *) &gMirrorMario)->flags &= ~1;
+            }
+            break;
+    }
+    return NULL;
+}
+
+/**
+ * Since Mirror Mario has an x scale of -1, the mesh becomes inside out.
+ * This node corrects that by changing the culling mode accordingly.
+ */
+Gfx *geo_mirror_mario_backface_culling(s32 callContext, struct GraphNode *node, UNUSED Mat4 *c) {
+    struct GraphNodeGenerated *asGenerated = (struct GraphNodeGenerated *) node;
+    Gfx *gfx = NULL;
+
+    if (callContext == GEO_CONTEXT_RENDER && gCurGraphNodeObject == &gMirrorMario) {
+        gfx = alloc_display_list(3 * sizeof(*gfx));
+
+        if (asGenerated->parameter == 0) {
+            gSPClearGeometryMode(&gfx[0], G_CULL_BACK);
+            gSPSetGeometryMode(&gfx[1], G_CULL_FRONT);
+            gSPEndDisplayList(&gfx[2]);
+        } else {
+            gSPClearGeometryMode(&gfx[0], G_CULL_FRONT);
+            gSPSetGeometryMode(&gfx[1], G_CULL_BACK);
+            gSPEndDisplayList(&gfx[2]);
+        }
+        asGenerated->fnNode.node.flags = (asGenerated->fnNode.node.flags & 0xFF) | (LAYER_OPAQUE << 8);
+    }
+    return gfx;
+}
diff --git a/src/game/memory.c b/src/game/memory.c
index 687c99a..47295dc 100644
--- a/src/game/memory.c
+++ b/src/game/memory.c
@@ -61,7 +61,9 @@ extern struct MainPoolBlock *sPoolListHeadR;
  */
 struct MemoryPool *gEffectsMemoryPool;
 
+
 uintptr_t sSegmentTable[32];
+uintptr_t sSegmentROMTable[32];
 u32 sPoolFreeSpace;
 u8 *sPoolStart;
 u8 *sPoolEnd;
@@ -291,7 +293,7 @@ void *load_segment(s32 segment, u8 *srcStart, u8 *srcEnd, u32 side) {
     void *addr = dynamic_dma_read(srcStart, srcEnd, side);
 
     if (addr != NULL) {
-        set_segment_base_addr(segment, addr);
+        set_segment_base_addr(segment, addr); sSegmentROMTable[segment] = (uintptr_t) srcStart;
     }
     return addr;
 }
diff --git a/src/game/memory.c.orig b/src/game/memory.c.orig
new file mode 100644
index 0000000..687c99a
--- /dev/null
+++ b/src/game/memory.c.orig
@@ -0,0 +1,617 @@
+#include <PR/ultratypes.h>
+
+#include "sm64.h"
+
+#define INCLUDED_FROM_MEMORY_C
+
+#include "buffers/buffers.h"
+#include "slidec.h"
+#include "game_init.h"
+#include "main.h"
+#include "memory.h"
+#include "segment_symbols.h"
+#include "segments.h"
+#ifdef GZIP
+#include <gzip.h>
+#endif
+#if defined(RNC1) || defined(RNC2)
+#include <rnc.h>
+#endif
+
+
+// round up to the next multiple
+#define ALIGN4(val) (((val) + 0x3) & ~0x3)
+#define ALIGN8(val) (((val) + 0x7) & ~0x7)
+#define ALIGN16(val) (((val) + 0xF) & ~0xF)
+
+struct MainPoolState {
+    u32 freeSpace;
+    struct MainPoolBlock *listHeadL;
+    struct MainPoolBlock *listHeadR;
+    struct MainPoolState *prev;
+};
+
+struct MainPoolBlock {
+    struct MainPoolBlock *prev;
+    struct MainPoolBlock *next;
+};
+
+struct MemoryBlock {
+    struct MemoryBlock *next;
+    u32 size;
+};
+
+struct MemoryPool {
+    u32 totalSpace;
+    struct MemoryBlock *firstBlock;
+    struct MemoryBlock freeList;
+};
+
+extern uintptr_t sSegmentTable[32];
+extern u32 sPoolFreeSpace;
+extern u8 *sPoolStart;
+extern u8 *sPoolEnd;
+extern struct MainPoolBlock *sPoolListHeadL;
+extern struct MainPoolBlock *sPoolListHeadR;
+
+
+/**
+ * Memory pool for small graphical effects that aren't connected to Objects.
+ * Used for colored text, paintings, and environmental snow and bubbles.
+ */
+struct MemoryPool *gEffectsMemoryPool;
+
+uintptr_t sSegmentTable[32];
+u32 sPoolFreeSpace;
+u8 *sPoolStart;
+u8 *sPoolEnd;
+struct MainPoolBlock *sPoolListHeadL;
+struct MainPoolBlock *sPoolListHeadR;
+
+
+static struct MainPoolState *gMainPoolState = NULL;
+
+uintptr_t set_segment_base_addr(s32 segment, void *addr) {
+    sSegmentTable[segment] = (uintptr_t) addr & 0x1FFFFFFF;
+    return sSegmentTable[segment];
+}
+
+void *get_segment_base_addr(s32 segment) {
+    return (void *) (sSegmentTable[segment] | 0x80000000);
+}
+
+#ifndef NO_SEGMENTED_MEMORY
+void *segmented_to_virtual(const void *addr) {
+    size_t segment = (uintptr_t) addr >> 24;
+    size_t offset = (uintptr_t) addr & 0x00FFFFFF;
+
+    return (void *) ((sSegmentTable[segment] + offset) | 0x80000000);
+}
+
+void *virtual_to_segmented(u32 segment, const void *addr) {
+    size_t offset = ((uintptr_t) addr & 0x1FFFFFFF) - sSegmentTable[segment];
+
+    return (void *) ((segment << 24) + offset);
+}
+
+void move_segment_table_to_dmem(void) {
+    s32 i;
+
+    for (i = 0; i < 16; i++) {
+        gSPSegment(gDisplayListHead++, i, sSegmentTable[i]);
+    }
+}
+#else
+void *segmented_to_virtual(const void *addr) {
+    return (void *) addr;
+}
+
+void *virtual_to_segmented(u32 segment, const void *addr) {
+    return (void *) addr;
+}
+
+void move_segment_table_to_dmem(void) {
+}
+#endif
+
+/**
+ * Initialize the main memory pool. This pool is conceptually a pair of stacks
+ * that grow inward from the left and right. It therefore only supports
+ * freeing the object that was most recently allocated from a side.
+ */
+void main_pool_init(void *start, void *end) {
+    sPoolStart = (u8 *) ALIGN16((uintptr_t) start) + 16;
+    sPoolEnd = (u8 *) ALIGN16((uintptr_t) end - 15) - 16;
+    sPoolFreeSpace = sPoolEnd - sPoolStart;
+
+    sPoolListHeadL = (struct MainPoolBlock *) (sPoolStart - 16);
+    sPoolListHeadR = (struct MainPoolBlock *) sPoolEnd;
+    sPoolListHeadL->prev = NULL;
+    sPoolListHeadL->next = NULL;
+    sPoolListHeadR->prev = NULL;
+    sPoolListHeadR->next = NULL;
+}
+
+/**
+ * Allocate a block of memory from the pool of given size, and from the
+ * specified side of the pool (MEMORY_POOL_LEFT or MEMORY_POOL_RIGHT).
+ * If there is not enough space, return NULL.
+ */
+void *main_pool_alloc(u32 size, u32 side) {
+    struct MainPoolBlock *newListHead;
+    void *addr = NULL;
+
+    size = ALIGN16(size) + 16;
+    if (size != 0 && sPoolFreeSpace >= size) {
+        sPoolFreeSpace -= size;
+        if (side == MEMORY_POOL_LEFT) {
+            newListHead = (struct MainPoolBlock *) ((u8 *) sPoolListHeadL + size);
+            sPoolListHeadL->next = newListHead;
+            newListHead->prev = sPoolListHeadL;
+            newListHead->next = NULL;
+            addr = (u8 *) sPoolListHeadL + 16;
+            sPoolListHeadL = newListHead;
+        } else {
+            newListHead = (struct MainPoolBlock *) ((u8 *) sPoolListHeadR - size);
+            sPoolListHeadR->prev = newListHead;
+            newListHead->next = sPoolListHeadR;
+            newListHead->prev = NULL;
+            sPoolListHeadR = newListHead;
+            addr = (u8 *) sPoolListHeadR + 16;
+        }
+    }
+    return addr;
+}
+
+/**
+ * Free a block of memory that was allocated from the pool. The block must be
+ * the most recently allocated block from its end of the pool, otherwise all
+ * newer blocks are freed as well.
+ * Return the amount of free space left in the pool.
+ */
+u32 main_pool_free(void *addr) {
+    struct MainPoolBlock *block = (struct MainPoolBlock *) ((u8 *) addr - 16);
+    struct MainPoolBlock *oldListHead = (struct MainPoolBlock *) ((u8 *) addr - 16);
+
+    if (oldListHead < sPoolListHeadL) {
+        while (oldListHead->next != NULL) {
+            oldListHead = oldListHead->next;
+        }
+        sPoolListHeadL = block;
+        sPoolListHeadL->next = NULL;
+        sPoolFreeSpace += (uintptr_t) oldListHead - (uintptr_t) sPoolListHeadL;
+    } else {
+        while (oldListHead->prev != NULL) {
+            oldListHead = oldListHead->prev;
+        }
+        sPoolListHeadR = block->next;
+        sPoolListHeadR->prev = NULL;
+        sPoolFreeSpace += (uintptr_t) sPoolListHeadR - (uintptr_t) oldListHead;
+    }
+    return sPoolFreeSpace;
+}
+
+/**
+ * Resize a block of memory that was allocated from the left side of the pool.
+ * If the block is increasing in size, it must be the most recently allocated
+ * block from the left side.
+ * The block does not move.
+ */
+void *main_pool_realloc(void *addr, u32 size) {
+    void *newAddr = NULL;
+    struct MainPoolBlock *block = (struct MainPoolBlock *) ((u8 *) addr - 16);
+
+    if (block->next == sPoolListHeadL) {
+        main_pool_free(addr);
+        newAddr = main_pool_alloc(size, MEMORY_POOL_LEFT);
+    }
+    return newAddr;
+}
+
+/**
+ * Return the size of the largest block that can currently be allocated from the
+ * pool.
+ */
+u32 main_pool_available(void) {
+    return sPoolFreeSpace - 16;
+}
+
+/**
+ * Push pool state, to be restored later. Return the amount of free space left
+ * in the pool.
+ */
+u32 main_pool_push_state(void) {
+    struct MainPoolState *prevState = gMainPoolState;
+    u32 freeSpace = sPoolFreeSpace;
+    struct MainPoolBlock *lhead = sPoolListHeadL;
+    struct MainPoolBlock *rhead = sPoolListHeadR;
+
+    gMainPoolState = main_pool_alloc(sizeof(*gMainPoolState), MEMORY_POOL_LEFT);
+    gMainPoolState->freeSpace = freeSpace;
+    gMainPoolState->listHeadL = lhead;
+    gMainPoolState->listHeadR = rhead;
+    gMainPoolState->prev = prevState;
+    return sPoolFreeSpace;
+}
+
+/**
+ * Restore pool state from a previous call to main_pool_push_state. Return the
+ * amount of free space left in the pool.
+ */
+u32 main_pool_pop_state(void) {
+    sPoolFreeSpace = gMainPoolState->freeSpace;
+    sPoolListHeadL = gMainPoolState->listHeadL;
+    sPoolListHeadR = gMainPoolState->listHeadR;
+    gMainPoolState = gMainPoolState->prev;
+    return sPoolFreeSpace;
+}
+
+/**
+ * Perform a DMA read from ROM. The transfer is split into 4KB blocks, and this
+ * function blocks until completion.
+ */
+void dma_read(u8 *dest, u8 *srcStart, u8 *srcEnd) {
+    u32 size = ALIGN16(srcEnd - srcStart);
+
+    osInvalDCache(dest, size);
+    while (size != 0) {
+        u32 copySize = (size >= 0x1000) ? 0x1000 : size;
+
+        osPiStartDma(&gDmaIoMesg, OS_MESG_PRI_NORMAL, OS_READ, (uintptr_t) srcStart, dest, copySize,
+                     &gDmaMesgQueue);
+        osRecvMesg(&gDmaMesgQueue, &D_80339BEC, OS_MESG_BLOCK);
+
+        dest += copySize;
+        srcStart += copySize;
+        size -= copySize;
+    }
+}
+
+/**
+ * Perform a DMA read from ROM, allocating space in the memory pool to write to.
+ * Return the destination address.
+ */
+static void *dynamic_dma_read(u8 *srcStart, u8 *srcEnd, u32 side) {
+    void *dest;
+    u32 size = ALIGN16(srcEnd - srcStart);
+
+    dest = main_pool_alloc(size, side);
+    if (dest != NULL) {
+        dma_read(dest, srcStart, srcEnd);
+    }
+    return dest;
+}
+
+#ifndef NO_SEGMENTED_MEMORY
+/**
+ * Load data from ROM into a newly allocated block, and set the segment base
+ * address to this block.
+ */
+void *load_segment(s32 segment, u8 *srcStart, u8 *srcEnd, u32 side) {
+    void *addr = dynamic_dma_read(srcStart, srcEnd, side);
+
+    if (addr != NULL) {
+        set_segment_base_addr(segment, addr);
+    }
+    return addr;
+}
+
+/*
+ * Allocate a block of memory starting at destAddr and ending at the end of
+ * the memory pool. Then copy srcStart through srcEnd from ROM to this block.
+ * If this block is not large enough to hold the ROM data, or that portion
+ * of the pool is already allocated, return NULL.
+ */
+void *load_to_fixed_pool_addr(u8 *destAddr, u8 *srcStart, u8 *srcEnd) {
+    void *dest = NULL;
+    u32 srcSize = ALIGN16(srcEnd - srcStart);
+    u32 destSize = ALIGN16((u8 *) sPoolListHeadR - destAddr);
+
+    if (srcSize <= destSize) {
+        dest = main_pool_alloc(destSize, MEMORY_POOL_RIGHT);
+        if (dest != NULL) {
+            bzero(dest, destSize);
+            osWritebackDCacheAll();
+            dma_read(dest, srcStart, srcEnd);
+            osInvalICache(dest, destSize);
+            osInvalDCache(dest, destSize);
+        }
+    } else {
+    }
+    return dest;
+}
+
+/**
+ * Decompress the block of ROM data from srcStart to srcEnd and return a
+ * pointer to an allocated buffer holding the decompressed data. Set the
+ * base address of segment to this address.
+ */
+void *load_segment_decompress(s32 segment, u8 *srcStart, u8 *srcEnd) {
+    void *dest = NULL;
+
+#ifdef GZIP
+    u32 compSize = (srcEnd - 4 - srcStart);
+#else
+    u32 compSize = ALIGN16(srcEnd - srcStart);
+#endif
+    u8 *compressed = main_pool_alloc(compSize, MEMORY_POOL_RIGHT);
+#ifdef GZIP
+    // Decompressed size from end of gzip
+    u32 *size = (u32 *) (compressed + compSize);
+#else
+    // Decompressed size from mio0 header
+    u32 *size = (u32 *) (compressed + 4);
+#endif
+    if (compressed != NULL) {
+        dma_read(compressed, srcStart, srcEnd);
+        dest = main_pool_alloc(*size, MEMORY_POOL_LEFT);
+        if (dest != NULL) {
+			osSyncPrintf("start decompress\n");
+#ifdef GZIP
+            expand_gzip(compressed, dest, compSize, (u32)size);
+#elif RNC1
+            Propack_UnpackM1(compressed, dest);
+#elif RNC2
+            Propack_UnpackM2(compressed, dest);
+#elif YAY0
+            slidstart(compressed, dest);
+#elif MIO0
+            decompress(compressed, dest);
+#endif
+			osSyncPrintf("end decompress\n");
+            set_segment_base_addr(segment, dest);
+            main_pool_free(compressed);
+        } else {
+        }
+    } else {
+    }
+    return dest;
+}
+
+void *load_segment_decompress_heap(u32 segment, u8 *srcStart, u8 *srcEnd) {
+    UNUSED void *dest = NULL;
+
+#ifdef GZIP
+    u32 compSize = (srcEnd - 4 - srcStart);
+#else
+    u32 compSize = ALIGN16(srcEnd - srcStart);
+#endif
+    u8 *compressed = main_pool_alloc(compSize, MEMORY_POOL_RIGHT);
+#ifdef GZIP
+    // Decompressed size from end of gzip
+    u32 *size = (u32 *) (compressed + compSize);
+#endif
+    if (compressed != NULL) {
+        dma_read(compressed, srcStart, srcEnd);
+#ifdef GZIP
+        expand_gzip(compressed, gDecompressionHeap, compSize, (u32)size);
+#elif RNC1
+        Propack_UnpackM1(compressed, gDecompressionHeap);
+#elif RNC2
+        Propack_UnpackM2(compressed, gDecompressionHeap);
+#elif YAY0
+        slidstart(compressed, gDecompressionHeap);
+#elif MIO0
+        decompress(compressed, gDecompressionHeap);
+#endif
+        set_segment_base_addr(segment, gDecompressionHeap);
+        main_pool_free(compressed);
+    } else {
+    }
+    return gDecompressionHeap;
+}
+
+void load_engine_code_segment(void) {
+    void *startAddr = (void *) _engineSegmentStart;
+    u32 totalSize = _engineSegmentEnd - _engineSegmentStart;
+    UNUSED u32 alignedSize = ALIGN16(_engineSegmentRomEnd - _engineSegmentRomStart);
+
+    bzero(startAddr, totalSize);
+    osWritebackDCacheAll();
+    dma_read(startAddr, _engineSegmentRomStart, _engineSegmentRomEnd);
+    osInvalICache(startAddr, totalSize);
+    osInvalDCache(startAddr, totalSize);
+}
+#endif
+
+/**
+ * Allocate an allocation-only pool from the main pool. This pool doesn't
+ * support freeing allocated memory.
+ * Return NULL if there is not enough space in the main pool.
+ */
+struct AllocOnlyPool *alloc_only_pool_init(u32 size, u32 side) {
+    void *addr;
+    struct AllocOnlyPool *subPool = NULL;
+
+    size = ALIGN4(size);
+    addr = main_pool_alloc(size + sizeof(struct AllocOnlyPool), side);
+    if (addr != NULL) {
+        subPool = (struct AllocOnlyPool *) addr;
+        subPool->totalSpace = size;
+        subPool->usedSpace = 0;
+        subPool->startPtr = (u8 *) addr + sizeof(struct AllocOnlyPool);
+        subPool->freePtr = (u8 *) addr + sizeof(struct AllocOnlyPool);
+    }
+    return subPool;
+}
+
+/**
+ * Allocate from an allocation-only pool.
+ * Return NULL if there is not enough space.
+ */
+void *alloc_only_pool_alloc(struct AllocOnlyPool *pool, s32 size) {
+    void *addr = NULL;
+
+    size = ALIGN4(size);
+    if (size > 0 && pool->usedSpace + size <= pool->totalSpace) {
+        addr = pool->freePtr;
+        pool->freePtr += size;
+        pool->usedSpace += size;
+    }
+    return addr;
+}
+
+/**
+ * Resize an allocation-only pool.
+ * If the pool is increasing in size, the pool must be the last thing allocated
+ * from the left end of the main pool.
+ * The pool does not move.
+ */
+struct AllocOnlyPool *alloc_only_pool_resize(struct AllocOnlyPool *pool, u32 size) {
+    struct AllocOnlyPool *newPool;
+
+    size = ALIGN4(size);
+    newPool = main_pool_realloc(pool, size + sizeof(struct AllocOnlyPool));
+    if (newPool != NULL) {
+        pool->totalSpace = size;
+    }
+    return newPool;
+}
+
+/**
+ * Allocate a memory pool from the main pool. This pool supports arbitrary
+ * order for allocation/freeing.
+ * Return NULL if there is not enough space in the main pool.
+ */
+struct MemoryPool *mem_pool_init(u32 size, u32 side) {
+    void *addr;
+    struct MemoryBlock *block;
+    struct MemoryPool *pool = NULL;
+
+    size = ALIGN4(size);
+    addr = main_pool_alloc(size + sizeof(struct MemoryPool), side);
+    if (addr != NULL) {
+        pool = (struct MemoryPool *) addr;
+
+        pool->totalSpace = size;
+        pool->firstBlock = (struct MemoryBlock *) ((u8 *) addr + sizeof(struct MemoryPool));
+        pool->freeList.next = (struct MemoryBlock *) ((u8 *) addr + sizeof(struct MemoryPool));
+
+        block = pool->firstBlock;
+        block->next = NULL;
+        block->size = pool->totalSpace;
+    }
+    return pool;
+}
+
+/**
+ * Allocate from a memory pool. Return NULL if there is not enough space.
+ */
+void *mem_pool_alloc(struct MemoryPool *pool, u32 size) {
+    struct MemoryBlock *freeBlock = &pool->freeList;
+    void *addr = NULL;
+
+    size = ALIGN4(size) + sizeof(struct MemoryBlock);
+    while (freeBlock->next != NULL) {
+        if (freeBlock->next->size >= size) {
+            addr = (u8 *) freeBlock->next + sizeof(struct MemoryBlock);
+            if (freeBlock->next->size - size <= sizeof(struct MemoryBlock)) {
+                freeBlock->next = freeBlock->next->next;
+            } else {
+                struct MemoryBlock *newBlock = (struct MemoryBlock *) ((u8 *) freeBlock->next + size);
+                newBlock->size = freeBlock->next->size - size;
+                newBlock->next = freeBlock->next->next;
+                freeBlock->next->size = size;
+                freeBlock->next = newBlock;
+            }
+            break;
+        }
+        freeBlock = freeBlock->next;
+    }
+    return addr;
+}
+
+/**
+ * Free a block that was allocated using mem_pool_alloc.
+ */
+void mem_pool_free(struct MemoryPool *pool, void *addr) {
+    struct MemoryBlock *block = (struct MemoryBlock *) ((u8 *) addr - sizeof(struct MemoryBlock));
+    struct MemoryBlock *freeList = pool->freeList.next;
+
+    if (pool->freeList.next == NULL) {
+        pool->freeList.next = block;
+        block->next = NULL;
+    } else {
+        if (block < pool->freeList.next) {
+            if ((u8 *) pool->freeList.next == (u8 *) block + block->size) {
+                block->size += freeList->size;
+                block->next = freeList->next;
+                pool->freeList.next = block;
+            } else {
+                block->next = pool->freeList.next;
+                pool->freeList.next = block;
+            }
+        } else {
+            while (freeList->next != NULL) {
+                if (freeList < block && block < freeList->next) {
+                    break;
+                }
+                freeList = freeList->next;
+            }
+            if ((u8 *) freeList + freeList->size == (u8 *) block) {
+                freeList->size += block->size;
+                block = freeList;
+            } else {
+                block->next = freeList->next;
+                freeList->next = block;
+            }
+            if (block->next != NULL && (u8 *) block->next == (u8 *) block + block->size) {
+                block->size = block->size + block->next->size;
+                block->next = block->next->next;
+            }
+        }
+    }
+}
+
+void *alloc_display_list(u32 size) {
+    void *ptr = NULL;
+
+    size = ALIGN8(size);
+    if (gGfxPoolEnd - size >= (u8 *) gDisplayListHead) {
+        gGfxPoolEnd -= size;
+        ptr = gGfxPoolEnd;
+    } else {
+    }
+    return ptr;
+}
+
+static struct MarioAnimDmaRelatedThing *func_802789F0(u8 *srcAddr) {
+    struct MarioAnimDmaRelatedThing *sp1C = dynamic_dma_read(srcAddr, srcAddr + sizeof(u32),
+                                                             MEMORY_POOL_LEFT);
+    u32 size = sizeof(u32) + (sizeof(u8 *) - sizeof(u32)) + sizeof(u8 *) +
+               sp1C->count * sizeof(struct OffsetSizePair);
+    main_pool_free(sp1C);
+
+    sp1C = dynamic_dma_read(srcAddr, srcAddr + size, MEMORY_POOL_LEFT);
+    sp1C->srcAddr = srcAddr;
+    return sp1C;
+}
+
+void func_80278A78(struct MarioAnimation *a, void *b, struct Animation *target) {
+    if (b != NULL) {
+        a->animDmaTable = func_802789F0(b);
+    }
+    a->currentAnimAddr = NULL;
+    a->targetAnim = target;
+}
+
+// TODO: (Scrub C)
+s32 load_patchable_table(struct MarioAnimation *a, u32 index) {
+    s32 ret = FALSE;
+    struct MarioAnimDmaRelatedThing *sp20 = a->animDmaTable;
+    u8 *addr;
+    u32 size;
+
+    if (index < sp20->count) {
+        do {
+            addr = sp20->srcAddr + sp20->anim[index].offset;
+            size = sp20->anim[index].size;
+        } while (0);
+        if (a->currentAnimAddr != addr) {
+            dma_read((u8 *) a->targetAnim, addr, addr + size);
+            a->currentAnimAddr = addr;
+            ret = TRUE;
+        }
+    }
+    return ret;
+}
diff --git a/src/game/memory.h b/src/game/memory.h
index 7a51e59..90fa61b 100644
--- a/src/game/memory.h
+++ b/src/game/memory.h
@@ -66,4 +66,6 @@ void *alloc_display_list(u32 size);
 void func_80278A78(struct MarioAnimation *a, void *b, struct Animation *target);
 s32 load_patchable_table(struct MarioAnimation *a, u32 b);
 
+
+extern uintptr_t sSegmentROMTable[32];
 #endif // MEMORY_H
diff --git a/src/game/object_list_processor.c b/src/game/object_list_processor.c
index d01f5eb..291adbe 100644
--- a/src/game/object_list_processor.c
+++ b/src/game/object_list_processor.c
@@ -261,16 +261,50 @@ void spawn_particle(u32 activeParticleFlag, s16 model, const BehaviorScript *beh
     }
 }
 
+#include "src/engine/math_util.h"
+#include <stdio.h>
+void print_text(s32, s32, char*);
+
+f32 intDist;
+Vec3f intersect;
+
 /**
  * Mario's primary behavior update function.
  */
 void bhv_mario_update(void) {
     u32 particleFlags = 0;
     s32 i;
+    Vec3f dir;
+    Vec3f rayStart;
+    struct SurfaceNode *node;
+    f32 intDist;
 
     particleFlags = execute_mario_action(gCurrentObject);
+
     gCurrentObject->oMarioParticleFlags = particleFlags;
 
+    rayStart[0] = gMarioState->pos[0];
+    rayStart[1] = gMarioState->pos[1] + 80;
+    rayStart[2] = gMarioState->pos[2];
+
+    dir[0] = sins(gMarioState->faceAngle[1]);
+    dir[1] = 0;
+    dir[2] = coss(gMarioState->faceAngle[1]);
+
+    // intDist = raycast(rayStart, dir, 1000.0f, intersect, &node);
+
+    // if (intDist >= 0.0f)
+    // {
+        // char text[20];
+        // struct Object* particle;
+        // sprintf(text, "hit: %4.0f %4.0f %4.0f %4.0f", intDist, intersect[0], intersect[1], intersect[2]);
+        // print_text(20, 20, text);
+        // particle = spawn_object(gMarioObject, MODEL_SPARKLES, bhvCoinSparkles);
+        // particle->oPosX = intersect[0] - dir[0] * 10;
+        // particle->oPosY = intersect[1] - dir[1] * 10;
+        // particle->oPosZ = intersect[2] - dir[2] * 10;
+    // }
+
     // Mario code updates MarioState's versions of position etc, so we need
     // to sync it with the Mario object
     copy_mario_state_to_object();
diff --git a/src/game/rendering_graph_node.c b/src/game/rendering_graph_node.c
index 58238e8..b708281 100644
--- a/src/game/rendering_graph_node.c
+++ b/src/game/rendering_graph_node.c
@@ -11,6 +11,8 @@
 #include "shadow.h"
 #include "sm64.h"
 
+#include <point_lights.h>
+
 /**
  * This file contains the code that processes the scene graph for rendering.
  * The scene graph is responsible for drawing everything except the HUD / text boxes.
@@ -304,13 +306,253 @@ static void geo_process_switch(struct GraphNodeSwitchCase *node) {
     }
 }
 
+extern struct MarioState *gMarioState;
+
+struct SceneLight gPointLights[MAX_POINT_LIGHTS];
+s8 gLightDir[3] = {0x28, 0x28, 0x28};
+u8 gLightDirTransformEnabled = 0;
+u8 gPointLightCount = 0;
+u8 gAreaPointLightCount = 0;
+
+Lights1 gDirectionalLight = gdSPDefLights1(
+	0x7F, 0x7F, 0x7F,
+	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
+
+/**
+ * Gets the square of the distance between two vectors
+ * The first vector is of floats, the second is of s16
+ * All math operations are done on integers
+ */
+u32 vec3f_vec3s_dist_sq(Vec3f p1, Vec3s p2)
+{
+    s32 dx = p2[0] - (s32)p1[0];
+    s32 dy = p2[1] - (s32)p1[1];
+    s32 dz = p2[2] - (s32)p1[2];
+    return (u32)(dx * dx) + (u32)(dy * dy) + (u32)(dz * dz);
+}
+
+#define MAX_POINT_LIGHT_DIST (3000)
+
+#include "src/engine/surface_collision.h"
+
+int gPointLightCompatibilityMode = 0;
+Mat4 *viewMat;
+
+/**
+ * Creates a displaylist to set the active point lights closest to a given location
+ */
+Gfx* createPointLightsDl(Vec3f pos, f32 yOffset)
+{
+    Gfx *pointLightsDl, *pointLightsDlHead;
+
+    // The lights to be used for this object
+    struct SceneLight *lights[MAX_POINT_LIGHTS_ACTIVE];
+
+    // The number of lights selected to be active for this object
+    s32 numLightsPicked = 0;
+
+    // The square of the distances to each point light
+    u32 distancesSq[MAX_POINT_LIGHTS_ACTIVE];
+
+    // The distance of the furthest light selected
+    u32 maxDistanceSq;
+
+    // The index of the furthest away light from this object
+    // i.e. if index 1 in lights is the furthest light from this object, then this is 1
+    u32 maxIndex = 0;
+
+    // The square of the distance to the current light being checked
+    u32 curDistSq;
+
+    // The index of a point light being added (its position in Light *lights[])
+    s32 newIndex;
+
+    // Iterator variables
+    s32 i,j;
+    
+    // Raycast variables
+    Vec3f dir, hit;
+    struct Surface* surf;
+
+    if (gPointLightCount)
+    {
+        // Probe higher by the given offset (used since most objects have their origin at the bottom)
+        pos[1] += yOffset;
+    }
+
+    // Find the closest lights
+    for (i = 0; i < gPointLightCount; i++)
+    {
+        // Reset newIndex so we can use it to check if the current light was added
+        newIndex = -1;
+
+        // Get the distance to the current light from the object
+        curDistSq = vec3f_vec3s_dist_sq(pos, gPointLights[i].worldPos);
+
+        // Skip this point light if it is too far away to matter
+        if (curDistSq > MAX_POINT_LIGHT_DIST * MAX_POINT_LIGHT_DIST) continue;
+
+        // Skip this point light if it is set to occlude and is occluded
+        // If the object and the light are at the same position, skip the raycast
+        if (curDistSq != 0 && gPointLights[i].flags & LIGHT_FLAG_OCCLUDE)
+        {
+            dir[0] = gPointLights[i].worldPos[0] - pos[0];
+            dir[1] = gPointLights[i].worldPos[1] - pos[1];
+            dir[2] = gPointLights[i].worldPos[2] - pos[2];
+            // Raycast will return a nonnegative distance in the case of a hit
+            if (raycast(pos, dir, sqrtf(curDistSq), hit, &surf) >= 0)
+            {
+                continue;
+            }
+        }
+
+        // If we haven't filled all the active light slots, just add this one
+        if (numLightsPicked < MAX_POINT_LIGHTS_ACTIVE)
+        {
+            // Record the index this light was placed into and update the picked light count
+            newIndex = numLightsPicked;
+            numLightsPicked++;
+        }
+        // Otherwise, we need to check if this one is closer than any of the ones picked thus far
+        else
+        {
+            // Check if this light is closer than the furthest away one to be used
+            // If it is, then we remove the furthest light and add this one
+            if (curDistSq < distancesSq[maxIndex])
+            {
+                newIndex = maxIndex;
+            }
+        }
+
+        // If this light was added, add it to the lights array, update its distance,
+        // and update the distance order of the other lights
+        if (newIndex != -1)
+        {
+            // Place this light in the lights array
+            lights[newIndex] = &gPointLights[i];
+
+            // Update the distance to this light
+            distancesSq[newIndex] = curDistSq;
+
+            // Set this light to the be furthest one away
+            // This will get updated in the following loop
+            maxDistanceSq = curDistSq;
+            maxIndex = newIndex;
+
+            // Iterate over every light, checking to see if it is further than the current furthest
+            // If it is, then set it to be the furthest light instead
+            for (j = 0; j < MAX_POINT_LIGHTS_ACTIVE; j++)
+            {
+                // Skip checking the current light, since we assumed it was the furthest already
+                if (j == newIndex) continue;
+
+                // Check if the light being checked is further than current furthest
+                if (maxDistanceSq < distancesSq[j])
+                {
+                    maxDistanceSq = distancesSq[j];
+                    maxIndex = j;
+                }
+            }
+        }
+    }
+    
+    // Allocate a displaylist with room for each gSPLight and the gSPEndDisplayList
+    pointLightsDlHead = pointLightsDl = alloc_display_list(sizeof(Gfx) * (numLightsPicked + 4));
+
+    gSPNumLights(pointLightsDl++, NUMLIGHTS_1 + numLightsPicked);
+    
+    gSPLight(pointLightsDl++, &gDirectionalLight.l, LIGHT_1);
+
+    // Add the gSPLights to the display list
+    for (i = 0; i < numLightsPicked; i++)
+    {
+        if (gPointLightCompatibilityMode)
+        {
+            Light *curLight = alloc_display_list(sizeof(Light));
+            u8 color[3];
+            f32 lightDist;
+            f32 lightScale;
+
+            bzero(curLight, sizeof(Light));
+
+            color[0] = lights[i]->l.pl.col[0];
+            color[1] = lights[i]->l.pl.col[1];
+            color[2] = lights[i]->l.pl.col[2];
+
+            dir[0] = lights[i]->worldPos[0] - pos[0];
+            dir[1] = lights[i]->worldPos[1] - pos[1];
+            dir[2] = lights[i]->worldPos[2] - pos[2];
+
+            lightDist = sqrtf(distancesSq[i]);
+            lightScale = 1.0f / ((1.0f / 65536.0f) * (
+                0.25f * lights[i]->l.pl.is_point +
+                2.0f * lightDist * lights[i]->l.pl.linear_attenuation +
+                0.3f * lightDist * lightDist * lights[i]->l.pl.quadratic_attenuation) + 1.0f);
+
+            curLight->l.col[0] = curLight->l.colc[0] = (u8)(color[0] * lightScale + 0.5f);
+            curLight->l.col[1] = curLight->l.colc[1] = (u8)(color[1] * lightScale + 0.5f);
+            curLight->l.col[2] = curLight->l.colc[2] = (u8)(color[2] * lightScale + 0.5f);
+            
+            dir[0] *= 120.0f / (lightDist);
+            dir[1] *= 120.0f / (lightDist);
+            dir[2] *= 120.0f / (lightDist);
+
+            curLight->l.dir[0] = (s8)(dir[0] * (*viewMat)[0][0] + dir[1] * (*viewMat)[1][0] + dir[2] * (*viewMat)[2][0]);
+            curLight->l.dir[1] = (s8)(dir[0] * (*viewMat)[0][1] + dir[1] * (*viewMat)[1][1] + dir[2] * (*viewMat)[2][1]);
+            curLight->l.dir[2] = (s8)(dir[0] * (*viewMat)[0][2] + dir[1] * (*viewMat)[1][2] + dir[2] * (*viewMat)[2][2]);
+
+            gSPLight(pointLightsDl++, curLight, LIGHT_2 + i);
+        }
+        else
+        {
+            gSPLight(pointLightsDl++, &lights[i]->l, LIGHT_2 + i);
+        }
+    }
+
+    if (gPointLightCount)
+    {
+        // Restore the original position
+        pos[1] -= yOffset;
+    }
+
+    gSPLight(pointLightsDl++, &gDirectionalLight.a, LIGHT_2 + numLightsPicked);
+
+    // Terminate the display list
+    gSPEndDisplayList(pointLightsDl);
+
+    // Return the head of the created display list
+    return pointLightsDlHead;
+}
+
+void emit_light(Vec3f pos, u32 color, u32 quadraticFalloff, u32 linearFalloff)
+{
+    gPointLights[gPointLightCount].l.pl.colc[0] = gPointLights[gPointLightCount].l.pl.col[0] = (color >> 24) & 0xFF;
+    gPointLights[gPointLightCount].l.pl.colc[1] = gPointLights[gPointLightCount].l.pl.col[1] = (color >> 16) & 0xFF;
+    gPointLights[gPointLightCount].l.pl.colc[2] = gPointLights[gPointLightCount].l.pl.col[2] = (color >> 8)  & 0xFF;
+    gPointLights[gPointLightCount].l.pl.is_point = 0x08;
+    gPointLights[gPointLightCount].l.pl.linear_attenuation = linearFalloff;
+    gPointLights[gPointLightCount].l.pl.quadratic_attenuation = quadraticFalloff;
+    gPointLights[gPointLightCount].worldPos[0] = pos[0];
+    gPointLights[gPointLightCount].worldPos[1] = pos[1];
+    gPointLights[gPointLightCount].worldPos[2] = pos[2];
+    gPointLightCount++;
+}
+
+#include <stdio.h>
+
+extern void linear_mtxf_mul_vec3f(Mat4, Vec3f, Vec3f);
+
 /**
  * Process a camera node.
  */
-static void geo_process_camera(struct GraphNodeCamera *node) {
+void geo_process_camera(struct GraphNodeCamera *node) {
     Mat4 cameraTransform;
     Mtx *rollMtx = alloc_display_list(sizeof(*rollMtx));
     Mtx *mtx = alloc_display_list(sizeof(*mtx));
+    Gfx *setLightsDL = alloc_display_list(sizeof(Gfx) * 3);
+    Gfx *levelLightsDL;
+    Vec3f probePos = {0, 0, 0};
+    s32 i;
 
     if (node->fnNode.func != NULL) {
         node->fnNode.func(GEO_CONTEXT_RENDER, &node->fnNode.node, gMatStack[gMatStackIndex]);
@@ -318,11 +560,31 @@ static void geo_process_camera(struct GraphNodeCamera *node) {
     mtxf_rotate_xy(rollMtx, node->rollScreen);
 
     gSPMatrix(gDisplayListHead++, VIRTUAL_TO_PHYSICAL(rollMtx), G_MTX_PROJECTION | G_MTX_MUL | G_MTX_NOPUSH);
+    geo_append_display_list(setLightsDL, LAYER_OPAQUE);
+    // gSPNumLights(gDisplayListHead++, NUMLIGHTS_2);
+    // gSPLight(gDisplayListHead++, gDirectionalLight.l, LIGHT_1);
+    // gSPLight(gDisplayListHead++, &gPointLights[0].l, LIGHT_2);
+    // gSPLight(gDisplayListHead++, &gDirectionalLight.a, LIGHT_2);
+
+    // gPointLights[0].l.pl.is_point = 0x08;
+    // gPointLights[0].l.pl.pos[0] = 100;
+    // gPointLights[0].l.pl.pos[1] = 100;
+    // gPointLights[0].l.pl.pos[2] = -500;
+    // gPointLights[0].l.pl.colc[0] = gPointLights[0].l.pl.col[0] = 0xFF;
+    // gPointLights[0].l.pl.colc[1] = gPointLights[0].l.pl.col[1] = 0xFF;
+    // gPointLights[0].l.pl.colc[2] = gPointLights[0].l.pl.col[2] = 0xFF;
 
     mtxf_lookat(cameraTransform, node->pos, node->focus, node->roll);
     mtxf_mul(gMatStack[gMatStackIndex + 1], cameraTransform, gMatStack[gMatStackIndex]);
     gMatStackIndex++;
     mtxf_to_mtx(mtx, gMatStack[gMatStackIndex]);
+    
+
+    if (gPlayer1Controller->buttonPressed & L_TRIG)
+        gPointLightCompatibilityMode ^= 1;
+
+    viewMat = &gMatStack[gMatStackIndex];
+
     gMatStackFixed[gMatStackIndex] = mtx;
     if (node->fnNode.node.children != 0) {
         gCurGraphNodeCamera = node;
@@ -330,6 +592,50 @@ static void geo_process_camera(struct GraphNodeCamera *node) {
         geo_process_node_and_siblings(node->fnNode.node.children);
         gCurGraphNodeCamera = NULL;
     }
+
+
+    // Transform the point light positions into screen space
+    for (i = 0; i < gPointLightCount; i++)
+    {
+        vec3s_copy(gPointLights[i].l.pl.pos, gPointLights[i].worldPos);
+        mtxf_mul_vec3s(gMatStack[gMatStackIndex], gPointLights[i].l.pl.pos);
+    }
+
+    // Transform the directional light if enabled
+    if (gLightDirTransformEnabled)
+    {
+        gDirectionalLight.l->l.dir[0] = -(s8)(gLightDir[0] * gMatStack[gMatStackIndex][0][0] + gLightDir[1] * gMatStack[gMatStackIndex][1][0] + gLightDir[2] * gMatStack[gMatStackIndex][2][0]);
+        gDirectionalLight.l->l.dir[1] = -(s8)(gLightDir[0] * gMatStack[gMatStackIndex][0][1] + gLightDir[1] * gMatStack[gMatStackIndex][1][1] + gLightDir[2] * gMatStack[gMatStackIndex][2][1]);
+        gDirectionalLight.l->l.dir[2] = -(s8)(gLightDir[0] * gMatStack[gMatStackIndex][0][2] + gLightDir[1] * gMatStack[gMatStackIndex][1][2] + gLightDir[2] * gMatStack[gMatStackIndex][2][2]);
+    }
+    else
+    {
+        gDirectionalLight.l->l.dir[0] = gLightDir[0];
+        gDirectionalLight.l->l.dir[1] = gLightDir[1];
+        gDirectionalLight.l->l.dir[2] = gLightDir[2];
+    }
+    
+    // Set up the light display list
+    // This has to be done after the area's GeoLayout is processed, as
+    // some point lights may be defined there instead of by objects
+    if (gPointLightCount > 0)
+    {
+        // Enable point lighting
+        gSPSetGeometryMode(setLightsDL++, G_POINT_LIGHTING);
+    }
+    else
+    {
+        // Disable point lighting (may not be required, but doesn't hurt)
+        gSPClearGeometryMode(setLightsDL++, G_POINT_LIGHTING);
+    }
+
+    // Enable the lights closes to the given probe position as the level's lighting
+    levelLightsDL = createPointLightsDl(probePos, 300.0f);
+    gSPDisplayList(setLightsDL++, levelLightsDL);
+
+    // Terminate the point lighting DL
+    gSPEndDisplayList(setLightsDL++);
+
     gMatStackIndex--;
 }
 
@@ -804,6 +1110,7 @@ static s32 obj_is_in_view(struct GraphNodeObject *node, Mat4 matrix) {
 static void geo_process_object(struct Object *node) {
     Mat4 mtxf;
     s32 hasAnimation = (node->header.gfx.node.flags & GRAPH_RENDER_HAS_ANIMATION) != 0;
+    u8 i;
 
     if (node->header.gfx.areaIndex == gCurGraphNodeRoot->areaIndex) {
         if (node->header.gfx.throwMatrix != NULL) {
@@ -830,6 +1137,17 @@ static void geo_process_object(struct Object *node) {
         }
         if (obj_is_in_view(&node->header.gfx, gMatStack[gMatStackIndex])) {
             Mtx *mtx = alloc_display_list(sizeof(*mtx));
+            
+            // Create the displaylist to set the active point lights
+            Gfx* pointLightsDl = createPointLightsDl(&node->oPosX, 80.0f);
+
+            // Put the lights on every layer, this can be optimized in the future
+            // It will require some geolayout command to specify which layers this object uses
+            // Maybe this can be implemented in a GEO_ASM call, where the parameter is a layer mask
+            for (i = LAYER_FORCE; i <= LAYER_TRANSPARENT_INTER; i++)
+            {
+                geo_append_display_list(pointLightsDl, i);
+            }
 
             mtxf_to_mtx(mtx, gMatStack[gMatStackIndex]);
             gMatStackFixed[gMatStackIndex] = mtx;
@@ -932,6 +1250,64 @@ void geo_process_held_object(struct GraphNodeHeldObject *node) {
     }
 }
 
+#include <stdio.h>
+
+/**
+ * Advanced lighting engine
+ * Processes a scene light, setting its position and other properties
+ */
+void geo_process_scene_light(struct GraphNodeSceneLight *node)
+{
+    Vec3f pos;
+
+    
+    switch (node->lightType)
+    {
+        case LIGHT_TYPE_DIRECTIONAL:
+            // Set the directional light color
+            gDirectionalLight.l->l.colc[0] = gDirectionalLight.l->l.col[0] = node->color[0];
+            gDirectionalLight.l->l.colc[1] = gDirectionalLight.l->l.col[1] = node->color[1];
+            gDirectionalLight.l->l.colc[2] = gDirectionalLight.l->l.col[2] = node->color[2];
+
+            // Set the pre transformed light direction
+            gLightDir[0] = node->a;
+            gLightDir[1] = node->b;
+            gLightDir[2] = node->c;
+            break;
+        case LIGHT_TYPE_POINT:
+        case LIGHT_TYPE_POINT_OCCLUDE:
+            get_pos_from_transform_mtx(pos, gMatStack[gMatStackIndex],
+                                    *gCurGraphNodeCamera->matrixPtr);
+            // Set the given point light's color
+            node->light->l.pl.colc[0] = node->light->l.pl.col[0] = node->color[0];
+            node->light->l.pl.colc[1] = node->light->l.pl.col[1] = node->color[1];
+            node->light->l.pl.colc[2] = node->light->l.pl.col[2] = node->color[2];
+
+            // Floors, but is faster
+            node->light->worldPos[0] = (s16)(s32)pos[0];
+            node->light->worldPos[1] = (s16)(s32)pos[1];
+            node->light->worldPos[2] = (s16)(s32)pos[2];
+
+            // More accurate (rounding instead of flooring), but more costly
+            //vec3f_to_vec3s(node->light->worldPos, pos);
+
+            node->light->l.pl.quadratic_attenuation = node->a;
+            node->light->l.pl.linear_attenuation = node->b;
+            node->light->l.pl.is_point = node->c;
+            break;
+        case LIGHT_TYPE_AMBIENT:
+            // Set the ambient light color
+            gDirectionalLight.a.l.colc[0] = gDirectionalLight.a.l.col[0] = node->color[0];
+            gDirectionalLight.a.l.colc[1] = gDirectionalLight.a.l.col[1] = node->color[1];
+            gDirectionalLight.a.l.colc[2] = gDirectionalLight.a.l.col[2] = node->color[2];
+            break;
+    }
+
+    if (node->node.children != NULL) {
+        geo_process_node_and_siblings(node->node.children);
+    }
+}
+
 /**
  * Processes the children of the given GraphNode if it has any
  */
@@ -1021,6 +1397,10 @@ void geo_process_node_and_siblings(struct GraphNode *firstNode) {
                     case GRAPH_NODE_TYPE_HELD_OBJ:
                         geo_process_held_object((struct GraphNodeHeldObject *) curGraphNode);
                         break;
+                    // Advanced lighting engine
+                    case GRAPH_NODE_TYPE_SCENE_LIGHT:
+                        geo_process_scene_light((struct GraphNodeSceneLight *) curGraphNode);
+                        break;
                     default:
                         geo_try_process_children((struct GraphNode *) curGraphNode);
                         break;
diff --git a/src/menu/star_select.c b/src/menu/star_select.c
index 07610fa..67bb5f8 100644
--- a/src/menu/star_select.c
+++ b/src/menu/star_select.c
@@ -1,3 +1,4 @@
+
 #include <PR/ultratypes.h>
 
 #include "audio/external.h"
diff --git a/tools/apply_patch.sh b/tools/apply_patch.sh
index 1ab8ed2..31ddfc3 100755
--- a/tools/apply_patch.sh
+++ b/tools/apply_patch.sh
@@ -13,7 +13,7 @@ fi
 read -p "Do you wish to apply the patch '$1'? [Y/N] " response
 case "$response" in
     Y|y)
-	patch -p1 < "$1"
+	patch -p1 --merge < "$1"
 	;;
     N|n)
 	echo 'Quit'
